using UnrealSharp;
using Object = UnrealSharp.UEObject;
using Guid = SDK.Script.CoreUObjectSDK.Guid;
using Enum = SDK.Script.CoreUObjectSDK.Enum;
using DateTime = SDK.Script.CoreUObjectSDK.DateTime;
using SDK.Script.EngineSDK;
using SDK.Script.CoreUObjectSDK;
using SDK.Script.AkAudioSDK;
using SDK.Script.NiagaraSDK;
using SDK.Script.CommonUISDK;
using SDK.Script.AIModuleSDK;
using SDK.Script.NiagaraAnimNotifiesSDK;
using SDK.Script.LevelSequenceSDK;
using SDK.Script.UMGSDK;
using SDK.Script.GameplayCamerasSDK;
using SDK.Script.PocketpairUserSDK;
using SDK.Script.SlateCoreSDK;
using SDK.Script.GameplayTagsSDK;
using SDK.Script.FoliageSDK;
using SDK.Script.OnlineSubsystemUtilsSDK;
using SDK.Script.DLSSBlueprintSDK;
using SDK.Script.ModularGameplaySDK;
using SDK.Script.CommonGameSDK;
using SDK.Script.NavigationSystemSDK;
using SDK.Script.InputCoreSDK;
using SDK.Script.ReplicationGraphSDK;
using SDK.Script.CommonInputSDK;
using SDK.Script.SignificanceManagerSDK;
using SDK.Script.NetCoreSDK;
namespace SDK.Script.PalSDK
{
    public class FixedPoint64MathLibrary : BlueprintFunctionLibrary
    {
        public FixedPoint64MathLibrary(nint addr) : base(addr) { }
        public FixedPoint64 Subtract_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<FixedPoint64>(nameof(Subtract_FixedPoint64Integer), A, B); }
        public FixedPoint64 Subtract_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<FixedPoint64>(nameof(Subtract_FixedPoint64Float), A, B); }
        public FixedPoint64 Subtract_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<FixedPoint64>(nameof(Subtract_FixedPoint64FixedPoint64), A, B); }
        public bool NotEqual_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(NotEqual_FixedPoint64Integer), A, B); }
        public bool NotEqual_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(NotEqual_FixedPoint64Float), A, B); }
        public bool NotEqual_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(NotEqual_FixedPoint64FixedPoint64), A, B); }
        public FixedPoint64 Multiply_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<FixedPoint64>(nameof(Multiply_FixedPoint64Integer), A, B); }
        public FixedPoint64 Multiply_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<FixedPoint64>(nameof(Multiply_FixedPoint64Float), A, B); }
        public FixedPoint64 Multiply_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<FixedPoint64>(nameof(Multiply_FixedPoint64FixedPoint64), A, B); }
        public bool LessEqual_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(LessEqual_FixedPoint64Integer), A, B); }
        public bool LessEqual_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(LessEqual_FixedPoint64Float), A, B); }
        public bool LessEqual_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(LessEqual_FixedPoint64FixedPoint64), A, B); }
        public bool Less_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(Less_FixedPoint64Integer), A, B); }
        public bool Less_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(Less_FixedPoint64Float), A, B); }
        public bool Less_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(Less_FixedPoint64FixedPoint64), A, B); }
        public bool GreaterEqual_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(GreaterEqual_FixedPoint64Integer), A, B); }
        public bool GreaterEqual_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(GreaterEqual_FixedPoint64Float), A, B); }
        public bool GreaterEqual_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(GreaterEqual_FixedPoint64FixedPoint64), A, B); }
        public bool Greater_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(Greater_FixedPoint64Integer), A, B); }
        public bool Greater_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(Greater_FixedPoint64Float), A, B); }
        public bool Greater_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(Greater_FixedPoint64FixedPoint64), A, B); }
        public bool EqualEqual_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<bool>(nameof(EqualEqual_FixedPoint64Integer), A, B); }
        public bool EqualEqual_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<bool>(nameof(EqualEqual_FixedPoint64Float), A, B); }
        public bool EqualEqual_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<bool>(nameof(EqualEqual_FixedPoint64FixedPoint64), A, B); }
        public FixedPoint64 Divide_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<FixedPoint64>(nameof(Divide_FixedPoint64Integer), A, B); }
        public FixedPoint64 Divide_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<FixedPoint64>(nameof(Divide_FixedPoint64Float), A, B); }
        public FixedPoint64 Divide_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<FixedPoint64>(nameof(Divide_FixedPoint64FixedPoint64), A, B); }
        public FixedPoint64 Convert_IntToFixedPoint64(int Value) { return Invoke<FixedPoint64>(nameof(Convert_IntToFixedPoint64), Value); }
        public FixedPoint64 Convert_Int64ToFixedPoint64(long Value) { return Invoke<FixedPoint64>(nameof(Convert_Int64ToFixedPoint64), Value); }
        public FixedPoint64 Convert_FloatToFixedPoint64(float Value) { return Invoke<FixedPoint64>(nameof(Convert_FloatToFixedPoint64), Value); }
        public long Convert_FixedPoint64ToInt64(FixedPoint64 Value) { return Invoke<long>(nameof(Convert_FixedPoint64ToInt64), Value); }
        public int Convert_FixedPoint64ToInt(FixedPoint64 Value) { return Invoke<int>(nameof(Convert_FixedPoint64ToInt), Value); }
        public float Convert_FixedPoint64ToFloat(FixedPoint64 Value) { return Invoke<float>(nameof(Convert_FixedPoint64ToFloat), Value); }
        public FixedPoint64 Add_FixedPoint64Integer(FixedPoint64 A, long B) { return Invoke<FixedPoint64>(nameof(Add_FixedPoint64Integer), A, B); }
        public FixedPoint64 Add_FixedPoint64Float(FixedPoint64 A, float B) { return Invoke<FixedPoint64>(nameof(Add_FixedPoint64Float), A, B); }
        public FixedPoint64 Add_FixedPoint64FixedPoint64(FixedPoint64 A, FixedPoint64 B) { return Invoke<FixedPoint64>(nameof(Add_FixedPoint64FixedPoint64), A, B); }
    }
    public class FixedPointMathLibrary : BlueprintFunctionLibrary
    {
        public FixedPointMathLibrary(nint addr) : base(addr) { }
        public FixedPoint Subtract_FixedPointInteger(FixedPoint A, int B) { return Invoke<FixedPoint>(nameof(Subtract_FixedPointInteger), A, B); }
        public FixedPoint Subtract_FixedPointFloat(FixedPoint A, float B) { return Invoke<FixedPoint>(nameof(Subtract_FixedPointFloat), A, B); }
        public FixedPoint Subtract_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<FixedPoint>(nameof(Subtract_FixedPointFixedPoint), A, B); }
        public bool NotEqual_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(NotEqual_FixedPointInteger), A, B); }
        public bool NotEqual_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(NotEqual_FixedPointFloat), A, B); }
        public bool NotEqual_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(NotEqual_FixedPointFixedPoint), A, B); }
        public FixedPoint Multiply_FixedPointInteger(FixedPoint A, int B) { return Invoke<FixedPoint>(nameof(Multiply_FixedPointInteger), A, B); }
        public FixedPoint Multiply_FixedPointFloat(FixedPoint A, float B) { return Invoke<FixedPoint>(nameof(Multiply_FixedPointFloat), A, B); }
        public FixedPoint Multiply_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<FixedPoint>(nameof(Multiply_FixedPointFixedPoint), A, B); }
        public bool LessEqual_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(LessEqual_FixedPointInteger), A, B); }
        public bool LessEqual_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(LessEqual_FixedPointFloat), A, B); }
        public bool LessEqual_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(LessEqual_FixedPointFixedPoint), A, B); }
        public bool Less_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(Less_FixedPointInteger), A, B); }
        public bool Less_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(Less_FixedPointFloat), A, B); }
        public bool Less_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(Less_FixedPointFixedPoint), A, B); }
        public bool GreaterEqual_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(GreaterEqual_FixedPointInteger), A, B); }
        public bool GreaterEqual_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(GreaterEqual_FixedPointFloat), A, B); }
        public bool GreaterEqual_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(GreaterEqual_FixedPointFixedPoint), A, B); }
        public bool Greater_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(Greater_FixedPointInteger), A, B); }
        public bool Greater_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(Greater_FixedPointFloat), A, B); }
        public bool Greater_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(Greater_FixedPointFixedPoint), A, B); }
        public bool EqualEqual_FixedPointInteger(FixedPoint A, int B) { return Invoke<bool>(nameof(EqualEqual_FixedPointInteger), A, B); }
        public bool EqualEqual_FixedPointFloat(FixedPoint A, float B) { return Invoke<bool>(nameof(EqualEqual_FixedPointFloat), A, B); }
        public bool EqualEqual_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<bool>(nameof(EqualEqual_FixedPointFixedPoint), A, B); }
        public FixedPoint Divide_FixedPointInteger(FixedPoint A, int B) { return Invoke<FixedPoint>(nameof(Divide_FixedPointInteger), A, B); }
        public FixedPoint Divide_FixedPointFloat(FixedPoint A, float B) { return Invoke<FixedPoint>(nameof(Divide_FixedPointFloat), A, B); }
        public FixedPoint Divide_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<FixedPoint>(nameof(Divide_FixedPointFixedPoint), A, B); }
        public FixedPoint Convert_IntToFixedPoint(int Value) { return Invoke<FixedPoint>(nameof(Convert_IntToFixedPoint), Value); }
        public FixedPoint Convert_FloatToFixedPoint(float Value) { return Invoke<FixedPoint>(nameof(Convert_FloatToFixedPoint), Value); }
        public int Convert_FixedPointToInt(FixedPoint Value) { return Invoke<int>(nameof(Convert_FixedPointToInt), Value); }
        public float Convert_FixedPointToFloat(FixedPoint Value) { return Invoke<float>(nameof(Convert_FixedPointToFloat), Value); }
        public FixedPoint Add_FixedPointInteger(FixedPoint A, int B) { return Invoke<FixedPoint>(nameof(Add_FixedPointInteger), A, B); }
        public FixedPoint Add_FixedPointFloat(FixedPoint A, float B) { return Invoke<FixedPoint>(nameof(Add_FixedPointFloat), A, B); }
        public FixedPoint Add_FixedPointFixedPoint(FixedPoint A, FixedPoint B) { return Invoke<FixedPoint>(nameof(Add_FixedPointFixedPoint), A, B); }
    }
    public class PalAbilityPassiveSkill : Object
    {
        public PalAbilityPassiveSkill(nint addr) : base(addr) { }
        public Object IsRestrictedDelegate { get { return this[nameof(IsRestrictedDelegate)]; } set { this[nameof(IsRestrictedDelegate)] = value; } }
        public bool isReserving { get { return this[nameof(isReserving)].Flag; } set { this[nameof(isReserving)].Flag = value; } }
        public bool bIsRestricted { get { return this[nameof(bIsRestricted)].Flag; } set { this[nameof(bIsRestricted)].Flag = value; } }
        public bool bRequireWorkerWorkingPassiveSkill { get { return this[nameof(bRequireWorkerWorkingPassiveSkill)].Flag; } set { this[nameof(bRequireWorkerWorkingPassiveSkill)].Flag = value; } }
        public bool bIsWorking { get { return this[nameof(bIsWorking)].Flag; } set { this[nameof(bIsWorking)].Flag = value; } }
        public Array<PalPassiveAbilitySkills> PassiveSkills { get { return new Array<PalPassiveAbilitySkills>(this[nameof(PassiveSkills)].Address); } }
        public Object SkillStatus { get { return this[nameof(SkillStatus)]; } set { this[nameof(SkillStatus)] = value; } }
        public int CurrentRank { get { return this[nameof(CurrentRank)].GetValue<int>(); } set { this[nameof(CurrentRank)].SetValue<int>(value); } }
        public void OnWorkerAssignChanged(PalCharacterParameterComponent Parameter) { Invoke(nameof(OnWorkerAssignChanged), Parameter); }
        public void OnUpdateOtomoHolder(PalCharacter Character) { Invoke(nameof(OnUpdateOtomoHolder), Character); }
        public void OnUpdateInventoryContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateInventoryContainer), Container); }
        public void OnRideInactivated() { Invoke(nameof(OnRideInactivated)); }
        public void OnRideActivated() { Invoke(nameof(OnRideActivated)); }
        public void OnReserveInactivated() { Invoke(nameof(OnReserveInactivated)); }
        public void OnReserveActivated() { Invoke(nameof(OnReserveActivated)); }
        public void OnInactivatedAsWorker() { Invoke(nameof(OnInactivatedAsWorker)); }
        public void OnInactivatedAsOtomoHolder() { Invoke(nameof(OnInactivatedAsOtomoHolder)); }
        public void OnInactivatedAsOtomo() { Invoke(nameof(OnInactivatedAsOtomo)); }
        public void OnActivatedAsWorker() { Invoke(nameof(OnActivatedAsWorker)); }
        public void OnActivatedAsOtomoHolder() { Invoke(nameof(OnActivatedAsOtomoHolder)); }
        public void OnActivatedAsOtomo() { Invoke(nameof(OnActivatedAsOtomo)); }
        public void ObserveWorking() { Invoke(nameof(ObserveWorking)); }
        public bool IsRestricted__DelegateSignature(Actor Trainer) { return Invoke<bool>(nameof(IsRestricted__DelegateSignature), Trainer); }
        public bool IsRestricted() { return Invoke<bool>(nameof(IsRestricted)); }
        public void Initialize(Array<PalPassiveAbilitySkills> _PassiveSkills) { Invoke(nameof(Initialize), _PassiveSkills); }
        public void InactivateWorkingSkill() { Invoke(nameof(InactivateWorkingSkill)); }
        public PalPlayerController GetTrainerController() { return Invoke<PalPlayerController>(nameof(GetTrainerController)); }
        public PalCharacter GetTrainerActor() { return Invoke<PalCharacter>(nameof(GetTrainerActor)); }
        public Character GetTrainer() { return Invoke<Character>(nameof(GetTrainer)); }
        public Array<Object> GetPassiveSkillList() { return Invoke<Array<Object>>(nameof(GetPassiveSkillList)); }
        public PalCharacter GetOwner() { return Invoke<PalCharacter>(nameof(GetOwner)); }
        public int GetOtomoRank() { return Invoke<int>(nameof(GetOtomoRank)); }
    }
    public class PalAbilitySkillParameterComponent : ActorComponent
    {
        public PalAbilitySkillParameterComponent(nint addr) : base(addr) { }
        public Array<PalPassiveAbilitySkills> AbilitySkills { get { return new Array<PalPassiveAbilitySkills>(this[nameof(AbilitySkills)].Address); } }
        public PalAbilityPassiveSkill PassiveSkill { get { return this[nameof(PassiveSkill)].As<PalAbilityPassiveSkill>(); } set { this["PassiveSkill"] = value; } }
        public void OnRideInactivated() { Invoke(nameof(OnRideInactivated)); }
        public void OnRideActivated() { Invoke(nameof(OnRideActivated)); }
        public void OnOwnerCharacterSpawned(PalInstanceID ID) { Invoke(nameof(OnOwnerCharacterSpawned), ID); }
        public void OnInitializedCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(OnInitializedCharacter), OwnerCharacter); }
        public void OnInactivatedAsWorker() { Invoke(nameof(OnInactivatedAsWorker)); }
        public void OnInactivatedAsPartner() { Invoke(nameof(OnInactivatedAsPartner)); }
        public void OnInactivatedAsOtomoHolder() { Invoke(nameof(OnInactivatedAsOtomoHolder)); }
        public void OnActivatedAsWorker() { Invoke(nameof(OnActivatedAsWorker)); }
        public void OnActivatedAsPartner() { Invoke(nameof(OnActivatedAsPartner)); }
        public void OnActivatedAsOtomoHolder() { Invoke(nameof(OnActivatedAsOtomoHolder)); }
    }
    public class ActionDynamicParameterUtility : BlueprintFunctionLibrary
    {
        public ActionDynamicParameterUtility(nint addr) : base(addr) { }
        public void SetBlackboard(ActionDynamicParameter DynamicParameterRef, PalNetArchive Blackboard) { Invoke(nameof(SetBlackboard), DynamicParameterRef, Blackboard); }
    }
    public class PalActionBase : Object
    {
        public PalActionBase(nint addr) : base(addr) { }
        public Object OnActionEndDelegate { get { return this[nameof(OnActionEndDelegate)]; } set { this[nameof(OnActionEndDelegate)] = value; } }
        public bool bIsEndAction { get { return this[nameof(bIsEndAction)].Flag; } set { this[nameof(bIsEndAction)].Flag = value; } }
        public bool bCanDeleteInstance { get { return this[nameof(bCanDeleteInstance)].Flag; } set { this[nameof(bCanDeleteInstance)].Flag = value; } }
        public bool bCanInterruptWaza { get { return this[nameof(bCanInterruptWaza)].Flag; } set { this[nameof(bCanInterruptWaza)].Flag = value; } }
        public bool bIsChangeWorkAnimPlayRate { get { return this[nameof(bIsChangeWorkAnimPlayRate)].Flag; } set { this[nameof(bIsChangeWorkAnimPlayRate)].Flag = value; } }
        public bool bIsChangeWalkableFloorAngle { get { return this[nameof(bIsChangeWalkableFloorAngle)].Flag; } set { this[nameof(bIsChangeWalkableFloorAngle)].Flag = value; } }
        public float ActionWalkableFloorAngle { get { return this[nameof(ActionWalkableFloorAngle)].GetValue<float>(); } set { this[nameof(ActionWalkableFloorAngle)].SetValue<float>(value); } }
        public bool bIsReflectForClient { get { return this[nameof(bIsReflectForClient)].Flag; } set { this[nameof(bIsReflectForClient)].Flag = value; } }
        public ActionDynamicParameter DynamicParameter { get { return this[nameof(DynamicParameter)].As<ActionDynamicParameter>(); } set { this["DynamicParameter"] = value; } }
        public void TickAction(float DeltaTime) { Invoke(nameof(TickAction), DeltaTime); }
        public void SetAnimRateScale(Object flagName, float AnimRateScale) { Invoke(nameof(SetAnimRateScale), flagName, AnimRateScale); }
        public void SendNotify(Object NotifyName) { Invoke(nameof(SendNotify), NotifyName); }
        public void OnUpdatePassiveSkill(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnUpdatePassiveSkill), EffectType, Value); }
        public void OnEndPassiveSkill(EPalPassiveSkillEffectType EffectType) { Invoke(nameof(OnEndPassiveSkill), EffectType); }
        public void OnEndAction() { Invoke(nameof(OnEndAction)); }
        public void OnChangeCurrentWorkSuitability() { Invoke(nameof(OnChangeCurrentWorkSuitability)); }
        public void OnBreakAction() { Invoke(nameof(OnBreakAction)); }
        public void OnBeginAction() { Invoke(nameof(OnBeginAction)); }
        public bool IsInServer() { return Invoke<bool>(nameof(IsInServer)); }
        public bool IsInLocalControlled() { return Invoke<bool>(nameof(IsInLocalControlled)); }
        public bool IsEndAction() { return Invoke<bool>(nameof(IsEndAction)); }
        public Vector GetTargetLocation() { return Invoke<Vector>(nameof(GetTargetLocation)); }
        public Object GetSimpleName() { return Invoke<Object>(nameof(GetSimpleName)); }
        public RandomStream GetRandomStream() { return Invoke<RandomStream>(nameof(GetRandomStream)); }
        public int GetGeneralPurposeIndex() { return Invoke<int>(nameof(GetGeneralPurposeIndex)); }
        public PalNetArchive GetBlackboard() { return Invoke<PalNetArchive>(nameof(GetBlackboard)); }
        public Vector GetActionVelocity() { return Invoke<Vector>(nameof(GetActionVelocity)); }
        public Actor GetActionTarget() { return Invoke<Actor>(nameof(GetActionTarget)); }
        public PalIndividualCharacterParameter GetActionIndividualCharacterParameter() { return Invoke<PalIndividualCharacterParameter>(nameof(GetActionIndividualCharacterParameter)); }
        public PalCharacter GetActionCharacter() { return Invoke<PalCharacter>(nameof(GetActionCharacter)); }
        public bool CanStepCancel() { return Invoke<bool>(nameof(CanStepCancel)); }
        public bool CanNextActionCancel() { return Invoke<bool>(nameof(CanNextActionCancel)); }
        public bool CanGainSP() { return Invoke<bool>(nameof(CanGainSP)); }
        public bool CanDeleteInstance() { return Invoke<bool>(nameof(CanDeleteInstance)); }
        public void AnimEventSpawn() { Invoke(nameof(AnimEventSpawn)); }
        public void AnimEventOther() { Invoke(nameof(AnimEventOther)); }
        public void AnimEventAttack() { Invoke(nameof(AnimEventAttack)); }
        public void ActionEndDelegate__DelegateSignature() { Invoke(nameof(ActionEndDelegate__DelegateSignature)); }
    }
    public class PalActionComponent : ActorComponent
    {
        public PalActionComponent(nint addr) : base(addr) { }
        public Object ActionMap { get { return this[nameof(ActionMap)]; } set { this[nameof(ActionMap)] = value; } }
        public Object OnAllActionFinishDelegate { get { return this[nameof(OnAllActionFinishDelegate)]; } set { this[nameof(OnAllActionFinishDelegate)] = value; } }
        public Object OnActionBeginDelegate { get { return this[nameof(OnActionBeginDelegate)]; } set { this[nameof(OnActionBeginDelegate)] = value; } }
        public Object OnActionNotifyDelegate { get { return this[nameof(OnActionNotifyDelegate)]; } set { this[nameof(OnActionNotifyDelegate)] = value; } }
        public PalActionBase CurrentAction { get { return this[nameof(CurrentAction)].As<PalActionBase>(); } set { this["CurrentAction"] = value; } }
        public Array<PalActionBase> ActionQueue { get { return new Array<PalActionBase>(this[nameof(ActionQueue)].Address); } }
        public Array<PalActionBase> TerminateWaitActionList { get { return new Array<PalActionBase>(this[nameof(TerminateWaitActionList)].Address); } }
        public PalActionBase PlayActionParameter(ActionDynamicParameter Param, Object actionClass) { return Invoke<PalActionBase>(nameof(PlayActionParameter), Param, actionClass); }
        public PalActionBase PlayActionLocationByType(Vector Location, EPalActionType Type) { return Invoke<PalActionBase>(nameof(PlayActionLocationByType), Location, Type); }
        public PalActionBase PlayActionLocation(Vector Location, Object actionClass) { return Invoke<PalActionBase>(nameof(PlayActionLocation), Location, actionClass); }
        public PalActionBase PlayActionByTypeParameter(ActionDynamicParameter Param, EPalActionType Type) { return Invoke<PalActionBase>(nameof(PlayActionByTypeParameter), Param, Type); }
        public PalActionBase PlayActionByType(Actor ActionTarget, EPalActionType Type) { return Invoke<PalActionBase>(nameof(PlayActionByType), ActionTarget, Type); }
        public void PlayAction_ToServer(ActionDynamicParameter Param, Object actionClass, int issuerID) { Invoke(nameof(PlayAction_ToServer), Param, actionClass, issuerID); }
        public void PlayAction_ToALL(ActionDynamicParameter Param, Object actionClass, int issuerID) { Invoke(nameof(PlayAction_ToALL), Param, actionClass, issuerID); }
        public PalActionBase PlayAction_LocalOnly(ActionDynamicParameter Param, Object actionClass) { return Invoke<PalActionBase>(nameof(PlayAction_LocalOnly), Param, actionClass); }
        public PalActionBase PlayAction_Internal(ActionDynamicParameter Param, Object actionClass) { return Invoke<PalActionBase>(nameof(PlayAction_Internal), Param, actionClass); }
        public PalActionBase PlayAction(Actor ActionTarget, Object actionClass) { return Invoke<PalActionBase>(nameof(PlayAction), ActionTarget, actionClass); }
        public void OnOwnerEndPlay(Actor Actor, byte reasonType) { Invoke(nameof(OnOwnerEndPlay), Actor, reasonType); }
        public void OnCompleteCharacter(PalCharacter InCharacter) { Invoke(nameof(OnCompleteCharacter), InCharacter); }
        public EPalActionType GetCurrentActionType() { return Invoke<EPalActionType>(nameof(GetCurrentActionType)); }
        public PalActionBase GetCurrentAction() { return Invoke<PalActionBase>(nameof(GetCurrentAction)); }
        public void CancelAllAction_Internal() { Invoke(nameof(CancelAllAction_Internal)); }
        public void CancelAllAction() { Invoke(nameof(CancelAllAction)); }
        public void CancelActionByType(EPalActionType Type) { Invoke(nameof(CancelActionByType), Type); }
        public void CancelAction_Internal(Guid ActionID) { Invoke(nameof(CancelAction_Internal), ActionID); }
        public void CancelAction(PalActionBase action) { Invoke(nameof(CancelAction), action); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
        public void AllActionFinishDelegate__DelegateSignature(PalActionComponent ActionComponent) { Invoke(nameof(AllActionFinishDelegate__DelegateSignature), ActionComponent); }
        public void ActionStartDelegate__DelegateSignature(PalActionBase action) { Invoke(nameof(ActionStartDelegate__DelegateSignature), action); }
        public void ActionNotify__DelegateSignature(PalActionBase action, Object NotifyName) { Invoke(nameof(ActionNotify__DelegateSignature), action, NotifyName); }
        public bool ActionIsEmpty() { return Invoke<bool>(nameof(ActionIsEmpty)); }
    }
    public class PalActionDummyTargetActor : Actor
    {
        public PalActionDummyTargetActor(nint addr) : base(addr) { }
    }
    public class PalWorldSubsystem : WorldSubsystem
    {
        public PalWorldSubsystem(nint addr) : base(addr) { }
        public bool bShouldCreate { get { return this[nameof(bShouldCreate)].Flag; } set { this[nameof(bShouldCreate)].Flag = value; } }
        public Array<Object> PrerequisiteWorldSubsystemList { get { return new Array<Object>(this[nameof(PrerequisiteWorldSubsystemList)].Address); } }
    }
    public class PalActionDummyTargetManager : PalWorldSubsystem
    {
        public PalActionDummyTargetManager(nint addr) : base(addr) { }
        public Array<PalActionDummyTargetActor> ActionDummyTargetCache { get { return new Array<PalActionDummyTargetActor>(this[nameof(ActionDummyTargetCache)].Address); } }
    }
    public class PalActionOneShotAnimation : PalActionBase
    {
        public PalActionOneShotAnimation(nint addr) : base(addr) { }
        public void OnEndMontage(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnEndMontage), Montage, bInterrupted); }
    }
    public class PalActionSpawnItem : PalActionBase
    {
        public PalActionSpawnItem(nint addr) : base(addr) { }
        public Object SpawnSocketName { get { return this[nameof(SpawnSocketName)]; } set { this[nameof(SpawnSocketName)] = value; } }
        public Vector SpawnLocationOffset { get { return this[nameof(SpawnLocationOffset)].As<Vector>(); } set { this["SpawnLocationOffset"] = value; } }
        public Rotator SpawnItemRotator { get { return this[nameof(SpawnItemRotator)].As<Rotator>(); } set { this["SpawnItemRotator"] = value; } }
        public void WriteBlackboard(PalNetArchive BlackboardRef, PalStaticItemIdAndNum ItemInfo) { Invoke(nameof(WriteBlackboard), BlackboardRef, ItemInfo); }
        public void SpawnItemInServer() { Invoke(nameof(SpawnItemInServer)); }
        public void ReadBlackboard(PalStaticItemIdAndNum ItemInfo) { Invoke(nameof(ReadBlackboard), ItemInfo); }
    }
    public class PalActionTransportItem : PalActionBase
    {
        public PalActionTransportItem(nint addr) : base(addr) { }
        public Object ItemAttachSocketName { get { return this[nameof(ItemAttachSocketName)]; } set { this[nameof(ItemAttachSocketName)] = value; } }
        public Actor ItemActor { get { return this[nameof(ItemActor)].As<Actor>(); } set { this["ItemActor"] = value; } }
        public void WriteBlackboard(PalNetArchive BlackboardRef, Object StaticItemId) { Invoke(nameof(WriteBlackboard), BlackboardRef, StaticItemId); }
        public void StartSetupItemActor(Object StaticItemId) { Invoke(nameof(StartSetupItemActor), StaticItemId); }
        public void ReadBlackboard(Object StaticItemId) { Invoke(nameof(ReadBlackboard), StaticItemId); }
    }
    public class PalActionWazaBase : PalActionBase
    {
        public PalActionWazaBase(nint addr) : base(addr) { }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
        public PalSoundPlayer SoundPlayer { get { return this[nameof(SoundPlayer)].As<PalSoundPlayer>(); } set { this["SoundPlayer"] = value; } }
        public bool bApplyFullStomachCost { get { return this[nameof(bApplyFullStomachCost)].Flag; } set { this[nameof(bApplyFullStomachCost)].Flag = value; } }
        public void StopAkSound() { Invoke(nameof(StopAkSound)); }
        public void PlayAkSound(AkAudioEvent AudioEvent) { Invoke(nameof(PlayAkSound), AudioEvent); }
        public EPalWazaID GetWazaID() { return Invoke<EPalWazaID>(nameof(GetWazaID)); }
        public PalPlayerCharacter GetRiderPlayer() { return Invoke<PalPlayerCharacter>(nameof(GetRiderPlayer)); }
    }
    public class PalAction_BeLiftup : PalActionBase
    {
        public PalAction_BeLiftup(nint addr) : base(addr) { }
        public void OnStartLifting() { Invoke(nameof(OnStartLifting)); }
        public void OnStartInterpTransform() { Invoke(nameof(OnStartInterpTransform)); }
        public void OnEndInterpTransform() { Invoke(nameof(OnEndInterpTransform)); }
        public void OnDeadOwner_ServerInternal(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadOwner_ServerInternal), DeadInfo); }
        public void OnAttachedForBP() { Invoke(nameof(OnAttachedForBP)); }
    }
    public class PalAction_BeThrown : PalActionBase
    {
        public PalAction_BeThrown(nint addr) : base(addr) { }
        public AnimMontage PlayingMontage { get { return this[nameof(PlayingMontage)].As<AnimMontage>(); } set { this["PlayingMontage"] = value; } }
        public NiagaraComponent NiagaraComponent { get { return this[nameof(NiagaraComponent)].As<NiagaraComponent>(); } set { this["NiagaraComponent"] = value; } }
        public void PlayThrownMontage() { Invoke(nameof(PlayThrownMontage)); }
        public void PlayThrownFX() { Invoke(nameof(PlayThrownFX)); }
    }
    public class PalStatusBase : Object
    {
        public PalStatusBase(nint addr) : base(addr) { }
        public bool bIsEndStatus { get { return this[nameof(bIsEndStatus)].Flag; } set { this[nameof(bIsEndStatus)].Flag = value; } }
        public StatusDynamicParameter DynamicParameter { get { return this[nameof(DynamicParameter)].As<StatusDynamicParameter>(); } set { this["DynamicParameter"] = value; } }
        public EPalStatusID StatusId { get { return (EPalStatusID)this[nameof(StatusId)].GetValue<int>(); } set { this[nameof(StatusId)].SetValue<int>((int)value); } }
        public float Duration { get { return this[nameof(Duration)].GetValue<float>(); } set { this[nameof(Duration)].SetValue<float>(value); } }
        public bool bIsNerverEnd { get { return this[nameof(bIsNerverEnd)].Flag; } set { this[nameof(bIsNerverEnd)].Flag = value; } }
        public void TickStatus(float DeltaTime) { Invoke(nameof(TickStatus), DeltaTime); }
        public void SetHalfDurationTimer() { Invoke(nameof(SetHalfDurationTimer)); }
        public void OnEndStatus() { Invoke(nameof(OnEndStatus)); }
        public void OnBreakStatus() { Invoke(nameof(OnBreakStatus)); }
        public void OnBeginStatus() { Invoke(nameof(OnBeginStatus)); }
        public void OnBeginSomeStatus() { Invoke(nameof(OnBeginSomeStatus)); }
        public bool IsEndStatus() { return Invoke<bool>(nameof(IsEndStatus)); }
        public Actor GetOwner() { return Invoke<Actor>(nameof(GetOwner)); }
    }
    public class PalAction_DrownCheckBase : PalStatusBase
    {
        public PalAction_DrownCheckBase(nint addr) : base(addr) { }
    }
    public class PalAction_FeedItemToCharacter : PalActionBase
    {
        public PalAction_FeedItemToCharacter(nint addr) : base(addr) { }
        public float TurnSpeed { get { return this[nameof(TurnSpeed)].GetValue<float>(); } set { this[nameof(TurnSpeed)].SetValue<float>(value); } }
        public PalAIActionFed TargetCharacterAction { get { return this[nameof(TargetCharacterAction)].As<PalAIActionFed>(); } set { this["TargetCharacterAction"] = value; } }
        public void TimeoutStartTargetCharacterApproachAction() { Invoke(nameof(TimeoutStartTargetCharacterApproachAction)); }
        public void SimpleDelegate__DelegateSignature() { Invoke(nameof(SimpleDelegate__DelegateSignature)); }
        public void PlayMontageFeeding() { Invoke(nameof(PlayMontageFeeding)); }
        public void OnNotifiedMontage_OnReachFeeding() { Invoke(nameof(OnNotifiedMontage_OnReachFeeding)); }
        public void OnFinishPlayMontageFeeding() { Invoke(nameof(OnFinishPlayMontageFeeding)); }
        public void OnCancelByInputGuard() { Invoke(nameof(OnCancelByInputGuard)); }
    }
    public class PalAction_Liftup : PalActionBase
    {
        public PalAction_Liftup(nint addr) : base(addr) { }
        public float AttachRelativeLocationOffsetZ { get { return this[nameof(AttachRelativeLocationOffsetZ)].GetValue<float>(); } set { this[nameof(AttachRelativeLocationOffsetZ)].SetValue<float>(value); } }
        public bool bIsAttachToLeftHand { get { return this[nameof(bIsAttachToLeftHand)].Flag; } set { this[nameof(bIsAttachToLeftHand)].Flag = value; } }
        public void StartRagdollForTargetCharacter() { Invoke(nameof(StartRagdollForTargetCharacter)); }
        public void StartInterpTransformForAttachCharacter() { Invoke(nameof(StartInterpTransformForAttachCharacter)); }
        public void PlayWeaponChangeAnime() { Invoke(nameof(PlayWeaponChangeAnime)); }
        public void PlayTargetBeLiftupAction(PalCharacter TargetCharacter) { Invoke(nameof(PlayTargetBeLiftupAction), TargetCharacter); }
        public void PlayStartLiftupMontage() { Invoke(nameof(PlayStartLiftupMontage)); }
        public void OnTriggerPlayerInteract() { Invoke(nameof(OnTriggerPlayerInteract)); }
        public void OnCompleteStartLiftupMontage() { Invoke(nameof(OnCompleteStartLiftupMontage)); }
        public void AttachLiftedCharacter() { Invoke(nameof(AttachLiftedCharacter)); }
    }
    public class PalAction_LiftupThrow : PalActionBase
    {
        public PalAction_LiftupThrow(nint addr) : base(addr) { }
        public float AttachRelativeLocationOffsetZ { get { return this[nameof(AttachRelativeLocationOffsetZ)].GetValue<float>(); } set { this[nameof(AttachRelativeLocationOffsetZ)].SetValue<float>(value); } }
        public bool bIsAttachToLeftHand { get { return this[nameof(bIsAttachToLeftHand)].Flag; } set { this[nameof(bIsAttachToLeftHand)].Flag = value; } }
        public void PlayWeaponChangeAnime() { Invoke(nameof(PlayWeaponChangeAnime)); }
        public void PlayPlayerThrowMontage() { Invoke(nameof(PlayPlayerThrowMontage)); }
        public void LaunchLiftObject() { Invoke(nameof(LaunchLiftObject)); }
    }
    public class PalAction_SleepPlayerBed : PalActionBase
    {
        public PalAction_SleepPlayerBed(nint addr) : base(addr) { }
        public Object OnGetupTriggerDelegate { get { return this[nameof(OnGetupTriggerDelegate)]; } set { this[nameof(OnGetupTriggerDelegate)] = value; } }
        public void OnGetupTriggerDelegate__DelegateSignature() { Invoke(nameof(OnGetupTriggerDelegate__DelegateSignature)); }
        public void OnGetupPlayerBedFromModel() { Invoke(nameof(OnGetupPlayerBedFromModel)); }
        public bool IsSleepLooping() { return Invoke<bool>(nameof(IsSleepLooping)); }
        public void GetupBroadcast() { Invoke(nameof(GetupBroadcast)); }
    }
    public class PalActivatableWidget : CommonActivatableWidget
    {
        public PalActivatableWidget(nint addr) : base(addr) { }
        public EPalWidgetInputMode InputConfig { get { return (EPalWidgetInputMode)this[nameof(InputConfig)].GetValue<int>(); } set { this[nameof(InputConfig)].SetValue<int>((int)value); } }
        public EMouseCaptureMode GameMouseCaptureMode { get { return (EMouseCaptureMode)this[nameof(GameMouseCaptureMode)].GetValue<int>(); } set { this[nameof(GameMouseCaptureMode)].SetValue<int>((int)value); } }
    }
    public class PalActiveSkill : Object
    {
        public PalActiveSkill(nint addr) : base(addr) { }
        public Object OnCoolTimeUpdate { get { return this[nameof(OnCoolTimeUpdate)]; } set { this[nameof(OnCoolTimeUpdate)] = value; } }
        public Object OnCoolStart { get { return this[nameof(OnCoolStart)]; } set { this[nameof(OnCoolStart)] = value; } }
        public Object OnCoolFinish { get { return this[nameof(OnCoolFinish)]; } set { this[nameof(OnCoolFinish)] = value; } }
        public bool IsCooling { get { return this[nameof(IsCooling)].Flag; } set { this[nameof(IsCooling)].Flag = value; } }
        public float ReuseCoolTimer { get { return this[nameof(ReuseCoolTimer)].GetValue<float>(); } set { this[nameof(ReuseCoolTimer)].SetValue<float>(value); } }
        public EPalWazaID WazaType { get { return (EPalWazaID)this[nameof(WazaType)].GetValue<int>(); } set { this[nameof(WazaType)].SetValue<int>((int)value); } }
        public bool IsStopTimer { get { return this[nameof(IsStopTimer)].Flag; } set { this[nameof(IsStopTimer)].Flag = value; } }
        public float DatabaseCoolTime { get { return this[nameof(DatabaseCoolTime)].GetValue<float>(); } set { this[nameof(DatabaseCoolTime)].SetValue<float>(value); } }
        public bool bIsTransient { get { return this[nameof(bIsTransient)].Flag; } set { this[nameof(bIsTransient)].Flag = value; } }
        public void OnRep_UpdateCoolTime() { Invoke(nameof(OnRep_UpdateCoolTime)); }
        public void OnRep_ChangeCTState() { Invoke(nameof(OnRep_ChangeCTState)); }
        public void OnCoolTimeUpdateDelegate__DelegateSignature(float CoolRate) { Invoke(nameof(OnCoolTimeUpdateDelegate__DelegateSignature), CoolRate); }
        public void OnCoolStateChange__DelegateSignature() { Invoke(nameof(OnCoolStateChange__DelegateSignature)); }
        public bool IsCoolTimeFinish() { return Invoke<bool>(nameof(IsCoolTimeFinish)); }
    }
    public class PalActiveSkillSlot : Object
    {
        public PalActiveSkillSlot(nint addr) : base(addr) { }
        public Actor SelfActor { get { return this[nameof(SelfActor)].As<Actor>(); } set { this["SelfActor"] = value; } }
        public Object SkillMap { get { return this[nameof(SkillMap)]; } set { this[nameof(SkillMap)] = value; } }
        public bool IsEndInit { get { return this[nameof(IsEndInit)].Flag; } set { this[nameof(IsEndInit)].Flag = value; } }
        public FloatContainer CoolDownSpeedRateMap { get { return this[nameof(CoolDownSpeedRateMap)].As<FloatContainer>(); } set { this["CoolDownSpeedRateMap"] = value; } }
        public void UpdateCoolTime(float DeltaTime) { Invoke(nameof(UpdateCoolTime), DeltaTime); }
        public void StopCoolTime(int SlotID) { Invoke(nameof(StopCoolTime), SlotID); }
        public void SetTransient(int SlotID, bool IsTransient) { Invoke(nameof(SetTransient), SlotID, IsTransient); }
        public void SetSkill(int SlotID, EPalWazaID WazaType) { Invoke(nameof(SetSkill), SlotID, WazaType); }
        public void SetCoolTimeRate(Object Key, float Rate) { Invoke(nameof(SetCoolTimeRate), Key, Rate); }
        public void RestartCoolTime(int SlotID) { Invoke(nameof(RestartCoolTime), SlotID); }
        public void RemoveSkill(int SlotID) { Invoke(nameof(RemoveSkill), SlotID); }
        public void OnChangeEquipWaza(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(OnChangeEquipWaza), IndividualParameter); }
        public bool IsValidSkill(int SlotID) { return Invoke<bool>(nameof(IsValidSkill), SlotID); }
        public bool IsTransient(int SlotID) { return Invoke<bool>(nameof(IsTransient), SlotID); }
        public bool IsNearMaxRange(int SlotID, Actor TargetActor) { return Invoke<bool>(nameof(IsNearMaxRange), SlotID, TargetActor); }
        public bool IsFarMinRange(int SlotID, Actor TargetActor) { return Invoke<bool>(nameof(IsFarMinRange), SlotID, TargetActor); }
        public bool IsCoolTimeFinish(int SlotID) { return Invoke<bool>(nameof(IsCoolTimeFinish), SlotID); }
        public void InitObject(Actor ActorSelf) { Invoke(nameof(InitObject), ActorSelf); }
        public EPalWazaID GetWazaType(int SlotID) { return Invoke<EPalWazaID>(nameof(GetWazaType), SlotID); }
        public Object GetSkillMap() { return Invoke<Object>(nameof(GetSkillMap)); }
        public Array<int> GetEnableSlotIDs() { return Invoke<Array<int>>(nameof(GetEnableSlotIDs)); }
        public float GetCoolTimeRate(int SlotID) { return Invoke<float>(nameof(GetCoolTimeRate), SlotID); }
        public float GetCoolTime(int SlotID) { return Invoke<float>(nameof(GetCoolTime), SlotID); }
        public int FindMostEffectiveSlotID(Actor TargetActor) { return Invoke<int>(nameof(FindMostEffectiveSlotID), TargetActor); }
        public int ChoiceEnableSlotIDByRandom() { return Invoke<int>(nameof(ChoiceEnableSlotIDByRandom)); }
        public bool CanUse(int SlotID, Actor TargetActor) { return Invoke<bool>(nameof(CanUse), SlotID, TargetActor); }
    }
    public class PalActorChannel : ActorChannel
    {
        public PalActorChannel(nint addr) : base(addr) { }
    }
    public class PalAIActionBase : PawnAction_BlueprintBase
    {
        public PalAIActionBase(nint addr) : base(addr) { }
        public bool bIsAutoStopBehaviorTree { get { return this[nameof(bIsAutoStopBehaviorTree)].Flag; } set { this[nameof(bIsAutoStopBehaviorTree)].Flag = value; } }
        public EPalAIActionCategory AiActionCategory { get { return (EPalAIActionCategory)this[nameof(AiActionCategory)].GetValue<int>(); } set { this[nameof(AiActionCategory)].SetValue<int>((int)value); } }
        public PalAIActionDynamicParameter DynamicParameter { get { return this[nameof(DynamicParameter)].As<PalAIActionDynamicParameter>(); } set { this["DynamicParameter"] = value; } }
        public byte DefaultPriority { get { return this[nameof(DefaultPriority)].GetValue<byte>(); } set { this[nameof(DefaultPriority)].SetValue<byte>(value); } }
        public Object OnStartActionDelegate { get { return this[nameof(OnStartActionDelegate)]; } set { this[nameof(OnStartActionDelegate)] = value; } }
        public Object OnPauseActionDelegate { get { return this[nameof(OnPauseActionDelegate)]; } set { this[nameof(OnPauseActionDelegate)] = value; } }
        public Object OnResumeActionDelegate { get { return this[nameof(OnResumeActionDelegate)]; } set { this[nameof(OnResumeActionDelegate)] = value; } }
        public Object OnFinishActionDelegate { get { return this[nameof(OnFinishActionDelegate)]; } set { this[nameof(OnFinishActionDelegate)] = value; } }
        public void SetWalkSpeed_ForAIAction(EPalMovementSpeedType MoveSpeedType) { Invoke(nameof(SetWalkSpeed_ForAIAction), MoveSpeedType); }
        public PalAIActionBase SetAIActionClassParameter(Object NewActionClass, PalAIActionDynamicParameter Parameter) { return Invoke<PalAIActionBase>(nameof(SetAIActionClassParameter), NewActionClass, Parameter); }
        public bool PushChildAction(PawnAction action) { return Invoke<bool>(nameof(PushChildAction), action); }
        public void OnChildActionFinished(PawnAction action, byte WithResult) { Invoke(nameof(OnChildActionFinished), action, WithResult); }
        public void OnActionDelegate__DelegateSignature(PalAIActionBase action) { Invoke(nameof(OnActionDelegate__DelegateSignature), action); }
        public void OnActionByDelegate__DelegateSignature(PalAIActionBase action, PawnAction byAction) { Invoke(nameof(OnActionByDelegate__DelegateSignature), action, byAction); }
        public bool IsPaused() { return Invoke<bool>(nameof(IsPaused)); }
        public bool IsActive() { return Invoke<bool>(nameof(IsActive)); }
        public Object GetSimpleName() { return Invoke<Object>(nameof(GetSimpleName)); }
        public byte GetRequestPriority() { return Invoke<byte>(nameof(GetRequestPriority)); }
        public PalAIController GetPalAIController() { return Invoke<PalAIController>(nameof(GetPalAIController)); }
        public PawnActionsComponent GetOwnerComponent() { return Invoke<PawnActionsComponent>(nameof(GetOwnerComponent)); }
        public Controller GetController() { return Invoke<Controller>(nameof(GetController)); }
        public PalCharacterParameterComponent GetCharacterParameter() { return Invoke<PalCharacterParameterComponent>(nameof(GetCharacterParameter)); }
        public PalCharacter GetCharacter() { return Invoke<PalCharacter>(nameof(GetCharacter)); }
        public PalAIActionComponent GetAIActionComponent() { return Invoke<PalAIActionComponent>(nameof(GetAIActionComponent)); }
        public PalActionComponent GetActionComponent() { return Invoke<PalActionComponent>(nameof(GetActionComponent)); }
        public PawnAction CreateActionInstanceFixName(Object WorldContextObject, Object actionClass, Object ActionName) { return Invoke<PawnAction>(nameof(CreateActionInstanceFixName), WorldContextObject, actionClass, ActionName); }
        public void ActionAbort(Pawn ControlledPawn) { Invoke(nameof(ActionAbort), ControlledPawn); }
    }
    public class PalAIActionBaseCampBase : PalAIActionBase
    {
        public PalAIActionBaseCampBase(nint addr) : base(addr) { }
        public float WalkSpeedDefault { get { return this[nameof(WalkSpeedDefault)].GetValue<float>(); } set { this[nameof(WalkSpeedDefault)].SetValue<float>(value); } }
        public void StartCombatAction(Object CombatActionClass) { Invoke(nameof(StartCombatAction), CombatActionClass); }
        public void OnUpdateFullStomach(float Current, float Last) { Invoke(nameof(OnUpdateFullStomach), Current, Last); }
        public void OnTriggerInteract(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), OtherActor, IndicatorType); }
        public void OnClosedWorkerRadialMenu(PalHUDDispatchParameterBase Parameter) { Invoke(nameof(OnClosedWorkerRadialMenu), Parameter); }
        public void NotifyOrderCommand(EPalMapBaseCampWorkerOrderType OrderType) { Invoke(nameof(NotifyOrderCommand), OrderType); }
        public void InterruptActionToRecoverHungry(PalMonsterControllerBaseCampHungryParameter Parameter) { Invoke(nameof(InterruptActionToRecoverHungry), Parameter); }
        public Guid GetBaseCampIdBelongTo() { return Invoke<Guid>(nameof(GetBaseCampIdBelongTo)); }
        public PalBaseCampModel GetBaseCampBelongTo() { return Invoke<PalBaseCampModel>(nameof(GetBaseCampBelongTo)); }
        public void FinishCombatAction() { Invoke(nameof(FinishCombatAction)); }
        public void ChangeChildAction(PalAIActionBaseCampChildBase action) { Invoke(nameof(ChangeChildAction), action); }
        public void ChangeActionToWorker() { Invoke(nameof(ChangeActionToWorker)); }
        public void ChangeActionToFighter() { Invoke(nameof(ChangeActionToFighter)); }
    }
    public class PalAIActionBaseCampChildBase : PalAIActionBase
    {
        public PalAIActionBaseCampChildBase(nint addr) : base(addr) { }
        public Object BaseCampParentAction { get { return this[nameof(BaseCampParentAction)]; } set { this[nameof(BaseCampParentAction)] = value; } }
    }
    public class PalAIActionBaseCampCage : PalAIActionBase
    {
        public PalAIActionBaseCampCage(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampDefenseBase : PalAIActionBase
    {
        public PalAIActionBaseCampDefenseBase(nint addr) : base(addr) { }
        public Actor TargetActor { get { return this[nameof(TargetActor)].As<Actor>(); } set { this["TargetActor"] = value; } }
        public PalCharacter SelfActor { get { return this[nameof(SelfActor)].As<PalCharacter>(); } set { this["SelfActor"] = value; } }
        public PalAICombatModule CombatModule { get { return this[nameof(CombatModule)].As<PalAICombatModule>(); } set { this["CombatModule"] = value; } }
        public EPalWorkType CurrentWorkType { get { return (EPalWorkType)this[nameof(CurrentWorkType)].GetValue<int>(); } set { this[nameof(CurrentWorkType)].SetValue<int>((int)value); } }
        public PalWorkAssignHandleId CurrentWorkAssignId { get { return this[nameof(CurrentWorkAssignId)].As<PalWorkAssignHandleId>(); } set { this["CurrentWorkAssignId"] = value; } }
        public EPalWorkDefenseCombatType DefenseCombatType { get { return (EPalWorkDefenseCombatType)this[nameof(DefenseCombatType)].GetValue<int>(); } set { this[nameof(DefenseCombatType)].SetValue<int>((int)value); } }
        public Object DefenseActionClass { get { return this[nameof(DefenseActionClass)]; } set { this[nameof(DefenseActionClass)] = value; } }
        public Object DefenseWaitActionClass { get { return this[nameof(DefenseWaitActionClass)]; } set { this[nameof(DefenseWaitActionClass)] = value; } }
        public Object WeakDefenseModel { get { return this[nameof(WeakDefenseModel)]; } set { this[nameof(WeakDefenseModel)] = value; } }
        public PalAIController GetControllerRef() { return Invoke<PalAIController>(nameof(GetControllerRef)); }
    }
    public class PalAIActionBaseCampDefenseGunner : PalAIActionBaseCampDefenseBase
    {
        public PalAIActionBaseCampDefenseGunner(nint addr) : base(addr) { }
        public void StopTrigger() { Invoke(nameof(StopTrigger)); }
        public void OnShootBullet() { Invoke(nameof(OnShootBullet)); }
    }
    public class PalAIActionBaseCampDefenseWait : PalAIActionBaseCampDefenseBase
    {
        public PalAIActionBaseCampDefenseWait(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampDodgeWork : PalAIActionBase
    {
        public PalAIActionBaseCampDodgeWork(nint addr) : base(addr) { }
        public float WalkAroundArrivalRange { get { return this[nameof(WalkAroundArrivalRange)].GetValue<float>(); } set { this[nameof(WalkAroundArrivalRange)].SetValue<float>(value); } }
        public float WalkAroundNextDistance { get { return this[nameof(WalkAroundNextDistance)].GetValue<float>(); } set { this[nameof(WalkAroundNextDistance)].SetValue<float>(value); } }
        public FloatInterval WalkAroundRandomTime { get { return this[nameof(WalkAroundRandomTime)].As<FloatInterval>(); } set { this["WalkAroundRandomTime"] = value; } }
    }
    public class PalAIActionBaseCampFighter : PalAIActionBaseCampBase
    {
        public PalAIActionBaseCampFighter(nint addr) : base(addr) { }
        public bool TryGetDefenseMapObjectModel(PalMapObjectDefenseModelBase OutModel) { return Invoke<bool>(nameof(TryGetDefenseMapObjectModel), OutModel); }
        public void RegisterAssignDefenseModelId(Guid InDefenseMapObjectModelId) { Invoke(nameof(RegisterAssignDefenseModelId), InDefenseMapObjectModelId); }
        public void ChangeActionWait() { Invoke(nameof(ChangeActionWait)); }
    }
    public class PalAIActionBaseCampFighterChildBase : PalAIActionBaseCampChildBase
    {
        public PalAIActionBaseCampFighterChildBase(nint addr) : base(addr) { }
        public Object WeakParentFighterActionCache { get { return this[nameof(WeakParentFighterActionCache)]; } set { this[nameof(WeakParentFighterActionCache)] = value; } }
        public PalAIActionBaseCampFighter GetParentFighterAction() { return Invoke<PalAIActionBaseCampFighter>(nameof(GetParentFighterAction)); }
    }
    public class PalAIActionCombatBase : PalAIActionBase
    {
        public PalAIActionCombatBase(nint addr) : base(addr) { }
        public Object OnCombatFinish { get { return this[nameof(OnCombatFinish)]; } set { this[nameof(OnCombatFinish)] = value; } }
        public Actor TargetActor { get { return this[nameof(TargetActor)].As<Actor>(); } set { this["TargetActor"] = value; } }
        public PalCharacter SelfActor { get { return this[nameof(SelfActor)].As<PalCharacter>(); } set { this["SelfActor"] = value; } }
        public PalAICombatModule CombatModule { get { return this[nameof(CombatModule)].As<PalAICombatModule>(); } set { this["CombatModule"] = value; } }
        public bool NextIsWaza { get { return this[nameof(NextIsWaza)].Flag; } set { this[nameof(NextIsWaza)].Flag = value; } }
        public int NextWazaSlotIndex { get { return this[nameof(NextWazaSlotIndex)].GetValue<int>(); } set { this[nameof(NextWazaSlotIndex)].SetValue<int>(value); } }
        public Object NextActionClass { get { return this[nameof(NextActionClass)]; } set { this[nameof(NextActionClass)] = value; } }
        public int InterruptSkillSlotID { get { return this[nameof(InterruptSkillSlotID)].GetValue<int>(); } set { this[nameof(InterruptSkillSlotID)].SetValue<int>(value); } }
        public bool bInterruptSkill { get { return this[nameof(bInterruptSkill)].Flag; } set { this[nameof(bInterruptSkill)].Flag = value; } }
        public void StartNextAction_Event(PalActionComponent ActionComponent) { Invoke(nameof(StartNextAction_Event), ActionComponent); }
        public void SkillSlotSetUp() { Invoke(nameof(SkillSlotSetUp)); }
        public void SetTargetAndNextAction(Actor Target) { Invoke(nameof(SetTargetAndNextAction), Target); }
        public bool PreTickFinishCheck() { return Invoke<bool>(nameof(PreTickFinishCheck)); }
        public void PlayActionWhenDarknessStatus() { Invoke(nameof(PlayActionWhenDarknessStatus)); }
        public void OnDeadDeledate_Event(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadDeledate_Event), DeadInfo); }
        public void MoveToTarget() { Invoke(nameof(MoveToTarget)); }
        public bool LineTraceTarget() { return Invoke<bool>(nameof(LineTraceTarget)); }
        public void InterruptAction(int SkillSlotID) { Invoke(nameof(InterruptAction), SkillSlotID); }
        public PalStaticCharacterParameterComponent GetStaticParamCompRef() { return Invoke<PalStaticCharacterParameterComponent>(nameof(GetStaticParamCompRef)); }
        public PalActiveSkillSlot GetSkillSlotRef() { return Invoke<PalActiveSkillSlot>(nameof(GetSkillSlotRef)); }
        public PalCharacterParameterComponent GetParamCompRef() { return Invoke<PalCharacterParameterComponent>(nameof(GetParamCompRef)); }
        public PalAIController GetControllerRef() { return Invoke<PalAIController>(nameof(GetControllerRef)); }
        public PalActionComponent GetActorActionComponentRef() { return Invoke<PalActionComponent>(nameof(GetActorActionComponentRef)); }
        public void CombatFinishDelegate__DelegateSignature() { Invoke(nameof(CombatFinishDelegate__DelegateSignature)); }
        public void ChangeNextAction() { Invoke(nameof(ChangeNextAction)); }
    }
    public class PalAIActionBaseCampFighterCombat : PalAIActionCombatBase
    {
        public PalAIActionBaseCampFighterCombat(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampFighterCombatGunner : PalAIActionCombatBase
    {
        public PalAIActionBaseCampFighterCombatGunner(nint addr) : base(addr) { }
        public float FaceAngleRange { get { return this[nameof(FaceAngleRange)].GetValue<float>(); } set { this[nameof(FaceAngleRange)].SetValue<float>(value); } }
        public Object WeakDefenseModel { get { return this[nameof(WeakDefenseModel)]; } set { this[nameof(WeakDefenseModel)] = value; } }
    }
    public class PalAIActionBaseCampFighterWait : PalAIActionBaseCampFighterChildBase
    {
        public PalAIActionBaseCampFighterWait(nint addr) : base(addr) { }
        public bool TrySearchEnemy() { return Invoke<bool>(nameof(TrySearchEnemy)); }
        public bool TryGetWaitLocation(Vector Location) { return Invoke<bool>(nameof(TryGetWaitLocation), Location); }
    }
    public class PalAIActionBaseCampInUsingAmusement : PalAIActionBaseCampBase
    {
        public PalAIActionBaseCampInUsingAmusement(nint addr) : base(addr) { }
        public float GetUsingTime() { return Invoke<float>(nameof(GetUsingTime)); }
    }
    public class PalAIActionBaseCampRecoverHungry : PalAIActionBaseCampBase
    {
        public PalAIActionBaseCampRecoverHungry(nint addr) : base(addr) { }
        public Guid WantFoodHUDId { get { return this[nameof(WantFoodHUDId)].As<Guid>(); } set { this["WantFoodHUDId"] = value; } }
        public Object WantFoodHUDClass { get { return this[nameof(WantFoodHUDClass)]; } set { this[nameof(WantFoodHUDClass)] = value; } }
        public Vector WantFoodHUDOffset { get { return this[nameof(WantFoodHUDOffset)].As<Vector>(); } set { this["WantFoodHUDOffset"] = value; } }
        public PalMonsterControllerBaseCampHungryParameter HungeryParameter { get { return this[nameof(HungeryParameter)].As<PalMonsterControllerBaseCampHungryParameter>(); } set { this["HungeryParameter"] = value; } }
        public void ChangeActionEat() { Invoke(nameof(ChangeActionEat)); }
        public void ChangeActionApproach() { Invoke(nameof(ChangeActionApproach)); }
    }
    public class PalAIActionBaseCampRecoverHungryChildBase : PalAIActionBaseCampChildBase
    {
        public PalAIActionBaseCampRecoverHungryChildBase(nint addr) : base(addr) { }
        public bool TryGetTargetMapObjectConcreteModel(PalMapObjectConcreteModelBase OutTargetModel) { return Invoke<bool>(nameof(TryGetTargetMapObjectConcreteModel), OutTargetModel); }
        public void ToggleShowWantFoodHUD(bool bShow) { Invoke(nameof(ToggleShowWantFoodHUD), bShow); }
        public bool IsExistEnoughFoodInTarget() { return Invoke<bool>(nameof(IsExistEnoughFoodInTarget)); }
        public bool IsAvailableDistance() { return Invoke<bool>(nameof(IsAvailableDistance)); }
        public Vector GetTargetLocation() { return Invoke<Vector>(nameof(GetTargetLocation)); }
        public PalAIActionBaseCampRecoverHungry GetParentRecoverHungryAction() { return Invoke<PalAIActionBaseCampRecoverHungry>(nameof(GetParentRecoverHungryAction)); }
        public void GetHungryParameter(PalMonsterControllerBaseCampHungryParameter HungeryParameter) { Invoke(nameof(GetHungryParameter), HungeryParameter); }
    }
    public class PalAIActionBaseCampRecoverHungryApproachToFoodBox : PalAIActionBaseCampRecoverHungryChildBase
    {
        public PalAIActionBaseCampRecoverHungryApproachToFoodBox(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampRecoverHungryEat : PalAIActionBaseCampRecoverHungryChildBase
    {
        public PalAIActionBaseCampRecoverHungryEat(nint addr) : base(addr) { }
        public float EatTime { get { return this[nameof(EatTime)].GetValue<float>(); } set { this[nameof(EatTime)].SetValue<float>(value); } }
        public float TurnSpeed { get { return this[nameof(TurnSpeed)].GetValue<float>(); } set { this[nameof(TurnSpeed)].SetValue<float>(value); } }
        public void OnFinishEatingTime() { Invoke(nameof(OnFinishEatingTime)); }
    }
    public class PalAIActionBaseCampRecoverHungryProductFood : PalAIActionBaseCampRecoverHungryChildBase
    {
        public PalAIActionBaseCampRecoverHungryProductFood(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampReturnBack : PalAIActionBase
    {
        public PalAIActionBaseCampReturnBack(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampSleep : PalAIActionBaseCampBase
    {
        public PalAIActionBaseCampSleep(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampSleepActively : PalAIActionBaseCampBase
    {
        public PalAIActionBaseCampSleepActively(nint addr) : base(addr) { }
        public Guid ReservedBedModelInstanceId { get { return this[nameof(ReservedBedModelInstanceId)].As<Guid>(); } set { this["ReservedBedModelInstanceId"] = value; } }
        public EPalAIActionBaseCampSleepActivelyMode Mode { get { return (EPalAIActionBaseCampSleepActivelyMode)this[nameof(Mode)].GetValue<int>(); } set { this[nameof(Mode)].SetValue<int>((int)value); } }
        public void SetParameter(PalAIActionBaseCampSleepActivelyParameter Parameter) { Invoke(nameof(SetParameter), Parameter); }
    }
    public class PalAIActionBaseCampSpawningForWorker : PalAIActionBase
    {
        public PalAIActionBaseCampSpawningForWorker(nint addr) : base(addr) { }
        public Object OnLandedWorldStaticDelegate { get { return this[nameof(OnLandedWorldStaticDelegate)]; } set { this[nameof(OnLandedWorldStaticDelegate)] = value; } }
        public void SimpleMulticastDelegate__DelegateSignature() { Invoke(nameof(SimpleMulticastDelegate__DelegateSignature)); }
        public void OnLanded(HitResult Hit) { Invoke(nameof(OnLanded), Hit); }
    }
    public class PalAIActionBaseCampTrantrum : PalAIActionBase
    {
        public PalAIActionBaseCampTrantrum(nint addr) : base(addr) { }
        public float Duration { get { return this[nameof(Duration)].GetValue<float>(); } set { this[nameof(Duration)].SetValue<float>(value); } }
        public float RadiusAttackTo { get { return this[nameof(RadiusAttackTo)].GetValue<float>(); } set { this[nameof(RadiusAttackTo)].SetValue<float>(value); } }
        public Int32Interval AttackNumRange { get { return this[nameof(AttackNumRange)].As<Int32Interval>(); } set { this["AttackNumRange"] = value; } }
        public float TurnSpeedToAttack { get { return this[nameof(TurnSpeedToAttack)].GetValue<float>(); } set { this[nameof(TurnSpeedToAttack)].SetValue<float>(value); } }
        public Guid AttackTargetMapObjectInstanceId { get { return this[nameof(AttackTargetMapObjectInstanceId)].As<Guid>(); } set { this["AttackTargetMapObjectInstanceId"] = value; } }
    }
    public class PalAIActionBaseCampUtility : BlueprintFunctionLibrary
    {
        public PalAIActionBaseCampUtility(nint addr) : base(addr) { }
        public byte GetRequestSoftScriptPriority(EPalRequestSoftScriptPriorityAdd AddPriority) { return Invoke<byte>(nameof(GetRequestSoftScriptPriority), AddPriority); }
    }
    public class PalAIActionCollectItemToStorage : PalAIActionBase
    {
        public PalAIActionCollectItemToStorage(nint addr) : base(addr) { }
    }
    public class PalAIActionCombat_BaseCamp : PalAIActionCombatBase
    {
        public PalAIActionCombat_BaseCamp(nint addr) : base(addr) { }
    }
    public class PalAIActionCombat_Standard : PalAIActionCombatBase
    {
        public PalAIActionCombat_Standard(nint addr) : base(addr) { }
    }
    public class PalAIActionComponent : PawnActionsComponent
    {
        public PalAIActionComponent(nint addr) : base(addr) { }
        public Array<PalAIActionCompositeBase> ActionCompositeRoots { get { return new Array<PalAIActionCompositeBase>(this[nameof(ActionCompositeRoots)].Address); } }
        public void TerminateCurrentActionByClass(Object actionClass) { Invoke(nameof(TerminateCurrentActionByClass), actionClass); }
        public void SetWalkSpeed_ForAIAction(EPalMovementSpeedType MoveSpeedType) { Invoke(nameof(SetWalkSpeed_ForAIAction), MoveSpeedType); }
        public void SetRootComposite(PalAIActionCompositeBase NewCompositeAction, byte Priority) { Invoke(nameof(SetRootComposite), NewCompositeAction, Priority); }
        public PalAIActionBase SetActionClassParameter(Object NewActionClass, PalAIActionDynamicParameter Parameter) { return Invoke<PalAIActionBase>(nameof(SetActionClassParameter), NewActionClass, Parameter); }
        public void SetAction(PawnAction NewAction, byte Priority, Object Instigator) { Invoke(nameof(SetAction), NewAction, Priority, Instigator); }
        public bool IsActionEmpty() { return Invoke<bool>(nameof(IsActionEmpty)); }
        public bool HasAction(Object checkClass, byte checkPriority) { return Invoke<bool>(nameof(HasAction), checkClass, checkPriority); }
        public PawnAction GetCurrentTopParentAction_BP() { return Invoke<PawnAction>(nameof(GetCurrentTopParentAction_BP)); }
        public EPalAIActionCategory GetCurrentAIActionCategory() { return Invoke<EPalAIActionCategory>(nameof(GetCurrentAIActionCategory)); }
        public PawnAction GetCurrentAction_BP() { return Invoke<PawnAction>(nameof(GetCurrentAction_BP)); }
        public PalAIActionCompositeBase GetCompositeRoot(byte Priority) { return Invoke<PalAIActionCompositeBase>(nameof(GetCompositeRoot), Priority); }
        public void CacheControlledPawn_BP() { Invoke(nameof(CacheControlledPawn_BP)); }
        public void AllCancelPushedAction(Object Instigator) { Invoke(nameof(AllCancelPushedAction), Instigator); }
        public void AllCancelActionPriorThanSoftScript(Object Instigator) { Invoke(nameof(AllCancelActionPriorThanSoftScript), Instigator); }
        public void AllCancelAction_Logic_HardScript_Reaction(Object Instigator) { Invoke(nameof(AllCancelAction_Logic_HardScript_Reaction), Instigator); }
    }
    public class PalAIActionCompositeBase : Object
    {
        public PalAIActionCompositeBase(nint addr) : base(addr) { }
        public PalAIActionCompositeBase Child { get { return this[nameof(Child)].As<PalAIActionCompositeBase>(); } set { this["Child"] = value; } }
        public PalAIActionComponent OwnerComponent { get { return this[nameof(OwnerComponent)].As<PalAIActionComponent>(); } set { this["OwnerComponent"] = value; } }
        public void SetChildActionComposite(PalAIActionCompositeBase Composite) { Invoke(nameof(SetChildActionComposite), Composite); }
        public void SetChildAction(PalAIActionBase action, Object Instigator) { Invoke(nameof(SetChildAction), action, Instigator); }
        public bool IsPaused() { return Invoke<bool>(nameof(IsPaused)); }
        public Pawn GetPawn() { return Invoke<Pawn>(nameof(GetPawn)); }
        public PalAIActionComponent GetOwnerComponent() { return Invoke<PalAIActionComponent>(nameof(GetOwnerComponent)); }
        public Controller GetController() { return Invoke<Controller>(nameof(GetController)); }
        public PalAIActionCompositeBase GetChild() { return Invoke<PalAIActionCompositeBase>(nameof(GetChild)); }
        public PalCharacterParameterComponent GetCharacterParameter() { return Invoke<PalCharacterParameterComponent>(nameof(GetCharacterParameter)); }
        public PalActionComponent GetActionComponent() { return Invoke<PalActionComponent>(nameof(GetActionComponent)); }
    }
    public class PalAIActionCompositeBaseCamp : PalAIActionCompositeBase
    {
        public PalAIActionCompositeBaseCamp(nint addr) : base(addr) { }
        public float WalkSpeedDefault { get { return this[nameof(WalkSpeedDefault)].GetValue<float>(); } set { this[nameof(WalkSpeedDefault)].SetValue<float>(value); } }
        public void NotifyOrderCommand(EPalMapBaseCampWorkerOrderType OrderType) { Invoke(nameof(NotifyOrderCommand), OrderType); }
        public void InterruptActionToSleep() { Invoke(nameof(InterruptActionToSleep)); }
        public void InterruptActionToRecoverHungry(PalMonsterControllerBaseCampHungryParameter Parameter) { Invoke(nameof(InterruptActionToRecoverHungry), Parameter); }
        public void ChangeActionToWorker() { Invoke(nameof(ChangeActionToWorker)); }
        public void ChangeActionToFighter() { Invoke(nameof(ChangeActionToFighter)); }
    }
    public class PalAIActionCompositeOrderCommandInterface : Interface
    {
        public PalAIActionCompositeOrderCommandInterface(nint addr) : base(addr) { }
    }
    public class PalAIActionCompositeActionDummy : PalAIActionCompositeBase
    {
        public PalAIActionCompositeActionDummy(nint addr) : base(addr) { }
        public void OnResumeAction(PalAIActionBase action) { Invoke(nameof(OnResumeAction), action); }
        public void OnPauseAction(PalAIActionBase action, PawnAction PausedBy) { Invoke(nameof(OnPauseAction), action, PausedBy); }
        public void OnFinishAction(PalAIActionBase action) { Invoke(nameof(OnFinishAction), action); }
    }
    public class PalAIActionCompositeWorker : PalAIActionCompositeBase
    {
        public PalAIActionCompositeWorker(nint addr) : base(addr) { }
        public Object WaitActionClass { get { return this[nameof(WaitActionClass)]; } set { this[nameof(WaitActionClass)] = value; } }
        public Object ApproachActionClass { get { return this[nameof(ApproachActionClass)]; } set { this[nameof(ApproachActionClass)] = value; } }
        public Object WaitForWorkableActionClass { get { return this[nameof(WaitForWorkableActionClass)]; } set { this[nameof(WaitForWorkableActionClass)] = value; } }
        public Object WorkingActionClass { get { return this[nameof(WorkingActionClass)]; } set { this[nameof(WorkingActionClass)] = value; } }
        public Object CurrentActionClass { get { return this[nameof(CurrentActionClass)]; } set { this[nameof(CurrentActionClass)] = value; } }
        public Object SpeedFlagName { get { return this[nameof(SpeedFlagName)]; } set { this[nameof(SpeedFlagName)] = value; } }
        public float DefaultWalkSpeed { get { return this[nameof(DefaultWalkSpeed)].GetValue<float>(); } set { this[nameof(DefaultWalkSpeed)].SetValue<float>(value); } }
        public void UnregisterFixAssignWork() { Invoke(nameof(UnregisterFixAssignWork)); }
        public bool TryFindNextWork() { return Invoke<bool>(nameof(TryFindNextWork)); }
        public void RegisterFixedAssignWorkAttack(Guid MapObjectModelInstanceId) { Invoke(nameof(RegisterFixedAssignWorkAttack), MapObjectModelInstanceId); }
        public void RegisterFixedAssignWork(Guid WorkId) { Invoke(nameof(RegisterFixedAssignWork), WorkId); }
        public void OnTickInWaitAction(float DeltaTime) { Invoke(nameof(OnTickInWaitAction), DeltaTime); }
        public void OnStartAction(PalAIActionBase action) { Invoke(nameof(OnStartAction), action); }
        public bool IsTargetWorkable() { return Invoke<bool>(nameof(IsTargetWorkable)); }
        public bool IsTargetAssignable() { return Invoke<bool>(nameof(IsTargetAssignable)); }
        public bool IsAssignedToTarget() { return Invoke<bool>(nameof(IsAssignedToTarget)); }
        public void ChangeActionWorking() { Invoke(nameof(ChangeActionWorking)); }
        public void ChangeActionWaitForWorkable() { Invoke(nameof(ChangeActionWaitForWorkable)); }
        public void ChangeActionWait() { Invoke(nameof(ChangeActionWait)); }
        public void ChangeActionApproachToWorkArea() { Invoke(nameof(ChangeActionApproachToWorkArea)); }
    }
    public class PalAIActionWorkerChildBase : PalAIActionBase
    {
        public PalAIActionWorkerChildBase(nint addr) : base(addr) { }
        public void LookToTarget(float TurnSpeed, float DeltaTime) { Invoke(nameof(LookToTarget), TurnSpeed, DeltaTime); }
        public bool IsTargetWorkable() { return Invoke<bool>(nameof(IsTargetWorkable)); }
        public bool IsTargetAssignable() { return Invoke<bool>(nameof(IsTargetAssignable)); }
        public bool IsAssignedToTarget() { return Invoke<bool>(nameof(IsAssignedToTarget)); }
        public Vector GetWorkLookAtLocation() { return Invoke<Vector>(nameof(GetWorkLookAtLocation)); }
        public PalAIActionCompositeWorker GetParent() { return Invoke<PalAIActionCompositeWorker>(nameof(GetParent)); }
    }
    public class PalAIActionCompositeWorkerBaseCamp : PalAIActionCompositeWorker
    {
        public PalAIActionCompositeWorkerBaseCamp(nint addr) : base(addr) { }
        public Object CombatActionClass { get { return this[nameof(CombatActionClass)]; } set { this[nameof(CombatActionClass)] = value; } }
        public Object DefenseActionClass { get { return this[nameof(DefenseActionClass)]; } set { this[nameof(DefenseActionClass)] = value; } }
    }
    public class PalAIActionCompositeWorkerModuleBase : Object
    {
        public PalAIActionCompositeWorkerModuleBase(nint addr) : base(addr) { }
        public PalAIActionCompositeWorker Owner { get { return this[nameof(Owner)].As<PalAIActionCompositeWorker>(); } set { this["Owner"] = value; } }
    }
    public class PalAIActionCompositeWorkerModuleNormal : PalAIActionCompositeWorkerModuleBase
    {
        public PalAIActionCompositeWorkerModuleNormal(nint addr) : base(addr) { }
    }
    public class PalAIActionCompositeWorkerModuleBaseCamp : PalAIActionCompositeWorkerModuleBase
    {
        public PalAIActionCompositeWorkerModuleBaseCamp(nint addr) : base(addr) { }
        public Guid GetBaseCampIdBelongTo() { return Invoke<Guid>(nameof(GetBaseCampIdBelongTo)); }
        public PalBaseCampModel GetBaseCampBelongTo() { return Invoke<PalBaseCampModel>(nameof(GetBaseCampBelongTo)); }
    }
    public class PalAIActionCoopAssaultrifleMode : PalAIActionBase
    {
        public PalAIActionCoopAssaultrifleMode(nint addr) : base(addr) { }
        public float SearchEnemyRadius { get { return this[nameof(SearchEnemyRadius)].GetValue<float>(); } set { this[nameof(SearchEnemyRadius)].SetValue<float>(value); } }
        public float SearchLocationRadiusMax { get { return this[nameof(SearchLocationRadiusMax)].GetValue<float>(); } set { this[nameof(SearchLocationRadiusMax)].SetValue<float>(value); } }
        public float SearchLocationRadiusStep { get { return this[nameof(SearchLocationRadiusStep)].GetValue<float>(); } set { this[nameof(SearchLocationRadiusStep)].SetValue<float>(value); } }
        public float SearchLocationDegStep { get { return this[nameof(SearchLocationDegStep)].GetValue<float>(); } set { this[nameof(SearchLocationDegStep)].SetValue<float>(value); } }
        public float SearchingLocationRadius { get { return this[nameof(SearchingLocationRadius)].GetValue<float>(); } set { this[nameof(SearchingLocationRadius)].SetValue<float>(value); } }
        public PalCharacter TargetCharacter { get { return this[nameof(TargetCharacter)].As<PalCharacter>(); } set { this["TargetCharacter"] = value; } }
        public PalCharacter ReticleTarget { get { return this[nameof(ReticleTarget)].As<PalCharacter>(); } set { this["ReticleTarget"] = value; } }
        public Vector AimStartPoint { get { return this[nameof(AimStartPoint)].As<Vector>(); } set { this["AimStartPoint"] = value; } }
        public void Update(float DeltaTime) { Invoke(nameof(Update), DeltaTime); }
        public void SetAimStartPoint(Vector OffsetLocation) { Invoke(nameof(SetAimStartPoint), OffsetLocation); }
        public void SearchForTargetAndShootingLocation() { Invoke(nameof(SearchForTargetAndShootingLocation)); }
        public void ProgressSeraching(float DeltaTime) { Invoke(nameof(ProgressSeraching), DeltaTime); }
        public void Progress_VerifyShootableEnemy() { Invoke(nameof(Progress_VerifyShootableEnemy)); }
        public void Progress_CollectShootableLocation() { Invoke(nameof(Progress_CollectShootableLocation)); }
        public void OnUpdateShootingLocation(PalCharacter Target, Vector ShootLocation) { Invoke(nameof(OnUpdateShootingLocation), Target, ShootLocation); }
        public void OnRoadBlocked() { Invoke(nameof(OnRoadBlocked)); }
        public bool IsSearching() { return Invoke<bool>(nameof(IsSearching)); }
        public bool HasReached(Vector Goal) { return Invoke<bool>(nameof(HasReached), Goal); }
        public PalCharacter GetTrainer() { return Invoke<PalCharacter>(nameof(GetTrainer)); }
        public void GetTargetEnemies(Array<PalCharacter> Enemies) { Invoke(nameof(GetTargetEnemies), Enemies); }
        public PalCharacter GetTargetCharacter() { return Invoke<PalCharacter>(nameof(GetTargetCharacter)); }
        public PalCharacter GetReticleTarget() { return Invoke<PalCharacter>(nameof(GetReticleTarget)); }
        public void GetCandidateLocations(float Radius, float DegStep, Array<PalCoopSkillAssaultrifleModeCandidateLocation> Results) { Invoke(nameof(GetCandidateLocations), Radius, DegStep, Results); }
        public bool FindLocationToShootEnemy(PalCharacter Target, PalCoopSkillAssaultrifleModeCandidateLocation OutLocation) { return Invoke<bool>(nameof(FindLocationToShootEnemy), Target, OutLocation); }
        public void ClearTargetCharacter() { Invoke(nameof(ClearTargetCharacter)); }
    }
    public class PalAIActionFed : PalAIActionBase
    {
        public PalAIActionFed(nint addr) : base(addr) { }
        public PalCharacter ApproachTarget { get { return this[nameof(ApproachTarget)].As<PalCharacter>(); } set { this["ApproachTarget"] = value; } }
    }
    public class PalAIActionFunnelCharacterDefault : PalAIActionCompositeBase
    {
        public PalAIActionFunnelCharacterDefault(nint addr) : base(addr) { }
        public bool ShouldSetSkillAction() { return Invoke<bool>(nameof(ShouldSetSkillAction)); }
        public void SetSkillAction() { Invoke(nameof(SetSkillAction)); }
        public void SetOtomoFollowAction() { Invoke(nameof(SetOtomoFollowAction)); }
        public void OnTick_BP(float DeltaTime) { Invoke(nameof(OnTick_BP), DeltaTime); }
        public void CreateSkillActionModule(Object FunnelSkillModuleClass) { Invoke(nameof(CreateSkillActionModule), FunnelSkillModuleClass); }
    }
    public class PalAIActionFunnelSkillBase : PalAIActionBase
    {
        public PalAIActionFunnelSkillBase(nint addr) : base(addr) { }
        public PalFunnelSkillModule Module { get { return this[nameof(Module)].As<PalFunnelSkillModule>(); } set { this["Module"] = value; } }
        public void SetModule(PalFunnelSkillModule InModule) { Invoke(nameof(SetModule), InModule); }
    }
    public class PalAIActionLiftup : PalAIActionBase
    {
        public PalAIActionLiftup(nint addr) : base(addr) { }
        public void OnLanded() { Invoke(nameof(OnLanded)); }
        public void CallOnLanded(HitResult Hit) { Invoke(nameof(CallOnLanded), Hit); }
    }
    public class PalAIActionOtomoDefault : PalAIActionCompositeBase
    {
        public PalAIActionOtomoDefault(nint addr) : base(addr) { }
        public bool ShouldSetCombatAction() { return Invoke<bool>(nameof(ShouldSetCombatAction)); }
        public void SetOtomoWorkActionFixedAssign(Actor HitActor) { Invoke(nameof(SetOtomoWorkActionFixedAssign), HitActor); }
        public void SetOtomoWorkAction() { Invoke(nameof(SetOtomoWorkAction)); }
        public void SetOtomoFollowAction() { Invoke(nameof(SetOtomoFollowAction)); }
        public void SetOtomoCombatAction() { Invoke(nameof(SetOtomoCombatAction)); }
        public void SetOtomoBaseCampAction() { Invoke(nameof(SetOtomoBaseCampAction)); }
    }
    public class PalAIActionWorkerApproachToWorkArea : PalAIActionWorkerChildBase
    {
        public PalAIActionWorkerApproachToWorkArea(nint addr) : base(addr) { }
        public void OnReceiveMoveCompleted(AIRequestID AIRequestID, byte Result) { Invoke(nameof(OnReceiveMoveCompleted), AIRequestID, Result); }
    }
    public class PalAIActionWorkerReaction : PalAIActionBase
    {
        public PalAIActionWorkerReaction(nint addr) : base(addr) { }
        public PalCharacter LookTargetCharacter { get { return this[nameof(LookTargetCharacter)].As<PalCharacter>(); } set { this["LookTargetCharacter"] = value; } }
    }
    public class PalAIActionWorkerWait : PalAIActionWorkerChildBase
    {
        public PalAIActionWorkerWait(nint addr) : base(addr) { }
        public void ReturnToDefaultPosition() { Invoke(nameof(ReturnToDefaultPosition)); }
        public void OnTickForWait(float DeltaTime) { Invoke(nameof(OnTickForWait), DeltaTime); }
        public byte MoveToLocation(Vector ToLocation) { return Invoke<byte>(nameof(MoveToLocation), ToLocation); }
        public bool CalcWalkAroundDestination(float Radius, Vector OutDestination) { return Invoke<bool>(nameof(CalcWalkAroundDestination), Radius, OutDestination); }
    }
    public class PalAIActionWorkerWaitForWorkable : PalAIActionWorkerChildBase
    {
        public PalAIActionWorkerWaitForWorkable(nint addr) : base(addr) { }
    }
    public class PalAIActionWorkerWorking : PalAIActionWorkerChildBase
    {
        public PalAIActionWorkerWorking(nint addr) : base(addr) { }
        public EPalWorkType CurrentWorkType { get { return (EPalWorkType)this[nameof(CurrentWorkType)].GetValue<int>(); } set { this[nameof(CurrentWorkType)].SetValue<int>((int)value); } }
        public float TurnSpeedToTarget { get { return this[nameof(TurnSpeedToTarget)].GetValue<float>(); } set { this[nameof(TurnSpeedToTarget)].SetValue<float>(value); } }
    }
    public class PalAIAction_LeaveBase : PalAIActionBase
    {
        public PalAIAction_LeaveBase(nint addr) : base(addr) { }
        public Actor TargetActor { get { return this[nameof(TargetActor)].As<Actor>(); } set { this["TargetActor"] = value; } }
        public PalCharacter SelfActor { get { return this[nameof(SelfActor)].As<PalCharacter>(); } set { this["SelfActor"] = value; } }
        public PalCharacterMovementComponent Movement { get { return this[nameof(Movement)].As<PalCharacterMovementComponent>(); } set { this["Movement"] = value; } }
        public void InitializeObject(Actor CombatTarget, PalCharacter SelfCharactor) { Invoke(nameof(InitializeObject), CombatTarget, SelfCharactor); }
    }
    public class PalAIBlackboardBase : Object
    {
        public PalAIBlackboardBase(nint addr) : base(addr) { }
    }
    public class PalAICombatModule : Object
    {
        public PalAICombatModule(nint addr) : base(addr) { }
        public void UpdateBattleState() { Invoke(nameof(UpdateBattleState)); }
        public void Setup() { Invoke(nameof(Setup)); }
        public void OnBattleFinish() { Invoke(nameof(OnBattleFinish)); }
        public bool IsReachable_NavMesh_ForActor(Actor Target) { return Invoke<bool>(nameof(IsReachable_NavMesh_ForActor), Target); }
        public bool IsReachable_NavMesh(Vector TargetPos) { return Invoke<bool>(nameof(IsReachable_NavMesh), TargetPos); }
        public bool IsBattleMode() { return Invoke<bool>(nameof(IsBattleMode)); }
        public Actor GetTargetActor() { return Invoke<Actor>(nameof(GetTargetActor)); }
        public bool AIMoveToTargetActor(Actor Target) { return Invoke<bool>(nameof(AIMoveToTargetActor), Target); }
    }
    public class PalAICombatModule_BaseCamp : PalAICombatModule
    {
        public PalAICombatModule_BaseCamp(nint addr) : base(addr) { }
        public Object ParentFighterAction { get { return this[nameof(ParentFighterAction)]; } set { this[nameof(ParentFighterAction)] = value; } }
    }
    public class PalAICombatModule_EnemyNormal : PalAICombatModule
    {
        public PalAICombatModule_EnemyNormal(nint addr) : base(addr) { }
    }
    public class PalAICombatModule_Invader : PalAICombatModule
    {
        public PalAICombatModule_Invader(nint addr) : base(addr) { }
        public void OnBattleFinish_forDelegate(Actor Actor) { Invoke(nameof(OnBattleFinish_forDelegate), Actor); }
    }
    public class PalAICombatModule_Otomo : PalAICombatModule
    {
        public PalAICombatModule_Otomo(nint addr) : base(addr) { }
    }
    public class PalAICombatModule_Wild : PalAICombatModule
    {
        public PalAICombatModule_Wild(nint addr) : base(addr) { }
        public void OnBattleFinish_forDelegate(Actor Actor) { Invoke(nameof(OnBattleFinish_forDelegate), Actor); }
        public bool JudgeReturnCombatStartPosition() { return Invoke<bool>(nameof(JudgeReturnCombatStartPosition)); }
    }
    public class PalAIController : AIController
    {
        public PalAIController(nint addr) : base(addr) { }
        public Array<Actor> TargetPlayers { get { return new Array<Actor>(this[nameof(TargetPlayers)].Address); } }
        public Array<Actor> TargetNPCs { get { return new Array<Actor>(this[nameof(TargetNPCs)].Address); } }
        public Object CombatModuleClass { get { return this[nameof(CombatModuleClass)]; } set { this[nameof(CombatModuleClass)] = value; } }
        public PalActiveSkillSlot SkillSlot { get { return this[nameof(SkillSlot)].As<PalActiveSkillSlot>(); } set { this["SkillSlot"] = value; } }
        public Object DebugOrganizationName { get { return this[nameof(DebugOrganizationName)]; } set { this[nameof(DebugOrganizationName)] = value; } }
        public PalCharacter R1AttackTarget { get { return this[nameof(R1AttackTarget)].As<PalCharacter>(); } set { this["R1AttackTarget"] = value; } }
        public float MinAIActionComponentTickInterval { get { return this[nameof(MinAIActionComponentTickInterval)].GetValue<float>(); } set { this[nameof(MinAIActionComponentTickInterval)].SetValue<float>(value); } }
        public bool bIsActive { get { return this[nameof(bIsActive)].Flag; } set { this[nameof(bIsActive)].Flag = value; } }
        public bool IsSquadBehaviour { get { return this[nameof(IsSquadBehaviour)].Flag; } set { this[nameof(IsSquadBehaviour)].Flag = value; } }
        public bool IsNotSleepWildLife { get { return this[nameof(IsNotSleepWildLife)].Flag; } set { this[nameof(IsNotSleepWildLife)].Flag = value; } }
        public PalSquad MySquad { get { return this[nameof(MySquad)].As<PalSquad>(); } set { this["MySquad"] = value; } }
        public PalHate HateSystem { get { return this[nameof(HateSystem)].As<PalHate>(); } set { this["HateSystem"] = value; } }
        public PalAIActionComponent AIActionComponent { get { return this[nameof(AIActionComponent)].As<PalAIActionComponent>(); } set { this["AIActionComponent"] = value; } }
        public PalAIBlackboardBase PalAIBlackboard { get { return this[nameof(PalAIBlackboard)].As<PalAIBlackboardBase>(); } set { this["PalAIBlackboard"] = value; } }
        public bool bOverwriteBlockDetectionParams { get { return this[nameof(bOverwriteBlockDetectionParams)].Flag; } set { this[nameof(bOverwriteBlockDetectionParams)].Flag = value; } }
        public PalPathFollowingBlockDetectionParams BlockDetectionParams { get { return this[nameof(BlockDetectionParams)].As<PalPathFollowingBlockDetectionParams>(); } set { this["BlockDetectionParams"] = value; } }
        public Object PalBlackboardClass { get { return this[nameof(PalBlackboardClass)]; } set { this[nameof(PalBlackboardClass)] = value; } }
        public TimerHandle DeadBodyDeleteTimerHandle { get { return this[nameof(DeadBodyDeleteTimerHandle)].As<TimerHandle>(); } set { this["DeadBodyDeleteTimerHandle"] = value; } }
        public bool IsDeadBodyTimeDelate { get { return this[nameof(IsDeadBodyTimeDelate)].Flag; } set { this[nameof(IsDeadBodyTimeDelate)].Flag = value; } }
        public bool IsSelfTimeDelate_FromSpawnTime { get { return this[nameof(IsSelfTimeDelate_FromSpawnTime)].Flag; } set { this[nameof(IsSelfTimeDelate_FromSpawnTime)].Flag = value; } }
        public TimerHandle SelfDeleteTimerHandle { get { return this[nameof(SelfDeleteTimerHandle)].As<TimerHandle>(); } set { this["SelfDeleteTimerHandle"] = value; } }
        public void WaitForSeconds(float Time) { Invoke(nameof(WaitForSeconds), Time); }
        public void SimpleMoveToActorWithLineTraceGround(Actor GoalActor) { Invoke(nameof(SimpleMoveToActorWithLineTraceGround), GoalActor); }
        public void ShowHateArrow() { Invoke(nameof(ShowHateArrow)); }
        public void ShowActionDebug() { Invoke(nameof(ShowActionDebug)); }
        public void SetInitialValue(bool IsSquad, bool NotSleep) { Invoke(nameof(SetInitialValue), IsSquad, NotSleep); }
        public void SetActiveAI(bool Active) { Invoke(nameof(SetActiveAI), Active); }
        public void RPCDummy() { Invoke(nameof(RPCDummy)); }
        public byte PalMoveToLocation(Vector Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, Object FilterClass, bool bAllowPartialPaths) { return Invoke<byte>(nameof(PalMoveToLocation), Dest, AcceptanceRadius, bStopOnOverlap, bUsePathfinding, bProjectDestinationToNavigation, bCanStrafe, FilterClass, bAllowPartialPaths); }
        public void OnDeadTimerStart(PalDeadInfo Info) { Invoke(nameof(OnDeadTimerStart), Info); }
        public void OnChangedActiveCharacter(bool bActive) { Invoke(nameof(OnChangedActiveCharacter), bActive); }
        public void OnChangeChangeImportance(EPalCharacterImportanceType Next) { Invoke(nameof(OnChangeChangeImportance), Next); }
        public void NotifyTalkStart(PalPlayerCharacter TalkPlayer) { Invoke(nameof(NotifyTalkStart), TalkPlayer); }
        public void NotifyTalkEnd(PalPlayerCharacter TalkPlayer) { Invoke(nameof(NotifyTalkEnd), TalkPlayer); }
        public void MoveToLocation_ErrorSupportMove(Vector GoalLocation) { Invoke(nameof(MoveToLocation_ErrorSupportMove), GoalLocation); }
        public void MoveToDirectly(Vector GoalLocation) { Invoke(nameof(MoveToDirectly), GoalLocation); }
        public bool IsOnNavMesh_TargetLocation(Vector TargetLocation) { return Invoke<bool>(nameof(IsOnNavMesh_TargetLocation), TargetLocation); }
        public bool IsOnNavMesh() { return Invoke<bool>(nameof(IsOnNavMesh)); }
        public bool IsLeader() { return Invoke<bool>(nameof(IsLeader)); }
        public bool IsExistPathForLocation_ForBP_HeightRangeCheck(Vector Location, float AcceptanceRadius, float UpOffset, float DownOffset, Vector OutGoalLocation) { return Invoke<bool>(nameof(IsExistPathForLocation_ForBP_HeightRangeCheck), Location, AcceptanceRadius, UpOffset, DownOffset, OutGoalLocation); }
        public bool IsExistPathForLocation_ForBP(Vector Location, float AcceptanceRadius) { return Invoke<bool>(nameof(IsExistPathForLocation_ForBP), Location, AcceptanceRadius); }
        public bool IsActiveAI() { return Invoke<bool>(nameof(IsActiveAI)); }
        public PalCharacter GetSquadLeader() { return Invoke<PalCharacter>(nameof(GetSquadLeader)); }
        public PalSquad GetSquad() { return Invoke<PalSquad>(nameof(GetSquad)); }
        public PalAIBlackboardBase GetMyPalBlackboard() { return Invoke<PalAIBlackboardBase>(nameof(GetMyPalBlackboard)); }
        public PalAIBlackboardBase GetLeaderPalBlackboard() { return Invoke<PalAIBlackboardBase>(nameof(GetLeaderPalBlackboard)); }
        public bool GetIsSquadBehaviour() { return Invoke<bool>(nameof(GetIsSquadBehaviour)); }
        public bool GetIsnotSleepWildLife() { return Invoke<bool>(nameof(GetIsnotSleepWildLife)); }
        public PalHate GetHateSystem() { return Invoke<PalHate>(nameof(GetHateSystem)); }
        public PalAIActionComponent GetAIActionComponent() { return Invoke<PalAIActionComponent>(nameof(GetAIActionComponent)); }
        public bool FindReachablePathLocation(Array<Vector> RequestLocationArray, Vector OutGoalLocation) { return Invoke<bool>(nameof(FindReachablePathLocation), RequestLocationArray, OutGoalLocation); }
        public bool FindNearestNavmeshPointFromSelf(Vector OutLocation) { return Invoke<bool>(nameof(FindNearestNavmeshPointFromSelf), OutLocation); }
        public void DeleteSelfDeadBody() { Invoke(nameof(DeleteSelfDeadBody)); }
        public void CreatePalBlackboard() { Invoke(nameof(CreatePalBlackboard)); }
        public Actor CopyTargetFromOtherAI(Actor FromAcotr) { return Invoke<Actor>(nameof(CopyTargetFromOtherAI), FromAcotr); }
        public void AddTargetPlayer_ForEnemy(Actor PlayerOrPal) { Invoke(nameof(AddTargetPlayer_ForEnemy), PlayerOrPal); }
        public void AddTargetNPC(Actor NPC) { Invoke(nameof(AddTargetNPC), NPC); }
    }
    public class PalAIControllerBaseCampStatus : Object
    {
        public PalAIControllerBaseCampStatus(nint addr) : base(addr) { }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
        public PalBaseCampModel GetBaseCamp() { return Invoke<PalBaseCampModel>(nameof(GetBaseCamp)); }
    }
    public class PalAIControllerWorkerModule : Object
    {
        public PalAIControllerWorkerModule(nint addr) : base(addr) { }
    }
    public class PalAIControllerWorkerModuleNormal : PalAIControllerWorkerModule
    {
        public PalAIControllerWorkerModuleNormal(nint addr) : base(addr) { }
    }
    public class PalAIControllerWorkerModuleBaseCamp : PalAIControllerWorkerModule
    {
        public PalAIControllerWorkerModuleBaseCamp(nint addr) : base(addr) { }
    }
    public class PalAIControllerWorkerInterface : Interface
    {
        public PalAIControllerWorkerInterface(nint addr) : base(addr) { }
        public Object GetWorkerModuleClass() { return Invoke<Object>(nameof(GetWorkerModuleClass)); }
    }
    public class PalAIDamageReactionComponent : ActorComponent
    {
        public PalAIDamageReactionComponent(nint addr) : base(addr) { }
        public void FunctionTest() { Invoke(nameof(FunctionTest)); }
    }
    public class PalAIResponsePreset : Object
    {
        public PalAIResponsePreset(nint addr) : base(addr) { }
        public EPalAIResponseType Discover_Player { get { return (EPalAIResponseType)this[nameof(Discover_Player)].GetValue<int>(); } set { this[nameof(Discover_Player)].SetValue<int>((int)value); } }
        public EPalAIResponseType Discover_Greater { get { return (EPalAIResponseType)this[nameof(Discover_Greater)].GetValue<int>(); } set { this[nameof(Discover_Greater)].SetValue<int>((int)value); } }
        public EPalAIResponseType Discover_Equal { get { return (EPalAIResponseType)this[nameof(Discover_Equal)].GetValue<int>(); } set { this[nameof(Discover_Equal)].SetValue<int>((int)value); } }
        public EPalAIResponseType Discover_Smaller { get { return (EPalAIResponseType)this[nameof(Discover_Smaller)].GetValue<int>(); } set { this[nameof(Discover_Smaller)].SetValue<int>((int)value); } }
        public EPalAIResponseType Damaged_Player { get { return (EPalAIResponseType)this[nameof(Damaged_Player)].GetValue<int>(); } set { this[nameof(Damaged_Player)].SetValue<int>((int)value); } }
        public EPalAIResponseType Damaged_Greater { get { return (EPalAIResponseType)this[nameof(Damaged_Greater)].GetValue<int>(); } set { this[nameof(Damaged_Greater)].SetValue<int>((int)value); } }
        public EPalAIResponseType Damaged_Equal { get { return (EPalAIResponseType)this[nameof(Damaged_Equal)].GetValue<int>(); } set { this[nameof(Damaged_Equal)].SetValue<int>((int)value); } }
        public EPalAIResponseType Damaged_Smaller { get { return (EPalAIResponseType)this[nameof(Damaged_Smaller)].GetValue<int>(); } set { this[nameof(Damaged_Smaller)].SetValue<int>((int)value); } }
    }
    public class PalAISensorComponent : ActorComponent
    {
        public PalAISensorComponent(nint addr) : base(addr) { }
        public Actor SelfPawn { get { return this[nameof(SelfPawn)].As<Actor>(); } set { this["SelfPawn"] = value; } }
        public float SightAngleThreshold { get { return this[nameof(SightAngleThreshold)].GetValue<float>(); } set { this[nameof(SightAngleThreshold)].SetValue<float>(value); } }
        public float SightDistance { get { return this[nameof(SightDistance)].GetValue<float>(); } set { this[nameof(SightDistance)].SetValue<float>(value); } }
        public float HearingRate { get { return this[nameof(HearingRate)].GetValue<float>(); } set { this[nameof(HearingRate)].SetValue<float>(value); } }
        public bool HumanAndNoneWeapon { get { return this[nameof(HumanAndNoneWeapon)].Flag; } set { this[nameof(HumanAndNoneWeapon)].Flag = value; } }
        public bool IsIgnoreSoundReaction { get { return this[nameof(IsIgnoreSoundReaction)].Flag; } set { this[nameof(IsIgnoreSoundReaction)].Flag = value; } }
        public float RecentMaxSoundLevel { get { return this[nameof(RecentMaxSoundLevel)].GetValue<float>(); } set { this[nameof(RecentMaxSoundLevel)].SetValue<float>(value); } }
        public int ResponsedMaxBiologicalGrade { get { return this[nameof(ResponsedMaxBiologicalGrade)].GetValue<int>(); } set { this[nameof(ResponsedMaxBiologicalGrade)].SetValue<int>(value); } }
        public PalAIResponsePreset AIResponsePreset { get { return this[nameof(AIResponsePreset)].As<PalAIResponsePreset>(); } set { this["AIResponsePreset"] = value; } }
        public PalAISightResponse AISightResponse { get { return this[nameof(AISightResponse)].As<PalAISightResponse>(); } set { this["AISightResponse"] = value; } }
        public FlagContainer DisableSightFlag { get { return this[nameof(DisableSightFlag)].As<FlagContainer>(); } set { this["DisableSightFlag"] = value; } }
        public Object OnFReceiveSoundDelegate { get { return this[nameof(OnFReceiveSoundDelegate)]; } set { this[nameof(OnFReceiveSoundDelegate)] = value; } }
        public void SightCheckAllPlayer(Array<PalCharacter> InSightPlayers, float RangeRate) { Invoke(nameof(SightCheckAllPlayer), InSightPlayers, RangeRate); }
        public void SightCheckAllEdibleDeadNPC(Array<PalCharacter> InSightCharacters) { Invoke(nameof(SightCheckAllEdibleDeadNPC), InSightCharacters); }
        public void SightCheckAllAliveNPC(Array<PalCharacter> InSightCharacters) { Invoke(nameof(SightCheckAllAliveNPC), InSightCharacters); }
        public void Setup() { Invoke(nameof(Setup)); }
        public void SetDisableSightFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableSightFlag), flagName, isDisable); }
        public void SetDebugAIResponse(Object PresetClass) { Invoke(nameof(SetDebugAIResponse), PresetClass); }
        public EPalAIResponseType SelectResponseBySenses(EPalAIResponseType CurrentBehavior, Array<PalCharacter> FindCharacters, bool IsDamaged, PalCharacter OutTargetCharacter) { return Invoke<EPalAIResponseType>(nameof(SelectResponseBySenses), CurrentBehavior, FindCharacters, IsDamaged, OutTargetCharacter); }
        public void ResetResponsedMaxBiologicalGrade() { Invoke(nameof(ResetResponsedMaxBiologicalGrade)); }
        public void ReceiveSoundDelegate__DelegateSignature(Vector EmitLocation) { Invoke(nameof(ReceiveSoundDelegate__DelegateSignature), EmitLocation); }
        public void ReceiveSound(int SoundRadius, Vector EmitLocation, Actor Emitter) { Invoke(nameof(ReceiveSound), SoundRadius, EmitLocation, Emitter); }
        public void OnResponseSpecialLookat() { Invoke(nameof(OnResponseSpecialLookat)); }
        public PalCharacter MaximumStrengthEnemy(Array<PalCharacter> FindCharacters, EPalBiologicalGradeComparedResult Result) { return Invoke<PalCharacter>(nameof(MaximumStrengthEnemy), FindCharacters, Result); }
        public bool IsInSightKillerAndDeadBody(Actor Killer, Actor DeadBody) { return Invoke<bool>(nameof(IsInSightKillerAndDeadBody), Killer, DeadBody); }
        public void EnableHearing() { Invoke(nameof(EnableHearing)); }
        public void DisableHearing() { Invoke(nameof(DisableHearing)); }
        public void DeadAutoRemoveDelegate(PalDeadInfo DeadInfo) { Invoke(nameof(DeadAutoRemoveDelegate), DeadInfo); }
    }
    public class PalAISightResponsePreset : Object
    {
        public PalAISightResponsePreset(nint addr) : base(addr) { }
        public Object AIActionMap { get { return this[nameof(AIActionMap)]; } set { this[nameof(AIActionMap)] = value; } }
        public Object AimedByPlayerDelegate { get { return this[nameof(AimedByPlayerDelegate)]; } set { this[nameof(AimedByPlayerDelegate)] = value; } }
        public Object DelegateMap { get { return this[nameof(DelegateMap)]; } set { this[nameof(DelegateMap)] = value; } }
        public void FindDelegate__DelegateSignature(PalCharacter SelfCharacter, PalCharacter FoundCharacter) { Invoke(nameof(FindDelegate__DelegateSignature), SelfCharacter, FoundCharacter); }
        public void BlueprintDelegateSetup() { Invoke(nameof(BlueprintDelegateSetup)); }
    }
    public class PalAISightResponseTransitionableInterface : Interface
    {
        public PalAISightResponseTransitionableInterface(nint addr) : base(addr) { }
        public void GetTransitionableJudgementType(Array<EPalAISightJudgementType> JudgeTypeList) { Invoke(nameof(GetTransitionableJudgementType), JudgeTypeList); }
    }
    public class PalAISightResponse : Object
    {
        public PalAISightResponse(nint addr) : base(addr) { }
        public PalAISightResponsePreset SightResponsePreset { get { return this[nameof(SightResponsePreset)].As<PalAISightResponsePreset>(); } set { this["SightResponsePreset"] = value; } }
    }
    public class PalAkComponent : AkComponent
    {
        public PalAkComponent(nint addr) : base(addr) { }
        public bool PersistAcrossLevelTransition { get { return this[nameof(PersistAcrossLevelTransition)].Flag; } set { this[nameof(PersistAcrossLevelTransition)].Flag = value; } }
    }
    public class PalAmbientSoundAreaBase : Actor
    {
        public PalAmbientSoundAreaBase(nint addr) : base(addr) { }
        public int AmbientPriority { get { return this[nameof(AmbientPriority)].GetValue<int>(); } set { this[nameof(AmbientPriority)].SetValue<int>(value); } }
        public Array<AkAudioEvent> DayAmbientEvents { get { return new Array<AkAudioEvent>(this[nameof(DayAmbientEvents)].Address); } }
        public Array<AkAudioEvent> NightAmbientEvents { get { return new Array<AkAudioEvent>(this[nameof(NightAmbientEvents)].Address); } }
        public bool bIsOverlappedLocalPlayer { get { return this[nameof(bIsOverlappedLocalPlayer)].Flag; } set { this[nameof(bIsOverlappedLocalPlayer)].Flag = value; } }
        public void OnEndOverlap(PrimitiveComponent OverlappedComponent, PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnEndOverlap), OverlappedComponent, PlayerCharacter); }
        public void OnBeginOverlap(PrimitiveComponent OverlappedComponent, PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnBeginOverlap), OverlappedComponent, PlayerCharacter); }
        public PrimitiveComponent GetAreaCollision() { return Invoke<PrimitiveComponent>(nameof(GetAreaCollision)); }
        public PalAmbientSoundAreaData GetAmbientSoundAreaData() { return Invoke<PalAmbientSoundAreaData>(nameof(GetAmbientSoundAreaData)); }
    }
    public class PalAmbientSoundLineBase : Actor
    {
        public PalAmbientSoundLineBase(nint addr) : base(addr) { }
        public AkComponent AkComponent { get { return this[nameof(AkComponent)].As<AkComponent>(); } set { this["AkComponent"] = value; } }
        public BoxComponent ActivateTrigger { get { return this[nameof(ActivateTrigger)].As<BoxComponent>(); } set { this["ActivateTrigger"] = value; } }
        public PalAmbientSoundLineObject AmbinetSoundLineObject { get { return this[nameof(AmbinetSoundLineObject)].As<PalAmbientSoundLineObject>(); } set { this["AmbinetSoundLineObject"] = value; } }
    }
    public class PalAmbientSoundLineComponent : BoxComponent
    {
        public PalAmbientSoundLineComponent(nint addr) : base(addr) { }
        public AkAudioEvent AmbientEvent { get { return this[nameof(AmbientEvent)].As<AkAudioEvent>(); } set { this["AmbientEvent"] = value; } }
        public bool bIsEnableAmbientSound { get { return this[nameof(bIsEnableAmbientSound)].Flag; } set { this[nameof(bIsEnableAmbientSound)].Flag = value; } }
        public PalAmbientSoundLineObject AmbinetSoundLineObject { get { return this[nameof(AmbinetSoundLineObject)].As<PalAmbientSoundLineObject>(); } set { this["AmbinetSoundLineObject"] = value; } }
        public AkComponent AkComponent { get { return this[nameof(AkComponent)].As<AkComponent>(); } set { this["AkComponent"] = value; } }
    }
    public class PalAmbientSoundLineObject : Object
    {
        public PalAmbientSoundLineObject(nint addr) : base(addr) { }
        public Array<SplineComponent> SplineComponents { get { return new Array<SplineComponent>(this[nameof(SplineComponents)].Address); } }
        public BoxComponent ActivateTrigger { get { return this[nameof(ActivateTrigger)].As<BoxComponent>(); } set { this["ActivateTrigger"] = value; } }
        public AkComponent AkComponent { get { return this[nameof(AkComponent)].As<AkComponent>(); } set { this["AkComponent"] = value; } }
        public void OnActivateTriggerOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnActivateTriggerOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
        public void OnActivateTriggerLineOverlapEnd(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnActivateTriggerLineOverlapEnd), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex); }
    }
    public class PalAnimInstance : AnimInstance
    {
        public PalAnimInstance(nint addr) : base(addr) { }
        public Object OnMontageNotifyBeginDelegate { get { return this[nameof(OnMontageNotifyBeginDelegate)]; } set { this[nameof(OnMontageNotifyBeginDelegate)] = value; } }
        public Object OnMontageNotifyEndDelegate { get { return this[nameof(OnMontageNotifyEndDelegate)]; } set { this[nameof(OnMontageNotifyEndDelegate)] = value; } }
        public Array<Object> ImplementationClassList { get { return new Array<Object>(this[nameof(ImplementationClassList)].Address); } }
        public GeneralAnimationParameter GeneralAnimationParameter { get { return this[nameof(GeneralAnimationParameter)].As<GeneralAnimationParameter>(); } set { this["GeneralAnimationParameter"] = value; } }
        public bool IsRotateYawInterpolation { get { return this[nameof(IsRotateYawInterpolation)].Flag; } set { this[nameof(IsRotateYawInterpolation)].Flag = value; } }
        public float RotateYawInterpolation_Acceleration { get { return this[nameof(RotateYawInterpolation_Acceleration)].GetValue<float>(); } set { this[nameof(RotateYawInterpolation_Acceleration)].SetValue<float>(value); } }
        public Object BoneListFullBody { get { return this[nameof(BoneListFullBody)]; } set { this[nameof(BoneListFullBody)] = value; } }
        public Object BoneListOnlySpines { get { return this[nameof(BoneListOnlySpines)]; } set { this[nameof(BoneListOnlySpines)] = value; } }
        public Array<ReserveMontage> ReservedMontageList { get { return new Array<ReserveMontage>(this[nameof(ReservedMontageList)].Address); } }
        public FloatContainer AdditiveAnimationRate { get { return this[nameof(AdditiveAnimationRate)].As<FloatContainer>(); } set { this["AdditiveAnimationRate"] = value; } }
        public FlagContainer DisableUpperOverrideFlag { get { return this[nameof(DisableUpperOverrideFlag)].As<FlagContainer>(); } set { this["DisableUpperOverrideFlag"] = value; } }
        public void SetUpperOverrideDisableFlag(Object flagName, bool isDisable) { Invoke(nameof(SetUpperOverrideDisableFlag), flagName, isDisable); }
        public void SetAdditiveAnimationRate(Object flagName, float Rate) { Invoke(nameof(SetAdditiveAnimationRate), flagName, Rate); }
        public void OnNotifyEndReceived(Object NotifyName, BranchingPointNotifyPayload BranchingPointNotifyPayload) { Invoke(nameof(OnNotifyEndReceived), NotifyName, BranchingPointNotifyPayload); }
        public void OnNotifyBeginReceived(Object NotifyName, BranchingPointNotifyPayload BranchingPointNotifyPayload) { Invoke(nameof(OnNotifyBeginReceived), NotifyName, BranchingPointNotifyPayload); }
        public void OnMontageNotifyEnd__DelegateSignature(AnimMontage Montage, Object NotifyName) { Invoke(nameof(OnMontageNotifyEnd__DelegateSignature), Montage, NotifyName); }
        public void OnMontageNotifyBegin__DelegateSignature(AnimMontage Montage, Object NotifyName) { Invoke(nameof(OnMontageNotifyBegin__DelegateSignature), Montage, NotifyName); }
        public void OnMontageEndedCallback(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnMontageEndedCallback), Montage, bInterrupted); }
        public void Montage_PlayList(Array<ReserveMontage> montageList) { Invoke(nameof(Montage_PlayList), montageList); }
        public Object GetNearBoneInSpines(Vector fromPos) { return Invoke<Object>(nameof(GetNearBoneInSpines), fromPos); }
        public Object GetNearBoneInFullBody(Vector fromPos) { return Invoke<Object>(nameof(GetNearBoneInFullBody), fromPos); }
        public float GetCurrentMontagePlayTimeToEnd() { return Invoke<float>(nameof(GetCurrentMontagePlayTimeToEnd)); }
        public Transform GetBoneTransform(Object BoneName) { return Invoke<Transform>(nameof(GetBoneTransform), BoneName); }
        public Quat GetBoneRotationComponentSpace(Object BoneName) { return Invoke<Quat>(nameof(GetBoneRotationComponentSpace), BoneName); }
        public Quat GetBoneRotation(Object BoneName) { return Invoke<Quat>(nameof(GetBoneRotation), BoneName); }
        public Vector GetBonePosition(Object BoneName) { return Invoke<Vector>(nameof(GetBonePosition), BoneName); }
        public PalBoneInfo GetBoneInfo(Object BoneName) { return Invoke<PalBoneInfo>(nameof(GetBoneInfo), BoneName); }
        public void CalcLength(Object Target, Object nextBone, float tipLength) { Invoke(nameof(CalcLength), Target, nextBone, tipLength); }
        public void BodyInstance_SetSimulate(Object BoneName, bool SimulateActive) { Invoke(nameof(BodyInstance_SetSimulate), BoneName, SimulateActive); }
        public void AddSpinesListFromBoneList(Object BoneName) { Invoke(nameof(AddSpinesListFromBoneList), BoneName); }
        public void AddList(Object BoneName) { Invoke(nameof(AddList), BoneName); }
    }
    public class PalAnimNotifyDynamicParameterBase : Object
    {
        public PalAnimNotifyDynamicParameterBase(nint addr) : base(addr) { }
    }
    public class PalAnimNotifyDynamicParameterAttackCollision : PalAnimNotifyDynamicParameterBase
    {
        public PalAnimNotifyDynamicParameterAttackCollision(nint addr) : base(addr) { }
        public PalHitFilter AttackFilter { get { return this[nameof(AttackFilter)].As<PalHitFilter>(); } set { this["AttackFilter"] = value; } }
        public Array<ShapeComponent> TransientShapeComponents { get { return new Array<ShapeComponent>(this[nameof(TransientShapeComponents)].Address); } }
        public float HitStopCount { get { return this[nameof(HitStopCount)].GetValue<float>(); } set { this[nameof(HitStopCount)].SetValue<float>(value); } }
        public SkeletalMeshComponent MyMesh { get { return this[nameof(MyMesh)].As<SkeletalMeshComponent>(); } set { this["MyMesh"] = value; } }
        public Actor MyActor { get { return this[nameof(MyActor)].As<Actor>(); } set { this["MyActor"] = value; } }
    }
    public class PalAnimNotifyDynamicParameterAvoidTime : PalAnimNotifyDynamicParameterBase
    {
        public PalAnimNotifyDynamicParameterAvoidTime(nint addr) : base(addr) { }
        public Object AttackResponseMap { get { return this[nameof(AttackResponseMap)]; } set { this[nameof(AttackResponseMap)] = value; } }
    }
    public class PalAnimNotifyParameterComponent : ActorComponent
    {
        public PalAnimNotifyParameterComponent(nint addr) : base(addr) { }
        public Object DynamicParameterMap { get { return this[nameof(DynamicParameterMap)]; } set { this[nameof(DynamicParameterMap)] = value; } }
    }
    public class PalAnimNotifyState_AttackCollision : AnimNotifyState
    {
        public PalAnimNotifyState_AttackCollision(nint addr) : base(addr) { }
        public Object attachBoneName { get { return this[nameof(attachBoneName)]; } set { this[nameof(attachBoneName)] = value; } }
        public bool bIsEnableHitStop { get { return this[nameof(bIsEnableHitStop)].Flag; } set { this[nameof(bIsEnableHitStop)].Flag = value; } }
        public float OverrideHitStopTime { get { return this[nameof(OverrideHitStopTime)].GetValue<float>(); } set { this[nameof(OverrideHitStopTime)].SetValue<float>(value); } }
        public PalHitFilter AttackFilter { get { return this[nameof(AttackFilter)].As<PalHitFilter>(); } set { this["AttackFilter"] = value; } }
        public ShapeComponent ShapeComponent { get { return this[nameof(ShapeComponent)].As<ShapeComponent>(); } set { this["ShapeComponent"] = value; } }
        public Array<ShapeComponent> ShapeComponents { get { return new Array<ShapeComponent>(this[nameof(ShapeComponents)].Address); } }
        public void OnHit(PrimitiveComponent MyHitComponent, Actor HitActor, PrimitiveComponent HitComponent, Array<int> FoliageIndex, Vector HitLocation, int HitCount) { Invoke(nameof(OnHit), MyHitComponent, HitActor, HitComponent, FoliageIndex, HitLocation, HitCount); }
    }
    public class PalAnimNotifyState_AvoidTime : AnimNotifyState
    {
        public PalAnimNotifyState_AvoidTime(nint addr) : base(addr) { }
        public Object AttackResponseMap { get { return this[nameof(AttackResponseMap)]; } set { this[nameof(AttackResponseMap)] = value; } }
        public Object BulletResponseMap { get { return this[nameof(BulletResponseMap)]; } set { this[nameof(BulletResponseMap)] = value; } }
    }
    public class PalAnimNotifyState_Effect : AnimNotifyState_TimedNiagaraEffect
    {
        public PalAnimNotifyState_Effect(nint addr) : base(addr) { }
        public Object UserParameterMap { get { return this[nameof(UserParameterMap)]; } set { this[nameof(UserParameterMap)] = value; } }
    }
    public class PalAnimNotifyState_FacialEye : AnimNotifyState
    {
        public PalAnimNotifyState_FacialEye(nint addr) : base(addr) { }
        public EPalFacialEyeType EyeType { get { return (EPalFacialEyeType)this[nameof(EyeType)].GetValue<int>(); } set { this[nameof(EyeType)].SetValue<int>((int)value); } }
        public bool AutoDefaultWhenEnd { get { return this[nameof(AutoDefaultWhenEnd)].Flag; } set { this[nameof(AutoDefaultWhenEnd)].Flag = value; } }
    }
    public class PalAnimNotifyState_FacialMouth : AnimNotifyState
    {
        public PalAnimNotifyState_FacialMouth(nint addr) : base(addr) { }
        public EPalFacialMouthType MouthType { get { return (EPalFacialMouthType)this[nameof(MouthType)].GetValue<int>(); } set { this[nameof(MouthType)].SetValue<int>((int)value); } }
        public bool AutoDefaultWhenEnd { get { return this[nameof(AutoDefaultWhenEnd)].Flag; } set { this[nameof(AutoDefaultWhenEnd)].Flag = value; } }
    }
    public class PalAnimNotifyState_FlyMeshHeight : AnimNotifyState
    {
        public PalAnimNotifyState_FlyMeshHeight(nint addr) : base(addr) { }
        public bool IsToLand { get { return this[nameof(IsToLand)].Flag; } set { this[nameof(IsToLand)].Flag = value; } }
    }
    public class PalAnimNotifyState_HidePalWeapon : AnimNotifyState
    {
        public PalAnimNotifyState_HidePalWeapon(nint addr) : base(addr) { }
    }
    public class PalAnimNotifyState_LookAtDisable : AnimNotifyState
    {
        public PalAnimNotifyState_LookAtDisable(nint addr) : base(addr) { }
    }
    public class PalAnimNotifyState_MovementControl : AnimNotifyState
    {
        public PalAnimNotifyState_MovementControl(nint addr) : base(addr) { }
        public float MovementSpeedRate { get { return this[nameof(MovementSpeedRate)].GetValue<float>(); } set { this[nameof(MovementSpeedRate)].SetValue<float>(value); } }
        public float AirControlXYRate { get { return this[nameof(AirControlXYRate)].GetValue<float>(); } set { this[nameof(AirControlXYRate)].SetValue<float>(value); } }
        public float YawRotatorRate { get { return this[nameof(YawRotatorRate)].GetValue<float>(); } set { this[nameof(YawRotatorRate)].SetValue<float>(value); } }
        public float GravityRate { get { return this[nameof(GravityRate)].GetValue<float>(); } set { this[nameof(GravityRate)].SetValue<float>(value); } }
        public float FixedGravityZ { get { return this[nameof(FixedGravityZ)].GetValue<float>(); } set { this[nameof(FixedGravityZ)].SetValue<float>(value); } }
        public float SlideAlpha { get { return this[nameof(SlideAlpha)].GetValue<float>(); } set { this[nameof(SlideAlpha)].SetValue<float>(value); } }
        public bool bIsDisableMovement { get { return this[nameof(bIsDisableMovement)].Flag; } set { this[nameof(bIsDisableMovement)].Flag = value; } }
        public bool bIsDisableJump { get { return this[nameof(bIsDisableJump)].Flag; } set { this[nameof(bIsDisableJump)].Flag = value; } }
    }
    public class PalAnimNotifyState_WeaponControl : AnimNotifyState
    {
        public PalAnimNotifyState_WeaponControl(nint addr) : base(addr) { }
        public bool bIsDisableShoot { get { return this[nameof(bIsDisableShoot)].Flag; } set { this[nameof(bIsDisableShoot)].Flag = value; } }
        public bool bIsDisableAim { get { return this[nameof(bIsDisableAim)].Flag; } set { this[nameof(bIsDisableAim)].Flag = value; } }
        public bool bIsDisableAttachLeftHand { get { return this[nameof(bIsDisableAttachLeftHand)].Flag; } set { this[nameof(bIsDisableAttachLeftHand)].Flag = value; } }
        public bool bIsDisableReload { get { return this[nameof(bIsDisableReload)].Flag; } set { this[nameof(bIsDisableReload)].Flag = value; } }
        public bool bIsDisableChangeWeapon { get { return this[nameof(bIsDisableChangeWeapon)].Flag; } set { this[nameof(bIsDisableChangeWeapon)].Flag = value; } }
        public EPalShooterFlagContainerPriority Priority { get { return (EPalShooterFlagContainerPriority)this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>((int)value); } }
    }
    public class PalAnimNotify_FacialEye : AnimNotify
    {
        public PalAnimNotify_FacialEye(nint addr) : base(addr) { }
        public EPalFacialEyeType EyeType { get { return (EPalFacialEyeType)this[nameof(EyeType)].GetValue<int>(); } set { this[nameof(EyeType)].SetValue<int>((int)value); } }
    }
    public class PalAnimNotify_FacialMouth : AnimNotify
    {
        public PalAnimNotify_FacialMouth(nint addr) : base(addr) { }
        public EPalFacialMouthType MouthType { get { return (EPalFacialMouthType)this[nameof(MouthType)].GetValue<int>(); } set { this[nameof(MouthType)].SetValue<int>((int)value); } }
    }
    public class PalAnimNotify_FootStep : AnimNotify
    {
        public PalAnimNotify_FootStep(nint addr) : base(addr) { }
        public Object DefaultEffectAssetClass { get { return this[nameof(DefaultEffectAssetClass)]; } set { this[nameof(DefaultEffectAssetClass)] = value; } }
        public PalFootStepEffectAssetBase EffectAssetCache { get { return this[nameof(EffectAssetCache)].As<PalFootStepEffectAssetBase>(); } set { this["EffectAssetCache"] = value; } }
        public void SpawnFootStepEffect(Object WorldObject, EPalLandingType LandingType, byte PhysicalSurface, Vector Location, Rotator Rotation, PalStaticCharacterParameterComponent StaticParam) { Invoke(nameof(SpawnFootStepEffect), WorldObject, LandingType, PhysicalSurface, Location, Rotation, StaticParam); }
        public void SpawnFootStepDecal(Actor Owner, byte PhysicalSurface, EPalFootType FootType, Vector Location, Vector CurrentNormal, float LifeSpan, float FadeTime) { Invoke(nameof(SpawnFootStepDecal), Owner, PhysicalSurface, FootType, Location, CurrentNormal, LifeSpan, FadeTime); }
        public bool GetFloorPosition(Actor Owner, Transform FootTransform, HitResult HitResult) { return Invoke<bool>(nameof(GetFloorPosition), Owner, FootTransform, HitResult); }
    }
    public class PalAnimNotify_PlayNiagaraEffect : AnimNotify_PlayNiagaraEffect
    {
        public PalAnimNotify_PlayNiagaraEffect(nint addr) : base(addr) { }
        public Object UserParameterMap { get { return this[nameof(UserParameterMap)]; } set { this[nameof(UserParameterMap)] = value; } }
    }
    public class PalAnimNotify_RequestJump : AnimNotify
    {
        public PalAnimNotify_RequestJump(nint addr) : base(addr) { }
    }
    public class PalAnimNotify_RequestRideShakeAnimation : AnimNotify
    {
        public PalAnimNotify_RequestRideShakeAnimation(nint addr) : base(addr) { }
        public float ApplyRate { get { return this[nameof(ApplyRate)].GetValue<float>(); } set { this[nameof(ApplyRate)].SetValue<float>(value); } }
        public float PlaySpeedRate { get { return this[nameof(PlaySpeedRate)].GetValue<float>(); } set { this[nameof(PlaySpeedRate)].SetValue<float>(value); } }
        public bool bIsAdjustAnimationSpeed { get { return this[nameof(bIsAdjustAnimationSpeed)].Flag; } set { this[nameof(bIsAdjustAnimationSpeed)].Flag = value; } }
        public Object cacheCharacter { get { return this[nameof(cacheCharacter)]; } set { this[nameof(cacheCharacter)] = value; } }
        public Array<float> RateList { get { return new Array<float>(this[nameof(RateList)].Address); } }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnEndMotion(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnEndMotion), Montage, bInterrupted); }
    }
    public class PalAnimNotify_SendActionEvent : AnimNotify
    {
        public PalAnimNotify_SendActionEvent(nint addr) : base(addr) { }
        public EPalCurrentActionNotifyType NotifyType { get { return (EPalCurrentActionNotifyType)this[nameof(NotifyType)].GetValue<int>(); } set { this[nameof(NotifyType)].SetValue<int>((int)value); } }
    }
    public class PalAnimNotify_SpawnActor : AnimNotify
    {
        public PalAnimNotify_SpawnActor(nint addr) : base(addr) { }
        public Object SpawnActorClass { get { return this[nameof(SpawnActorClass)]; } set { this[nameof(SpawnActorClass)] = value; } }
        public Vector SpawnLocationOffset { get { return this[nameof(SpawnLocationOffset)].As<Vector>(); } set { this["SpawnLocationOffset"] = value; } }
        public Rotator SpawnRotationOffset { get { return this[nameof(SpawnRotationOffset)].As<Rotator>(); } set { this["SpawnRotationOffset"] = value; } }
    }
    public class PalAnimNotify_StaminaMeleeAttack : AnimNotify
    {
        public PalAnimNotify_StaminaMeleeAttack(nint addr) : base(addr) { }
    }
    public class PalAnimNotify_WeaponNotify : AnimNotify
    {
        public PalAnimNotify_WeaponNotify(nint addr) : base(addr) { }
        public EWeaponNotifyType WeaponNotifyType { get { return (EWeaponNotifyType)this[nameof(WeaponNotifyType)].GetValue<int>(); } set { this[nameof(WeaponNotifyType)].SetValue<int>((int)value); } }
    }
    public class PalAssetStreamableManager : Object
    {
        public PalAssetStreamableManager(nint addr) : base(addr) { }
    }
    public class PalHitFilter : Object
    {
        public PalHitFilter(nint addr) : base(addr) { }
        public int MaxHitNum { get { return this[nameof(MaxHitNum)].GetValue<int>(); } set { this[nameof(MaxHitNum)].SetValue<int>(value); } }
        public float HitInterval { get { return this[nameof(HitInterval)].GetValue<float>(); } set { this[nameof(HitInterval)].SetValue<float>(value); } }
        public Object HitLocationCalculator { get { return this[nameof(HitLocationCalculator)]; } set { this[nameof(HitLocationCalculator)] = value; } }
        public bool bIsIntersectionCollision { get { return this[nameof(bIsIntersectionCollision)].Flag; } set { this[nameof(bIsIntersectionCollision)].Flag = value; } }
        public int IntersectionNum { get { return this[nameof(IntersectionNum)].GetValue<int>(); } set { this[nameof(IntersectionNum)].SetValue<int>(value); } }
        public Object OnHitDelegate { get { return this[nameof(OnHitDelegate)]; } set { this[nameof(OnHitDelegate)] = value; } }
        public Object OnOverlapEndDelegate { get { return this[nameof(OnOverlapEndDelegate)]; } set { this[nameof(OnOverlapEndDelegate)] = value; } }
        public void UnbindPrimitiveComponent(PrimitiveComponent Component) { Invoke(nameof(UnbindPrimitiveComponent), Component); }
        public void SetIntersectionNum(int Num) { Invoke(nameof(SetIntersectionNum), Num); }
        public void SetAttacker(Actor Attacker) { Invoke(nameof(SetAttacker), Attacker); }
        public void ResetFilter() { Invoke(nameof(ResetFilter)); }
        public void OverlapEndDelegate__DelegateSignature(PrimitiveComponent MyHitComponent, Actor OtherHitActor, PrimitiveComponent OtherHitComponent) { Invoke(nameof(OverlapEndDelegate__DelegateSignature), MyHitComponent, OtherHitActor, OtherHitComponent); }
        public void OnHitDelegate__DelegateSignature(PrimitiveComponent MyHitComponent, Actor OtherHitActor, PrimitiveComponent OtherHitComponent, Array<int> FoliageIndex, Vector HitLocation, int HitCount) { Invoke(nameof(OnHitDelegate__DelegateSignature), MyHitComponent, OtherHitActor, OtherHitComponent, FoliageIndex, HitLocation, HitCount); }
        public void OnEndOverlap(PrimitiveComponent OverlappedComp, Actor Other, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnEndOverlap), OverlappedComp, Other, OtherComp, OtherBodyIndex); }
        public void OnBeginOverlap(PrimitiveComponent HitComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult Hit) { Invoke(nameof(OnBeginOverlap), HitComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, Hit); }
        public void BindPrimitiveComponent(PrimitiveComponent Component) { Invoke(nameof(BindPrimitiveComponent), Component); }
    }
    public class PalAttackFilter : PalHitFilter
    {
        public PalAttackFilter(nint addr) : base(addr) { }
        public Object OnAttackDelegate { get { return this[nameof(OnAttackDelegate)]; } set { this[nameof(OnAttackDelegate)] = value; } }
        public EPalWazaID Waza { get { return (EPalWazaID)this[nameof(Waza)].GetValue<int>(); } set { this[nameof(Waza)].SetValue<int>((int)value); } }
        public EPalBlowVelocityOwner VelocityOwner { get { return (EPalBlowVelocityOwner)this[nameof(VelocityOwner)].GetValue<int>(); } set { this[nameof(VelocityOwner)].SetValue<int>((int)value); } }
        public Vector NativeBlowVelocity { get { return this[nameof(NativeBlowVelocity)].As<Vector>(); } set { this["NativeBlowVelocity"] = value; } }
        public float WazaPowerRate { get { return this[nameof(WazaPowerRate)].GetValue<float>(); } set { this[nameof(WazaPowerRate)].SetValue<float>(value); } }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
    }
    public class PalAudioSettingSystem : Object
    {
        public PalAudioSettingSystem(nint addr) : base(addr) { }
        public Object BusVolumeMap { get { return this[nameof(BusVolumeMap)]; } set { this[nameof(BusVolumeMap)] = value; } }
        public Object BussFadeMap { get { return this[nameof(BussFadeMap)]; } set { this[nameof(BussFadeMap)] = value; } }
        public void Tick_BP(float DeltaTime) { Invoke(nameof(Tick_BP), DeltaTime); }
        public void StartAudioFade(EPalAudioBus AudioBus, EPalAudioFadeType FadeType, bool bImmediately) { Invoke(nameof(StartAudioFade), AudioBus, FadeType, bImmediately); }
        public void SetAudioBusVolume(EPalAudioBus AudioBus, Object Key, float Volume) { Invoke(nameof(SetAudioBusVolume), AudioBus, Key, Volume); }
        public void SetAudioBusMute(EPalAudioBus AudioBus, bool IsMute) { Invoke(nameof(SetAudioBusMute), AudioBus, IsMute); }
        public Object PalAudioBusToString(EPalAudioBus AudioBus) { return Invoke<Object>(nameof(PalAudioBusToString), AudioBus); }
        public bool IsAudioBusMute(EPalAudioBus AudioBus) { return Invoke<bool>(nameof(IsAudioBusMute), AudioBus); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public float GetAudioBusVolume(EPalAudioBus AudioBus) { return Invoke<float>(nameof(GetAudioBusVolume), AudioBus); }
    }
    public class PalAudioUtility : BlueprintFunctionLibrary
    {
        public PalAudioUtility(nint addr) : base(addr) { }
        public void OnPlayerExitSpot(Object WorldContextObject, PalPlayerCharacter Player, PalSpotAreaBase SpotArea) { Invoke(nameof(OnPlayerExitSpot), WorldContextObject, Player, SpotArea); }
        public void OnPlayerExitBaseCamp(Object WorldContextObject, PalPlayerCharacter Player, PalBaseCampModel BaseCampModel) { Invoke(nameof(OnPlayerExitBaseCamp), WorldContextObject, Player, BaseCampModel); }
        public void OnPlayerExitAmbientArea(Object WorldContextObject, PalPlayerCharacter Player, PalAmbientSoundAreaBase SpotArea) { Invoke(nameof(OnPlayerExitAmbientArea), WorldContextObject, Player, SpotArea); }
        public void OnPlayerEnterSpot(Object WorldContextObject, PalPlayerCharacter Player, PalSpotAreaBase SpotArea) { Invoke(nameof(OnPlayerEnterSpot), WorldContextObject, Player, SpotArea); }
        public void OnPlayerEnterBaseCamp(Object WorldContextObject, PalPlayerCharacter Player, PalBaseCampModel BaseCampModel) { Invoke(nameof(OnPlayerEnterBaseCamp), WorldContextObject, Player, BaseCampModel); }
        public void OnPlayerEnterAmbientArea(Object WorldContextObject, PalPlayerCharacter Player, PalAmbientSoundAreaBase SpotArea) { Invoke(nameof(OnPlayerEnterAmbientArea), WorldContextObject, Player, SpotArea); }
    }
    public class PalAudioWorldSubsystem : PalWorldSubsystem
    {
        public PalAudioWorldSubsystem(nint addr) : base(addr) { }
        public int FadeDuration { get { return this[nameof(FadeDuration)].GetValue<int>(); } set { this[nameof(FadeDuration)].SetValue<int>(value); } }
        public PalSoundPlayer SoundPlayer { get { return this[nameof(SoundPlayer)].As<PalSoundPlayer>(); } set { this["SoundPlayer"] = value; } }
        public void Tick_BP(float DeltaTime) { Invoke(nameof(Tick_BP), DeltaTime); }
        public void StopSound() { Invoke(nameof(StopSound)); }
        public void SetSwitch(Object SwitchGroup, Object SwitchState) { Invoke(nameof(SetSwitch), SwitchGroup, SwitchState); }
        public void SetStateFlagByName(Object StateGroup, bool flg) { Invoke(nameof(SetStateFlagByName), StateGroup, flg); }
        public void SetStateFlagByEnum(EPalAudioStateGroup StateGroup, bool flg) { Invoke(nameof(SetStateFlagByEnum), StateGroup, flg); }
        public void SetStateByName(Object StateGroup, Object State) { Invoke(nameof(SetStateByName), StateGroup, State); }
        public void SetStateByEnum(EPalAudioStateGroup StateGroup, EPalAudioState State) { Invoke(nameof(SetStateByEnum), StateGroup, State); }
        public void SetSoundPlayerLocation(Vector Location) { Invoke(nameof(SetSoundPlayerLocation), Location); }
        public void SetRTPCValueByName(Object Name, float Value, float interpolSec) { Invoke(nameof(SetRTPCValueByName), Name, Value, interpolSec); }
        public void SetRTPCValueByEnum(EPalAudioRTPC RTPC, float Value, float interpolSec) { Invoke(nameof(SetRTPCValueByEnum), RTPC, Value, interpolSec); }
        public void SetOutputBusVolume(float Volume) { Invoke(nameof(SetOutputBusVolume), Volume); }
        public void PostTriggerByString(Object Trigger) { Invoke(nameof(PostTriggerByString), Trigger); }
        public void PostTriggerByEnum(EPalAudioTrigger Trigger) { Invoke(nameof(PostTriggerByEnum), Trigger); }
        public int PlaySound(AkAudioEvent AudioEvent, PalSoundOptions Options) { return Invoke<int>(nameof(PlaySound), AudioEvent, Options); }
        public void OnSpawnedLocalPlayerCharacter(Pawn Pawn, Controller Controller) { Invoke(nameof(OnSpawnedLocalPlayerCharacter), Pawn, Controller); }
        public void OnPlayerExitSpotArea(PalPlayerCharacter Player, PalSpotAreaBase SpotArea) { Invoke(nameof(OnPlayerExitSpotArea), Player, SpotArea); }
        public void OnPlayerExitBaseCamp(PalPlayerCharacter Player, PalBaseCampModel BaseCampModel) { Invoke(nameof(OnPlayerExitBaseCamp), Player, BaseCampModel); }
        public void OnPlayerExitAmbientArea(PalPlayerCharacter Player, PalAmbientSoundAreaBase AmbientSoundArea) { Invoke(nameof(OnPlayerExitAmbientArea), Player, AmbientSoundArea); }
        public void OnPlayerEnterSpotArea(PalPlayerCharacter Player, PalSpotAreaBase SpotArea) { Invoke(nameof(OnPlayerEnterSpotArea), Player, SpotArea); }
        public void OnPlayerEnterBaseCamp(PalPlayerCharacter Player, PalBaseCampModel BaseCampModel) { Invoke(nameof(OnPlayerEnterBaseCamp), Player, BaseCampModel); }
        public void OnPlayerEnterAmbientArea(PalPlayerCharacter Player, PalAmbientSoundAreaBase AmbientSoundArea) { Invoke(nameof(OnPlayerEnterAmbientArea), Player, AmbientSoundArea); }
        public void OnEndOfEvent() { Invoke(nameof(OnEndOfEvent)); }
        public void OnAkPostEventCallback(EAkCallbackType CallbackType, AkCallbackInfo CallbackInfo) { Invoke(nameof(OnAkPostEventCallback), CallbackType, CallbackInfo); }
        public void InitializeSystem(Actor AkOwnerActor) { Invoke(nameof(InitializeSystem), AkOwnerActor); }
        public void GetSoundPlayerLocation(Vector OutLocation) { Invoke(nameof(GetSoundPlayerLocation), OutLocation); }
        public void FadeOutByPlayingId(int PlayingID) { Invoke(nameof(FadeOutByPlayingId), PlayingID); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
    }
    public class PalAutoDestroyActorHolder : Object
    {
        public PalAutoDestroyActorHolder(nint addr) : base(addr) { }
        public Array<Object> HoldActors { get { return new Array<Object>(this[nameof(HoldActors)].Address); } }
        public void AddActor(Actor TargetActor) { Invoke(nameof(AddActor), TargetActor); }
    }
    public class PalBackWeaponBase : Actor
    {
        public PalBackWeaponBase(nint addr) : base(addr) { }
        public bool InFirstOrSecondSlot { get { return this[nameof(InFirstOrSecondSlot)].Flag; } set { this[nameof(InFirstOrSecondSlot)].Flag = value; } }
        public bool IsEquipHand { get { return this[nameof(IsEquipHand)].Flag; } set { this[nameof(IsEquipHand)].Flag = value; } }
        public FlagContainer HiddenBackWeapon { get { return this[nameof(HiddenBackWeapon)].As<FlagContainer>(); } set { this["HiddenBackWeapon"] = value; } }
    }
    public class PalBaseCampAssignableObjectInterface : Interface
    {
        public PalBaseCampAssignableObjectInterface(nint addr) : base(addr) { }
        public Object ToMapObjectModel() { return Invoke<Object>(nameof(ToMapObjectModel)); }
        public EPalBaseCampAssignType GetAssignType() { return Invoke<EPalBaseCampAssignType>(nameof(GetAssignType)); }
    }
    public class PalBaseCampWorkerDirectionBattleTypeUtility : BlueprintFunctionLibrary
    {
        public PalBaseCampWorkerDirectionBattleTypeUtility(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleTransportItemRequirerInterface : Interface
    {
        public PalBaseCampModuleTransportItemRequirerInterface(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleTransportItemDepotInterface : Interface
    {
        public PalBaseCampModuleTransportItemDepotInterface(nint addr) : base(addr) { }
    }
    public class PalBaseCampEnemyObserver : Object
    {
        public PalBaseCampEnemyObserver(nint addr) : base(addr) { }
        public Object OnFirstAppearEnemyDelegate { get { return this[nameof(OnFirstAppearEnemyDelegate)]; } set { this[nameof(OnFirstAppearEnemyDelegate)] = value; } }
        public Object OnEmptyEnemyDelegate { get { return this[nameof(OnEmptyEnemyDelegate)]; } set { this[nameof(OnEmptyEnemyDelegate)] = value; } }
        public Object OnPassedTimeAfterEmptyEnemyDelegate { get { return this[nameof(OnPassedTimeAfterEmptyEnemyDelegate)]; } set { this[nameof(OnPassedTimeAfterEmptyEnemyDelegate)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public Array<PalIndividualCharacterHandle> EnemyList { get { return new Array<PalIndividualCharacterHandle>(this[nameof(EnemyList)].Address); } }
        public float CampAreaRange { get { return this[nameof(CampAreaRange)].GetValue<float>(); } set { this[nameof(CampAreaRange)].SetValue<float>(value); } }
        public Vector CampLocation { get { return this[nameof(CampLocation)].As<Vector>(); } set { this["CampLocation"] = value; } }
        public void OnEndPlayEnemy(Actor Actor, byte EndPlayReason) { Invoke(nameof(OnEndPlayEnemy), Actor, EndPlayReason); }
        public void OnDeadEnemy(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadEnemy), DeadInfo); }
        public bool IsBattleMode() { return Invoke<bool>(nameof(IsBattleMode)); }
        public void BaseCampEnemyDelegate__DelegateSignature() { Invoke(nameof(BaseCampEnemyDelegate__DelegateSignature)); }
    }
    public class PalBaseCampFunctionModuleBase : Object
    {
        public PalBaseCampFunctionModuleBase(nint addr) : base(addr) { }
    }
    public class PalBaseCampManager : PalWorldSubsystem
    {
        public PalBaseCampManager(nint addr) : base(addr) { }
        public Object WorkerEventClassDirectoryPath { get { return this[nameof(WorkerEventClassDirectoryPath)]; } set { this[nameof(WorkerEventClassDirectoryPath)] = value; } }
        public Object BaseCampAIControllerClass { get { return this[nameof(BaseCampAIControllerClass)]; } set { this[nameof(BaseCampAIControllerClass)] = value; } }
        public int WorkerCapacityNumDefault { get { return this[nameof(WorkerCapacityNumDefault)].GetValue<int>(); } set { this[nameof(WorkerCapacityNumDefault)].SetValue<int>(value); } }
        public Object WorkableBoundShapeName { get { return this[nameof(WorkableBoundShapeName)]; } set { this[nameof(WorkableBoundShapeName)] = value; } }
        public int DisplayCapacityNum { get { return this[nameof(DisplayCapacityNum)].GetValue<int>(); } set { this[nameof(DisplayCapacityNum)].SetValue<int>(value); } }
        public DataTableRowHandle WarningSanityValueTextId { get { return this[nameof(WarningSanityValueTextId)].As<DataTableRowHandle>(); } set { this["WarningSanityValueTextId"] = value; } }
        public Object WorkerEventMap { get { return this[nameof(WorkerEventMap)]; } set { this[nameof(WorkerEventMap)] = value; } }
        public DataTable WorkerEventMasterDataTable { get { return this[nameof(WorkerEventMasterDataTable)].As<DataTable>(); } set { this["WorkerEventMasterDataTable"] = value; } }
        public DataTable WorkerSickMasterDataTable { get { return this[nameof(WorkerSickMasterDataTable)].As<DataTable>(); } set { this["WorkerSickMasterDataTable"] = value; } }
        public int WorkerEventTriggerTickMaxCount { get { return this[nameof(WorkerEventTriggerTickMaxCount)].GetValue<int>(); } set { this[nameof(WorkerEventTriggerTickMaxCount)].SetValue<int>(value); } }
        public Array<Object> DefenseAIActionArray { get { return new Array<Object>(this[nameof(DefenseAIActionArray)].Address); } }
        public Array<PalBaseCampSignificanceInfo> BaseCampSignificanceInfoList { get { return new Array<PalBaseCampSignificanceInfo>(this[nameof(BaseCampSignificanceInfoList)].Address); } }
        public float UpdateIntervalSquaredDistanceFromPlayer { get { return this[nameof(UpdateIntervalSquaredDistanceFromPlayer)].GetValue<float>(); } set { this[nameof(UpdateIntervalSquaredDistanceFromPlayer)].SetValue<float>(value); } }
        public int BaseCampTickInvokeMaxNumInOneTick { get { return this[nameof(BaseCampTickInvokeMaxNumInOneTick)].GetValue<int>(); } set { this[nameof(BaseCampTickInvokeMaxNumInOneTick)].SetValue<int>(value); } }
        public bool TryGetModel(Guid BaseCampId, PalBaseCampModel OutModel) { return Invoke<bool>(nameof(TryGetModel), BaseCampId, OutModel); }
        public void RequestDismantalDistanceBaseCamp(Guid InstanceId) { Invoke(nameof(RequestDismantalDistanceBaseCamp), InstanceId); }
        public void OnUpdateLocationWork_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUpdateLocationWork_ServerInternal), Work); }
        public void OnUnregisteredWork_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUnregisteredWork_ServerInternal), Work); }
        public void OnRegisteredNewWork_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnRegisteredNewWork_ServerInternal), Work); }
        public void OnCreateMapObjectModelInServer(PalMapObjectModel CreatedModel, Vector Location) { Invoke(nameof(OnCreateMapObjectModelInServer), CreatedModel, Location); }
        public PalBaseCampModel GetNearestBaseCamp(Vector Location) { return Invoke<PalBaseCampModel>(nameof(GetNearestBaseCamp), Location); }
        public PalBaseCampModel GetInRangedBaseCamp(Vector Location, float Margin) { return Invoke<PalBaseCampModel>(nameof(GetInRangedBaseCamp), Location, Margin); }
        public void GetBaseCampIds(Array<Guid> OutIds) { Invoke(nameof(GetBaseCampIds), OutIds); }
    }
    public class PalBaseCampMapObjectCollection : Object
    {
        public PalBaseCampMapObjectCollection(nint addr) : base(addr) { }
        public Object OnRegisteredMapObjectInstance { get { return this[nameof(OnRegisteredMapObjectInstance)]; } set { this[nameof(OnRegisteredMapObjectInstance)] = value; } }
        public Object OnAvailableConcreteModelDelegate { get { return this[nameof(OnAvailableConcreteModelDelegate)]; } set { this[nameof(OnAvailableConcreteModelDelegate)] = value; } }
        public Object OnNotAvailableConcreteModelDelegate { get { return this[nameof(OnNotAvailableConcreteModelDelegate)]; } set { this[nameof(OnNotAvailableConcreteModelDelegate)] = value; } }
        public Array<Guid> MapObjectInstanceIds { get { return new Array<Guid>(this[nameof(MapObjectInstanceIds)].Address); } }
        public void OnNotAvailableConcreteModel(PalMapObjectConcreteModelBase Model) { Invoke(nameof(OnNotAvailableConcreteModel), Model); }
        public void OnDisposeMapObject(PalMapObjectModel Model, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDisposeMapObject), Model, Options); }
        public void OnAvailableConcreteModel(PalMapObjectConcreteModelBase Model) { Invoke(nameof(OnAvailableConcreteModel), Model); }
        public void MapObjectInstanceDelegate__DelegateSignature(PalMapObjectModel Model) { Invoke(nameof(MapObjectInstanceDelegate__DelegateSignature), Model); }
        public void MapObjectConcreteModelDelegate__DelegateSignature(PalMapObjectConcreteModelBase Model) { Invoke(nameof(MapObjectConcreteModelDelegate__DelegateSignature), Model); }
    }
    public class PalBaseCampModel : Object
    {
        public PalBaseCampModel(nint addr) : base(addr) { }
        public Object OnUpdateStatusDelegate { get { return this[nameof(OnUpdateStatusDelegate)]; } set { this[nameof(OnUpdateStatusDelegate)] = value; } }
        public Object OnDisposeDelegate { get { return this[nameof(OnDisposeDelegate)]; } set { this[nameof(OnDisposeDelegate)] = value; } }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public Object BaseCampName { get { return this[nameof(BaseCampName)]; } set { this[nameof(BaseCampName)] = value; } }
        public EPalBaseCampState CurrentState { get { return (EPalBaseCampState)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public Transform Transform { get { return this[nameof(Transform)].As<Transform>(); } set { this["Transform"] = value; } }
        public float AreaRange { get { return this[nameof(AreaRange)].GetValue<float>(); } set { this[nameof(AreaRange)].SetValue<float>(value); } }
        public Guid GroupIdBelongTo { get { return this[nameof(GroupIdBelongTo)].As<Guid>(); } set { this["GroupIdBelongTo"] = value; } }
        public Transform FastTravelLocalTransform { get { return this[nameof(FastTravelLocalTransform)].As<Transform>(); } set { this["FastTravelLocalTransform"] = value; } }
        public PalBaseCampWorkerDirector WorkerDirector { get { return this[nameof(WorkerDirector)].As<PalBaseCampWorkerDirector>(); } set { this["WorkerDirector"] = value; } }
        public PalBaseCampMapObjectCollection MapObjectCollection { get { return this[nameof(MapObjectCollection)].As<PalBaseCampMapObjectCollection>(); } set { this["MapObjectCollection"] = value; } }
        public PalBaseCampWorkCollection WorkCollection { get { return this[nameof(WorkCollection)].As<PalBaseCampWorkCollection>(); } set { this["WorkCollection"] = value; } }
        public PalBaseCampEnemyObserver EnemyObserver { get { return this[nameof(EnemyObserver)].As<PalBaseCampEnemyObserver>(); } set { this["EnemyObserver"] = value; } }
        public Array<PalBaseCampFunctionModuleBase> ModuleArray { get { return new Array<PalBaseCampFunctionModuleBase>(this[nameof(ModuleArray)].Address); } }
        public Array<Guid> PlayerUIdsExistsInsideInServer { get { return new Array<Guid>(this[nameof(PlayerUIdsExistsInsideInServer)].Address); } }
        public Guid OwnerMapObjectInstanceId { get { return this[nameof(OwnerMapObjectInstanceId)].As<Guid>(); } set { this["OwnerMapObjectInstanceId"] = value; } }
        public int Level_InGuildProperty { get { return this[nameof(Level_InGuildProperty)].GetValue<int>(); } set { this[nameof(Level_InGuildProperty)].SetValue<int>(value); } }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
        public PalBaseCampSignificanceInfo SignificanceInfo { get { return this[nameof(SignificanceInfo)].As<PalBaseCampSignificanceInfo>(); } set { this["SignificanceInfo"] = value; } }
        public float ProgressTimeSinceLastTick { get { return this[nameof(ProgressTimeSinceLastTick)].GetValue<float>(); } set { this[nameof(ProgressTimeSinceLastTick)].SetValue<float>(value); } }
        public void UpdateLevel_ServerInternal(int PlayerId, int NewLevel) { Invoke(nameof(UpdateLevel_ServerInternal), PlayerId, NewLevel); }
        public bool TryGetRandomPositionInside(Vector Origin, float Radius, Vector ToLocation) { return Invoke<bool>(nameof(TryGetRandomPositionInside), Origin, Radius, ToLocation); }
        public void SimpleDelegate__DelegateSignature(PalBaseCampModel Model) { Invoke(nameof(SimpleDelegate__DelegateSignature), Model); }
        public void ReflectLevel_InGuildProperty_Internal(int NewLevel) { Invoke(nameof(ReflectLevel_InGuildProperty_Internal), NewLevel); }
        public void OnRep_Level_InGuildProperty(int OldLevel) { Invoke(nameof(OnRep_Level_InGuildProperty), OldLevel); }
        public void OnPassedTimeAfterEmptyEnemy() { Invoke(nameof(OnPassedTimeAfterEmptyEnemy)); }
        public void OnFirstAppearEnemy() { Invoke(nameof(OnFirstAppearEnemy)); }
        public void OnDamageInCampActor(PalDamageResult DamageResult) { Invoke(nameof(OnDamageInCampActor), DamageResult); }
        public void OnAddNewWorker(PalIndividualCharacterHandle AddCharacterHandle) { Invoke(nameof(OnAddNewWorker), AddCharacterHandle); }
        public PalBaseCampWorkCollection GetWorkCollection() { return Invoke<PalBaseCampWorkCollection>(nameof(GetWorkCollection)); }
        public Transform GetTransform() { return Invoke<Transform>(nameof(GetTransform)); }
        public EPalBaseCampState GetState() { return Invoke<EPalBaseCampState>(nameof(GetState)); }
        public float GetRange() { return Invoke<float>(nameof(GetRange)); }
        public Guid GetOwnerMapObjectInstanceId() { return Invoke<Guid>(nameof(GetOwnerMapObjectInstanceId)); }
        public int GetLevel() { return Invoke<int>(nameof(GetLevel)); }
        public Guid GetId() { return Invoke<Guid>(nameof(GetId)); }
        public Guid GetGroupIdBelongTo() { return Invoke<Guid>(nameof(GetGroupIdBelongTo)); }
        public PalBaseCampEnemyObserver GetEnemyObserver() { return Invoke<PalBaseCampEnemyObserver>(nameof(GetEnemyObserver)); }
        public Object GetBaseCampName() { return Invoke<Object>(nameof(GetBaseCampName)); }
        public bool FindWorkAssignableObject(PalIndividualCharacterHandle AssignIndividualHandle, Guid WorkId, bool bFixedAssign, PalWorkBase FoundObject) { return Invoke<bool>(nameof(FindWorkAssignableObject), AssignIndividualHandle, WorkId, bFixedAssign, FoundObject); }
        public bool FindNearestAssignableObject(PalIndividualCharacterHandle AssignIndividualHandle, Transform Origin, float Range, bool bFixedAssign, Object FoundObject) { return Invoke<bool>(nameof(FindNearestAssignableObject), AssignIndividualHandle, Origin, Range, bFixedAssign, FoundObject); }
        public void BaseCampGuildPalStorageUpdateDelegate__DelegateSignature(PalBaseCampModel Model, PalGuildPalStorage GuildPalStorage) { Invoke(nameof(BaseCampGuildPalStorageUpdateDelegate__DelegateSignature), Model, GuildPalStorage); }
    }
    public class PalBaseCampEnergyGeneratorInterface : Interface
    {
        public PalBaseCampEnergyGeneratorInterface(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleEnergy : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleEnergy(nint addr) : base(addr) { }
        public Array<PalBaseCampModuleEnergy_FunctionBase> FunctionArray { get { return new Array<PalBaseCampModuleEnergy_FunctionBase>(this[nameof(FunctionArray)].Address); } }
    }
    public class PalBaseCampModuleEnergy_FunctionBase : Object
    {
        public PalBaseCampModuleEnergy_FunctionBase(nint addr) : base(addr) { }
        public Object OnUpdateEnergyAmountDelegate { get { return this[nameof(OnUpdateEnergyAmountDelegate)]; } set { this[nameof(OnUpdateEnergyAmountDelegate)] = value; } }
        public Array<Guid> EnergyGeneratorConcreteModelIds { get { return new Array<Guid>(this[nameof(EnergyGeneratorConcreteModelIds)].Address); } }
        public Array<Guid> EnergyConsumerConcreteModelIds { get { return new Array<Guid>(this[nameof(EnergyConsumerConcreteModelIds)].Address); } }
        public EPalBaseCampModuleEnergyState CurrentState { get { return (EPalBaseCampModuleEnergyState)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public float ProvideWaitRemainTime { get { return this[nameof(ProvideWaitRemainTime)].GetValue<float>(); } set { this[nameof(ProvideWaitRemainTime)].SetValue<float>(value); } }
        public void UpdateEnergyAmountDelegate__DelegateSignature(PalBaseCampModuleEnergy_FunctionBase Function) { Invoke(nameof(UpdateEnergyAmountDelegate__DelegateSignature), Function); }
        public void InvokeOnUpdateEnergyAmount(PalMapObjectGenerateEnergyModel Model) { Invoke(nameof(InvokeOnUpdateEnergyAmount), Model); }
    }
    public class PalBaseCampModuleEnergy_Electric : PalBaseCampModuleEnergy_FunctionBase
    {
        public PalBaseCampModuleEnergy_Electric(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleFacilityReservation : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleFacilityReservation(nint addr) : base(addr) { }
        public Object FacilityUsageInfoSetMap { get { return this[nameof(FacilityUsageInfoSetMap)]; } set { this[nameof(FacilityUsageInfoSetMap)] = value; } }
        public Array<PalBaseCampFacilityCountPair> FacilityCounts { get { return new Array<PalBaseCampFacilityCountPair>(this[nameof(FacilityCounts)].Address); } }
        public void OnStartUseFacility_ServerInternal(PalMapObjectConcreteModelBase Model, PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(OnStartUseFacility_ServerInternal), Model, IndividualHandle); }
        public void OnNotAvailableMapObjectInServer(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnNotAvailableMapObjectInServer), ConcreteModel); }
        public void OnFinishUseFacility_ServerInternal(PalMapObjectConcreteModelBase Model) { Invoke(nameof(OnFinishUseFacility_ServerInternal), Model); }
        public void OnAvailableMapObjectInServer(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnAvailableMapObjectInServer), ConcreteModel); }
    }
    public class PalBaseCampModuleItemStorage : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleItemStorage(nint addr) : base(addr) { }
        public Object OnUpdateAnyItemContainerDelegate { get { return this[nameof(OnUpdateAnyItemContainerDelegate)]; } set { this[nameof(OnUpdateAnyItemContainerDelegate)] = value; } }
        public Array<PalBaseCampItemContainerInfo> ContainerInfos { get { return new Array<PalBaseCampItemContainerInfo>(this[nameof(ContainerInfos)].Address); } }
        public Object RepairKitItemExistsInfos { get { return this[nameof(RepairKitItemExistsInfos)]; } set { this[nameof(RepairKitItemExistsInfos)] = value; } }
        public void OnUpdateItemContainer(PalMapObjectItemContainerModule ItemContainerModule) { Invoke(nameof(OnUpdateItemContainer), ItemContainerModule); }
        public void OnNotAvailableConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnNotAvailableConcreteModel), ConcreteModel); }
        public void OnAvailableConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnAvailableConcreteModel), ConcreteModel); }
        public void MulticastReturnSelfAndUpdatedContainerDelegate__DelegateSignature(PalBaseCampModuleItemStorage Self, PalItemContainer UpdatedContainer) { Invoke(nameof(MulticastReturnSelfAndUpdatedContainerDelegate__DelegateSignature), Self, UpdatedContainer); }
        public void GetContainerIds(Array<PalContainerId> OutContainerIds) { Invoke(nameof(GetContainerIds), OutContainerIds); }
    }
    public class PalBaseCampModuleMedical : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleMedical(nint addr) : base(addr) { }
        public Array<Guid> ReviveWorkIds { get { return new Array<Guid>(this[nameof(ReviveWorkIds)].Address); } }
        public void OnReviveCharacter_ServerInternal(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(OnReviveCharacter_ServerInternal), IndividualParameter); }
        public void OnRemovedWorkerInServer(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(OnRemovedWorkerInServer), IndividualHandle); }
    }
    public class PalBaseCampModuleObjectMaintenance : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleObjectMaintenance(nint addr) : base(addr) { }
        public Array<PalBaseCampModuleObjectMaintenance_WayBase> MaintenanceWayDOs { get { return new Array<PalBaseCampModuleObjectMaintenance_WayBase>(this[nameof(MaintenanceWayDOs)].Address); } }
        public void OnRegisteredMapObject_ServerInternal(PalMapObjectModel Model) { Invoke(nameof(OnRegisteredMapObject_ServerInternal), Model); }
        public void OnGrantedEffectToMapObject_ServerInternal(PalMapObjectModel Model, PalMapObjectModelEffectBase Effect) { Invoke(nameof(OnGrantedEffectToMapObject_ServerInternal), Model, Effect); }
        public void OnDisposeMapObject_ServerInternal(PalMapObjectModel Model, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDisposeMapObject_ServerInternal), Model, Options); }
    }
    public class PalBaseCampModuleObjectMaintenance_WayBase : Object
    {
        public PalBaseCampModuleObjectMaintenance_WayBase(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleObjectMaintenance_ExtinguishFire : PalBaseCampModuleObjectMaintenance_WayBase
    {
        public PalBaseCampModuleObjectMaintenance_ExtinguishFire(nint addr) : base(addr) { }
        public void OnTriggerByReachAccumulateTriggerValue(PalMapObjectModelEffect_AccumulateTrigger Effect_AccumulateTrigger, PalMapObjectModel OwnerModel) { Invoke(nameof(OnTriggerByReachAccumulateTriggerValue), Effect_AccumulateTrigger, OwnerModel); }
    }
    public class PalBaseCampPassiveEffectBase : Object
    {
        public PalBaseCampPassiveEffectBase(nint addr) : base(addr) { }
        public Object MapObjectInfoMapByMapObjectId { get { return this[nameof(MapObjectInfoMapByMapObjectId)]; } set { this[nameof(MapObjectInfoMapByMapObjectId)] = value; } }
    }
    public class PalBaseCampModulePassiveEffectWorkSpeedApplierInterface : Interface
    {
        public PalBaseCampModulePassiveEffectWorkSpeedApplierInterface(nint addr) : base(addr) { }
    }
    public class PalBaseCampModulePassiveEffect : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModulePassiveEffect(nint addr) : base(addr) { }
        public PalFastBaseCampPassiveEffectRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<PalFastBaseCampPassiveEffectRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
        public void OnNotAvailableMapObjectInServer(PalMapObjectConcreteModelBase Model) { Invoke(nameof(OnNotAvailableMapObjectInServer), Model); }
        public void OnAvailableMapObjectInServer(PalMapObjectConcreteModelBase Model) { Invoke(nameof(OnAvailableMapObjectInServer), Model); }
    }
    public class PalBaseCampPassiveEffect_WorkSuitability : PalBaseCampPassiveEffectBase
    {
        public PalBaseCampPassiveEffect_WorkSuitability(nint addr) : base(addr) { }
        public Object WorkSpeedAdditionalRateMap { get { return this[nameof(WorkSpeedAdditionalRateMap)]; } set { this[nameof(WorkSpeedAdditionalRateMap)] = value; } }
    }
    public class PalBaseCampPassiveEffect_WorkHard : PalBaseCampPassiveEffectBase
    {
        public PalBaseCampPassiveEffect_WorkHard(nint addr) : base(addr) { }
        public Object OnUpdateWorkHardTypeDelegate { get { return this[nameof(OnUpdateWorkHardTypeDelegate)]; } set { this[nameof(OnUpdateWorkHardTypeDelegate)] = value; } }
        public EPalBaseCampPassiveEffectWorkHardType WorkHardType { get { return (EPalBaseCampPassiveEffectWorkHardType)this[nameof(WorkHardType)].GetValue<int>(); } set { this[nameof(WorkHardType)].SetValue<int>((int)value); } }
        public void ReturnSelfDelegate__DelegateSignature(PalBaseCampPassiveEffect_WorkHard Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public void OnRep_WorkHardType() { Invoke(nameof(OnRep_WorkHardType)); }
        public EPalBaseCampPassiveEffectWorkHardType GetWorkHardType() { return Invoke<EPalBaseCampPassiveEffectWorkHardType>(nameof(GetWorkHardType)); }
    }
    public class PalBaseCampModuleResourceCollectorTargetInterface : Interface
    {
        public PalBaseCampModuleResourceCollectorTargetInterface(nint addr) : base(addr) { }
    }
    public class PalBaseCampModuleResourceCollector : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleResourceCollector(nint addr) : base(addr) { }
        public Object MapObjectWorkInfoMap { get { return this[nameof(MapObjectWorkInfoMap)]; } set { this[nameof(MapObjectWorkInfoMap)] = value; } }
        public void OnRegisteredMapObjectModel(PalMapObjectModel Model) { Invoke(nameof(OnRegisteredMapObjectModel), Model); }
        public void OnRegisteredFoliageModel(Object Model) { Invoke(nameof(OnRegisteredFoliageModel), Model); }
        public void OnDestroyedMapObjectModel(PalMapObjectModel Model, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDestroyedMapObjectModel), Model, Options); }
        public void OnDestroyedFoliageInstance(PalFoliageInstance Instance) { Invoke(nameof(OnDestroyedFoliageInstance), Instance); }
    }
    public class PalBaseCampModuleTransportItemDirector : PalBaseCampFunctionModuleBase
    {
        public PalBaseCampModuleTransportItemDirector(nint addr) : base(addr) { }
        public Object TransportItemStatusMap { get { return this[nameof(TransportItemStatusMap)]; } set { this[nameof(TransportItemStatusMap)] = value; } }
        public Object TransportTargetMap { get { return this[nameof(TransportTargetMap)]; } set { this[nameof(TransportTargetMap)] = value; } }
        public void OnUpdateMapObjectContainer(PalMapObjectItemContainerModule ContainerModule) { Invoke(nameof(OnUpdateMapObjectContainer), ContainerModule); }
        public void OnUnassignWorkTransportItemTarget(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnUnassignWorkTransportItemTarget), Work, IndividualId); }
        public void OnUnassignWorkRequirement(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnUnassignWorkRequirement), Work, IndividualId); }
        public void OnNotAvailableMapObjectConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnNotAvailableMapObjectConcreteModel), ConcreteModel); }
        public void OnAvailableMapObjectConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnAvailableMapObjectConcreteModel), ConcreteModel); }
        public void OnAssignWorkTransportItemTarget(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnAssignWorkTransportItemTarget), Work, IndividualId); }
        public void OnAssignWorkRequirement(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnAssignWorkRequirement), Work, IndividualId); }
    }
    public class PalGameStateReplicatorBase : Object
    {
        public PalGameStateReplicatorBase(nint addr) : base(addr) { }
    }
    public class PalBaseCampReplicator : PalGameStateReplicatorBase
    {
        public PalBaseCampReplicator(nint addr) : base(addr) { }
        public FastPalBaseCampRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<FastPalBaseCampRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
    }
    public class PalBaseCampTaskChecker : Object
    {
        public PalBaseCampTaskChecker(nint addr) : base(addr) { }
        public DataTable taskDataTable { get { return this[nameof(taskDataTable)].As<DataTable>(); } set { this["taskDataTable"] = value; } }
    }
    public class PalBaseCampUtility : Object
    {
        public PalBaseCampUtility(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkCollection : Object
    {
        public PalBaseCampWorkCollection(nint addr) : base(addr) { }
        public Object OnUnassignWorkDelegate { get { return this[nameof(OnUnassignWorkDelegate)]; } set { this[nameof(OnUnassignWorkDelegate)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public Array<Guid> WorkIds { get { return new Array<Guid>(this[nameof(WorkIds)].Address); } }
        public Object CannotMoveToWorkInfoMap { get { return this[nameof(CannotMoveToWorkInfoMap)]; } set { this[nameof(CannotMoveToWorkInfoMap)] = value; } }
        public void WorkAssignUpdateDelegate__DelegateSignature(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(WorkAssignUpdateDelegate__DelegateSignature), Work, IndividualId); }
        public void WorkAssignRequirementDelegate__DelegateSignature(PalWorkBase Work, PalWorkAssignRequirementParameter RequirementParameter) { Invoke(nameof(WorkAssignRequirementDelegate__DelegateSignature), Work, RequirementParameter); }
        public void OnUnassignWork_ServerInternal(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnUnassignWork_ServerInternal), Work, IndividualId); }
        public void OnRequiredAssign_ServerInternal(PalWorkBase Work, PalWorkAssignRequirementParameter RequirementParameter) { Invoke(nameof(OnRequiredAssign_ServerInternal), Work, RequirementParameter); }
    }
    public class PalBaseCampWorkerDirector : Object
    {
        public PalBaseCampWorkerDirector(nint addr) : base(addr) { }
        public Object OnAddNewWorkerDelegate { get { return this[nameof(OnAddNewWorkerDelegate)]; } set { this[nameof(OnAddNewWorkerDelegate)] = value; } }
        public Object OnRemovedWorkerInServerDelegate { get { return this[nameof(OnRemovedWorkerInServerDelegate)]; } set { this[nameof(OnRemovedWorkerInServerDelegate)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public Transform SpawnTransform { get { return this[nameof(SpawnTransform)].As<Transform>(); } set { this["SpawnTransform"] = value; } }
        public PalIndividualCharacterContainer CharacterContainer { get { return this[nameof(CharacterContainer)].As<PalIndividualCharacterContainer>(); } set { this["CharacterContainer"] = value; } }
        public EPalMapBaseCampWorkerOrderType CurrentOrderType { get { return (EPalMapBaseCampWorkerOrderType)this[nameof(CurrentOrderType)].GetValue<int>(); } set { this[nameof(CurrentOrderType)].SetValue<int>((int)value); } }
        public EPalBaseCampWorkerDirectionBattleType CurrentBattleType { get { return (EPalBaseCampWorkerDirectionBattleType)this[nameof(CurrentBattleType)].GetValue<int>(); } set { this[nameof(CurrentBattleType)].SetValue<int>((int)value); } }
        public PalIndividualCharacterSlotsObserver SlotObserverForServer { get { return this[nameof(SlotObserverForServer)].As<PalIndividualCharacterSlotsObserver>(); } set { this["SlotObserverForServer"] = value; } }
        public Array<PalBaseCampWorkAssignRequest> RequiredAssignWorks { get { return new Array<PalBaseCampWorkAssignRequest>(this[nameof(RequiredAssignWorks)].Address); } }
        public Array<PalInstanceID> WaitingWorkerIndividualIds { get { return new Array<PalInstanceID>(this[nameof(WaitingWorkerIndividualIds)].Address); } }
        public int WorkerEventTickCount { get { return this[nameof(WorkerEventTickCount)].GetValue<int>(); } set { this[nameof(WorkerEventTickCount)].SetValue<int>(value); } }
        public Array<PalBaseCampWorkerTaskBase> WorkerTasks { get { return new Array<PalBaseCampWorkerTaskBase>(this[nameof(WorkerTasks)].Address); } }
        public EPalBaseCampWorkerDirectorState State { get { return (EPalBaseCampWorkerDirectorState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public void RemovedWorkerDelegate__DelegateSignature(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(RemovedWorkerDelegate__DelegateSignature), IndividualHandle); }
        public void OrderCommand(EPalMapBaseCampWorkerOrderType OrderType) { Invoke(nameof(OrderCommand), OrderType); }
        public void OnUpdateOwnerBaseCampStatus_ServerInternal(PalBaseCampModel OwnerBaseCamp) { Invoke(nameof(OnUpdateOwnerBaseCampStatus_ServerInternal), OwnerBaseCamp); }
        public void OnSpawnedCharacterInServer(PalInstanceID IndividualId) { Invoke(nameof(OnSpawnedCharacterInServer), IndividualId); }
        public void OnRequiredAssignWork_ServerInternal(PalWorkBase Work, PalWorkAssignRequirementParameter RequirementParameter) { Invoke(nameof(OnRequiredAssignWork_ServerInternal), Work, RequirementParameter); }
        public void OnRep_CharacterContainer() { Invoke(nameof(OnRep_CharacterContainer)); }
        public void OnRemovedNewCharacterInServer(PalInstanceID IndividualId) { Invoke(nameof(OnRemovedNewCharacterInServer), IndividualId); }
        public void OnReflectSlotCompleteInServer() { Invoke(nameof(OnReflectSlotCompleteInServer)); }
        public void OnRaisedPhantomCharacterInServer(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(OnRaisedPhantomCharacterInServer), IndividualId, PhantomId); }
        public void OnNotifiedUnassignWork_ServerInternal(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnNotifiedUnassignWork_ServerInternal), Work, IndividualId); }
        public void OnDeadWorkerInServer_Internal(PalCharacter DeadCharacter) { Invoke(nameof(OnDeadWorkerInServer_Internal), DeadCharacter); }
        public void OnDeadWorkerInServer(PalDeadInfo Info) { Invoke(nameof(OnDeadWorkerInServer), Info); }
        public void OnChangeWorldSettings_ServerInternal(PalOptionWorldSettings PrevSettings, PalOptionWorldSettings NewSettings) { Invoke(nameof(OnChangeWorldSettings_ServerInternal), PrevSettings, NewSettings); }
        public void OnAddedNewCharacterInServer(PalInstanceID IndividualId) { Invoke(nameof(OnAddedNewCharacterInServer), IndividualId); }
        public void GetCharacterHandleSlots(Array<PalIndividualCharacterSlot> OutSlots) { Invoke(nameof(GetCharacterHandleSlots), OutSlots); }
        public PalIndividualCharacterSlot FindSlotByHandle(PalIndividualCharacterHandle Handle) { return Invoke<PalIndividualCharacterSlot>(nameof(FindSlotByHandle), Handle); }
        public void AddNewWorkerDelegate__DelegateSignature(PalIndividualCharacterHandle NewCharacter) { Invoke(nameof(AddNewWorkerDelegate__DelegateSignature), NewCharacter); }
    }
    public class PalBaseCampWorkerEventBase : Object
    {
        public PalBaseCampWorkerEventBase(nint addr) : base(addr) { }
        public PalDataTableRowName_BaseCampWorkerEventData MasterDataId { get { return this[nameof(MasterDataId)].As<PalDataTableRowName_BaseCampWorkerEventData>(); } set { this["MasterDataId"] = value; } }
        public EPalLogType logType { get { return (EPalLogType)this[nameof(logType)].GetValue<int>(); } set { this[nameof(logType)].SetValue<int>((int)value); } }
        public PalBaseCampWorkerEventMasterData MasterData { get { return this[nameof(MasterData)].As<PalBaseCampWorkerEventMasterData>(); } set { this["MasterData"] = value; } }
        public Object OverrideSleepFX { get { return this[nameof(OverrideSleepFX)]; } set { this[nameof(OverrideSleepFX)] = value; } }
        public bool IsTriggerEventBySanity(float SanityValue) { return Invoke<bool>(nameof(IsTriggerEventBySanity), SanityValue); }
        public bool IsTriggerEventByCharacter(PalCharacter Character) { return Invoke<bool>(nameof(IsTriggerEventByCharacter), Character); }
        public Object Debug_CreateTextTriggerEventSanity() { return Invoke<Object>(nameof(Debug_CreateTextTriggerEventSanity)); }
        public Object CreateNotifyMessageText(Object LocalizedFormatText, PalCharacter Character) { return Invoke<Object>(nameof(CreateNotifyMessageText), LocalizedFormatText, Character); }
    }
    public class PalBaseCampWorkerEventUtility : Object
    {
        public PalBaseCampWorkerEventUtility(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_DestroyBuilding : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_DestroyBuilding(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_DodgeWork : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_DodgeWork(nint addr) : base(addr) { }
        public Object actionClass { get { return this[nameof(actionClass)]; } set { this[nameof(actionClass)] = value; } }
        public float AIActionDuration { get { return this[nameof(AIActionDuration)].GetValue<float>(); } set { this[nameof(AIActionDuration)].SetValue<float>(value); } }
        public float TerminateSanityValueOver { get { return this[nameof(TerminateSanityValueOver)].GetValue<float>(); } set { this[nameof(TerminateSanityValueOver)].SetValue<float>(value); } }
    }
    public class PalBaseCampWorkerEvent_DodgeWork_Short : PalBaseCampWorkerEvent_DodgeWork
    {
        public PalBaseCampWorkerEvent_DodgeWork_Short(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_DodgeWork_Sleep : PalBaseCampWorkerEvent_DodgeWork
    {
        public PalBaseCampWorkerEvent_DodgeWork_Sleep(nint addr) : base(addr) { }
        public int SleepMinTime { get { return this[nameof(SleepMinTime)].GetValue<int>(); } set { this[nameof(SleepMinTime)].SetValue<int>(value); } }
        public int SanityValueStillSleeping { get { return this[nameof(SanityValueStillSleeping)].GetValue<int>(); } set { this[nameof(SanityValueStillSleeping)].SetValue<int>(value); } }
        public FloatInterval WalkTime_BeforeSleep { get { return this[nameof(WalkTime_BeforeSleep)].As<FloatInterval>(); } set { this["WalkTime_BeforeSleep"] = value; } }
    }
    public class PalBaseCampWorkerEvent_EatTooMuch : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_EatTooMuch(nint addr) : base(addr) { }
        public float RecoverSanityTo { get { return this[nameof(RecoverSanityTo)].GetValue<float>(); } set { this[nameof(RecoverSanityTo)].SetValue<float>(value); } }
        public int EatMaxNum { get { return this[nameof(EatMaxNum)].GetValue<int>(); } set { this[nameof(EatMaxNum)].SetValue<int>(value); } }
    }
    public class PalBaseCampWorkerEvent_Escape : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_Escape(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_FightWithFriend : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_FightWithFriend(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_OverworkDeath : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_OverworkDeath(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_Sick : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_Sick(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerEvent_Tantrum : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_Tantrum(nint addr) : base(addr) { }
        public Object actionClass { get { return this[nameof(actionClass)]; } set { this[nameof(actionClass)] = value; } }
    }
    public class PalBaseCampWorkerEvent_TurnFoodBox : PalBaseCampWorkerEventBase
    {
        public PalBaseCampWorkerEvent_TurnFoodBox(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkerTaskBase : Object
    {
        public PalBaseCampWorkerTaskBase(nint addr) : base(addr) { }
        public Guid OwnerBaseCampId { get { return this[nameof(OwnerBaseCampId)].As<Guid>(); } set { this["OwnerBaseCampId"] = value; } }
    }
    public class PalBaseCampWorkerTask_IgnitionTorchAtNight : PalBaseCampWorkerTaskBase
    {
        public PalBaseCampWorkerTask_IgnitionTorchAtNight(nint addr) : base(addr) { }
        public Array<Guid> TorchInstanceIds { get { return new Array<Guid>(this[nameof(TorchInstanceIds)].Address); } }
        public void OnNotAvailableMapObjectInServer(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnNotAvailableMapObjectInServer), ConcreteModel); }
        public void OnAvailableMapObjectInServer(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnAvailableMapObjectInServer), ConcreteModel); }
    }
    public class PalBattleManager : PalWorldSubsystem
    {
        public PalBattleManager(nint addr) : base(addr) { }
        public Object EnemyListPerPlayer { get { return this[nameof(EnemyListPerPlayer)]; } set { this[nameof(EnemyListPerPlayer)] = value; } }
        public Object DebugSpawnerClass { get { return this[nameof(DebugSpawnerClass)]; } set { this[nameof(DebugSpawnerClass)] = value; } }
        public Object OnFExclamationMarkDelegate { get { return this[nameof(OnFExclamationMarkDelegate)]; } set { this[nameof(OnFExclamationMarkDelegate)] = value; } }
        public Object OnFQuestionMarkDelegate { get { return this[nameof(OnFQuestionMarkDelegate)]; } set { this[nameof(OnFQuestionMarkDelegate)] = value; } }
        public Object OnFEmitSoundDelegate { get { return this[nameof(OnFEmitSoundDelegate)]; } set { this[nameof(OnFEmitSoundDelegate)] = value; } }
        public Object OnFEmitSoundOnlyPalmiDelegate { get { return this[nameof(OnFEmitSoundOnlyPalmiDelegate)]; } set { this[nameof(OnFEmitSoundOnlyPalmiDelegate)] = value; } }
        public bool TargetIsPlayerOrPlayersOtomoPal(Actor TargetCharacter) { return Invoke<bool>(nameof(TargetIsPlayerOrPlayersOtomoPal), TargetCharacter); }
        public void SoundReactionStart(PalCharacter SelfCharacter) { Invoke(nameof(SoundReactionStart), SelfCharacter); }
        public void SetUpPlayerMap(Actor Player) { Invoke(nameof(SetUpPlayerMap), Player); }
        public void RemovePlayerMap(Actor Player) { Invoke(nameof(RemovePlayerMap), Player); }
        public void RemoveEnemyActor_AllPlayer(Actor Enemy, EPalPlayerBattleFinishType FinishType) { Invoke(nameof(RemoveEnemyActor_AllPlayer), Enemy, FinishType); }
        public void RemoveEnemyActor(Actor Player, Actor Enemy, EPalPlayerBattleFinishType FinishType) { Invoke(nameof(RemoveEnemyActor), Player, Enemy, FinishType); }
        public void QuestionMarkDelegate__DelegateSignature(PalCharacter TargetCharacter) { Invoke(nameof(QuestionMarkDelegate__DelegateSignature), TargetCharacter); }
        public bool IsBattleModeAnyPlayer() { return Invoke<bool>(nameof(IsBattleModeAnyPlayer)); }
        public Actor GetRandomActor(Array<Actor> targetList) { return Invoke<Actor>(nameof(GetRandomActor), targetList); }
        public Actor GetNearestActor(Array<Actor> targetList, Vector Location) { return Invoke<Actor>(nameof(GetNearestActor), targetList, Location); }
        public bool GetConflictEnemies(Actor Player, Array<Actor> OutEnemyes, bool IgnoreOtomoStopByBall) { return Invoke<bool>(nameof(GetConflictEnemies), Player, OutEnemyes, IgnoreOtomoStopByBall); }
        public void GetAllPlayerAndOtomo_ForEnemySelf(Array<Actor> TargetPlayers, Array<Actor> OutCharacters) { Invoke(nameof(GetAllPlayerAndOtomo_ForEnemySelf), TargetPlayers, OutCharacters); }
        public void ExclamationMarkDelegate__DelegateSignature(PalCharacter TargetCharacter) { Invoke(nameof(ExclamationMarkDelegate__DelegateSignature), TargetCharacter); }
        public void EnemyNearPlayerListUpdate(Actor Enemy, float Distance) { Invoke(nameof(EnemyNearPlayerListUpdate), Enemy, Distance); }
        public void EmitSoundOnlyPalmiDelegate__DelegateSignature(int SoundLevel) { Invoke(nameof(EmitSoundOnlyPalmiDelegate__DelegateSignature), SoundLevel); }
        public void EmitSoundDelegate__DelegateSignature(int SoundRadius, Vector EmitLocation, Actor Emitter) { Invoke(nameof(EmitSoundDelegate__DelegateSignature), SoundRadius, EmitLocation, Emitter); }
        public void EmitSound(Object SoundRowName, Actor Emitter, Vector EmitLocation, float VolumeRate) { Invoke(nameof(EmitSound), SoundRowName, Emitter, EmitLocation, VolumeRate); }
        public void AddEnemyActor_PlayerOrOtomo(Actor PlayerOrOtomo, Actor Enemy) { Invoke(nameof(AddEnemyActor_PlayerOrOtomo), PlayerOrOtomo, Enemy); }
        public void ActionMenaceStart(PalCharacter SelfCharacter) { Invoke(nameof(ActionMenaceStart), SelfCharacter); }
    }
    public class PalBiomeAreaTriggerBase : Actor
    {
        public PalBiomeAreaTriggerBase(nint addr) : base(addr) { }
        public EPalBiomeType BindBiomeType { get { return (EPalBiomeType)this[nameof(BindBiomeType)].GetValue<int>(); } set { this[nameof(BindBiomeType)].SetValue<int>((int)value); } }
        public void OnOverlap(Actor OtherActor, EPalBiomeType BiomeType) { Invoke(nameof(OnOverlap), OtherActor, BiomeType); }
        public void OnEndOverlap(Actor OtherActor, EPalBiomeType BiomeType) { Invoke(nameof(OnEndOverlap), OtherActor, BiomeType); }
        public EPalBiomeType GetBiomeType() { return Invoke<EPalBiomeType>(nameof(GetBiomeType)); }
    }
    public class PalBiomeDetectComponent : ActorComponent
    {
        public PalBiomeDetectComponent(nint addr) : base(addr) { }
        public Object OnChangedBiome { get { return this[nameof(OnChangedBiome)]; } set { this[nameof(OnChangedBiome)] = value; } }
        public void OnChangedBiomeDelegate__DelegateSignature(Actor OverlapActor, PalBiomeAreaTriggerBase BiomeTriggerActor) { Invoke(nameof(OnChangedBiomeDelegate__DelegateSignature), OverlapActor, BiomeTriggerActor); }
        public void ChangeBiome(PalBiomeAreaTriggerBase BiomeTriggerActor) { Invoke(nameof(ChangeBiome), BiomeTriggerActor); }
    }
    public class PalBlueprintLibrary : BlueprintFunctionLibrary
    {
        public PalBlueprintLibrary(nint addr) : base(addr) { }
        public bool NotEqual_PalInstanceIDPalInstanceID(PalInstanceID A, PalInstanceID B) { return Invoke<bool>(nameof(NotEqual_PalInstanceIDPalInstanceID), A, B); }
        public bool EqualEqual_PalInstanceIDPalInstanceID(PalInstanceID A, PalInstanceID B) { return Invoke<bool>(nameof(EqualEqual_PalInstanceIDPalInstanceID), A, B); }
    }
    public class PalBodyPartsBoxComponent : BoxComponent
    {
        public PalBodyPartsBoxComponent(nint addr) : base(addr) { }
        public EPalBodyPartsType BodyPartsType { get { return (EPalBodyPartsType)this[nameof(BodyPartsType)].GetValue<int>(); } set { this[nameof(BodyPartsType)].SetValue<int>((int)value); } }
        public Object DefaultCollisionProfileName { get { return this[nameof(DefaultCollisionProfileName)]; } set { this[nameof(DefaultCollisionProfileName)] = value; } }
        public Object BroadcastCollisionProfileName { get { return this[nameof(BroadcastCollisionProfileName)]; } set { this[nameof(BroadcastCollisionProfileName)] = value; } }
        public void OnRep_BroadcastCollisionProfileName() { Invoke(nameof(OnRep_BroadcastCollisionProfileName)); }
    }
    public class PalBodyPartsCapsuleComponent : CapsuleComponent
    {
        public PalBodyPartsCapsuleComponent(nint addr) : base(addr) { }
        public EPalBodyPartsType BodyPartsType { get { return (EPalBodyPartsType)this[nameof(BodyPartsType)].GetValue<int>(); } set { this[nameof(BodyPartsType)].SetValue<int>((int)value); } }
        public Object DefaultCollisionProfileName { get { return this[nameof(DefaultCollisionProfileName)]; } set { this[nameof(DefaultCollisionProfileName)] = value; } }
        public Object BroadcastCollisionProfileName { get { return this[nameof(BroadcastCollisionProfileName)]; } set { this[nameof(BroadcastCollisionProfileName)] = value; } }
        public void OnRep_BroadcastCollisionProfileName() { Invoke(nameof(OnRep_BroadcastCollisionProfileName)); }
    }
    public class PalBodyPartsSphereComponent : SphereComponent
    {
        public PalBodyPartsSphereComponent(nint addr) : base(addr) { }
        public EPalBodyPartsType BodyPartsType { get { return (EPalBodyPartsType)this[nameof(BodyPartsType)].GetValue<int>(); } set { this[nameof(BodyPartsType)].SetValue<int>((int)value); } }
        public Object DefaultCollisionProfileName { get { return this[nameof(DefaultCollisionProfileName)]; } set { this[nameof(DefaultCollisionProfileName)] = value; } }
        public Object BroadcastCollisionProfileName { get { return this[nameof(BroadcastCollisionProfileName)]; } set { this[nameof(BroadcastCollisionProfileName)] = value; } }
        public void OnRep_BroadcastCollisionProfileName() { Invoke(nameof(OnRep_BroadcastCollisionProfileName)); }
    }
    public class PalBodyTemperatureComponent : ActorComponent
    {
        public PalBodyTemperatureComponent(nint addr) : base(addr) { }
        public Object OnChangeTemperatureDelegate { get { return this[nameof(OnChangeTemperatureDelegate)]; } set { this[nameof(OnChangeTemperatureDelegate)] = value; } }
        public Object OnChangeResistRankDelegate { get { return this[nameof(OnChangeResistRankDelegate)]; } set { this[nameof(OnChangeResistRankDelegate)] = value; } }
        public Object OnChangeBodyStateDelegate { get { return this[nameof(OnChangeBodyStateDelegate)]; } set { this[nameof(OnChangeBodyStateDelegate)] = value; } }
        public Object HeatSourceInfoMap { get { return this[nameof(HeatSourceInfoMap)]; } set { this[nameof(HeatSourceInfoMap)] = value; } }
        public int CurrentTemperature { get { return this[nameof(CurrentTemperature)].GetValue<int>(); } set { this[nameof(CurrentTemperature)].SetValue<int>(value); } }
        public Object SelfKeyName { get { return this[nameof(SelfKeyName)]; } set { this[nameof(SelfKeyName)] = value; } }
        public TimerHandle SlipDamageTimer { get { return this[nameof(SlipDamageTimer)].As<TimerHandle>(); } set { this["SlipDamageTimer"] = value; } }
        public int CurrentResistRank_Heat { get { return this[nameof(CurrentResistRank_Heat)].GetValue<int>(); } set { this[nameof(CurrentResistRank_Heat)].SetValue<int>(value); } }
        public int CurrentResistRank_Cold { get { return this[nameof(CurrentResistRank_Cold)].GetValue<int>(); } set { this[nameof(CurrentResistRank_Cold)].SetValue<int>(value); } }
        public EPalBodyTemperatureState CurrentBodyState { get { return (EPalBodyTemperatureState)this[nameof(CurrentBodyState)].GetValue<int>(); } set { this[nameof(CurrentBodyState)].SetValue<int>((int)value); } }
        public void RequestReSend_ToServer() { Invoke(nameof(RequestReSend_ToServer)); }
        public void RemoveHeatSource(Object UniqueName) { Invoke(nameof(RemoveHeatSource), UniqueName); }
        public void OnUpdatePassiveSkill(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnUpdatePassiveSkill), EffectType, Value); }
        public void OnUpdateEquipment(PalItemSlot itemSlot, EPalPlayerEquipItemSlotType slotType) { Invoke(nameof(OnUpdateEquipment), itemSlot, slotType); }
        public void OnInitializedPlayer_ForClient(PalCharacter Character) { Invoke(nameof(OnInitializedPlayer_ForClient), Character); }
        public void OnInitializedPlayer(PalCharacter Character) { Invoke(nameof(OnInitializedPlayer), Character); }
        public void OnEndPassiveSkill(EPalPassiveSkillEffectType EffectType) { Invoke(nameof(OnEndPassiveSkill), EffectType); }
        public void OnChangeTemperatureDelegate__DelegateSignature(int NextTemperature) { Invoke(nameof(OnChangeTemperatureDelegate__DelegateSignature), NextTemperature); }
        public void OnChangeResistRankDelegate__DelegateSignature(int NextResistHeat, int NextResistCold) { Invoke(nameof(OnChangeResistRankDelegate__DelegateSignature), NextResistHeat, NextResistCold); }
        public void OnChangeHour() { Invoke(nameof(OnChangeHour)); }
        public void OnChangeBodyStateDelegate__DelegateSignature(EPalBodyTemperatureState BodyState) { Invoke(nameof(OnChangeBodyStateDelegate__DelegateSignature), BodyState); }
        public void CallOnChangeTemperature(int Next) { Invoke(nameof(CallOnChangeTemperature), Next); }
        public void CallOnChangeResistRank(int Heat, int Cold) { Invoke(nameof(CallOnChangeResistRank), Heat, Cold); }
        public void CallOnChangeBodyState(EPalBodyTemperatureState State) { Invoke(nameof(CallOnChangeBodyState), State); }
        public void CallAllDelegate() { Invoke(nameof(CallAllDelegate)); }
        public void AddHeatSourceInfo(Object UniqueName, PalHeatSourceInfo HeatInfo) { Invoke(nameof(AddHeatSourceInfo), UniqueName, HeatInfo); }
        public void AddHeatSource(Object UniqueName, int HeatLevel) { Invoke(nameof(AddHeatSource), UniqueName, HeatLevel); }
    }
    public class PalBoneInfo : Object
    {
        public PalBoneInfo(nint addr) : base(addr) { }
        public float Length { get { return this[nameof(Length)].GetValue<float>(); } set { this[nameof(Length)].SetValue<float>(value); } }
        public float Radius { get { return this[nameof(Radius)].GetValue<float>(); } set { this[nameof(Radius)].SetValue<float>(value); } }
    }
    public class PalBossBattleInstanceModel : Object
    {
        public PalBossBattleInstanceModel(nint addr) : base(addr) { }
        public Transform FrontWarpPointTransform { get { return this[nameof(FrontWarpPointTransform)].As<Transform>(); } set { this["FrontWarpPointTransform"] = value; } }
        public Vector_NetQuantize RepFrontWarpPointtLocation { get { return this[nameof(RepFrontWarpPointtLocation)].As<Vector_NetQuantize>(); } set { this["RepFrontWarpPointtLocation"] = value; } }
        public Transform TopWarpPointTransform { get { return this[nameof(TopWarpPointTransform)].As<Transform>(); } set { this["TopWarpPointTransform"] = value; } }
        public Transform StartPointTransform { get { return this[nameof(StartPointTransform)].As<Transform>(); } set { this["StartPointTransform"] = value; } }
        public Transform DeadItemDropTransform { get { return this[nameof(DeadItemDropTransform)].As<Transform>(); } set { this["DeadItemDropTransform"] = value; } }
        public PalStageInstanceId StageInstanceId { get { return this[nameof(StageInstanceId)].As<PalStageInstanceId>(); } set { this["StageInstanceId"] = value; } }
        public EPalBossType BossType { get { return (EPalBossType)this[nameof(BossType)].GetValue<int>(); } set { this[nameof(BossType)].SetValue<int>((int)value); } }
        public Object IntroCutsceneActor { get { return this[nameof(IntroCutsceneActor)]; } set { this[nameof(IntroCutsceneActor)] = value; } }
        public Object BossRoomLevelInstanceAsset { get { return this[nameof(BossRoomLevelInstanceAsset)]; } set { this[nameof(BossRoomLevelInstanceAsset)] = value; } }
        public Object BGMAudioEvent { get { return this[nameof(BGMAudioEvent)]; } set { this[nameof(BGMAudioEvent)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int CombatTimeMax { get { return this[nameof(CombatTimeMax)].GetValue<int>(); } set { this[nameof(CombatTimeMax)].SetValue<int>(value); } }
        public PalBossBattleLevelInstance BossBattleLevelInstance { get { return this[nameof(BossBattleLevelInstance)].As<PalBossBattleLevelInstance>(); } set { this["BossBattleLevelInstance"] = value; } }
        public PalBossTower BossTower { get { return this[nameof(BossTower)].As<PalBossTower>(); } set { this["BossTower"] = value; } }
        public EPalBossBattleState BossBattleState { get { return (EPalBossBattleState)this[nameof(BossBattleState)].GetValue<int>(); } set { this[nameof(BossBattleState)].SetValue<int>((int)value); } }
        public Array<PalPlayerCharacter> EntryPlayers { get { return new Array<PalPlayerCharacter>(this[nameof(EntryPlayers)].Address); } }
        public Array<PalPlayerCharacter> WonPlayers { get { return new Array<PalPlayerCharacter>(this[nameof(WonPlayers)].Address); } }
        public DateTime CombatTimeLimit { get { return this[nameof(CombatTimeLimit)].As<DateTime>(); } set { this["CombatTimeLimit"] = value; } }
        public PalBossBattleSequencer LocalBattleSequencer { get { return this[nameof(LocalBattleSequencer)].As<PalBossBattleSequencer>(); } set { this["LocalBattleSequencer"] = value; } }
        public DataLayerAsset ReservedDataLayerAsset { get { return this[nameof(ReservedDataLayerAsset)].As<DataLayerAsset>(); } set { this["ReservedDataLayerAsset"] = value; } }
        public void OnUpdateCombatTimeLimit() { Invoke(nameof(OnUpdateCombatTimeLimit)); }
        public void OnUpdateBossBattleState() { Invoke(nameof(OnUpdateBossBattleState)); }
        public void OnRep_EntryPlayers() { Invoke(nameof(OnRep_EntryPlayers)); }
        public void OnRep_CombatTimeLimit() { Invoke(nameof(OnRep_CombatTimeLimit)); }
        public void OnRep_BossBattleState() { Invoke(nameof(OnRep_BossBattleState)); }
        public void OnRep_BossBattleLevelInstance() { Invoke(nameof(OnRep_BossBattleLevelInstance)); }
        public void OnChangeEntryPlayerDelegate__DelegateSignature(Array<PalPlayerCharacter> EntryPlayers) { Invoke(nameof(OnChangeEntryPlayerDelegate__DelegateSignature), EntryPlayers); }
        public void OnChangeCombatTimeLimitDelegate__DelegateSignature(DateTime CombatTimeLimit) { Invoke(nameof(OnChangeCombatTimeLimitDelegate__DelegateSignature), CombatTimeLimit); }
        public void OnChangeBossBattleStateDelegate__DelegateSignature(EPalBossBattleState BossBattleState) { Invoke(nameof(OnChangeBossBattleStateDelegate__DelegateSignature), BossBattleState); }
        public bool IsLevelInstanceLoaded() { return Invoke<bool>(nameof(IsLevelInstanceLoaded)); }
        public int GetLevel() { return Invoke<int>(nameof(GetLevel)); }
        public EPalBossType GetBossType() { return Invoke<EPalBossType>(nameof(GetBossType)); }
        public EPalBossBattleState GetBossBattleState() { return Invoke<EPalBossBattleState>(nameof(GetBossBattleState)); }
    }
    public class PalBossBattleLevelInstance : LevelInstance
    {
        public PalBossBattleLevelInstance(nint addr) : base(addr) { }
        public Object OnBossSpawnedDelegate { get { return this[nameof(OnBossSpawnedDelegate)]; } set { this[nameof(OnBossSpawnedDelegate)] = value; } }
        public bool bIsLoaded { get { return this[nameof(bIsLoaded)].Flag; } set { this[nameof(bIsLoaded)].Flag = value; } }
        public void SpawnBossSpawner(EPalBossType BossType, int JoinPlayerNum) { Invoke(nameof(SpawnBossSpawner), BossType, JoinPlayerNum); }
        public void ResetBossLocation() { Invoke(nameof(ResetBossLocation)); }
        public void OnBossSpawnedDelegate__DelegateSignature(PalCharacter SpawnedCharacter) { Invoke(nameof(OnBossSpawnedDelegate__DelegateSignature), SpawnedCharacter); }
        public Transform GetSequencerTransform() { return Invoke<Transform>(nameof(GetSequencerTransform)); }
        public Transform GetPlayerStartTransform() { return Invoke<Transform>(nameof(GetPlayerStartTransform)); }
        public bool CheckLevelLoaded() { return Invoke<bool>(nameof(CheckLevelLoaded)); }
        public void BossSpawned(PalCharacter SpawnedCharacter) { Invoke(nameof(BossSpawned), SpawnedCharacter); }
    }
    public class PalBossBattleManager : PalWorldSubsystem
    {
        public PalBossBattleManager(nint addr) : base(addr) { }
        public Object OnLocalBossBattleSuccessDelegate { get { return this[nameof(OnLocalBossBattleSuccessDelegate)]; } set { this[nameof(OnLocalBossBattleSuccessDelegate)] = value; } }
        public Object OnCombatStartUIDelegate { get { return this[nameof(OnCombatStartUIDelegate)]; } set { this[nameof(OnCombatStartUIDelegate)] = value; } }
        public Object OnCombatEndUIAction { get { return this[nameof(OnCombatEndUIAction)]; } set { this[nameof(OnCombatEndUIAction)] = value; } }
        public int MAX_TIME_LIMIT { get { return this[nameof(MAX_TIME_LIMIT)].GetValue<int>(); } set { this[nameof(MAX_TIME_LIMIT)].SetValue<int>(value); } }
        public float PlayerRespawnTimeLimit { get { return this[nameof(PlayerRespawnTimeLimit)].GetValue<float>(); } set { this[nameof(PlayerRespawnTimeLimit)].SetValue<float>(value); } }
        public float BGMFadeDuration { get { return this[nameof(BGMFadeDuration)].GetValue<float>(); } set { this[nameof(BGMFadeDuration)].SetValue<float>(value); } }
        public Object MultiPlayerBossHPMap { get { return this[nameof(MultiPlayerBossHPMap)]; } set { this[nameof(MultiPlayerBossHPMap)] = value; } }
        public Object BossBattleSequencerClass { get { return this[nameof(BossBattleSequencerClass)]; } set { this[nameof(BossBattleSequencerClass)] = value; } }
        public Object BossInfoMap { get { return this[nameof(BossInfoMap)]; } set { this[nameof(BossInfoMap)] = value; } }
        public Object InstanceModelMap { get { return this[nameof(InstanceModelMap)]; } set { this[nameof(InstanceModelMap)] = value; } }
        public Object BossBattleSequencerMap { get { return this[nameof(BossBattleSequencerMap)]; } set { this[nameof(BossBattleSequencerMap)] = value; } }
        public Guid GroupGuid { get { return this[nameof(GroupGuid)].As<Guid>(); } set { this["GroupGuid"] = value; } }
        public EPalBossType DisableSkyBossType_LocalPlayer { get { return (EPalBossType)this[nameof(DisableSkyBossType_LocalPlayer)].GetValue<int>(); } set { this[nameof(DisableSkyBossType_LocalPlayer)].SetValue<int>((int)value); } }
        public void UnlockAchievement(EPalBossType BossType) { Invoke(nameof(UnlockAchievement), BossType); }
        public void UnloadBossBattle_ServerInternal(EPalBossType BossType) { Invoke(nameof(UnloadBossBattle_ServerInternal), BossType); }
        public void OnLocalPlayerBossBattleSuccessDelegate__DelegateSignature(PalPlayerCharacter LocalJoinedPlayer, EPalBossType BossType) { Invoke(nameof(OnLocalPlayerBossBattleSuccessDelegate__DelegateSignature), LocalJoinedPlayer, BossType); }
        public void OnCombatStartUIDelegate__DelegateSignature(PalBossTower BossTower) { Invoke(nameof(OnCombatStartUIDelegate__DelegateSignature), BossTower); }
        public void OnCombatEndUIActionDelegate__DelegateSignature(EPalBossBattleCombatResult CombatResult) { Invoke(nameof(OnCombatEndUIActionDelegate__DelegateSignature), CombatResult); }
        public void OnBossBattleCombatStart(EPalBossType BossType) { Invoke(nameof(OnBossBattleCombatStart), BossType); }
        public void LoadAsyncBossBattle_ServerInternal(EPalBossType BossType) { Invoke(nameof(LoadAsyncBossBattle_ServerInternal), BossType); }
        public Transform GetTopWarpPointTransform(EPalBossType BossType) { return Invoke<Transform>(nameof(GetTopWarpPointTransform), BossType); }
        public PalBossBattleStaticInfo GetStaticInfo(EPalBossType BossType) { return Invoke<PalBossBattleStaticInfo>(nameof(GetStaticInfo), BossType); }
        public Transform GetPlayerSpawnTransformForMultiPlayer(int Index, Vector Location, Rotator Rotate, float Offset) { return Invoke<Transform>(nameof(GetPlayerSpawnTransformForMultiPlayer), Index, Location, Rotate, Offset); }
        public int GetMaxJoinablePlayerNum() { return Invoke<int>(nameof(GetMaxJoinablePlayerNum)); }
        public bool GetIsServer() { return Invoke<bool>(nameof(GetIsServer)); }
        public float GetBossHPMultiPlayerRate(int JoinedPlayerNum) { return Invoke<float>(nameof(GetBossHPMultiPlayerRate), JoinedPlayerNum); }
        public int GetBossAchievementIndex(EPalBossType BossType) { return Invoke<int>(nameof(GetBossAchievementIndex), BossType); }
        public float GetBattleTimeLimit() { return Invoke<float>(nameof(GetBattleTimeLimit)); }
        public void EmptyInstanceCleanup() { Invoke(nameof(EmptyInstanceCleanup)); }
        public void DisableSkyCreator(bool Disable) { Invoke(nameof(DisableSkyCreator), Disable); }
        public bool CanStartBossBattle(EPalBossType BossType) { return Invoke<bool>(nameof(CanStartBossBattle), BossType); }
        public void BossBattleExit(EPalBossType BossType, PalPlayerCharacter ExitPlayer) { Invoke(nameof(BossBattleExit), BossType, ExitPlayer); }
        public void BossBattleEntryCancel(EPalBossType BossType, PalPlayerCharacter EntryPlayer) { Invoke(nameof(BossBattleEntryCancel), BossType, EntryPlayer); }
        public void BossBattleEntry(EPalBossType BossType, PalPlayerCharacter EntryPlayer) { Invoke(nameof(BossBattleEntry), BossType, EntryPlayer); }
        public void AddGroupCharacter(PalIndividualCharacterHandle AddIndividualHandle) { Invoke(nameof(AddGroupCharacter), AddIndividualHandle); }
    }
    public class BossBattleLevelSequenceRootInterface : Interface
    {
        public BossBattleLevelSequenceRootInterface(nint addr) : base(addr) { }
    }
    public class PalBossBattleSequenceBase : Object
    {
        public PalBossBattleSequenceBase(nint addr) : base(addr) { }
        public Object OnSequenceFinishDelegate { get { return this[nameof(OnSequenceFinishDelegate)]; } set { this[nameof(OnSequenceFinishDelegate)] = value; } }
        public EPalBossBattleSequenceType NextSequenceType { get { return (EPalBossBattleSequenceType)this[nameof(NextSequenceType)].GetValue<int>(); } set { this[nameof(NextSequenceType)].SetValue<int>((int)value); } }
        public void TickSequence(float DeltaTime) { Invoke(nameof(TickSequence), DeltaTime); }
        public void SetupLevelSequenceActor(LevelSequenceActor LevelSequenceActor, LevelSequence LevelSequence, LevelInstance LevelInstance) { Invoke(nameof(SetupLevelSequenceActor), LevelSequenceActor, LevelSequence, LevelInstance); }
        public void SequenceFinishDelegate__DelegateSignature(bool IsSuccess) { Invoke(nameof(SequenceFinishDelegate__DelegateSignature), IsSuccess); }
        public void SelfFinish_ForBP() { Invoke(nameof(SelfFinish_ForBP)); }
        public void OnBeginSequence() { Invoke(nameof(OnBeginSequence)); }
        public void NoticeSequenceEnd_ToServer() { Invoke(nameof(NoticeSequenceEnd_ToServer)); }
        public bool IsServer() { return Invoke<bool>(nameof(IsServer)); }
        public PalBossBattleSequencer GetOuterSequencer() { return Invoke<PalBossBattleSequencer>(nameof(GetOuterSequencer)); }
        public PalPlayerCharacter GetJoinedLocalControlPlayer() { return Invoke<PalPlayerCharacter>(nameof(GetJoinedLocalControlPlayer)); }
        public Actor GetBossRoomSequenceRootActor(LevelInstance LevelInstance) { return Invoke<Actor>(nameof(GetBossRoomSequenceRootActor), LevelInstance); }
        public PalBossBattleStaticInfo GetBossBattleStaticInfo() { return Invoke<PalBossBattleStaticInfo>(nameof(GetBossBattleStaticInfo)); }
        public void FinishSequence(bool IsSuccess) { Invoke(nameof(FinishSequence), IsSuccess); }
    }
    public class PalBossBattleSequencer : Object
    {
        public PalBossBattleSequencer(nint addr) : base(addr) { }
        public Object OnCombatStartDelegate { get { return this[nameof(OnCombatStartDelegate)]; } set { this[nameof(OnCombatStartDelegate)] = value; } }
        public float RemainBattleTimer { get { return this[nameof(RemainBattleTimer)].GetValue<float>(); } set { this[nameof(RemainBattleTimer)].SetValue<float>(value); } }
        public bool IsBattleTimerCountDown { get { return this[nameof(IsBattleTimerCountDown)].Flag; } set { this[nameof(IsBattleTimerCountDown)].Flag = value; } }
        public EPalBossBattleCombatResult CombatResult { get { return (EPalBossBattleCombatResult)this[nameof(CombatResult)].GetValue<int>(); } set { this[nameof(CombatResult)].SetValue<int>((int)value); } }
        public Object SequenceClassMap { get { return this[nameof(SequenceClassMap)]; } set { this[nameof(SequenceClassMap)] = value; } }
        public Object SequenceMap { get { return this[nameof(SequenceMap)]; } set { this[nameof(SequenceMap)] = value; } }
        public PalBossBattleSequenceBase CurrentSequence { get { return this[nameof(CurrentSequence)].As<PalBossBattleSequenceBase>(); } set { this["CurrentSequence"] = value; } }
        public PalBossBattleInstanceModel BossBattleInstanceModel { get { return this[nameof(BossBattleInstanceModel)].As<PalBossBattleInstanceModel>(); } set { this["BossBattleInstanceModel"] = value; } }
        public Array<PalPlayerCharacter> InRoomPlayers { get { return new Array<PalPlayerCharacter>(this[nameof(InRoomPlayers)].Address); } }
        public Array<PalPlayerCharacter> SequenceEndPlayers { get { return new Array<PalPlayerCharacter>(this[nameof(SequenceEndPlayers)].Address); } }
        public EPalBossType SelfBossType { get { return (EPalBossType)this[nameof(SelfBossType)].GetValue<int>(); } set { this[nameof(SelfBossType)].SetValue<int>((int)value); } }
        public PalCharacter BossCharacter { get { return this[nameof(BossCharacter)].As<PalCharacter>(); } set { this["BossCharacter"] = value; } }
        public int PlayingBGMId { get { return this[nameof(PlayingBGMId)].GetValue<int>(); } set { this[nameof(PlayingBGMId)].SetValue<int>(value); } }
        public bool bIsClientOnly { get { return this[nameof(bIsClientOnly)].Flag; } set { this[nameof(bIsClientOnly)].Flag = value; } }
        public void Tick_ForBP(float DeltaTime) { Invoke(nameof(Tick_ForBP), DeltaTime); }
        public void StopBGM() { Invoke(nameof(StopBGM)); }
        public void SetPlayerMoveDisable(PalPlayerCharacter Player, bool Disable) { Invoke(nameof(SetPlayerMoveDisable), Player, Disable); }
        public void SetMutekiAllPlayer(bool bIsMuteki) { Invoke(nameof(SetMutekiAllPlayer), bIsMuteki); }
        public void SetBossCharacter(PalCharacter BossActor) { Invoke(nameof(SetBossCharacter), BossActor); }
        public void SetAllPlayerMoveDisable(bool Disable) { Invoke(nameof(SetAllPlayerMoveDisable), Disable); }
        public void RemovePlayerFromInRoomList(PalPlayerCharacter Player) { Invoke(nameof(RemovePlayerFromInRoomList), Player); }
        public void RemoveDyingStatus() { Invoke(nameof(RemoveDyingStatus)); }
        public void PlayBGM(AkAudioEvent BGMAudioEvent) { Invoke(nameof(PlayBGM), BGMAudioEvent); }
        public void OnPlayerRespawn(PalPlayerCharacter Player) { Invoke(nameof(OnPlayerRespawn), Player); }
        public void OnPlayerDeadStopBGM(PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnPlayerDeadStopBGM), PlayerCharacter); }
        public void OnOpeningEnd(bool Success) { Invoke(nameof(OnOpeningEnd), Success); }
        public void OnEndingEnd(bool Success) { Invoke(nameof(OnEndingEnd), Success); }
        public void OnDyingDeadEndDelegate(PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnDyingDeadEndDelegate), PlayerCharacter); }
        public void OnCompletedEnd(bool Success) { Invoke(nameof(OnCompletedEnd), Success); }
        public void OnCombatFinish(EPalBossBattleCombatResult InCombatResult) { Invoke(nameof(OnCombatFinish), InCombatResult); }
        public void OnCombatEnd(bool Success) { Invoke(nameof(OnCombatEnd), Success); }
        public void NoticeClientCombatResult() { Invoke(nameof(NoticeClientCombatResult)); }
        public void KillAllPlayer() { Invoke(nameof(KillAllPlayer)); }
        public bool IsClientOnly() { return Invoke<bool>(nameof(IsClientOnly)); }
        public bool IsAllPlayerDead() { return Invoke<bool>(nameof(IsAllPlayerDead)); }
        public Array<PalPlayerCharacter> GetSequencePlayers() { return Invoke<Array<PalPlayerCharacter>>(nameof(GetSequencePlayers)); }
        public float GetRemainTimeSecond() { return Invoke<float>(nameof(GetRemainTimeSecond)); }
        public PalPlayerCharacter GetJoinedLocalPlayer() { return Invoke<PalPlayerCharacter>(nameof(GetJoinedLocalPlayer)); }
        public PalPlayerCharacter GetJoinedAndServerLocalPlayer() { return Invoke<PalPlayerCharacter>(nameof(GetJoinedAndServerLocalPlayer)); }
        public Array<PalPlayerCharacter> GetInRoomPlayers() { return Invoke<Array<PalPlayerCharacter>>(nameof(GetInRoomPlayers)); }
        public EPalBossType GetBossType() { return Invoke<EPalBossType>(nameof(GetBossType)); }
        public PalCharacter GetBossCharacter() { return Invoke<PalCharacter>(nameof(GetBossCharacter)); }
        public PalBossBattleInstanceModel GetBossBattleInstanceModel() { return Invoke<PalBossBattleInstanceModel>(nameof(GetBossBattleInstanceModel)); }
        public Array<PalPlayerCharacter> GetAliveOrDyingPlayers() { return Invoke<Array<PalPlayerCharacter>>(nameof(GetAliveOrDyingPlayers)); }
        public void FullRecoveryHPAllPlayer() { Invoke(nameof(FullRecoveryHPAllPlayer)); }
        public void ForceRespawnPlayer() { Invoke(nameof(ForceRespawnPlayer)); }
        public PalPlayerCharacter FindFirstCombatTargetForBossAI() { return Invoke<PalPlayerCharacter>(nameof(FindFirstCombatTargetForBossAI)); }
        public void BossBattleCombatStart__DelegateSignature(EPalBossType BossType) { Invoke(nameof(BossBattleCombatStart__DelegateSignature), BossType); }
    }
    public class PalHUDDispatchParameterBase : Object
    {
        public PalHUDDispatchParameterBase(nint addr) : base(addr) { }
        public Object OnClose { get { return this[nameof(OnClose)]; } set { this[nameof(OnClose)] = value; } }
    }
    public class PalWaitInfoWorldHUDParameter : PalHUDDispatchParameterBase
    {
        public PalWaitInfoWorldHUDParameter(nint addr) : base(addr) { }
        public PalBossTower BossTower { get { return this[nameof(BossTower)].As<PalBossTower>(); } set { this["BossTower"] = value; } }
        public bool isWaiting { get { return this[nameof(isWaiting)].Flag; } set { this[nameof(isWaiting)].Flag = value; } }
    }
    public class PalUserWidget : PalActivatableWidget
    {
        public PalUserWidget(nint addr) : base(addr) { }
        public bool bSyncPlayerInventory { get { return this[nameof(bSyncPlayerInventory)].Flag; } set { this[nameof(bSyncPlayerInventory)].Flag = value; } }
        public PalHUDDispatchParameterBase Param { get { return this[nameof(Param)].As<PalHUDDispatchParameterBase>(); } set { this["Param"] = value; } }
        public Array<PalUIActionBindData> BindedActionHandles { get { return new Array<PalUIActionBindData>(this[nameof(BindedActionHandles)].Address); } }
        public void VisibilityOverride(ESlateVisibility changedVisibility) { Invoke(nameof(VisibilityOverride), changedVisibility); }
        public void UnregisterActionBinding(PalUIActionBindData BindingData) { Invoke(nameof(UnregisterActionBinding), BindingData); }
        public void RequestInventorySync(bool bOpen) { Invoke(nameof(RequestInventorySync), bOpen); }
        public PalUIActionBindData RegisterActionBinding_NotConcume(Object ActionName, bool IsDisplayActionBar, byte InputType, Object Callback) { return Invoke<PalUIActionBindData>(nameof(RegisterActionBinding_NotConcume), ActionName, IsDisplayActionBar, InputType, Callback); }
        public PalUIActionBindData RegisterActionBinding(Object ActionName, bool IsDisplayActionBar, byte InputType, Object Callback) { return Invoke<PalUIActionBindData>(nameof(RegisterActionBinding), ActionName, IsDisplayActionBar, InputType, Callback); }
        public Guid Push(Object WidgetClass, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(Push), WidgetClass, Parameter); }
        public void PlayAkSound(AkAudioEvent AkEvent) { Invoke(nameof(PlayAkSound), AkEvent); }
        public void OnSetup_AfterCreatedPlayer() { Invoke(nameof(OnSetup_AfterCreatedPlayer)); }
        public void OnSetup() { Invoke(nameof(OnSetup)); }
        public void OnClosed() { Invoke(nameof(OnClosed)); }
        public bool IsSameWidget(Guid checkID) { return Invoke<bool>(nameof(IsSameWidget), checkID); }
        public PalHUDDispatchParameterBase GetParam() { return Invoke<PalHUDDispatchParameterBase>(nameof(GetParam)); }
        public UserWidget FindParentWidget(Object Class) { return Invoke<UserWidget>(nameof(FindParentWidget), Class); }
    }
    public class PalUserWidgetWorldHUD : PalUserWidget
    {
        public PalUserWidgetWorldHUD(nint addr) : base(addr) { }
        public void RemoveSelf() { Invoke(nameof(RemoveSelf)); }
        public void OnRequestRemove() { Invoke(nameof(OnRequestRemove)); }
    }
    public class PalBossEntryWaitInfoHUD : PalUserWidgetWorldHUD
    {
        public PalBossEntryWaitInfoHUD(nint addr) : base(addr) { }
        public bool EnableCountDown { get { return this[nameof(EnableCountDown)].Flag; } set { this[nameof(EnableCountDown)].Flag = value; } }
        public PalBossTower BossTower { get { return this[nameof(BossTower)].As<PalBossTower>(); } set { this["BossTower"] = value; } }
        public DateTime TimeLimitDate { get { return this[nameof(TimeLimitDate)].As<DateTime>(); } set { this["TimeLimitDate"] = value; } }
        public void UpdateWaitInfo(bool bIsCountDown, DateTime TimeLimit) { Invoke(nameof(UpdateWaitInfo), bIsCountDown, TimeLimit); }
        public void UpdateCountDown() { Invoke(nameof(UpdateCountDown)); }
        public void OnCloseHUD() { Invoke(nameof(OnCloseHUD)); }
    }
    public class PalBossTower : Actor
    {
        public PalBossTower(nint addr) : base(addr) { }
        public Object OnChangeBossTowerEntryWaitUI { get { return this[nameof(OnChangeBossTowerEntryWaitUI)]; } set { this[nameof(OnChangeBossTowerEntryWaitUI)] = value; } }
        public EPalBossType BossType { get { return (EPalBossType)this[nameof(BossType)].GetValue<int>(); } set { this[nameof(BossType)].SetValue<int>((int)value); } }
        public Guid EntryWaitInfoHUDId { get { return this[nameof(EntryWaitInfoHUDId)].As<Guid>(); } set { this["EntryWaitInfoHUDId"] = value; } }
        public PalBossBattleInstanceModel InstanceModel { get { return this[nameof(InstanceModel)].As<PalBossBattleInstanceModel>(); } set { this["InstanceModel"] = value; } }
        public DateTime CombatTimeLimit { get { return this[nameof(CombatTimeLimit)].As<DateTime>(); } set { this["CombatTimeLimit"] = value; } }
        public Guid LocationInstanceId { get { return this[nameof(LocationInstanceId)].As<Guid>(); } set { this["LocationInstanceId"] = value; } }
        public Array<PalPlayerCharacter> InDoorPlayerList { get { return new Array<PalPlayerCharacter>(this[nameof(InDoorPlayerList)].Address); } }
        public TimerHandle TimerHandle { get { return this[nameof(TimerHandle)].As<TimerHandle>(); } set { this["TimerHandle"] = value; } }
        public bool WriteBossDefeatRecord_ServerInternal(PalPlayerCharacter TargetPlayer) { return Invoke<bool>(nameof(WriteBossDefeatRecord_ServerInternal), TargetPlayer); }
        public void ShowWaitInfo(Vector TargetLocation, Vector DisplayOffset, bool isWaiting) { Invoke(nameof(ShowWaitInfo), TargetLocation, DisplayOffset, isWaiting); }
        public void RequestBossBattleStart(PalPlayerCharacter Player) { Invoke(nameof(RequestBossBattleStart), Player); }
        public void RequestBossBattleEntry(PalPlayerCharacter Player) { Invoke(nameof(RequestBossBattleEntry), Player); }
        public void RemoveInDoorPlayer(PalPlayerCharacter Player) { Invoke(nameof(RemoveInDoorPlayer), Player); }
        public void OnRep_InstanceModel() { Invoke(nameof(OnRep_InstanceModel)); }
        public void OnChangeEntryPlayer(Array<PalPlayerCharacter> EntryPlayers) { Invoke(nameof(OnChangeEntryPlayer), EntryPlayers); }
        public void OnChangeCombatTimeLimit(DateTime NewCombatTimeLimit) { Invoke(nameof(OnChangeCombatTimeLimit), NewCombatTimeLimit); }
        public void OnChangeBossTowerEntryWaitUI__DelegateSignature(bool bIsCountDown, DateTime TimeLimit) { Invoke(nameof(OnChangeBossTowerEntryWaitUI__DelegateSignature), bIsCountDown, TimeLimit); }
        public void OnChangeBossBattleStateBP(EPalBossBattleState NewState) { Invoke(nameof(OnChangeBossBattleStateBP), NewState); }
        public void OnChangeBossBattleState(EPalBossBattleState NewBossBattleState) { Invoke(nameof(OnChangeBossBattleState), NewBossBattleState); }
        public bool IsEntered(PalPlayerCharacter Player) { return Invoke<bool>(nameof(IsEntered), Player); }
        public Transform GetTopWarpPoint() { return Invoke<Transform>(nameof(GetTopWarpPoint)); }
        public Array<PalPlayerCharacter> GetStartablePlayers() { return Invoke<Array<PalPlayerCharacter>>(nameof(GetStartablePlayers)); }
        public Transform GetFrontWarpPoint() { return Invoke<Transform>(nameof(GetFrontWarpPoint)); }
        public Array<PalPlayerCharacter> GetForceWarpTargets() { return Invoke<Array<PalPlayerCharacter>>(nameof(GetForceWarpTargets)); }
        public Transform GetDeadItemDropPoint() { return Invoke<Transform>(nameof(GetDeadItemDropPoint)); }
        public Object GetBossBattleRowName() { return Invoke<Object>(nameof(GetBossBattleRowName)); }
        public void CloseWaitInfo() { Invoke(nameof(CloseWaitInfo)); }
        public void AddInDoorPlayer(PalPlayerCharacter Player) { Invoke(nameof(AddInDoorPlayer), Player); }
    }
    public class PalBotBuilderLocationBase : Actor
    {
        public PalBotBuilderLocationBase(nint addr) : base(addr) { }
        public int BuilderIndex { get { return this[nameof(BuilderIndex)].GetValue<int>(); } set { this[nameof(BuilderIndex)].SetValue<int>(value); } }
        public bool bIsBuilded { get { return this[nameof(bIsBuilded)].Flag; } set { this[nameof(bIsBuilded)].Flag = value; } }
    }
    public class PalBoxSpawnerPlacementTool : Actor
    {
        public PalBoxSpawnerPlacementTool(nint addr) : base(addr) { }
        public Vector BoxExtent { get { return this[nameof(BoxExtent)].As<Vector>(); } set { this["BoxExtent"] = value; } }
        public BoxComponent BoxComp { get { return this[nameof(BoxComp)].As<BoxComponent>(); } set { this["BoxComp"] = value; } }
    }
    public class PalBuilderComponent : ActorComponent
    {
        public PalBuilderComponent(nint addr) : base(addr) { }
        public Object OnUpdatePossessMaterials { get { return this[nameof(OnUpdatePossessMaterials)]; } set { this[nameof(OnUpdatePossessMaterials)] = value; } }
        public Object OnStartBuildingMode_Local { get { return this[nameof(OnStartBuildingMode_Local)]; } set { this[nameof(OnStartBuildingMode_Local)] = value; } }
        public Object OnEndBuildingMode_Local { get { return this[nameof(OnEndBuildingMode_Local)]; } set { this[nameof(OnEndBuildingMode_Local)] = value; } }
        public float InstallDistanceNormalFromOwner { get { return this[nameof(InstallDistanceNormalFromOwner)].GetValue<float>(); } set { this[nameof(InstallDistanceNormalFromOwner)].SetValue<float>(value); } }
        public float InstallableRange { get { return this[nameof(InstallableRange)].GetValue<float>(); } set { this[nameof(InstallableRange)].SetValue<float>(value); } }
        public CameraComponent OwnerCamera { get { return this[nameof(OwnerCamera)].As<CameraComponent>(); } set { this["OwnerCamera"] = value; } }
        public PalBuildObjectInstallChecker InstallChecker { get { return this[nameof(InstallChecker)].As<PalBuildObjectInstallChecker>(); } set { this["InstallChecker"] = value; } }
        public PalDismantleObjectChecker DismantleChecker { get { return this[nameof(DismantleChecker)].As<PalDismantleObjectChecker>(); } set { this["DismantleChecker"] = value; } }
        public void RequestBuild_ToServer(Object BuildObjectId, Vector Location, Quat Rotation, Array<PalNetArchive> ExtraParameterArchives, PalBuildRequestDebugParameter DebugParameter) { Invoke(nameof(RequestBuild_ToServer), BuildObjectId, Location, Rotation, ExtraParameterArchives, DebugParameter); }
        public void ReceiveBuildResult_ToRequestClient(EPalMapObjectOperationResult Result) { Invoke(nameof(ReceiveBuildResult_ToRequestClient), Result); }
        public void OnExitBaseCamp(PalBaseCampModel BaseCampModel) { Invoke(nameof(OnExitBaseCamp), BaseCampModel); }
        public void OnEnterBaseCamp(PalBaseCampModel BaseCampModel) { Invoke(nameof(OnEnterBaseCamp), BaseCampModel); }
        public void MulticastReturnSelfDelegate__DelegateSignature(PalBuilderComponent Self) { Invoke(nameof(MulticastReturnSelfDelegate__DelegateSignature), Self); }
        public bool IsInstallAtReticle() { return Invoke<bool>(nameof(IsInstallAtReticle)); }
        public bool IsExistsMaterialForBuildObject(PalBuildObjectData BuildObjectData) { return Invoke<bool>(nameof(IsExistsMaterialForBuildObject), BuildObjectData); }
        public bool IsExecuting() { return Invoke<bool>(nameof(IsExecuting)); }
        public bool IsEnableDismantle() { return Invoke<bool>(nameof(IsEnableDismantle)); }
        public EPalMapObjectOperationResult IsEnableBuild() { return Invoke<EPalMapObjectOperationResult>(nameof(IsEnableBuild)); }
        public PalBuildObject GetDismantleTargetObject() { return Invoke<PalBuildObject>(nameof(GetDismantleTargetObject)); }
        public void CollectItemInfoEnableToUseMaterial(Array<Object> StaticItemIds, Array<PalStaticItemIdAndNum> OutItemInfos) { Invoke(nameof(CollectItemInfoEnableToUseMaterial), StaticItemIds, OutItemInfos); }
    }
    public class PalMapObject : Actor
    {
        public PalMapObject(nint addr) : base(addr) { }
        public Object OnNotifiedShowStatusHUDDelegate { get { return this[nameof(OnNotifiedShowStatusHUDDelegate)]; } set { this[nameof(OnNotifiedShowStatusHUDDelegate)] = value; } }
        public Object OnNotifiedShowBuildProgressHUDDelegate { get { return this[nameof(OnNotifiedShowBuildProgressHUDDelegate)]; } set { this[nameof(OnNotifiedShowBuildProgressHUDDelegate)] = value; } }
        public Object OnSetConcreteModelDelegate { get { return this[nameof(OnSetConcreteModelDelegate)]; } set { this[nameof(OnSetConcreteModelDelegate)] = value; } }
        public Vector SpawnLocationOffset { get { return this[nameof(SpawnLocationOffset)].As<Vector>(); } set { this["SpawnLocationOffset"] = value; } }
        public Object ConcreteModelClass { get { return this[nameof(ConcreteModelClass)]; } set { this[nameof(ConcreteModelClass)] = value; } }
        public Array<Object> InteractComps { get { return new Array<Object>(this[nameof(InteractComps)].Address); } }
        public PalMapObjectDamageReactionComponent DamageReaction { get { return this[nameof(DamageReaction)].As<PalMapObjectDamageReactionComponent>(); } set { this["DamageReaction"] = value; } }
        public PalMapObjectVisualEffectComponent VisualEffect { get { return this[nameof(VisualEffect)].As<PalMapObjectVisualEffectComponent>(); } set { this["VisualEffect"] = value; } }
        public bool bSpawnableIfOverlapped { get { return this[nameof(bSpawnableIfOverlapped)].Flag; } set { this[nameof(bSpawnableIfOverlapped)].Flag = value; } }
        public bool bLevelSpawnObject { get { return this[nameof(bLevelSpawnObject)].Flag; } set { this[nameof(bLevelSpawnObject)].Flag = value; } }
        public Array<Object> AllowOverlapCollisionPresetNames { get { return new Array<Object>(this[nameof(AllowOverlapCollisionPresetNames)].Address); } }
        public bool bSpawnSlipAboveIfAnyOverlap { get { return this[nameof(bSpawnSlipAboveIfAnyOverlap)].Flag; } set { this[nameof(bSpawnSlipAboveIfAnyOverlap)].Flag = value; } }
        public bool bShakeOnDamaged { get { return this[nameof(bShakeOnDamaged)].Flag; } set { this[nameof(bShakeOnDamaged)].Flag = value; } }
        public EPalMapObjectDestroyFXType DestroyFXType { get { return (EPalMapObjectDestroyFXType)this[nameof(DestroyFXType)].GetValue<int>(); } set { this[nameof(DestroyFXType)].SetValue<int>((int)value); } }
        public bool bShowOutlineInTargettingReticle { get { return this[nameof(bShowOutlineInTargettingReticle)].Flag; } set { this[nameof(bShowOutlineInTargettingReticle)].Flag = value; } }
        public bool bShowOutlineNearPlayer { get { return this[nameof(bShowOutlineNearPlayer)].Flag; } set { this[nameof(bShowOutlineNearPlayer)].Flag = value; } }
        public bool bAutoDestroyByOverlapSpawning { get { return this[nameof(bAutoDestroyByOverlapSpawning)].Flag; } set { this[nameof(bAutoDestroyByOverlapSpawning)].Flag = value; } }
        public bool bInDoorObject { get { return this[nameof(bInDoorObject)].Flag; } set { this[nameof(bInDoorObject)].Flag = value; } }
        public bool bBaseObject { get { return this[nameof(bBaseObject)].Flag; } set { this[nameof(bBaseObject)].Flag = value; } }
        public Guid HPHUDId { get { return this[nameof(HPHUDId)].As<Guid>(); } set { this["HPHUDId"] = value; } }
        public EPalMapObjectDamagableType DamagableType { get { return (EPalMapObjectDamagableType)this[nameof(DamagableType)].GetValue<int>(); } set { this[nameof(DamagableType)].SetValue<int>((int)value); } }
        public Guid ModelInstanceId { get { return this[nameof(ModelInstanceId)].As<Guid>(); } set { this["ModelInstanceId"] = value; } }
        public PalMapObjectModel MapObjectModel { get { return this[nameof(MapObjectModel)].As<PalMapObjectModel>(); } set { this["MapObjectModel"] = value; } }
        public bool bUnmanagedInLocal { get { return this[nameof(bUnmanagedInLocal)].Flag; } set { this[nameof(bUnmanagedInLocal)].Flag = value; } }
        public Object IndicatorWidgetClass { get { return this[nameof(IndicatorWidgetClass)]; } set { this[nameof(IndicatorWidgetClass)] = value; } }
        public Array<PalMapObjectMeshVisibleData> MeshVisibleDataSet { get { return new Array<PalMapObjectMeshVisibleData>(this[nameof(MeshVisibleDataSet)].Address); } }
        public EPalMapObjectChangeMeshFXType ChangeMeshFXType { get { return (EPalMapObjectChangeMeshFXType)this[nameof(ChangeMeshFXType)].GetValue<int>(); } set { this[nameof(ChangeMeshFXType)].SetValue<int>((int)value); } }
        public Guid OpenWidgetId { get { return this[nameof(OpenWidgetId)].As<Guid>(); } set { this["OpenWidgetId"] = value; } }
        public bool bWorkLocationGroupRaycastStartOffsetOrigin { get { return this[nameof(bWorkLocationGroupRaycastStartOffsetOrigin)].Flag; } set { this[nameof(bWorkLocationGroupRaycastStartOffsetOrigin)].Flag = value; } }
        public bool bShouldPlayDestroyFX { get { return this[nameof(bShouldPlayDestroyFX)].Flag; } set { this[nameof(bShouldPlayDestroyFX)].Flag = value; } }
        public void TryGetConcreteModel(EPalMapObjectGetModelOutPinType OutputPin, PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(TryGetConcreteModel), OutputPin, ConcreteModel); }
        public void ToggleBuildProgressHUD__DelegateSignature(EPalHUDDisplayType DisplayType) { Invoke(nameof(ToggleBuildProgressHUD__DelegateSignature), DisplayType); }
        public void SetIgnoreSave_ServerInternal(bool bIgnore) { Invoke(nameof(SetIgnoreSave_ServerInternal), bIgnore); }
        public void ReturnSelf__DelegateSignature(PalMapObject Self, EPalHUDDisplayType DisplayType) { Invoke(nameof(ReturnSelf__DelegateSignature), Self, DisplayType); }
        public void OnUpdatedEnableTickByModel(PalMapObjectModel Model) { Invoke(nameof(OnUpdatedEnableTickByModel), Model); }
        public void OnRep_MapObjectModel() { Invoke(nameof(OnRep_MapObjectModel)); }
        public void OnInteractEnd(Actor Other, Object Component) { Invoke(nameof(OnInteractEnd), Other, Component); }
        public void OnInteractBegin(Actor Other, Object Component) { Invoke(nameof(OnInteractBegin), Other, Component); }
        public void OnDisposeModel_ServerInternal(PalMapObjectModel DisposeModel, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDisposeModel_ServerInternal), DisposeModel, Options); }
        public void OnDamaged(PalMapObjectModel TargetModel, PalDamageInfo DamageInfo) { Invoke(nameof(OnDamaged), TargetModel, DamageInfo); }
        public void OnCloseParameter(PalHUDDispatchParameterBase Parameter) { Invoke(nameof(OnCloseParameter), Parameter); }
        public PalMapObjectModel GetModel() { return Invoke<PalMapObjectModel>(nameof(GetModel)); }
        public Guid GetGroupIdBelongTo() { return Invoke<Guid>(nameof(GetGroupIdBelongTo)); }
        public void DisposeSelf_ServerInternal() { Invoke(nameof(DisposeSelf_ServerInternal)); }
        public void CallOrRegisterOnSetConcreteModel(Object Delegate) { Invoke(nameof(CallOrRegisterOnSetConcreteModel), Delegate); }
        public void BroadcastShouldPlayDestroyFX() { Invoke(nameof(BroadcastShouldPlayDestroyFX)); }
        public void BP_OnSetConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(BP_OnSetConcreteModel), ConcreteModel); }
    }
    public class PalBuildObject : PalMapObject
    {
        public PalBuildObject(nint addr) : base(addr) { }
        public Object OnChangeState { get { return this[nameof(OnChangeState)]; } set { this[nameof(OnChangeState)] = value; } }
        public EPalBuildObjectInstallStrategy InstallStrategy { get { return (EPalBuildObjectInstallStrategy)this[nameof(InstallStrategy)].GetValue<int>(); } set { this[nameof(InstallStrategy)].SetValue<int>((int)value); } }
        public float InstallCapacitySlopeAngle { get { return this[nameof(InstallCapacitySlopeAngle)].GetValue<float>(); } set { this[nameof(InstallCapacitySlopeAngle)].SetValue<float>(value); } }
        public float InstallCapacitySinkRateByHeight { get { return this[nameof(InstallCapacitySinkRateByHeight)].GetValue<float>(); } set { this[nameof(InstallCapacitySinkRateByHeight)].SetValue<float>(value); } }
        public PalBuildObjectVisualControlComponent VisualCtrl { get { return this[nameof(VisualCtrl)].As<PalBuildObjectVisualControlComponent>(); } set { this["VisualCtrl"] = value; } }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
        public ShapeComponent OverlapCheckCollision { get { return this[nameof(OverlapCheckCollision)].As<ShapeComponent>(); } set { this["OverlapCheckCollision"] = value; } }
        public ComponentReference OverlapCheckCollisionRef { get { return this[nameof(OverlapCheckCollisionRef)].As<ComponentReference>(); } set { this["OverlapCheckCollisionRef"] = value; } }
        public Box LocalBounds { get { return this[nameof(LocalBounds)].As<Box>(); } set { this["LocalBounds"] = value; } }
        public PalBuildObjectOverlapChecker OverlapChecker { get { return this[nameof(OverlapChecker)].As<PalBuildObjectOverlapChecker>(); } set { this["OverlapChecker"] = value; } }
        public Array<MeshComponent> AllMeshes { get { return new Array<MeshComponent>(this[nameof(AllMeshes)].Address); } }
        public Array<PrimitiveComponent> VirtualMeshCollisions { get { return new Array<PrimitiveComponent>(this[nameof(VirtualMeshCollisions)].Address); } }
        public EPalBuildObjectState CurrentState { get { return (EPalBuildObjectState)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public Guid WorldHUDId { get { return this[nameof(WorldHUDId)].As<Guid>(); } set { this["WorldHUDId"] = value; } }
        public Guid buildProgressWorldHUDId { get { return this[nameof(buildProgressWorldHUDId)].As<Guid>(); } set { this["buildProgressWorldHUDId"] = value; } }
        public Vector WorldHUDDisplayOffset { get { return this[nameof(WorldHUDDisplayOffset)].As<Vector>(); } set { this["WorldHUDDisplayOffset"] = value; } }
        public float WorldHUDDisplayRange { get { return this[nameof(WorldHUDDisplayRange)].GetValue<float>(); } set { this[nameof(WorldHUDDisplayRange)].SetValue<float>(value); } }
        public Vector buildProgressHUDDisplayOffset { get { return this[nameof(buildProgressHUDDisplayOffset)].As<Vector>(); } set { this["buildProgressHUDDisplayOffset"] = value; } }
        public Vector2D buildProgressHUDDisplayOffsetScreen { get { return this[nameof(buildProgressHUDDisplayOffsetScreen)].As<Vector2D>(); } set { this["buildProgressHUDDisplayOffsetScreen"] = value; } }
        public float buildProgressHUDDisplayRange { get { return this[nameof(buildProgressHUDDisplayRange)].GetValue<float>(); } set { this[nameof(buildProgressHUDDisplayRange)].SetValue<float>(value); } }
        public AkAudioEvent BuildCompleteSEOverride { get { return this[nameof(BuildCompleteSEOverride)].As<AkAudioEvent>(); } set { this["BuildCompleteSEOverride"] = value; } }
        public float BuildProgressVisualRate { get { return this[nameof(BuildProgressVisualRate)].GetValue<float>(); } set { this[nameof(BuildProgressVisualRate)].SetValue<float>(value); } }
        public bool bDismantleTargetInLocal { get { return this[nameof(bDismantleTargetInLocal)].Flag; } set { this[nameof(bDismantleTargetInLocal)].Flag = value; } }
        public Object DefaultMeshSettingMap { get { return this[nameof(DefaultMeshSettingMap)]; } set { this[nameof(DefaultMeshSettingMap)] = value; } }
        public void PlayBuildCompleteFX_ToALL() { Invoke(nameof(PlayBuildCompleteFX_ToALL)); }
        public void OnUpdateHp(PalMapObjectModel DamagedModel) { Invoke(nameof(OnUpdateHp), DamagedModel); }
        public void OnUpdateBuildWorkAmount(PalWorkProgress WorkProgress) { Invoke(nameof(OnUpdateBuildWorkAmount), WorkProgress); }
        public void OnTriggerInteractBuilding(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteractBuilding), OtherActor, IndicatorType); }
        public void OnTickRepairCompleteAnimation() { Invoke(nameof(OnTickRepairCompleteAnimation)); }
        public void OnTickBuildCompleteAnimation() { Invoke(nameof(OnTickBuildCompleteAnimation)); }
        public void OnStartTriggerInteractBuilding(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnStartTriggerInteractBuilding), OtherActor, IndicatorType); }
        public void OnRep_CurrentState() { Invoke(nameof(OnRep_CurrentState)); }
        public void OnRep_BuildProgressVisualRate() { Invoke(nameof(OnRep_BuildProgressVisualRate)); }
        public void OnNotAvailable_BlueprintImpl() { Invoke(nameof(OnNotAvailable_BlueprintImpl)); }
        public void OnFinishBuildWork_ServerInternal(PalBuildProcess BuildProcess) { Invoke(nameof(OnFinishBuildWork_ServerInternal), BuildProcess); }
        public void OnEndTriggerInteractBuilding(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnEndTriggerInteractBuilding), OtherActor, IndicatorType); }
        public void OnDamage(PalMapObjectModel DamagedModel, PalDamageInfo DamageInfo) { Invoke(nameof(OnDamage), DamagedModel, DamageInfo); }
        public void OnChangeStateDelegate__DelegateSignature(EPalBuildObjectState State) { Invoke(nameof(OnChangeStateDelegate__DelegateSignature), State); }
        public void OnBeginInteractBuilding(Actor OtherActor, Object InteractiveObject) { Invoke(nameof(OnBeginInteractBuilding), OtherActor, InteractiveObject); }
        public void OnAvailable_BlueprintImpl() { Invoke(nameof(OnAvailable_BlueprintImpl)); }
        public bool IsAvailable() { return Invoke<bool>(nameof(IsAvailable)); }
        public ShapeComponent GetBuildWorkableBoundsShape() { return Invoke<ShapeComponent>(nameof(GetBuildWorkableBoundsShape)); }
    }
    public class PalBuildObjectBaseCampPoint : PalBuildObject
    {
        public PalBuildObjectBaseCampPoint(nint addr) : base(addr) { }
        public Transform GetWorkerSpawnLocalTransform() { return Invoke<Transform>(nameof(GetWorkerSpawnLocalTransform)); }
        public Transform GetFastTravelLocalTransform() { return Invoke<Transform>(nameof(GetFastTravelLocalTransform)); }
    }
    public class PalBuildObjectBreedFarm : PalBuildObject
    {
        public PalBuildObjectBreedFarm(nint addr) : base(addr) { }
        public ComponentReference ChestInteractRef { get { return this[nameof(ChestInteractRef)].As<ComponentReference>(); } set { this["ChestInteractRef"] = value; } }
        public ComponentReference WalkAroundVolumeRef { get { return this[nameof(WalkAroundVolumeRef)].As<ComponentReference>(); } set { this["WalkAroundVolumeRef"] = value; } }
    }
    public class PalBuildObjectDataMap : Object
    {
        public PalBuildObjectDataMap(nint addr) : base(addr) { }
        public Object BuildObjectDataIdMap { get { return this[nameof(BuildObjectDataIdMap)]; } set { this[nameof(BuildObjectDataIdMap)] = value; } }
        public PalBuildObjectData GetByMapObjectId(Object MapObjectId) { return Invoke<PalBuildObjectData>(nameof(GetByMapObjectId), MapObjectId); }
        public PalBuildObjectData GetById(Object ID) { return Invoke<PalBuildObjectData>(nameof(GetById), ID); }
        public void GetBuildObjectDataMapForType(EPalBuildObjectTypeA TypeA, Array<PalBuildObjectData> OutArray) { Invoke(nameof(GetBuildObjectDataMapForType), TypeA, OutArray); }
        public void GetBuildObjectDataArrayForTypeAByTypeB(EPalBuildObjectTypeA TypeA, Array<PalBuildObjectDataSetTypeB> OutArray) { Invoke(nameof(GetBuildObjectDataArrayForTypeAByTypeB), TypeA, OutArray); }
    }
    public class PalBuildObjectDefenseBase : PalBuildObject
    {
        public PalBuildObjectDefenseBase(nint addr) : base(addr) { }
        public Object DefenseAIActionClass { get { return this[nameof(DefenseAIActionClass)]; } set { this[nameof(DefenseAIActionClass)] = value; } }
        public PalDataTableRowName_ItemData BulletItemId { get { return this[nameof(BulletItemId)].As<PalDataTableRowName_ItemData>(); } set { this["BulletItemId"] = value; } }
        public int MagazineSize { get { return this[nameof(MagazineSize)].GetValue<int>(); } set { this[nameof(MagazineSize)].SetValue<int>(value); } }
    }
    public class PalBuildObjectDataUtility : BlueprintFunctionLibrary
    {
        public PalBuildObjectDataUtility(nint addr) : base(addr) { }
        public int ToSortPriorityTypeB(EPalBuildObjectTypeB TypeB) { return Invoke<int>(nameof(ToSortPriorityTypeB), TypeB); }
        public int ToSortPriorityTypeA(EPalBuildObjectTypeA TypeA) { return Invoke<int>(nameof(ToSortPriorityTypeA), TypeA); }
        public int ToInt(EPalBuildObjectTypeA TypeA) { return Invoke<int>(nameof(ToInt), TypeA); }
        public EPalBuildObjectTypeA ToBuildObjectTypeA(int Value) { return Invoke<EPalBuildObjectTypeA>(nameof(ToBuildObjectTypeA), Value); }
        public void MaterialInfos(PalBuildObjectData BuildObjectData, Array<PalItemRecipeMaterialInfo> MaterialInfos) { Invoke(nameof(MaterialInfos), BuildObjectData, MaterialInfos); }
    }
    public class PalBuildObjectFarmBlockV2 : PalBuildObject
    {
        public PalBuildObjectFarmBlockV2(nint addr) : base(addr) { }
        public PalDataTableRowName_FarmCropData CropDataId { get { return this[nameof(CropDataId)].As<PalDataTableRowName_FarmCropData>(); } set { this["CropDataId"] = value; } }
        public NiagaraSystem GrowupFX { get { return this[nameof(GrowupFX)].As<NiagaraSystem>(); } set { this["GrowupFX"] = value; } }
        public PalMapObjectFarmCrop CropActor { get { return this[nameof(CropActor)].As<PalMapObjectFarmCrop>(); } set { this["CropActor"] = value; } }
        public void OnUpdateState_ServerInternal(EPalFarmCropState LastCropState, EPalFarmCropState NextCropState) { Invoke(nameof(OnUpdateState_ServerInternal), LastCropState, NextCropState); }
    }
    public class PalBuildObjectGenerateEnergy : PalBuildObject
    {
        public PalBuildObjectGenerateEnergy(nint addr) : base(addr) { }
        public EPalEnergyType GenerateEnergyType { get { return (EPalEnergyType)this[nameof(GenerateEnergyType)].GetValue<int>(); } set { this[nameof(GenerateEnergyType)].SetValue<int>((int)value); } }
        public float GenerateEnergyRateByWorker { get { return this[nameof(GenerateEnergyRateByWorker)].GetValue<float>(); } set { this[nameof(GenerateEnergyRateByWorker)].SetValue<float>(value); } }
        public float MaxEnergyStorage { get { return this[nameof(MaxEnergyStorage)].GetValue<float>(); } set { this[nameof(MaxEnergyStorage)].SetValue<float>(value); } }
        public void OnUpdateWorkAssigned_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUpdateWorkAssigned_ServerInternal), Work); }
        public void OnStartGenerate() { Invoke(nameof(OnStartGenerate)); }
        public void OnEndGenerate() { Invoke(nameof(OnEndGenerate)); }
        public void BroadcastStartGenerate() { Invoke(nameof(BroadcastStartGenerate)); }
        public void BroadcastEndGenerate() { Invoke(nameof(BroadcastEndGenerate)); }
    }
    public class PalBuildObjectInstallChecker : Actor
    {
        public PalBuildObjectInstallChecker(nint addr) : base(addr) { }
        public PalBuildObject TargetBuildObject { get { return this[nameof(TargetBuildObject)].As<PalBuildObject>(); } set { this["TargetBuildObject"] = value; } }
        public ShapeComponent OverlapCheckComponent { get { return this[nameof(OverlapCheckComponent)].As<ShapeComponent>(); } set { this["OverlapCheckComponent"] = value; } }
        public PalBuildObjectOverlapChecker OverlapChecker { get { return this[nameof(OverlapChecker)].As<PalBuildObjectOverlapChecker>(); } set { this["OverlapChecker"] = value; } }
        public PalBuildObjectInstallStrategyBase InstallStrategy { get { return this[nameof(InstallStrategy)].As<PalBuildObjectInstallStrategyBase>(); } set { this["InstallStrategy"] = value; } }
    }
    public class PalBuildObjectInstallStrategyBase : Object
    {
        public PalBuildObjectInstallStrategyBase(nint addr) : base(addr) { }
        public PalBuildObject TargetBuildObject { get { return this[nameof(TargetBuildObject)].As<PalBuildObject>(); } set { this["TargetBuildObject"] = value; } }
    }
    public class PalBuildObjectInstallStrategyAttachToObjectBase : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyAttachToObjectBase(nint addr) : base(addr) { }
    }
    public class PalBuildObjectInstallStrategyAttachToCeil : PalBuildObjectInstallStrategyAttachToObjectBase
    {
        public PalBuildObjectInstallStrategyAttachToCeil(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelConnectorBase : Object
    {
        public PalMapObjectModelConnectorBase(nint addr) : base(addr) { }
        public int SupportedLevel { get { return this[nameof(SupportedLevel)].GetValue<int>(); } set { this[nameof(SupportedLevel)].SetValue<int>(value); } }
        public PalMapObjectModelConnectInfo ConnectInfoAnyPlace { get { return this[nameof(ConnectInfoAnyPlace)].As<PalMapObjectModelConnectInfo>(); } set { this["ConnectInfoAnyPlace"] = value; } }
    }
    public class PalMapObjectModelConnectorAttach : PalMapObjectModelConnectorBase
    {
        public PalMapObjectModelConnectorAttach(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelConnectorAttachToCeil : PalMapObjectModelConnectorAttach
    {
        public PalMapObjectModelConnectorAttachToCeil(nint addr) : base(addr) { }
    }
    public class PalBuildObjectInstallStrategyAttachToWall : PalBuildObjectInstallStrategyAttachToObjectBase
    {
        public PalBuildObjectInstallStrategyAttachToWall(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelConnectorAttachToWall : PalMapObjectModelConnectorAttach
    {
        public PalMapObjectModelConnectorAttachToWall(nint addr) : base(addr) { }
    }
    public class PalBuildObjectInstallStrategySinkableNormal : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategySinkableNormal(nint addr) : base(addr) { }
    }
    public class PalBuildObjectInstallStrategyBaseCampPoint : PalBuildObjectInstallStrategySinkableNormal
    {
        public PalBuildObjectInstallStrategyBaseCampPoint(nint addr) : base(addr) { }
        public PalBuildObjectBaseCampPoint TargetBuildObjectCache { get { return this[nameof(TargetBuildObjectCache)].As<PalBuildObjectBaseCampPoint>(); } set { this["TargetBuildObjectCache"] = value; } }
    }
    public class PalBuildObjectInstallStrategyFloor : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyFloor(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalBuildObjectInstallStrategyFoundation : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyFoundation(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalMapObjectModelConnectorFoundation : PalMapObjectModelConnectorBase
    {
        public PalMapObjectModelConnectorFoundation(nint addr) : base(addr) { }
        public PalMapObjectModelConnectInfo FrontConnectInfo { get { return this[nameof(FrontConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["FrontConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo BackConnectInfo { get { return this[nameof(BackConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["BackConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo LeftConnectInfo { get { return this[nameof(LeftConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["LeftConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo RightConnectInfo { get { return this[nameof(RightConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["RightConnectInfo"] = value; } }
    }
    public class PalBuildObjectInstallStrategyGroundWall : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyGroundWall(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalBuildObjectInstallStrategyNormal : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyNormal(nint addr) : base(addr) { }
    }
    public class PalBuildObjectInstallStrategyPalStorage : PalBuildObjectInstallStrategySinkableNormal
    {
        public PalBuildObjectInstallStrategyPalStorage(nint addr) : base(addr) { }
        public PalBuildObjectPalStorage TargetPalStorageCache { get { return this[nameof(TargetPalStorageCache)].As<PalBuildObjectPalStorage>(); } set { this["TargetPalStorageCache"] = value; } }
    }
    public class PalBuildObjectInstallStrategyRoof : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyRoof(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalMapObjectModelConnectorRoof : PalMapObjectModelConnectorBase
    {
        public PalMapObjectModelConnectorRoof(nint addr) : base(addr) { }
        public PalMapObjectModelConnectInfo FrontConnectInfo { get { return this[nameof(FrontConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["FrontConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo BackConnectInfo { get { return this[nameof(BackConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["BackConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo LeftConnectInfo { get { return this[nameof(LeftConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["LeftConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo RightConnectInfo { get { return this[nameof(RightConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["RightConnectInfo"] = value; } }
    }
    public class PalBuildObjectInstallStrategyStairs : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyStairs(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalMapObjectModelConnectorStair : PalMapObjectModelConnectorBase
    {
        public PalMapObjectModelConnectorStair(nint addr) : base(addr) { }
        public PalMapObjectModelConnectInfo UpConnectInfo { get { return this[nameof(UpConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["UpConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo DownConnectInfo { get { return this[nameof(DownConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["DownConnectInfo"] = value; } }
    }
    public class PalBuildObjectInstallStrategyWall : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyWall(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalBuildObjectInstallStrategyWallV2 : PalBuildObjectInstallStrategyBase
    {
        public PalBuildObjectInstallStrategyWallV2(nint addr) : base(addr) { }
        public Actor HitActorCache { get { return this[nameof(HitActorCache)].As<Actor>(); } set { this["HitActorCache"] = value; } }
        public PalBuildObject HitBuildObjectCache { get { return this[nameof(HitBuildObjectCache)].As<PalBuildObject>(); } set { this["HitBuildObjectCache"] = value; } }
    }
    public class PalMapObjectModelConnectorWallV2 : PalMapObjectModelConnectorBase
    {
        public PalMapObjectModelConnectorWallV2(nint addr) : base(addr) { }
        public PalMapObjectModelConnectInfo UpConnectInfo { get { return this[nameof(UpConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["UpConnectInfo"] = value; } }
        public PalMapObjectModelConnectInfo DownConnectInfo { get { return this[nameof(DownConnectInfo)].As<PalMapObjectModelConnectInfo>(); } set { this["DownConnectInfo"] = value; } }
    }
    public class PalBuildObjectMonsterFarm : PalBuildObject
    {
        public PalBuildObjectMonsterFarm(nint addr) : base(addr) { }
        public ComponentReference WalkAroundVolumeRef { get { return this[nameof(WalkAroundVolumeRef)].As<ComponentReference>(); } set { this["WalkAroundVolumeRef"] = value; } }
    }
    public class PalBuildObjectOverlapChecker : Object
    {
        public PalBuildObjectOverlapChecker(nint addr) : base(addr) { }
        public ShapeComponent Collision { get { return this[nameof(Collision)].As<ShapeComponent>(); } set { this["Collision"] = value; } }
        public PalBuildObject Owner { get { return this[nameof(Owner)].As<PalBuildObject>(); } set { this["Owner"] = value; } }
        public Array<PalBuildObject> OverlapBuildObjects { get { return new Array<PalBuildObject>(this[nameof(OverlapBuildObjects)].Address); } }
        public Array<Object> OverlapOtherObjects { get { return new Array<Object>(this[nameof(OverlapOtherObjects)].Address); } }
        public Actor OverlappedActor { get { return this[nameof(OverlappedActor)].As<Actor>(); } set { this["OverlappedActor"] = value; } }
        public Array<Object> AllowOverlapCollisionPresetNames { get { return new Array<Object>(this[nameof(AllowOverlapCollisionPresetNames)].Address); } }
        public void OnOverlapEnd(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnOverlapEnd), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex); }
        public void OnOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalBuildObjectPalStorage : PalBuildObject
    {
        public PalBuildObjectPalStorage(nint addr) : base(addr) { }
        public Object OnOverlapBeginCageArea { get { return this[nameof(OnOverlapBeginCageArea)]; } set { this[nameof(OnOverlapBeginCageArea)] = value; } }
        public Object OnOverlapEndCageArea { get { return this[nameof(OnOverlapEndCageArea)]; } set { this[nameof(OnOverlapEndCageArea)] = value; } }
        public Object OnOverlapBeginCageWalls { get { return this[nameof(OnOverlapBeginCageWalls)]; } set { this[nameof(OnOverlapBeginCageWalls)] = value; } }
        public Object OnOverlapEndCageWalls { get { return this[nameof(OnOverlapEndCageWalls)]; } set { this[nameof(OnOverlapEndCageWalls)] = value; } }
        public float BaseCampAreaRange { get { return this[nameof(BaseCampAreaRange)].GetValue<float>(); } set { this[nameof(BaseCampAreaRange)].SetValue<float>(value); } }
        public ComponentReference AccessPointObjectRef { get { return this[nameof(AccessPointObjectRef)].As<ComponentReference>(); } set { this["AccessPointObjectRef"] = value; } }
        public ComponentReference AccessPointMovableRangeRef { get { return this[nameof(AccessPointMovableRangeRef)].As<ComponentReference>(); } set { this["AccessPointMovableRangeRef"] = value; } }
        public ComponentReference AccessPointInteractRef { get { return this[nameof(AccessPointInteractRef)].As<ComponentReference>(); } set { this["AccessPointInteractRef"] = value; } }
        public ComponentReference ChestObjectRef { get { return this[nameof(ChestObjectRef)].As<ComponentReference>(); } set { this["ChestObjectRef"] = value; } }
        public ComponentReference ChestMovableRangeRef { get { return this[nameof(ChestMovableRangeRef)].As<ComponentReference>(); } set { this["ChestMovableRangeRef"] = value; } }
        public ComponentReference ChestInteractRef { get { return this[nameof(ChestInteractRef)].As<ComponentReference>(); } set { this["ChestInteractRef"] = value; } }
        public Object ChestWorkableBoundsName { get { return this[nameof(ChestWorkableBoundsName)]; } set { this[nameof(ChestWorkableBoundsName)] = value; } }
        public int ChestSlotNum { get { return this[nameof(ChestSlotNum)].GetValue<int>(); } set { this[nameof(ChestSlotNum)].SetValue<int>(value); } }
        public void PlaySpawnCharacterFX(PalCharacter TargetActor) { Invoke(nameof(PlaySpawnCharacterFX), TargetActor); }
        public void OverlapAreaDelegate__DelegateSignature(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp) { Invoke(nameof(OverlapAreaDelegate__DelegateSignature), OverlappedComp, OtherActor, OtherComp); }
        public void OnSpawnCharacter(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(OnSpawnCharacter), IndividualId, PhantomId); }
        public Transform GetWorkerSpawnLocalTransform() { return Invoke<Transform>(nameof(GetWorkerSpawnLocalTransform)); }
        public Transform GetFastTravelLocalTransform() { return Invoke<Transform>(nameof(GetFastTravelLocalTransform)); }
        public Transform GetDisplayCharacterSpawnLocalTransform() { return Invoke<Transform>(nameof(GetDisplayCharacterSpawnLocalTransform)); }
        public SceneComponent GetChestObject() { return Invoke<SceneComponent>(nameof(GetChestObject)); }
        public BoxComponent GetChestMovableRange() { return Invoke<BoxComponent>(nameof(GetChestMovableRange)); }
        public ShapeComponent GetCageAreaShape() { return Invoke<ShapeComponent>(nameof(GetCageAreaShape)); }
        public StaticMeshComponent GetAccessPointObject() { return Invoke<StaticMeshComponent>(nameof(GetAccessPointObject)); }
        public BoxComponent GetAccessPointMovableRange() { return Invoke<BoxComponent>(nameof(GetAccessPointMovableRange)); }
    }
    public class PalBuildObjectVisualControlComponent : ActorComponent
    {
        public PalBuildObjectVisualControlComponent(nint addr) : base(addr) { }
        public Object NormalMaterialMapCache { get { return this[nameof(NormalMaterialMapCache)]; } set { this[nameof(NormalMaterialMapCache)] = value; } }
        public Object DecalNormalMaterialMapCache { get { return this[nameof(DecalNormalMaterialMapCache)]; } set { this[nameof(DecalNormalMaterialMapCache)] = value; } }
        public NiagaraComponent DamageNiagaraComp { get { return this[nameof(DamageNiagaraComp)].As<NiagaraComponent>(); } set { this["DamageNiagaraComp"] = value; } }
    }
    public class PalBuildOperator : Object
    {
        public PalBuildOperator(nint addr) : base(addr) { }
        public Object OnCompleteBuildInServerDelegate { get { return this[nameof(OnCompleteBuildInServerDelegate)]; } set { this[nameof(OnCompleteBuildInServerDelegate)] = value; } }
        public BuildingSurfaceMaterialSet BuildingSurfaceMaterialSet { get { return this[nameof(BuildingSurfaceMaterialSet)].As<BuildingSurfaceMaterialSet>(); } set { this["BuildingSurfaceMaterialSet"] = value; } }
        public PalBuildObjectDataMap DataMap { get { return this[nameof(DataMap)].As<PalBuildObjectDataMap>(); } set { this["DataMap"] = value; } }
        public Array<PalBuildObject> BuildObjects { get { return new Array<PalBuildObject>(this[nameof(BuildObjects)].Address); } }
    }
    public class PalBuildProcess : Object
    {
        public PalBuildProcess(nint addr) : base(addr) { }
        public Object OnUpdateStateDelegate { get { return this[nameof(OnUpdateStateDelegate)]; } set { this[nameof(OnUpdateStateDelegate)] = value; } }
        public Object OnFinishBuildDelegate { get { return this[nameof(OnFinishBuildDelegate)]; } set { this[nameof(OnFinishBuildDelegate)] = value; } }
        public EPalBuildProcessState State { get { return (EPalBuildProcessState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public PalWorkProgress BuildWork { get { return this[nameof(BuildWork)].As<PalWorkProgress>(); } set { this["BuildWork"] = value; } }
        public void UpdateStateDelegate__DelegateSignature(PalBuildProcess BuildProcess) { Invoke(nameof(UpdateStateDelegate__DelegateSignature), BuildProcess); }
        public void OnRep_StateChanged() { Invoke(nameof(OnRep_StateChanged)); }
        public void OnRep_BuildWork() { Invoke(nameof(OnRep_BuildWork)); }
        public void OnReflectFinishBuildWork(PalWorkBase Work) { Invoke(nameof(OnReflectFinishBuildWork), Work); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
        public bool IsCompleted() { return Invoke<bool>(nameof(IsCompleted)); }
        public PalWorkProgress GetWorkProgress() { return Invoke<PalWorkProgress>(nameof(GetWorkProgress)); }
    }
    public class PalBullet : Actor
    {
        public PalBullet(nint addr) : base(addr) { }
        public Object OnDestroyDelegate { get { return this[nameof(OnDestroyDelegate)]; } set { this[nameof(OnDestroyDelegate)] = value; } }
        public SphereComponent CollisionComp { get { return this[nameof(CollisionComp)].As<SphereComponent>(); } set { this["CollisionComp"] = value; } }
        public ProjectileMovementComponent ProjectileMovement { get { return this[nameof(ProjectileMovement)].As<ProjectileMovementComponent>(); } set { this["ProjectileMovement"] = value; } }
        public EPalPlayerDamageCameraShakeCategory PlayerDamageCameraShake { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(PlayerDamageCameraShake)].GetValue<int>(); } set { this[nameof(PlayerDamageCameraShake)].SetValue<int>((int)value); } }
        public bool bIsHitFriend { get { return this[nameof(bIsHitFriend)].Flag; } set { this[nameof(bIsHitFriend)].Flag = value; } }
        public int WeaponDamage { get { return this[nameof(WeaponDamage)].GetValue<int>(); } set { this[nameof(WeaponDamage)].SetValue<int>(value); } }
        public TimerHandle Handle { get { return this[nameof(Handle)].As<TimerHandle>(); } set { this["Handle"] = value; } }
        public bool isDamageable { get { return this[nameof(isDamageable)].Flag; } set { this[nameof(isDamageable)].Flag = value; } }
        public bool AISoundEmitable { get { return this[nameof(AISoundEmitable)].Flag; } set { this[nameof(AISoundEmitable)].Flag = value; } }
        public float SneakAttackRate { get { return this[nameof(SneakAttackRate)].GetValue<float>(); } set { this[nameof(SneakAttackRate)].SetValue<float>(value); } }
        public float DeleteTime { get { return this[nameof(DeleteTime)].GetValue<float>(); } set { this[nameof(DeleteTime)].SetValue<float>(value); } }
        public float DamageDecayStartRate { get { return this[nameof(DamageDecayStartRate)].GetValue<float>(); } set { this[nameof(DamageDecayStartRate)].SetValue<float>(value); } }
        public float LifeTimer { get { return this[nameof(LifeTimer)].GetValue<float>(); } set { this[nameof(LifeTimer)].SetValue<float>(value); } }
        public EPalDamageAnimationReactionType weaponBulletDamageReactionType { get { return (EPalDamageAnimationReactionType)this[nameof(weaponBulletDamageReactionType)].GetValue<int>(); } set { this[nameof(weaponBulletDamageReactionType)].SetValue<int>((int)value); } }
        public Array<PalPassiveSkillEffect> skillEffectList { get { return new Array<PalPassiveSkillEffect>(this[nameof(skillEffectList)].Address); } }
        public Object BulletHoleDecalsMap { get { return this[nameof(BulletHoleDecalsMap)]; } set { this[nameof(BulletHoleDecalsMap)] = value; } }
        public BulletHoleDecalInfo DefaultBulletHoleDecals { get { return this[nameof(DefaultBulletHoleDecals)].As<BulletHoleDecalInfo>(); } set { this["DefaultBulletHoleDecals"] = value; } }
        public void SetWeaponDamage(int Damage) { Invoke(nameof(SetWeaponDamage), Damage); }
        public void SetSneakAttackRate(float Rate) { Invoke(nameof(SetSneakAttackRate), Rate); }
        public void SetSkillEffectList(Array<PalPassiveSkillEffect> inList) { Invoke(nameof(SetSkillEffectList), inList); }
        public void SetDeleteTime(float DeleteSecound, float DecayStartRate) { Invoke(nameof(SetDeleteTime), DeleteSecound, DecayStartRate); }
        public void SetDamageable(bool damageable) { Invoke(nameof(SetDamageable), damageable); }
        public bool SetBulletHoleDecal(HitResult Hit, float LifeSpan, float FadeTime, float fadeScreenSize) { return Invoke<bool>(nameof(SetBulletHoleDecal), Hit, LifeSpan, FadeTime, fadeScreenSize); }
        public void OnHitToPalEnemy(PrimitiveComponent HitComp, PalCharacter OtherCharacter, PrimitiveComponent OtherComp, HitResult Hit) { Invoke(nameof(OnHitToPalEnemy), HitComp, OtherCharacter, OtherComp, Hit); }
        public void OnHitToPalCharacter(PrimitiveComponent HitComp, PalCharacter OtherCharacter, PrimitiveComponent OtherComp, HitResult Hit) { Invoke(nameof(OnHitToPalCharacter), HitComp, OtherCharacter, OtherComp, Hit); }
        public void OnHitToActor(PrimitiveComponent HitComp, Actor OtherActor, PrimitiveComponent OtherComp, HitResult Hit) { Invoke(nameof(OnHitToActor), HitComp, OtherActor, OtherComp, Hit); }
        public void OnHit(PrimitiveComponent HitComp, Actor OtherActor, PrimitiveComponent OtherComp, HitResult Hit) { Invoke(nameof(OnHit), HitComp, OtherActor, OtherComp, Hit); }
        public void OnDestroy(PrimitiveComponent HitComp, Actor OtherCharacter, PrimitiveComponent OtherComp, HitResult Hit) { Invoke(nameof(OnDestroy), HitComp, OtherCharacter, OtherComp, Hit); }
        public void OnBlock(PrimitiveComponent HitComp, Actor OtherActor, PrimitiveComponent OtherComp, Vector NormalImpulse, HitResult Hit) { Invoke(nameof(OnBlock), HitComp, OtherActor, OtherComp, NormalImpulse, Hit); }
        public void OnBeginOverlap(PrimitiveComponent HitComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult Hit) { Invoke(nameof(OnBeginOverlap), HitComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, Hit); }
        public bool IsDestroy(PrimitiveComponent HitComp, Actor OtherCharacter, PrimitiveComponent OtherComp, HitResult Hit) { return Invoke<bool>(nameof(IsDestroy), HitComp, OtherCharacter, OtherComp, Hit); }
        public int GetWeaponDamage() { return Invoke<int>(nameof(GetWeaponDamage)); }
        public float GetSneakAttackRate() { return Invoke<float>(nameof(GetSneakAttackRate)); }
        public float GetParameterWithPassiveSkillEffect(float originalValue, EPalPassiveSkillEffectType EffectType) { return Invoke<float>(nameof(GetParameterWithPassiveSkillEffect), originalValue, EffectType); }
        public float GetDecayDamageRate() { return Invoke<float>(nameof(GetDecayDamageRate)); }
        public void DestroyBulletDelegate__DelegateSignature(PrimitiveComponent HitComp, Actor OtherCharacter, PrimitiveComponent OtherComp, HitResult Hi) { Invoke(nameof(DestroyBulletDelegate__DelegateSignature), HitComp, OtherCharacter, OtherComp, Hi); }
    }
    public class PalBulletCreator : Object
    {
        public PalBulletCreator(nint addr) : base(addr) { }
        public PalBullet SpawnBullet(Object WorldContextObject, Object bulletClass, Transform SpawnTransform, ESpawnActorCollisionHandlingMethod collisionHandlingOverride, Actor Owner, Pawn instigato) { return Invoke<PalBullet>(nameof(SpawnBullet), WorldContextObject, bulletClass, SpawnTransform, collisionHandlingOverride, Owner, instigato); }
        public PalBullet CreateBullet(Object WorldContextObject, PalWeaponBase weapon, Object bulletClass, Transform SpawnTransform, ESpawnActorCollisionHandlingMethod collisionHandlingOverride, Actor Owner, Pawn Instigator) { return Invoke<PalBullet>(nameof(CreateBullet), WorldContextObject, weapon, bulletClass, SpawnTransform, collisionHandlingOverride, Owner, Instigator); }
    }
    public class PalBulletModifierComponent : ActorComponent
    {
        public PalBulletModifierComponent(nint addr) : base(addr) { }
        public void Initialize(PalBullet Bullet) { Invoke(nameof(Initialize), Bullet); }
    }
    public class PalBurnBoxComponent : BoxComponent
    {
        public PalBurnBoxComponent(nint addr) : base(addr) { }
        public void EndOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(EndOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex); }
        public void BeginOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(BeginOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalCameraShakeBase : CameraShakeBase
    {
        public PalCameraShakeBase(nint addr) : base(addr) { }
        public CurveFloat CurveAsset { get { return this[nameof(CurveAsset)].As<CurveFloat>(); } set { this["CurveAsset"] = value; } }
        public float OscillationDuration { get { return this[nameof(OscillationDuration)].GetValue<float>(); } set { this[nameof(OscillationDuration)].SetValue<float>(value); } }
        public float OscillationBlendInTime { get { return this[nameof(OscillationBlendInTime)].GetValue<float>(); } set { this[nameof(OscillationBlendInTime)].SetValue<float>(value); } }
        public float OscillationBlendOutTime { get { return this[nameof(OscillationBlendOutTime)].GetValue<float>(); } set { this[nameof(OscillationBlendOutTime)].SetValue<float>(value); } }
        public ROscillator RotOscillation { get { return this[nameof(RotOscillation)].As<ROscillator>(); } set { this["RotOscillation"] = value; } }
        public VOscillator LocOscillation { get { return this[nameof(LocOscillation)].As<VOscillator>(); } set { this["LocOscillation"] = value; } }
        public FOscillator FOVOscillation { get { return this[nameof(FOVOscillation)].As<FOscillator>(); } set { this["FOVOscillation"] = value; } }
        public float OscillatorTimeRemaining { get { return this[nameof(OscillatorTimeRemaining)].GetValue<float>(); } set { this[nameof(OscillatorTimeRemaining)].SetValue<float>(value); } }
    }
    public class PalCameraShakePattern : CameraShakePattern
    {
        public PalCameraShakePattern(nint addr) : base(addr) { }
    }
    public class PalCaptureBallEffectSettingDataAsset : DataAsset
    {
        public PalCaptureBallEffectSettingDataAsset(nint addr) : base(addr) { }
        public Object EffectSettingDataArray { get { return this[nameof(EffectSettingDataArray)]; } set { this[nameof(EffectSettingDataArray)] = value; } }
        public PalCaptureBallEffectSettingData GetEffectSettingData(EPalSizeType PalSizeType) { return Invoke<PalCaptureBallEffectSettingData>(nameof(GetEffectSettingData), PalSizeType); }
    }
    public class PalCapturedCage : Actor
    {
        public PalCapturedCage(nint addr) : base(addr) { }
        public Object FieldKeyName { get { return this[nameof(FieldKeyName)]; } set { this[nameof(FieldKeyName)] = value; } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public float SpawnRange { get { return this[nameof(SpawnRange)].GetValue<float>(); } set { this[nameof(SpawnRange)].SetValue<float>(value); } }
        public float DespawnRange { get { return this[nameof(DespawnRange)].GetValue<float>(); } set { this[nameof(DespawnRange)].SetValue<float>(value); } }
        public Object SpawnedPalId { get { return this[nameof(SpawnedPalId)]; } set { this[nameof(SpawnedPalId)] = value; } }
        public int SpawnedPalLevel { get { return this[nameof(SpawnedPalLevel)].GetValue<int>(); } set { this[nameof(SpawnedPalLevel)].SetValue<int>(value); } }
        public bool IsRequestedInteract { get { return this[nameof(IsRequestedInteract)].Flag; } set { this[nameof(IsRequestedInteract)].Flag = value; } }
        public bool IsDisableInteractive { get { return this[nameof(IsDisableInteractive)].Flag; } set { this[nameof(IsDisableInteractive)].Flag = value; } }
        public bool IsInSpawnedRange { get { return this[nameof(IsInSpawnedRange)].Flag; } set { this[nameof(IsInSpawnedRange)].Flag = value; } }
        public PalIndividualCharacterHandle SpawnedPalHandle { get { return this[nameof(SpawnedPalHandle)].As<PalIndividualCharacterHandle>(); } set { this["SpawnedPalHandle"] = value; } }
        public void SpawnPal(Object InPalID, int InPalLevel) { Invoke(nameof(SpawnPal), InPalID, InPalLevel); }
        public void SetOverrideKeyName(Object Key) { Invoke(nameof(SetOverrideKeyName), Key); }
        public void SetDisableInteractive() { Invoke(nameof(SetDisableInteractive)); }
        public void RequestInteract(PalPlayerCharacter Attacker) { Invoke(nameof(RequestInteract), Attacker); }
        public void OnCreateHandle(PalInstanceID ID) { Invoke(nameof(OnCreateHandle), ID); }
        public void LotteryAndSpawnPal() { Invoke(nameof(LotteryAndSpawnPal)); }
        public PalCharacter GetSpawnedPal() { return Invoke<PalCharacter>(nameof(GetSpawnedPal)); }
        public EPalInteractiveObjectIndicatorType GetIndicatorType() { return Invoke<EPalInteractiveObjectIndicatorType>(nameof(GetIndicatorType)); }
        public Object GetCampSpawnerName() { return Invoke<Object>(nameof(GetCampSpawnerName)); }
    }
    public class PalCaptureJudgeObject : Actor
    {
        public PalCaptureJudgeObject(nint addr) : base(addr) { }
        public void OnSuccessFinish() { Invoke(nameof(OnSuccessFinish)); }
        public void OnFailedFinish() { Invoke(nameof(OnFailedFinish)); }
        public void OnFailedByTest(PalCharacter Character, CaptureResult Result) { Invoke(nameof(OnFailedByTest), Character, Result); }
        public void OnFailedByMP(PalCharacter Character, CaptureResult Result) { Invoke(nameof(OnFailedByMP), Character, Result); }
        public void OnCaptureSuccess(PalCharacter Character, CaptureResult Result) { Invoke(nameof(OnCaptureSuccess), Character, Result); }
        public void ChallengeCapture_ToServer(PalCharacter Character, float capturePower) { Invoke(nameof(ChallengeCapture_ToServer), Character, capturePower); }
        public void ChallengeCapture(PalCharacter Character, float capturePower) { Invoke(nameof(ChallengeCapture), Character, capturePower); }
        public void CaptureResult_ToALL(PalCharacter Character, CaptureResult Result) { Invoke(nameof(CaptureResult_ToALL), Character, Result); }
    }
    public class PalCaptureReactionComponent : ActorComponent
    {
        public PalCaptureReactionComponent(nint addr) : base(addr) { }
    }
    public class PalCharacter : Character
    {
        public PalCharacter(nint addr) : base(addr) { }
        public float UpdateGroundInterval { get { return this[nameof(UpdateGroundInterval)].GetValue<float>(); } set { this[nameof(UpdateGroundInterval)].SetValue<float>(value); } }
        public PalActionComponent ActionComponent { get { return this[nameof(ActionComponent)].As<PalActionComponent>(); } set { this["ActionComponent"] = value; } }
        public PalCharacterParameterComponent CharacterParameterComponent { get { return this[nameof(CharacterParameterComponent)].As<PalCharacterParameterComponent>(); } set { this["CharacterParameterComponent"] = value; } }
        public PalStaticCharacterParameterComponent StaticCharacterParameterComponent { get { return this[nameof(StaticCharacterParameterComponent)].As<PalStaticCharacterParameterComponent>(); } set { this["StaticCharacterParameterComponent"] = value; } }
        public PalDamageReactionComponent DamageReactionComponent { get { return this[nameof(DamageReactionComponent)].As<PalDamageReactionComponent>(); } set { this["DamageReactionComponent"] = value; } }
        public PalStatusComponent StatusComponent { get { return this[nameof(StatusComponent)].As<PalStatusComponent>(); } set { this["StatusComponent"] = value; } }
        public PalShooterSpringArmComponent CameraBoom { get { return this[nameof(CameraBoom)].As<PalShooterSpringArmComponent>(); } set { this["CameraBoom"] = value; } }
        public PalCharacterCameraComponent FollowCamera { get { return this[nameof(FollowCamera)].As<PalCharacterCameraComponent>(); } set { this["FollowCamera"] = value; } }
        public PalNetworkMulticastGateComponent MulticastGateComponent { get { return this[nameof(MulticastGateComponent)].As<PalNetworkMulticastGateComponent>(); } set { this["MulticastGateComponent"] = value; } }
        public PalLookAtComponent LookAtComponent { get { return this[nameof(LookAtComponent)].As<PalLookAtComponent>(); } set { this["LookAtComponent"] = value; } }
        public PalNavigationInvokerComponent NavInvokerComponent { get { return this[nameof(NavInvokerComponent)].As<PalNavigationInvokerComponent>(); } set { this["NavInvokerComponent"] = value; } }
        public PalFootIKComponent FootIKComponent { get { return this[nameof(FootIKComponent)].As<PalFootIKComponent>(); } set { this["FootIKComponent"] = value; } }
        public PalVisualEffectComponent VisualEffectComponent { get { return this[nameof(VisualEffectComponent)].As<PalVisualEffectComponent>(); } set { this["VisualEffectComponent"] = value; } }
        public PalPassiveSkillComponent PassiveSkillComponent { get { return this[nameof(PassiveSkillComponent)].As<PalPassiveSkillComponent>(); } set { this["PassiveSkillComponent"] = value; } }
        public PalHeadUpDisplayComponent HUDComponent { get { return this[nameof(HUDComponent)].As<PalHeadUpDisplayComponent>(); } set { this["HUDComponent"] = value; } }
        public PalAnimNotifyParameterComponent AnimNotifyComponent { get { return this[nameof(AnimNotifyComponent)].As<PalAnimNotifyParameterComponent>(); } set { this["AnimNotifyComponent"] = value; } }
        public PalCharacterAroundInfoCollectorComponent AroundInfoCollectorComponent { get { return this[nameof(AroundInfoCollectorComponent)].As<PalCharacterAroundInfoCollectorComponent>(); } set { this["AroundInfoCollectorComponent"] = value; } }
        public Object OnChangeActiveActorDelegate { get { return this[nameof(OnChangeActiveActorDelegate)]; } set { this[nameof(OnChangeActiveActorDelegate)] = value; } }
        public Object OnRollingDelegate { get { return this[nameof(OnRollingDelegate)]; } set { this[nameof(OnRollingDelegate)] = value; } }
        public Object OnRollingFinishDelegate { get { return this[nameof(OnRollingFinishDelegate)]; } set { this[nameof(OnRollingFinishDelegate)] = value; } }
        public Object OnCompleteSyncPlayerFromServer_InClient { get { return this[nameof(OnCompleteSyncPlayerFromServer_InClient)]; } set { this[nameof(OnCompleteSyncPlayerFromServer_InClient)] = value; } }
        public Object OnChangeBattleModeDelegate { get { return this[nameof(OnChangeBattleModeDelegate)]; } set { this[nameof(OnChangeBattleModeDelegate)] = value; } }
        public Object OnChangeImportanceDelegate { get { return this[nameof(OnChangeImportanceDelegate)]; } set { this[nameof(OnChangeImportanceDelegate)] = value; } }
        public Object OnCapturedDelegate { get { return this[nameof(OnCapturedDelegate)]; } set { this[nameof(OnCapturedDelegate)] = value; } }
        public bool bIsBattleMode { get { return this[nameof(bIsBattleMode)].Flag; } set { this[nameof(bIsBattleMode)].Flag = value; } }
        public bool bIsTalkMode { get { return this[nameof(bIsTalkMode)].Flag; } set { this[nameof(bIsTalkMode)].Flag = value; } }
        public bool bIsPalActiveActor { get { return this[nameof(bIsPalActiveActor)].Flag; } set { this[nameof(bIsPalActiveActor)].Flag = value; } }
        public bool bIsLocalInitialized { get { return this[nameof(bIsLocalInitialized)].Flag; } set { this[nameof(bIsLocalInitialized)].Flag = value; } }
        public bool bIsDisable_ChangeTickInterval_ByImportance { get { return this[nameof(bIsDisable_ChangeTickInterval_ByImportance)].Flag; } set { this[nameof(bIsDisable_ChangeTickInterval_ByImportance)].Flag = value; } }
        public TimerHandle GroundCheckTimerHandle { get { return this[nameof(GroundCheckTimerHandle)].As<TimerHandle>(); } set { this["GroundCheckTimerHandle"] = value; } }
        public Vector SpawnLocation_ForServer { get { return this[nameof(SpawnLocation_ForServer)].As<Vector>(); } set { this["SpawnLocation_ForServer"] = value; } }
        public FlagContainer IsDisableChangeTickInterval { get { return this[nameof(IsDisableChangeTickInterval)].As<FlagContainer>(); } set { this["IsDisableChangeTickInterval"] = value; } }
        public EPalCharacterImportanceType ImportanceType { get { return (EPalCharacterImportanceType)this[nameof(ImportanceType)].GetValue<int>(); } set { this[nameof(ImportanceType)].SetValue<int>((int)value); } }
        public TimerHandle CheckIndividualParameterReplicateTimerHandle { get { return this[nameof(CheckIndividualParameterReplicateTimerHandle)].As<TimerHandle>(); } set { this["CheckIndividualParameterReplicateTimerHandle"] = value; } }
        public Object RootCollisionProfileName { get { return this[nameof(RootCollisionProfileName)]; } set { this[nameof(RootCollisionProfileName)] = value; } }
        public Object OnCompleteInitializeParameterDelegateMap { get { return this[nameof(OnCompleteInitializeParameterDelegateMap)]; } set { this[nameof(OnCompleteInitializeParameterDelegateMap)] = value; } }
        public void UpdateGroundRayCast() { Invoke(nameof(UpdateGroundRayCast)); }
        public void SetVisibleHandAttachMesh(bool Active) { Invoke(nameof(SetVisibleHandAttachMesh), Active); }
        public void SetVisibleCharacterMesh(bool Active) { Invoke(nameof(SetVisibleCharacterMesh), Active); }
        public void SetDisableChangeIntervalByImportance(Object flagName, bool isDisable) { Invoke(nameof(SetDisableChangeIntervalByImportance), flagName, isDisable); }
        public void SetActiveCollisionMovement(bool Active) { Invoke(nameof(SetActiveCollisionMovement), Active); }
        public void SetActiveActorStayVisible(bool Active) { Invoke(nameof(SetActiveActorStayVisible), Active); }
        public void SetActiveActor(bool Active) { Invoke(nameof(SetActiveActor), Active); }
        public void RPCDummy() { Invoke(nameof(RPCDummy)); }
        public void RollingDelegate__DelegateSignature() { Invoke(nameof(RollingDelegate__DelegateSignature)); }
        public void ReviveCharacter_ToServer(FixedPoint HP) { Invoke(nameof(ReviveCharacter_ToServer), HP); }
        public void ReviveCharacter(FixedPoint HP) { Invoke(nameof(ReviveCharacter), HP); }
        public void ResetTickInterval() { Invoke(nameof(ResetTickInterval)); }
        public void RequestJump() { Invoke(nameof(RequestJump)); }
        public void Play2Montage(AnimMontage firstMontage, AnimMontage nextMontage) { Invoke(nameof(Play2Montage), firstMontage, nextMontage); }
        public void OnTeleport_ToClient(Vector Location, Quat Rotation) { Invoke(nameof(OnTeleport_ToClient), Location, Rotation); }
        public void OnRep_RootCollisionProfileName() { Invoke(nameof(OnRep_RootCollisionProfileName)); }
        public void OnRep_IsPalActiveActor(bool PrevIsActiveActor) { Invoke(nameof(OnRep_IsPalActiveActor), PrevIsActiveActor); }
        public void OnOverlapEndByAroundInfo(Actor OtherActor) { Invoke(nameof(OnOverlapEndByAroundInfo), OtherActor); }
        public void OnOverlapBeginByAroundInfo(Actor OtherActor) { Invoke(nameof(OnOverlapBeginByAroundInfo), OtherActor); }
        public void OnCompleteSyncPlayerFromServer_InClient__DelegateSignature() { Invoke(nameof(OnCompleteSyncPlayerFromServer_InClient__DelegateSignature)); }
        public void OnCompleteInitializeParameter__DelegateSignature(PalCharacter InCharacter) { Invoke(nameof(OnCompleteInitializeParameter__DelegateSignature), InCharacter); }
        public void OnChangeWetnessStatus(bool IsSwim) { Invoke(nameof(OnChangeWetnessStatus), IsSwim); }
        public void OnChangeImportance__DelegateSignature(EPalCharacterImportanceType NextType) { Invoke(nameof(OnChangeImportance__DelegateSignature), NextType); }
        public void OnChangeBattleMode__DelegateSignature(bool bIsBattleMode) { Invoke(nameof(OnChangeBattleMode__DelegateSignature), bIsBattleMode); }
        public void OnChangeActiveActor__DelegateSignature(bool bIsActive) { Invoke(nameof(OnChangeActiveActor__DelegateSignature), bIsActive); }
        public void OnCaptured__DelegateSignature(PalCharacter SelfCharacter, PalCharacter Attacker) { Invoke(nameof(OnCaptured__DelegateSignature), SelfCharacter, Attacker); }
        public bool IsInitialized() { return Invoke<bool>(nameof(IsInitialized)); }
        public bool IsCooping() { return Invoke<bool>(nameof(IsCooping)); }
        public void GetVisual_ExceptMainMesh_SyncAnyway(Array<SceneComponent> OutComponent) { Invoke(nameof(GetVisual_ExceptMainMesh_SyncAnyway), OutComponent); }
        public bool GetTalkMode() { return Invoke<bool>(nameof(GetTalkMode)); }
        public PalCharacterMovementComponent GetPalCharacterMovementComponent() { return Invoke<PalCharacterMovementComponent>(nameof(GetPalCharacterMovementComponent)); }
        public Object GetOverrideSleepFX() { return Invoke<Object>(nameof(GetOverrideSleepFX)); }
        public SkeletalMeshComponent GetOverrideFaceMesh() { return Invoke<SkeletalMeshComponent>(nameof(GetOverrideFaceMesh)); }
        public PalCharacterOnCompleteInitializeParameterWrapper GetOnCompleteInitializeParameterDelegate(EPalCharacterCompleteDelegatePriority Priority) { return Invoke<PalCharacterOnCompleteInitializeParameterWrapper>(nameof(GetOnCompleteInitializeParameterDelegate), Priority); }
        public PalSkeletalMeshComponent GetMainMesh() { return Invoke<PalSkeletalMeshComponent>(nameof(GetMainMesh)); }
        public SkeletalMeshComponent GetHandAttachMesh() { return Invoke<SkeletalMeshComponent>(nameof(GetHandAttachMesh)); }
        public PalCharacterParameterComponent GetCharacterParameterComponent() { return Invoke<PalCharacterParameterComponent>(nameof(GetCharacterParameterComponent)); }
        public bool GetBattleMode() { return Invoke<bool>(nameof(GetBattleMode)); }
        public bool GetActiveActorFlag() { return Invoke<bool>(nameof(GetActiveActorFlag)); }
        public PalActionComponent GetActionComponent() { return Invoke<PalActionComponent>(nameof(GetActionComponent)); }
        public void ChangeWantFood_ToAll(bool IsWantFood, bool IsExistFood) { Invoke(nameof(ChangeWantFood_ToAll), IsWantFood, IsExistFood); }
        public void ChangeTalkModeFlag_ToAll(bool IsTalk) { Invoke(nameof(ChangeTalkModeFlag_ToAll), IsTalk); }
        public void ChangeBattleModeFlag_ToAll(bool IsBattle) { Invoke(nameof(ChangeBattleModeFlag_ToAll), IsBattle); }
        public void ChangeBattleModeFlag(bool IsBattle) { Invoke(nameof(ChangeBattleModeFlag), IsBattle); }
        public void BroadcastOnCompleteInitializeParameter() { Invoke(nameof(BroadcastOnCompleteInitializeParameter)); }
        public void BindFonctionToOnCompleteInitializeParameter(EPalCharacterCompleteDelegatePriority Priority, Object Callback) { Invoke(nameof(BindFonctionToOnCompleteInitializeParameter), Priority, Callback); }
    }
    public class PalCharacterOnCompleteInitializeParameterWrapper : Object
    {
        public PalCharacterOnCompleteInitializeParameterWrapper(nint addr) : base(addr) { }
        public Object OnCompleteInitializeParameterDelegate { get { return this[nameof(OnCompleteInitializeParameterDelegate)]; } set { this[nameof(OnCompleteInitializeParameterDelegate)] = value; } }
        public void Broadcast(PalCharacter Character) { Invoke(nameof(Broadcast), Character); }
    }
    public class PalCharacterAroundInfoCollectorComponent : SphereComponent
    {
        public PalCharacterAroundInfoCollectorComponent(nint addr) : base(addr) { }
        public Object OnOverlapBeginDelegate { get { return this[nameof(OnOverlapBeginDelegate)]; } set { this[nameof(OnOverlapBeginDelegate)] = value; } }
        public Object OnOverlapEndDelegate { get { return this[nameof(OnOverlapEndDelegate)]; } set { this[nameof(OnOverlapEndDelegate)] = value; } }
        public Array<Guid> MapObjectModelIds { get { return new Array<Guid>(this[nameof(MapObjectModelIds)].Address); } }
        public void OverlapDelegate__DelegateSignature(Actor OtherActor) { Invoke(nameof(OverlapDelegate__DelegateSignature), OtherActor); }
        public void OnOverlapEnd(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnOverlapEnd), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex); }
        public void OnOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalCharacterCameraComponent : CameraComponent
    {
        public PalCharacterCameraComponent(nint addr) : base(addr) { }
        public float WalkFOV { get { return this[nameof(WalkFOV)].GetValue<float>(); } set { this[nameof(WalkFOV)].SetValue<float>(value); } }
        public float SprintFOV { get { return this[nameof(SprintFOV)].GetValue<float>(); } set { this[nameof(SprintFOV)].SetValue<float>(value); } }
        public float SprintFOVInterpSpeed { get { return this[nameof(SprintFOVInterpSpeed)].GetValue<float>(); } set { this[nameof(SprintFOVInterpSpeed)].SetValue<float>(value); } }
        public float PostProcessInterpTime { get { return this[nameof(PostProcessInterpTime)].GetValue<float>(); } set { this[nameof(PostProcessInterpTime)].SetValue<float>(value); } }
        public float DepthOfFieldFocalDistance_NoAim { get { return this[nameof(DepthOfFieldFocalDistance_NoAim)].GetValue<float>(); } set { this[nameof(DepthOfFieldFocalDistance_NoAim)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurAmount_NoAim { get { return this[nameof(DepthOfFieldDepthBlurAmount_NoAim)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurAmount_NoAim)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurRadius_NoAim { get { return this[nameof(DepthOfFieldDepthBlurRadius_NoAim)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurRadius_NoAim)].SetValue<float>(value); } }
        public float DepthOfFieldFstop_NoAim { get { return this[nameof(DepthOfFieldFstop_NoAim)].GetValue<float>(); } set { this[nameof(DepthOfFieldFstop_NoAim)].SetValue<float>(value); } }
        public float DepthOfFieldFocalDistance_Aim { get { return this[nameof(DepthOfFieldFocalDistance_Aim)].GetValue<float>(); } set { this[nameof(DepthOfFieldFocalDistance_Aim)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurAmount_Aim { get { return this[nameof(DepthOfFieldDepthBlurAmount_Aim)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurAmount_Aim)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurRadius_Aim { get { return this[nameof(DepthOfFieldDepthBlurRadius_Aim)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurRadius_Aim)].SetValue<float>(value); } }
        public float DepthOfFieldFstop_Aim { get { return this[nameof(DepthOfFieldFstop_Aim)].GetValue<float>(); } set { this[nameof(DepthOfFieldFstop_Aim)].SetValue<float>(value); } }
        public Object DefaultWeaponDOFSetting { get { return this[nameof(DefaultWeaponDOFSetting)]; } set { this[nameof(DefaultWeaponDOFSetting)] = value; } }
        public Object UniqueWeaponDOFSetting { get { return this[nameof(UniqueWeaponDOFSetting)]; } set { this[nameof(UniqueWeaponDOFSetting)] = value; } }
        public bool bIsDynamicDOFFocalDistance { get { return this[nameof(bIsDynamicDOFFocalDistance)].Flag; } set { this[nameof(bIsDynamicDOFFocalDistance)].Flag = value; } }
        public float DynamicDOFFocalDistanceSpeed { get { return this[nameof(DynamicDOFFocalDistanceSpeed)].GetValue<float>(); } set { this[nameof(DynamicDOFFocalDistanceSpeed)].SetValue<float>(value); } }
        public float DynamicDOFFocalDistanceMAX { get { return this[nameof(DynamicDOFFocalDistanceMAX)].GetValue<float>(); } set { this[nameof(DynamicDOFFocalDistanceMAX)].SetValue<float>(value); } }
        public bool bIsEnableSpeedBlur { get { return this[nameof(bIsEnableSpeedBlur)].Flag; } set { this[nameof(bIsEnableSpeedBlur)].Flag = value; } }
        public MaterialInterface DynamicSpeedBlurMaterial { get { return this[nameof(DynamicSpeedBlurMaterial)].As<MaterialInterface>(); } set { this["DynamicSpeedBlurMaterial"] = value; } }
        public float SpeedBlurInterpSpeed { get { return this[nameof(SpeedBlurInterpSpeed)].GetValue<float>(); } set { this[nameof(SpeedBlurInterpSpeed)].SetValue<float>(value); } }
        public float MinSpeedBlurSpeed { get { return this[nameof(MinSpeedBlurSpeed)].GetValue<float>(); } set { this[nameof(MinSpeedBlurSpeed)].SetValue<float>(value); } }
        public float MaxSpeedBlurSpeed { get { return this[nameof(MaxSpeedBlurSpeed)].GetValue<float>(); } set { this[nameof(MaxSpeedBlurSpeed)].SetValue<float>(value); } }
        public float MaxSpeedBlurAlpha { get { return this[nameof(MaxSpeedBlurAlpha)].GetValue<float>(); } set { this[nameof(MaxSpeedBlurAlpha)].SetValue<float>(value); } }
        public bool bIsEnableAimBlur { get { return this[nameof(bIsEnableAimBlur)].Flag; } set { this[nameof(bIsEnableAimBlur)].Flag = value; } }
        public MaterialInterface DynamicAimBlurMaterial { get { return this[nameof(DynamicAimBlurMaterial)].As<MaterialInterface>(); } set { this["DynamicAimBlurMaterial"] = value; } }
        public float BlendInAimBlurInterpTime { get { return this[nameof(BlendInAimBlurInterpTime)].GetValue<float>(); } set { this[nameof(BlendInAimBlurInterpTime)].SetValue<float>(value); } }
        public float BlendOutAimBlurInterpTime { get { return this[nameof(BlendOutAimBlurInterpTime)].GetValue<float>(); } set { this[nameof(BlendOutAimBlurInterpTime)].SetValue<float>(value); } }
        public float AimFOVInterpTime { get { return this[nameof(AimFOVInterpTime)].GetValue<float>(); } set { this[nameof(AimFOVInterpTime)].SetValue<float>(value); } }
        public float AimFOV { get { return this[nameof(AimFOV)].GetValue<float>(); } set { this[nameof(AimFOV)].SetValue<float>(value); } }
        public float RotateSpeedRate { get { return this[nameof(RotateSpeedRate)].GetValue<float>(); } set { this[nameof(RotateSpeedRate)].SetValue<float>(value); } }
        public MaterialInstanceDynamic DynamicSpeedBlurMaterialDynamic { get { return this[nameof(DynamicSpeedBlurMaterialDynamic)].As<MaterialInstanceDynamic>(); } set { this["DynamicSpeedBlurMaterialDynamic"] = value; } }
        public MaterialInstanceDynamic DynamicAimBlurMaterialDynamic { get { return this[nameof(DynamicAimBlurMaterialDynamic)].As<MaterialInstanceDynamic>(); } set { this["DynamicAimBlurMaterialDynamic"] = value; } }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnEndAim() { Invoke(nameof(OnEndAim)); }
    }
    public class PalCharacterContainerDefine : BlueprintFunctionLibrary
    {
        public PalCharacterContainerDefine(nint addr) : base(addr) { }
    }
    public class PalCharacterContainerManager : PalWorldSubsystem
    {
        public PalCharacterContainerManager(nint addr) : base(addr) { }
        public Object ContainerMap_InServer { get { return this[nameof(ContainerMap_InServer)]; } set { this[nameof(ContainerMap_InServer)] = value; } }
        public Object LocalContainerMap { get { return this[nameof(LocalContainerMap)]; } set { this[nameof(LocalContainerMap)] = value; } }
        public bool TryGetContainer(PalContainerId ContainerId, PalIndividualCharacterContainer Container) { return Invoke<bool>(nameof(TryGetContainer), ContainerId, Container); }
        public PalIndividualCharacterSlot GetLocalSlot(PalContainerId ContainerId, int SlotIndex) { return Invoke<PalIndividualCharacterSlot>(nameof(GetLocalSlot), ContainerId, SlotIndex); }
        public PalIndividualCharacterContainer GetLocalContainer(PalContainerId ContainerId) { return Invoke<PalIndividualCharacterContainer>(nameof(GetLocalContainer), ContainerId); }
        public PalIndividualCharacterContainer GetContainer(PalContainerId ContainerId) { return Invoke<PalIndividualCharacterContainer>(nameof(GetContainer), ContainerId); }
    }
    public class PalCharacterImportanceManager : Object
    {
        public PalCharacterImportanceManager(nint addr) : base(addr) { }
        public Array<PalPlayerCharacter> PlayerList { get { return new Array<PalPlayerCharacter>(this[nameof(PlayerList)].Address); } }
        public Array<PalPlayerCharacter> PlayerList_ForOutsideGet { get { return new Array<PalPlayerCharacter>(this[nameof(PlayerList_ForOutsideGet)].Address); } }
        public Object CharacterMap { get { return this[nameof(CharacterMap)]; } set { this[nameof(CharacterMap)] = value; } }
        public Array<PalNPCSpawnerBase> SpawnerList { get { return new Array<PalNPCSpawnerBase>(this[nameof(SpawnerList)].Address); } }
        public void GetImportantNPC(Array<PalCharacter> OutArray) { Invoke(nameof(GetImportantNPC), OutArray); }
        public void GetAllPlayer(Array<PalCharacter> OutArray) { Invoke(nameof(GetAllPlayer), OutArray); }
        public void GetAllPalCharacter(Array<PalCharacter> OutArray) { Invoke(nameof(GetAllPalCharacter), OutArray); }
        public void GetAllNPC(Array<PalCharacter> OutArray) { Invoke(nameof(GetAllNPC), OutArray); }
    }
    public class PalCharacterLiftupObjectComponent : ActorComponent
    {
        public PalCharacterLiftupObjectComponent(nint addr) : base(addr) { }
        public bool bIsLifting { get { return this[nameof(bIsLifting)].Flag; } set { this[nameof(bIsLifting)].Flag = value; } }
        public bool bEnableLiftup { get { return this[nameof(bEnableLiftup)].Flag; } set { this[nameof(bEnableLiftup)].Flag = value; } }
        public void SetEnable(bool bInEnable) { Invoke(nameof(SetEnable), bInEnable); }
        public void OnOverlapEndCageAreaWalls() { Invoke(nameof(OnOverlapEndCageAreaWalls)); }
        public void OnHitOwnerMainMesh(PrimitiveComponent HitComponent, Actor OtherActor, PrimitiveComponent OtherComponent, Vector NormalImpulse, HitResult Hit) { Invoke(nameof(OnHitOwnerMainMesh), HitComponent, OtherActor, OtherComponent, NormalImpulse, Hit); }
        public bool IsLifting() { return Invoke<bool>(nameof(IsLifting)); }
        public Guid GetLastLiftRequestedPlayerUId() { return Invoke<Guid>(nameof(GetLastLiftRequestedPlayerUId)); }
        public void BroadcastSetBeingThrown(bool bInBeingThrown) { Invoke(nameof(BroadcastSetBeingThrown), bInBeingThrown); }
    }
    public class PalCharacterManager : PalWorldSubsystem
    {
        public PalCharacterManager(nint addr) : base(addr) { }
        public Object OnIndividualParameterSynced { get { return this[nameof(OnIndividualParameterSynced)]; } set { this[nameof(OnIndividualParameterSynced)] = value; } }
        public Object AttackNearBaseClass { get { return this[nameof(AttackNearBaseClass)]; } set { this[nameof(AttackNearBaseClass)] = value; } }
        public Object AttackFarBaseClass { get { return this[nameof(AttackFarBaseClass)]; } set { this[nameof(AttackFarBaseClass)] = value; } }
        public Object IndividualParameterMap { get { return this[nameof(IndividualParameterMap)]; } set { this[nameof(IndividualParameterMap)] = value; } }
        public Object WeakIndividualHandleMap { get { return this[nameof(WeakIndividualHandleMap)]; } set { this[nameof(WeakIndividualHandleMap)] = value; } }
        public Array<PalIndividualCharacterHandle> InitializeWaitingHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(InitializeWaitingHandles)].Address); } }
        public Array<PalIndividualCharacterHandle> NoHoldHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(NoHoldHandles)].Address); } }
        public Object CachedRefenrenceOnlyHandles { get { return this[nameof(CachedRefenrenceOnlyHandles)]; } set { this[nameof(CachedRefenrenceOnlyHandles)] = value; } }
        public Array<PalIndividualCharacterHandle> CreatingHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(CreatingHandles)].Address); } }
        public Array<PalIndividualCharacterHandle> SpawningActorHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(SpawningActorHandles)].Address); } }
        public Array<PalIndividualCharacterHandle> ReserveDestroyActorHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(ReserveDestroyActorHandles)].Address); } }
        public Array<PalIndividualCharacterParameter> CachedIndividualParameterList { get { return new Array<PalIndividualCharacterParameter>(this[nameof(CachedIndividualParameterList)].Address); } }
        public void SpawnPhantomByHandle(PalIndividualCharacterHandle Handle, NetworkActorSpawnParameters SpawnParameter, Object spawnCallback) { Invoke(nameof(SpawnPhantomByHandle), Handle, SpawnParameter, spawnCallback); }
        public PalIndividualCharacterHandle SpawnNewCharacterWithInitializeParameterCallback(PalIndividualCharacterSaveParameter initParameter, NetworkActorSpawnParameters SpawnParameter, EPalCharacterCompleteDelegatePriority InitializeParameterCallbackPriority, Object InitializeParameterCallback, Object spawnCallback) { return Invoke<PalIndividualCharacterHandle>(nameof(SpawnNewCharacterWithInitializeParameterCallback), initParameter, SpawnParameter, InitializeParameterCallbackPriority, InitializeParameterCallback, spawnCallback); }
        public PalIndividualCharacterHandle SpawnNewCharacter(PalIndividualCharacterSaveParameter initParameter, NetworkActorSpawnParameters SpawnParameter, Object spawnCallback) { return Invoke<PalIndividualCharacterHandle>(nameof(SpawnNewCharacter), initParameter, SpawnParameter, spawnCallback); }
        public void SpawnCharacterByHandleWithInitializeParameterCallback(PalIndividualCharacterHandle Handle, NetworkActorSpawnParameters SpawnParameter, EPalCharacterCompleteDelegatePriority InitializeParameterCallbackPriority, Object InitializeParameterCallback, Object spawnCallback) { Invoke(nameof(SpawnCharacterByHandleWithInitializeParameterCallback), Handle, SpawnParameter, InitializeParameterCallbackPriority, InitializeParameterCallback, spawnCallback); }
        public void SpawnCharacterByHandle(PalIndividualCharacterHandle Handle, NetworkActorSpawnParameters SpawnParameter, Object spawnCallback) { Invoke(nameof(SpawnCharacterByHandle), Handle, SpawnParameter, spawnCallback); }
        public void RaiseToMainActor(PalIndividualCharacterHandle Handle, int PhantomId, Object Callback) { Invoke(nameof(RaiseToMainActor), Handle, PhantomId, Callback); }
        public void OnCreateIndividualID(PalInstanceID ID) { Invoke(nameof(OnCreateIndividualID), ID); }
        public void IndividualPhantomIDCallback__DelegateSignature(PalInstanceID ID, int PhantomId) { Invoke(nameof(IndividualPhantomIDCallback__DelegateSignature), ID, PhantomId); }
        public void IndividualIDCallback__DelegateSignature(PalInstanceID ID) { Invoke(nameof(IndividualIDCallback__DelegateSignature), ID); }
        public PalIndividualCharacterHandleReference GetIndividualHandleReference(PalInstanceID ID) { return Invoke<PalIndividualCharacterHandleReference>(nameof(GetIndividualHandleReference), ID); }
        public PalIndividualCharacterHandle GetIndividualHandleFromCharacterParameter(PalIndividualCharacterParameter Parameter) { return Invoke<PalIndividualCharacterHandle>(nameof(GetIndividualHandleFromCharacterParameter), Parameter); }
        public PalIndividualCharacterHandle GetIndividualHandle(PalInstanceID ID) { return Invoke<PalIndividualCharacterHandle>(nameof(GetIndividualHandle), ID); }
        public PalIndividualCharacterParameter GetIndividualCharacterParameter(PalInstanceID IndividualId) { return Invoke<PalIndividualCharacterParameter>(nameof(GetIndividualCharacterParameter), IndividualId); }
        public void DespawnPhantomByHandle(PalIndividualCharacterHandle Handle, int PhantomId, Object spawnCallback) { Invoke(nameof(DespawnPhantomByHandle), Handle, PhantomId, spawnCallback); }
        public void DespawnCharacterByHandle(PalIndividualCharacterHandle Handle, Object spawnCallback) { Invoke(nameof(DespawnCharacterByHandle), Handle, spawnCallback); }
        public PalIndividualCharacterHandle CreateIndividualByFixedID(PalInstanceID ID, PalIndividualCharacterSaveParameter initParameter, Object spawnCallback) { return Invoke<PalIndividualCharacterHandle>(nameof(CreateIndividualByFixedID), ID, initParameter, spawnCallback); }
        public PalIndividualCharacterHandle CreateIndividual(PalIndividualCharacterSaveParameter initParameter, Object spawnCallback) { return Invoke<PalIndividualCharacterHandle>(nameof(CreateIndividual), initParameter, spawnCallback); }
        public void CharacterParameterAddedDelegate__DelegateSignature(PalInstanceID InstanceId) { Invoke(nameof(CharacterParameterAddedDelegate__DelegateSignature), InstanceId); }
        public void CharacterHandleDelegate__DelegateSignature(PalIndividualCharacterHandle CharacterHandle) { Invoke(nameof(CharacterHandleDelegate__DelegateSignature), CharacterHandle); }
    }
    public class PalCharacterManagerReplicator : PalGameStateReplicatorBase
    {
        public PalCharacterManagerReplicator(nint addr) : base(addr) { }
        public FastCharacterParameterRepInfoArray CharacterParameterInfosFast { get { return this[nameof(CharacterParameterInfosFast)].As<FastCharacterParameterRepInfoArray>(); } set { this["CharacterParameterInfosFast"] = value; } }
        public void OnPreReplicatedRemoveItem(CharacterParameterRepInfo Item) { Invoke(nameof(OnPreReplicatedRemoveItem), Item); }
        public void OnPostReplicatedChangeItem(CharacterParameterRepInfo Item) { Invoke(nameof(OnPostReplicatedChangeItem), Item); }
        public void OnPostReplicatedAddItem(CharacterParameterRepInfo Item) { Invoke(nameof(OnPostReplicatedAddItem), Item); }
        public void OnPep_CharacterParameterInfos() { Invoke(nameof(OnPep_CharacterParameterInfos)); }
    }
    public class PalCharacterMovementComponent : CharacterMovementComponent
    {
        public PalCharacterMovementComponent(nint addr) : base(addr) { }
        public Object OnMovementModeChangedDelegate { get { return this[nameof(OnMovementModeChangedDelegate)]; } set { this[nameof(OnMovementModeChangedDelegate)] = value; } }
        public Object OnJumpDelegate { get { return this[nameof(OnJumpDelegate)]; } set { this[nameof(OnJumpDelegate)] = value; } }
        public Object OnFlyDelegate { get { return this[nameof(OnFlyDelegate)]; } set { this[nameof(OnFlyDelegate)] = value; } }
        public Object OnLandedDelegate { get { return this[nameof(OnLandedDelegate)]; } set { this[nameof(OnLandedDelegate)] = value; } }
        public Object OnChangeCrouchDelegate { get { return this[nameof(OnChangeCrouchDelegate)]; } set { this[nameof(OnChangeCrouchDelegate)] = value; } }
        public Object OnChangeSprintDelegate { get { return this[nameof(OnChangeSprintDelegate)]; } set { this[nameof(OnChangeSprintDelegate)] = value; } }
        public Object OnChangeSlidingDelegate { get { return this[nameof(OnChangeSlidingDelegate)]; } set { this[nameof(OnChangeSlidingDelegate)] = value; } }
        public Object OnChangeSwimmingDelegate { get { return this[nameof(OnChangeSwimmingDelegate)]; } set { this[nameof(OnChangeSwimmingDelegate)] = value; } }
        public Object OnEnterWaterDelegate { get { return this[nameof(OnEnterWaterDelegate)]; } set { this[nameof(OnEnterWaterDelegate)] = value; } }
        public Object OnExitWaterDelegate { get { return this[nameof(OnExitWaterDelegate)]; } set { this[nameof(OnExitWaterDelegate)] = value; } }
        public Object OnJumpDisableDelegate { get { return this[nameof(OnJumpDisableDelegate)]; } set { this[nameof(OnJumpDisableDelegate)] = value; } }
        public float DyingMaxSpeed { get { return this[nameof(DyingMaxSpeed)].GetValue<float>(); } set { this[nameof(DyingMaxSpeed)].SetValue<float>(value); } }
        public float FatigueMaxSpeed { get { return this[nameof(FatigueMaxSpeed)].GetValue<float>(); } set { this[nameof(FatigueMaxSpeed)].SetValue<float>(value); } }
        public float SprintMaxSpeed { get { return this[nameof(SprintMaxSpeed)].GetValue<float>(); } set { this[nameof(SprintMaxSpeed)].SetValue<float>(value); } }
        public float SprintMaxAcceleration { get { return this[nameof(SprintMaxAcceleration)].GetValue<float>(); } set { this[nameof(SprintMaxAcceleration)].SetValue<float>(value); } }
        public float SprintYawRate { get { return this[nameof(SprintYawRate)].GetValue<float>(); } set { this[nameof(SprintYawRate)].SetValue<float>(value); } }
        public float GliderMaxSpeed { get { return this[nameof(GliderMaxSpeed)].GetValue<float>(); } set { this[nameof(GliderMaxSpeed)].SetValue<float>(value); } }
        public float GliderAirControl { get { return this[nameof(GliderAirControl)].GetValue<float>(); } set { this[nameof(GliderAirControl)].SetValue<float>(value); } }
        public float GliderGravityScale { get { return this[nameof(GliderGravityScale)].GetValue<float>(); } set { this[nameof(GliderGravityScale)].SetValue<float>(value); } }
        public float SlidingStartSpeed { get { return this[nameof(SlidingStartSpeed)].GetValue<float>(); } set { this[nameof(SlidingStartSpeed)].SetValue<float>(value); } }
        public float SlidingMaxSpeed { get { return this[nameof(SlidingMaxSpeed)].GetValue<float>(); } set { this[nameof(SlidingMaxSpeed)].SetValue<float>(value); } }
        public float SlidingAddRate { get { return this[nameof(SlidingAddRate)].GetValue<float>(); } set { this[nameof(SlidingAddRate)].SetValue<float>(value); } }
        public float SlidingSubRate { get { return this[nameof(SlidingSubRate)].GetValue<float>(); } set { this[nameof(SlidingSubRate)].SetValue<float>(value); } }
        public float SlidingYawRate { get { return this[nameof(SlidingYawRate)].GetValue<float>(); } set { this[nameof(SlidingYawRate)].SetValue<float>(value); } }
        public bool bIsEnableSkySliding { get { return this[nameof(bIsEnableSkySliding)].Flag; } set { this[nameof(bIsEnableSkySliding)].Flag = value; } }
        public float ClimbMaxSpeed { get { return this[nameof(ClimbMaxSpeed)].GetValue<float>(); } set { this[nameof(ClimbMaxSpeed)].SetValue<float>(value); } }
        public float RollingMaxSpeed { get { return this[nameof(RollingMaxSpeed)].GetValue<float>(); } set { this[nameof(RollingMaxSpeed)].SetValue<float>(value); } }
        public int LastLandedTransformCacheNum { get { return this[nameof(LastLandedTransformCacheNum)].GetValue<int>(); } set { this[nameof(LastLandedTransformCacheNum)].SetValue<int>(value); } }
        public bool bIsUseLastLandedCache { get { return this[nameof(bIsUseLastLandedCache)].Flag; } set { this[nameof(bIsUseLastLandedCache)].Flag = value; } }
        public Object OverrideJumpZVelocityMap { get { return this[nameof(OverrideJumpZVelocityMap)]; } set { this[nameof(OverrideJumpZVelocityMap)] = value; } }
        public Object MaxAccelerationMultiplierMap { get { return this[nameof(MaxAccelerationMultiplierMap)]; } set { this[nameof(MaxAccelerationMultiplierMap)] = value; } }
        public Object WalkSpeedMultiplierMap { get { return this[nameof(WalkSpeedMultiplierMap)]; } set { this[nameof(WalkSpeedMultiplierMap)] = value; } }
        public Object YawRotatorMultiplierMap { get { return this[nameof(YawRotatorMultiplierMap)]; } set { this[nameof(YawRotatorMultiplierMap)] = value; } }
        public Object GravityZMultiplierMap { get { return this[nameof(GravityZMultiplierMap)]; } set { this[nameof(GravityZMultiplierMap)] = value; } }
        public Object AirControlXYMultiplierMap { get { return this[nameof(AirControlXYMultiplierMap)]; } set { this[nameof(AirControlXYMultiplierMap)] = value; } }
        public Object SlideAlphaMultiplierMap { get { return this[nameof(SlideAlphaMultiplierMap)]; } set { this[nameof(SlideAlphaMultiplierMap)] = value; } }
        public FlagContainer MoveDisableFlag { get { return this[nameof(MoveDisableFlag)].As<FlagContainer>(); } set { this["MoveDisableFlag"] = value; } }
        public FlagContainer InputDisableFlag { get { return this[nameof(InputDisableFlag)].As<FlagContainer>(); } set { this["InputDisableFlag"] = value; } }
        public FlagContainer JumpDisableFlag { get { return this[nameof(JumpDisableFlag)].As<FlagContainer>(); } set { this["JumpDisableFlag"] = value; } }
        public FlagContainer DriveMoveFlag { get { return this[nameof(DriveMoveFlag)].As<FlagContainer>(); } set { this["DriveMoveFlag"] = value; } }
        public FlagContainer PysicsAccelerationFlag { get { return this[nameof(PysicsAccelerationFlag)].As<FlagContainer>(); } set { this["PysicsAccelerationFlag"] = value; } }
        public Vector ClientLocation { get { return this[nameof(ClientLocation)].As<Vector>(); } set { this["ClientLocation"] = value; } }
        public FlagContainer CrouchDisableFlag { get { return this[nameof(CrouchDisableFlag)].As<FlagContainer>(); } set { this["CrouchDisableFlag"] = value; } }
        public FlagContainer SlidingDisableFlag { get { return this[nameof(SlidingDisableFlag)].As<FlagContainer>(); } set { this["SlidingDisableFlag"] = value; } }
        public FlagContainer GliderDisableFlag { get { return this[nameof(GliderDisableFlag)].As<FlagContainer>(); } set { this["GliderDisableFlag"] = value; } }
        public FlagContainer SplintDisableFlag { get { return this[nameof(SplintDisableFlag)].As<FlagContainer>(); } set { this["SplintDisableFlag"] = value; } }
        public bool bRequestCrouch { get { return this[nameof(bRequestCrouch)].Flag; } set { this[nameof(bRequestCrouch)].Flag = value; } }
        public bool bRequestSprint { get { return this[nameof(bRequestSprint)].Flag; } set { this[nameof(bRequestSprint)].Flag = value; } }
        public Vector LastLandingInputVelocity { get { return this[nameof(LastLandingInputVelocity)].As<Vector>(); } set { this["LastLandingInputVelocity"] = value; } }
        public Array<Vector> LastLandingLocationCache { get { return new Array<Vector>(this[nameof(LastLandingLocationCache)].Address); } }
        public FlagContainer StepDisableFlag { get { return this[nameof(StepDisableFlag)].As<FlagContainer>(); } set { this["StepDisableFlag"] = value; } }
        public Object WalkableFloorAngleOverridesMap { get { return this[nameof(WalkableFloorAngleOverridesMap)]; } set { this[nameof(WalkableFloorAngleOverridesMap)] = value; } }
        public float SlowWalkSpeed_Default { get { return this[nameof(SlowWalkSpeed_Default)].GetValue<float>(); } set { this[nameof(SlowWalkSpeed_Default)].SetValue<float>(value); } }
        public float WalkSpeed_Default { get { return this[nameof(WalkSpeed_Default)].GetValue<float>(); } set { this[nameof(WalkSpeed_Default)].SetValue<float>(value); } }
        public float RunSpeed_Default { get { return this[nameof(RunSpeed_Default)].GetValue<float>(); } set { this[nameof(RunSpeed_Default)].SetValue<float>(value); } }
        public float RideSprintSpeed_Default { get { return this[nameof(RideSprintSpeed_Default)].GetValue<float>(); } set { this[nameof(RideSprintSpeed_Default)].SetValue<float>(value); } }
        public float TransportSpeed_Default { get { return this[nameof(TransportSpeed_Default)].GetValue<float>(); } set { this[nameof(TransportSpeed_Default)].SetValue<float>(value); } }
        public float TemporaryAccelerationTimeCount { get { return this[nameof(TemporaryAccelerationTimeCount)].GetValue<float>(); } set { this[nameof(TemporaryAccelerationTimeCount)].SetValue<float>(value); } }
        public bool IsFlyDashMode { get { return this[nameof(IsFlyDashMode)].Flag; } set { this[nameof(IsFlyDashMode)].Flag = value; } }
        public bool bIsGrapplingMoving { get { return this[nameof(bIsGrapplingMoving)].Flag; } set { this[nameof(bIsGrapplingMoving)].Flag = value; } }
        public float DefaultMaxStepHeight { get { return this[nameof(DefaultMaxStepHeight)].GetValue<float>(); } set { this[nameof(DefaultMaxStepHeight)].SetValue<float>(value); } }
        public EPalCharacterMovementCustomMode CustomMovementMode_ForReplicate { get { return (EPalCharacterMovementCustomMode)this[nameof(CustomMovementMode_ForReplicate)].GetValue<int>(); } set { this[nameof(CustomMovementMode_ForReplicate)].SetValue<int>((int)value); } }
        public float InWaterRate { get { return this[nameof(InWaterRate)].GetValue<float>(); } set { this[nameof(InWaterRate)].SetValue<float>(value); } }
        public float DashSwimMaxSpeed { get { return this[nameof(DashSwimMaxSpeed)].GetValue<float>(); } set { this[nameof(DashSwimMaxSpeed)].SetValue<float>(value); } }
        public float JumpableInWaterDepth { get { return this[nameof(JumpableInWaterDepth)].GetValue<float>(); } set { this[nameof(JumpableInWaterDepth)].SetValue<float>(value); } }
        public EEnterWaterFlag EnteredWaterFlag { get { return (EEnterWaterFlag)this[nameof(EnteredWaterFlag)].GetValue<int>(); } set { this[nameof(EnteredWaterFlag)].SetValue<int>((int)value); } }
        public float WaterPlaneZ { get { return this[nameof(WaterPlaneZ)].GetValue<float>(); } set { this[nameof(WaterPlaneZ)].SetValue<float>(value); } }
        public float WaterPlaneZPrev { get { return this[nameof(WaterPlaneZPrev)].GetValue<float>(); } set { this[nameof(WaterPlaneZPrev)].SetValue<float>(value); } }
        public float WaitTimeToSwimInFalling { get { return this[nameof(WaitTimeToSwimInFalling)].GetValue<float>(); } set { this[nameof(WaitTimeToSwimInFalling)].SetValue<float>(value); } }
        public bool bIsDashSwim { get { return this[nameof(bIsDashSwim)].Flag; } set { this[nameof(bIsDashSwim)].Flag = value; } }
        public void SetYawRotatorMultiplier(Object flagName, float Rate) { Invoke(nameof(SetYawRotatorMultiplier), flagName, Rate); }
        public void SetWalkSpeedMultiplier(Object flagName, float Speed) { Invoke(nameof(SetWalkSpeedMultiplier), flagName, Speed); }
        public void SetWalkSpeedByType(Object flagName, EPalMovementSpeedType MoveSpeedType) { Invoke(nameof(SetWalkSpeedByType), flagName, MoveSpeedType); }
        public void SetWalkableFloorAngleOverrides(EPalWalkableFloorAnglePriority Priority, float Angle) { Invoke(nameof(SetWalkableFloorAngleOverrides), Priority, Angle); }
        public void SetupDatabaseSpeedByCharacterId(PalCharacter InCharacter, Object charaID) { Invoke(nameof(SetupDatabaseSpeedByCharacterId), InCharacter, charaID); }
        public void SetupDatabaseSpeed(PalCharacter InCharacter) { Invoke(nameof(SetupDatabaseSpeed), InCharacter); }
        public void SetStepDisableFlag(Object flagName, bool isDisable) { Invoke(nameof(SetStepDisableFlag), flagName, isDisable); }
        public void SetSplintDisbleFlag(Object flagName, bool Disable) { Invoke(nameof(SetSplintDisbleFlag), flagName, Disable); }
        public void SetSlidingDisbleFlag(Object flagName, bool Disable) { Invoke(nameof(SetSlidingDisbleFlag), flagName, Disable); }
        public void SetSlideAlphaMultiplier(Object flagName, float Rate) { Invoke(nameof(SetSlideAlphaMultiplier), flagName, Rate); }
        public void SetPysicsAccelerationFlag(Object flagName, bool isEnable) { Invoke(nameof(SetPysicsAccelerationFlag), flagName, isEnable); }
        public void SetMoveDisableFlag(Object flagName, bool isDisable) { Invoke(nameof(SetMoveDisableFlag), flagName, isDisable); }
        public void SetMaxAccelerationMultiplier(Object flagName, float Speed) { Invoke(nameof(SetMaxAccelerationMultiplier), flagName, Speed); }
        public void SetJumpDisableFlag(Object flagName, bool isDisable) { Invoke(nameof(SetJumpDisableFlag), flagName, isDisable); }
        public void SetInputDisableFlag(Object flagName, bool isDisable) { Invoke(nameof(SetInputDisableFlag), flagName, isDisable); }
        public void SetGravityZMultiplier(Object flagName, float Rate) { Invoke(nameof(SetGravityZMultiplier), flagName, Rate); }
        public void SetGrapplingMoving(bool IsMoving) { Invoke(nameof(SetGrapplingMoving), IsMoving); }
        public void SetGliderDisbleFlag(Object flagName, bool Disable) { Invoke(nameof(SetGliderDisbleFlag), flagName, Disable); }
        public void SetForceMaxAccel(bool bIsEnable) { Invoke(nameof(SetForceMaxAccel), bIsEnable); }
        public void SetFlyDashMode_ToServer(bool IsDash) { Invoke(nameof(SetFlyDashMode_ToServer), IsDash); }
        public void SetDriveMoveFlag(Object flagName, bool isEnable) { Invoke(nameof(SetDriveMoveFlag), flagName, isEnable); }
        public void SetDisableLeftHandAttachFlag(bool isDisable) { Invoke(nameof(SetDisableLeftHandAttachFlag), isDisable); }
        public void SetDashSwimming_ToServer(bool _isDash) { Invoke(nameof(SetDashSwimming_ToServer), _isDash); }
        public void SetDashSwimming(bool _isDash) { Invoke(nameof(SetDashSwimming), _isDash); }
        public void SetCustomMovementMode(EPalCharacterMovementCustomMode NewCustomMode) { Invoke(nameof(SetCustomMovementMode), NewCustomMode); }
        public void SetCrouchDisbleFlag(Object flagName, bool Disable) { Invoke(nameof(SetCrouchDisbleFlag), flagName, Disable); }
        public void SetAirControlXYMultiplier(Object flagName, float Rate) { Invoke(nameof(SetAirControlXYMultiplier), flagName, Rate); }
        public void ResetLastLandingLocationCache() { Invoke(nameof(ResetLastLandingLocationCache)); }
        public void RequestTemporaryAcceleration() { Invoke(nameof(RequestTemporaryAcceleration)); }
        public void RemoveWalkableFloorAngleOverrides(EPalWalkableFloorAnglePriority Priority) { Invoke(nameof(RemoveWalkableFloorAngleOverrides), Priority); }
        public void OnRep_CustomMovementMode_ForReplicate() { Invoke(nameof(OnRep_CustomMovementMode_ForReplicate)); }
        public void OnMovementModeChangedDelegate__DelegateSignature(PalCharacterMovementComponent Component, byte prevMode, byte newMode, EPalCharacterMovementCustomMode PrevCustomMode, EPalCharacterMovementCustomMode NewCustomMode) { Invoke(nameof(OnMovementModeChangedDelegate__DelegateSignature), Component, prevMode, newMode, PrevCustomMode, NewCustomMode); }
        public void OnLandedDelegate__DelegateSignature(PalCharacterMovementComponent Component, HitResult Hit) { Invoke(nameof(OnLandedDelegate__DelegateSignature), Component, Hit); }
        public void OnJumpDisable__DelegateSignature() { Invoke(nameof(OnJumpDisable__DelegateSignature)); }
        public void OnJumpDelegate__DelegateSignature(PalCharacterMovementComponent Component) { Invoke(nameof(OnJumpDelegate__DelegateSignature), Component); }
        public void OnFlyDelegate__DelegateSignature(PalCharacterMovementComponent Component) { Invoke(nameof(OnFlyDelegate__DelegateSignature), Component); }
        public void OnExitWater__DelegateSignature() { Invoke(nameof(OnExitWater__DelegateSignature)); }
        public void OnExitWater() { Invoke(nameof(OnExitWater)); }
        public void OnEnterWater__DelegateSignature() { Invoke(nameof(OnEnterWater__DelegateSignature)); }
        public void OnEnterWater() { Invoke(nameof(OnEnterWater)); }
        public void OnDeactivated(ActorComponent Component) { Invoke(nameof(OnDeactivated), Component); }
        public void OnChangeSwimming__DelegateSignature(bool IsInSwimming) { Invoke(nameof(OnChangeSwimming__DelegateSignature), IsInSwimming); }
        public void OnChangeSprint__DelegateSignature(PalCharacterMovementComponent Component, bool IsInSprint) { Invoke(nameof(OnChangeSprint__DelegateSignature), Component, IsInSprint); }
        public void OnChangeSliding__DelegateSignature(PalCharacterMovementComponent Component, bool IsInSliding) { Invoke(nameof(OnChangeSliding__DelegateSignature), Component, IsInSliding); }
        public void OnChangeCrouch__DelegateSignature(PalCharacterMovementComponent Component, bool IsInCrouch) { Invoke(nameof(OnChangeCrouch__DelegateSignature), Component, IsInCrouch); }
        public void OnChangeCrouch(PalCharacterMovementComponent Component, bool IsInCrouch) { Invoke(nameof(OnChangeCrouch), Component, IsInCrouch); }
        public void MergeLastLandingLocationCache(PalCharacterMovementComponent MovementComponent) { Invoke(nameof(MergeLastLandingLocationCache), MovementComponent); }
        public void Jump() { Invoke(nameof(Jump)); }
        public bool IsStepDisabled() { return Invoke<bool>(nameof(IsStepDisabled)); }
        public bool IsSprint() { return Invoke<bool>(nameof(IsSprint)); }
        public bool IsSliding() { return Invoke<bool>(nameof(IsSliding)); }
        public bool IsRequestSliding() { return Invoke<bool>(nameof(IsRequestSliding)); }
        public bool IsPysicsAcceleration() { return Invoke<bool>(nameof(IsPysicsAcceleration)); }
        public bool IsMoveDisabled() { return Invoke<bool>(nameof(IsMoveDisabled)); }
        public bool IsJumpDisabled() { return Invoke<bool>(nameof(IsJumpDisabled)); }
        public bool IsInputDisabled() { return Invoke<bool>(nameof(IsInputDisabled)); }
        public bool IsGrapplingMoving() { return Invoke<bool>(nameof(IsGrapplingMoving)); }
        public bool IsGliding() { return Invoke<bool>(nameof(IsGliding)); }
        public bool IsFallingFromSwimming() { return Invoke<bool>(nameof(IsFallingFromSwimming)); }
        public bool IsEnteredWater() { return Invoke<bool>(nameof(IsEnteredWater)); }
        public bool IsEnableSkySliding() { return Invoke<bool>(nameof(IsEnableSkySliding)); }
        public bool IsDriveMove() { return Invoke<bool>(nameof(IsDriveMove)); }
        public bool IsDashSwimming() { return Invoke<bool>(nameof(IsDashSwimming)); }
        public bool IsClimbing() { return Invoke<bool>(nameof(IsClimbing)); }
        public float GetYawRotatorMultiplier() { return Invoke<float>(nameof(GetYawRotatorMultiplier)); }
        public Vector GetWaterPlaneNormal() { return Invoke<Vector>(nameof(GetWaterPlaneNormal)); }
        public Vector GetWaterPlaneLocation() { return Invoke<Vector>(nameof(GetWaterPlaneLocation)); }
        public float GetWalkSpeedMultiplier() { return Invoke<float>(nameof(GetWalkSpeedMultiplier)); }
        public float GetWalkableFloorAngleByPriority() { return Invoke<float>(nameof(GetWalkableFloorAngleByPriority)); }
        public Vector GetVelocity() { return Invoke<Vector>(nameof(GetVelocity)); }
        public float GetSlideAlphaMultiplier() { return Invoke<float>(nameof(GetSlideAlphaMultiplier)); }
        public float GetMaxAccelerationMultiplier() { return Invoke<float>(nameof(GetMaxAccelerationMultiplier)); }
        public Vector GetLastLandingLocationFromLastOfCache() { return Invoke<Vector>(nameof(GetLastLandingLocationFromLastOfCache)); }
        public Vector GetLastLandingLocation() { return Invoke<Vector>(nameof(GetLastLandingLocation)); }
        public float GetInWaterRate() { return Invoke<float>(nameof(GetInWaterRate)); }
        public float GetGravityZMultiplier() { return Invoke<float>(nameof(GetGravityZMultiplier)); }
        public float GetDefaultRunSpeed() { return Invoke<float>(nameof(GetDefaultRunSpeed)); }
        public EPalCharacterMovementCustomMode GetCustomMovementMode() { return Invoke<EPalCharacterMovementCustomMode>(nameof(GetCustomMovementMode)); }
        public float GetAirControlXYMultiplier() { return Invoke<float>(nameof(GetAirControlXYMultiplier)); }
        public void CheckReturnToNavWakl() { Invoke(nameof(CheckReturnToNavWakl)); }
        public bool CanSliding() { return Invoke<bool>(nameof(CanSliding)); }
        public bool CanGainSP() { return Invoke<bool>(nameof(CanGainSP)); }
        public bool CanDashSwimming() { return Invoke<bool>(nameof(CanDashSwimming)); }
    }
    public class PalCharacterParameterComponent : ActorComponent
    {
        public PalCharacterParameterComponent(nint addr) : base(addr) { }
        public bool bIsCooping { get { return this[nameof(bIsCooping)].Flag; } set { this[nameof(bIsCooping)].Flag = value; } }
        public bool bIsEnableSendReticleTarget { get { return this[nameof(bIsEnableSendReticleTarget)].Flag; } set { this[nameof(bIsEnableSendReticleTarget)].Flag = value; } }
        public bool bIsEnableMuteki { get { return this[nameof(bIsEnableMuteki)].Flag; } set { this[nameof(bIsEnableMuteki)].Flag = value; } }
        public FixedPoint64 LeanBackPoint { get { return this[nameof(LeanBackPoint)].As<FixedPoint64>(); } set { this["LeanBackPoint"] = value; } }
        public FixedPoint64 LeanBackMaxPoint { get { return this[nameof(LeanBackMaxPoint)].As<FixedPoint64>(); } set { this["LeanBackMaxPoint"] = value; } }
        public FixedPoint64 StunPoint { get { return this[nameof(StunPoint)].As<FixedPoint64>(); } set { this["StunPoint"] = value; } }
        public FixedPoint64 StunMaxPoint { get { return this[nameof(StunMaxPoint)].As<FixedPoint64>(); } set { this["StunMaxPoint"] = value; } }
        public bool IsSPOverheat { get { return this[nameof(IsSPOverheat)].Flag; } set { this[nameof(IsSPOverheat)].Flag = value; } }
        public bool bIsHyperArmor { get { return this[nameof(bIsHyperArmor)].Flag; } set { this[nameof(bIsHyperArmor)].Flag = value; } }
        public bool bIsDebugMuteki { get { return this[nameof(bIsDebugMuteki)].Flag; } set { this[nameof(bIsDebugMuteki)].Flag = value; } }
        public EPalElementType ElementType1 { get { return (EPalElementType)this[nameof(ElementType1)].GetValue<int>(); } set { this[nameof(ElementType1)].SetValue<int>((int)value); } }
        public EPalElementType ElementType2 { get { return (EPalElementType)this[nameof(ElementType2)].GetValue<int>(); } set { this[nameof(ElementType2)].SetValue<int>((int)value); } }
        public bool IsOverrideTarget { get { return this[nameof(IsOverrideTarget)].Flag; } set { this[nameof(IsOverrideTarget)].Flag = value; } }
        public Vector OverrideTargetLocation { get { return this[nameof(OverrideTargetLocation)].As<Vector>(); } set { this["OverrideTargetLocation"] = value; } }
        public PalCharacter Trainer { get { return this[nameof(Trainer)].As<PalCharacter>(); } set { this["Trainer"] = value; } }
        public PalCharacter OtomoPal { get { return this[nameof(OtomoPal)].As<PalCharacter>(); } set { this["OtomoPal"] = value; } }
        public Object ReticleTargetActor { get { return this[nameof(ReticleTargetActor)]; } set { this[nameof(ReticleTargetActor)] = value; } }
        public PalIndividualCharacterHandle IndividualHandle { get { return this[nameof(IndividualHandle)].As<PalIndividualCharacterHandle>(); } set { this["IndividualHandle"] = value; } }
        public PalIndividualCharacterParameter IndividualParameter { get { return this[nameof(IndividualParameter)].As<PalIndividualCharacterParameter>(); } set { this["IndividualParameter"] = value; } }
        public bool IsStun { get { return this[nameof(IsStun)].Flag; } set { this[nameof(IsStun)].Flag = value; } }
        public bool IsEnableSpeedCollision { get { return this[nameof(IsEnableSpeedCollision)].Flag; } set { this[nameof(IsEnableSpeedCollision)].Flag = value; } }
        public bool IsCanSneakAttacked { get { return this[nameof(IsCanSneakAttacked)].Flag; } set { this[nameof(IsCanSneakAttacked)].Flag = value; } }
        public bool IsFriendBulletIgnore { get { return this[nameof(IsFriendBulletIgnore)].Flag; } set { this[nameof(IsFriendBulletIgnore)].Flag = value; } }
        public int BiologicalGrade { get { return this[nameof(BiologicalGrade)].GetValue<int>(); } set { this[nameof(BiologicalGrade)].SetValue<int>(value); } }
        public bool IsPredator { get { return this[nameof(IsPredator)].Flag; } set { this[nameof(IsPredator)].Flag = value; } }
        public bool IsEdible { get { return this[nameof(IsEdible)].Flag; } set { this[nameof(IsEdible)].Flag = value; } }
        public int HiddenCollisionOverlapCount { get { return this[nameof(HiddenCollisionOverlapCount)].GetValue<int>(); } set { this[nameof(HiddenCollisionOverlapCount)].SetValue<int>(value); } }
        public int BurnCollisionOverlapCount { get { return this[nameof(BurnCollisionOverlapCount)].GetValue<int>(); } set { this[nameof(BurnCollisionOverlapCount)].SetValue<int>(value); } }
        public int LavaCollisionOverlapCount { get { return this[nameof(LavaCollisionOverlapCount)].GetValue<int>(); } set { this[nameof(LavaCollisionOverlapCount)].SetValue<int>(value); } }
        public EPalElementType DamageUpElement_ByElementStatus { get { return (EPalElementType)this[nameof(DamageUpElement_ByElementStatus)].GetValue<int>(); } set { this[nameof(DamageUpElement_ByElementStatus)].SetValue<int>((int)value); } }
        public EPalElementType DamageDownElement_ByElementStatus { get { return (EPalElementType)this[nameof(DamageDownElement_ByElementStatus)].GetValue<int>(); } set { this[nameof(DamageDownElement_ByElementStatus)].SetValue<int>((int)value); } }
        public bool IsDarknessRandomAttack { get { return this[nameof(IsDarknessRandomAttack)].Flag; } set { this[nameof(IsDarknessRandomAttack)].Flag = value; } }
        public int AttackUp { get { return this[nameof(AttackUp)].GetValue<int>(); } set { this[nameof(AttackUp)].SetValue<int>(value); } }
        public int DefenseUp { get { return this[nameof(DefenseUp)].GetValue<int>(); } set { this[nameof(DefenseUp)].SetValue<int>(value); } }
        public Object StatusAccumulateMap { get { return this[nameof(StatusAccumulateMap)]; } set { this[nameof(StatusAccumulateMap)] = value; } }
        public bool IsSleepAction { get { return this[nameof(IsSleepAction)].Flag; } set { this[nameof(IsSleepAction)].Flag = value; } }
        public Vector WildPalDrinkWaterPoint { get { return this[nameof(WildPalDrinkWaterPoint)].As<Vector>(); } set { this["WildPalDrinkWaterPoint"] = value; } }
        public bool IsDisableOtomoReturnEffect { get { return this[nameof(IsDisableOtomoReturnEffect)].Flag; } set { this[nameof(IsDisableOtomoReturnEffect)].Flag = value; } }
        public HitResult GroundHitResult { get { return this[nameof(GroundHitResult)].As<HitResult>(); } set { this["GroundHitResult"] = value; } }
        public bool bIsUseGroundRayCast { get { return this[nameof(bIsUseGroundRayCast)].Flag; } set { this[nameof(bIsUseGroundRayCast)].Flag = value; } }
        public FlagContainer DisableGroundRayCast { get { return this[nameof(DisableGroundRayCast)].As<FlagContainer>(); } set { this["DisableGroundRayCast"] = value; } }
        public FixedPoint64 SP { get { return this[nameof(SP)].As<FixedPoint64>(); } set { this["SP"] = value; } }
        public Guid BaseCampDefenseModelId { get { return this[nameof(BaseCampDefenseModelId)].As<Guid>(); } set { this["BaseCampDefenseModelId"] = value; } }
        public EPalMapBaseCampWorkerOrderType BaseCampWorkerOrderType { get { return (EPalMapBaseCampWorkerOrderType)this[nameof(BaseCampWorkerOrderType)].GetValue<int>(); } set { this[nameof(BaseCampWorkerOrderType)].SetValue<int>((int)value); } }
        public bool bBaseCampWorkerAttackableFriend { get { return this[nameof(bBaseCampWorkerAttackableFriend)].Flag; } set { this[nameof(bBaseCampWorkerAttackableFriend)].Flag = value; } }
        public Object UnreachableMapObjectInfos { get { return this[nameof(UnreachableMapObjectInfos)]; } set { this[nameof(UnreachableMapObjectInfos)] = value; } }
        public PalCharacterParameter_Work Work { get { return this[nameof(Work)].As<PalCharacterParameter_Work>(); } set { this["Work"] = value; } }
        public PalWorkAssignHandleId WorkAssignId { get { return this[nameof(WorkAssignId)].As<PalWorkAssignHandleId>(); } set { this["WorkAssignId"] = value; } }
        public EPalWorkType WorkType { get { return (EPalWorkType)this[nameof(WorkType)].GetValue<int>(); } set { this[nameof(WorkType)].SetValue<int>((int)value); } }
        public Guid BaseCampWalkAroundExcludeMapObjectInstanceId { get { return this[nameof(BaseCampWalkAroundExcludeMapObjectInstanceId)].As<Guid>(); } set { this["BaseCampWalkAroundExcludeMapObjectInstanceId"] = value; } }
        public Object PossessStaticItemId { get { return this[nameof(PossessStaticItemId)]; } set { this[nameof(PossessStaticItemId)] = value; } }
        public bool bBeingRescued { get { return this[nameof(bBeingRescued)].Flag; } set { this[nameof(bBeingRescued)].Flag = value; } }
        public float DyingHP { get { return this[nameof(DyingHP)].GetValue<float>(); } set { this[nameof(DyingHP)].SetValue<float>(value); } }
        public float DyingMaxHP { get { return this[nameof(DyingMaxHP)].GetValue<float>(); } set { this[nameof(DyingMaxHP)].SetValue<float>(value); } }
        public PalItemContainer ItemContainer { get { return this[nameof(ItemContainer)].As<PalItemContainer>(); } set { this["ItemContainer"] = value; } }
        public bool IsCapturedProcessing { get { return this[nameof(IsCapturedProcessing)].Flag; } set { this[nameof(IsCapturedProcessing)].Flag = value; } }
        public Object OnUpdatePossessItemDelegate { get { return this[nameof(OnUpdatePossessItemDelegate)]; } set { this[nameof(OnUpdatePossessItemDelegate)] = value; } }
        public Object OnUpdateWorkAssignIdDelegate { get { return this[nameof(OnUpdateWorkAssignIdDelegate)]; } set { this[nameof(OnUpdateWorkAssignIdDelegate)] = value; } }
        public Object OnSPOverheatDelegate { get { return this[nameof(OnSPOverheatDelegate)]; } set { this[nameof(OnSPOverheatDelegate)] = value; } }
        public Object OnChangeTrapLegHoldDelegate { get { return this[nameof(OnChangeTrapLegHoldDelegate)]; } set { this[nameof(OnChangeTrapLegHoldDelegate)] = value; } }
        public Object OnChangeTrapMovingPanelDelegate { get { return this[nameof(OnChangeTrapMovingPanelDelegate)]; } set { this[nameof(OnChangeTrapMovingPanelDelegate)] = value; } }
        public Vector TrapDirection { get { return this[nameof(TrapDirection)].As<Vector>(); } set { this["TrapDirection"] = value; } }
        public Object DamageMap { get { return this[nameof(DamageMap)]; } set { this[nameof(DamageMap)] = value; } }
        public bool CanDropItem { get { return this[nameof(CanDropItem)].Flag; } set { this[nameof(CanDropItem)].Flag = value; } }
        public FlagContainer DisableNaturalHealing_Component { get { return this[nameof(DisableNaturalHealing_Component)].As<FlagContainer>(); } set { this["DisableNaturalHealing_Component"] = value; } }
        public Array<Object> TrapLegHoldList { get { return new Array<Object>(this[nameof(TrapLegHoldList)].Address); } }
        public Array<Object> TrapMovingPanelList { get { return new Array<Object>(this[nameof(TrapMovingPanelList)].Address); } }
        public PalOtomoAttackStopJudgeByBallList OtomoAttackStopJudge { get { return this[nameof(OtomoAttackStopJudge)].As<PalOtomoAttackStopJudgeByBallList>(); } set { this["OtomoAttackStopJudge"] = value; } }
        public Array<PalMapObjectAppearanceDataWithId> UnreachableMapObjectRepInfoArray { get { return new Array<PalMapObjectAppearanceDataWithId>(this[nameof(UnreachableMapObjectRepInfoArray)].Address); } }
        public void ZeroDyingHP_ToServer() { Invoke(nameof(ZeroDyingHP_ToServer)); }
        public void ZeroDyingHP() { Invoke(nameof(ZeroDyingHP)); }
        public void UpdateWorkAssignIdDelegate__DelegateSignature(PalCharacterParameterComponent Parameter) { Invoke(nameof(UpdateWorkAssignIdDelegate__DelegateSignature), Parameter); }
        public void UpdateParameterDelegate__DelegateSignature(PalCharacterParameterComponent Parameter) { Invoke(nameof(UpdateParameterDelegate__DelegateSignature), Parameter); }
        public void SubDyingHP(float SubHP) { Invoke(nameof(SubDyingHP), SubHP); }
        public void SPOverheatDelegate__DelegateSignature() { Invoke(nameof(SPOverheatDelegate__DelegateSignature)); }
        public void SetupBiologicalGradeFromDatabase() { Invoke(nameof(SetupBiologicalGradeFromDatabase)); }
        public void SetTrainer(PalCharacter inTrainer) { Invoke(nameof(SetTrainer), inTrainer); }
        public void SetSP(FixedPoint64 NewSP) { Invoke(nameof(SetSP), NewSP); }
        public void SetReticleTarget_ToServer(Actor Actor) { Invoke(nameof(SetReticleTarget_ToServer), Actor); }
        public void SetOverrideTargetLocation_ToServer(Vector TargetLocation) { Invoke(nameof(SetOverrideTargetLocation_ToServer), TargetLocation); }
        public void SetOverrideTargetLocation(Vector TargetLocation) { Invoke(nameof(SetOverrideTargetLocation), TargetLocation); }
        public void SetMuteki(Object flagName, bool isEnable) { Invoke(nameof(SetMuteki), flagName, isEnable); }
        public void SetMP(FixedPoint64 NewMP) { Invoke(nameof(SetMP), NewMP); }
        public void SetMaxSP(FixedPoint64 NewMaxSP) { Invoke(nameof(SetMaxSP), NewMaxSP); }
        public void SetMaxMP(FixedPoint64 NewMaxMP) { Invoke(nameof(SetMaxMP), NewMaxMP); }
        public void SetMaxHP(FixedPoint64 NewMaxHP) { Invoke(nameof(SetMaxHP), NewMaxHP); }
        public void SetIsOverrideTarget_Innner(bool IsOverride) { Invoke(nameof(SetIsOverrideTarget_Innner), IsOverride); }
        public void SetIsOverrideTarget(bool IsOverride) { Invoke(nameof(SetIsOverrideTarget), IsOverride); }
        public void SetIsCapturedProcessing(bool IsCaptureProcess) { Invoke(nameof(SetIsCapturedProcessing), IsCaptureProcess); }
        public void SetHP(FixedPoint64 NewHP) { Invoke(nameof(SetHP), NewHP); }
        public void SetEnableSendReticleTarget(Object flagName, bool isEnable) { Invoke(nameof(SetEnableSendReticleTarget), flagName, isEnable); }
        public void SetElementTypeFromDatabase(PalCharacter InCharacter) { Invoke(nameof(SetElementTypeFromDatabase), InCharacter); }
        public void SetDisableNaturalHealing_Component(Object Key, bool Disable) { Invoke(nameof(SetDisableNaturalHealing_Component), Key, Disable); }
        public void SetDisableCreateUNKO(Object flagName, bool isDisable) { Invoke(nameof(SetDisableCreateUNKO), flagName, isDisable); }
        public void SetCoopingFlag(bool isEnable) { Invoke(nameof(SetCoopingFlag), isEnable); }
        public void ReviveFromDying() { Invoke(nameof(ReviveFromDying)); }
        public void ResetSP() { Invoke(nameof(ResetSP)); }
        public void ResetDyingHP() { Invoke(nameof(ResetDyingHP)); }
        public void RemoveTrapMovingPanel(Actor TrapActor) { Invoke(nameof(RemoveTrapMovingPanel), TrapActor); }
        public void RemoveTrapLegHold(Actor TrapActor) { Invoke(nameof(RemoveTrapLegHold), TrapActor); }
        public void OnSlipDamage(int Damage) { Invoke(nameof(OnSlipDamage), Damage); }
        public void OnRep_Trainer() { Invoke(nameof(OnRep_Trainer)); }
        public void OnRep_PossessStaticItemId() { Invoke(nameof(OnRep_PossessStaticItemId)); }
        public void OnRep_ItemContainer() { Invoke(nameof(OnRep_ItemContainer)); }
        public void OnRep_IndividualParameter() { Invoke(nameof(OnRep_IndividualParameter)); }
        public void OnInitializedCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(OnInitializedCharacter), OwnerCharacter); }
        public void OnInitialize_AfterSetIndividualParameter(PalCharacter Character) { Invoke(nameof(OnInitialize_AfterSetIndividualParameter), Character); }
        public void OnDamage(PalDamageResult DamageResult) { Invoke(nameof(OnDamage), DamageResult); }
        public void OnChangeTrapDelegate__DelegateSignature(bool IsExist) { Invoke(nameof(OnChangeTrapDelegate__DelegateSignature), IsExist); }
        public bool IsOtomo() { return Invoke<bool>(nameof(IsOtomo)); }
        public bool IsMuteki() { return Invoke<bool>(nameof(IsMuteki)); }
        public bool IsLive() { return Invoke<bool>(nameof(IsLive)); }
        public bool IsInHiddenCollision() { return Invoke<bool>(nameof(IsInHiddenCollision)); }
        public bool IsHyperArmor() { return Invoke<bool>(nameof(IsHyperArmor)); }
        public bool IsHittingLava() { return Invoke<bool>(nameof(IsHittingLava)); }
        public bool IsDyingHPZero() { return Invoke<bool>(nameof(IsDyingHPZero)); }
        public bool IsDyingHPMax() { return Invoke<bool>(nameof(IsDyingHPMax)); }
        public bool IsDying() { return Invoke<bool>(nameof(IsDying)); }
        public bool IsDead() { return Invoke<bool>(nameof(IsDead)); }
        public bool IsCooping() { return Invoke<bool>(nameof(IsCooping)); }
        public bool IsAssignedToAnyWork() { return Invoke<bool>(nameof(IsAssignedToAnyWork)); }
        public bool IsAssignedFixed() { return Invoke<bool>(nameof(IsAssignedFixed)); }
        public bool HasFloorPhysMaterial() { return Invoke<bool>(nameof(HasFloorPhysMaterial)); }
        public bool HasElementType(EPalElementType ElementType) { return Invoke<bool>(nameof(HasElementType), ElementType); }
        public Guid GetWorkId() { return Invoke<Guid>(nameof(GetWorkId)); }
        public PalWorkAssign GetWorkAssign() { return Invoke<PalWorkAssign>(nameof(GetWorkAssign)); }
        public PalWorkBase GetWork() { return Invoke<PalWorkBase>(nameof(GetWork)); }
        public FixedPoint64 GetSP() { return Invoke<FixedPoint64>(nameof(GetSP)); }
        public int GetShotAttack() { return Invoke<int>(nameof(GetShotAttack)); }
        public float GetSanity() { return Invoke<float>(nameof(GetSanity)); }
        public float GetRadius() { return Invoke<float>(nameof(GetRadius)); }
        public Vector GetOverrideTargetLocation_ConsiderRide() { return Invoke<Vector>(nameof(GetOverrideTargetLocation_ConsiderRide)); }
        public PalOtomoAttackStopJudgeByBallList GetOtomoAttackStopJudge() { return Invoke<PalOtomoAttackStopJudgeByBallList>(nameof(GetOtomoAttackStopJudge)); }
        public void GetNickname(Object outName) { Invoke(nameof(GetNickname), outName); }
        public FixedPoint64 GetMP() { return Invoke<FixedPoint64>(nameof(GetMP)); }
        public int GetMeleeAttack() { return Invoke<int>(nameof(GetMeleeAttack)); }
        public FixedPoint64 GetMaxSP() { return Invoke<FixedPoint64>(nameof(GetMaxSP)); }
        public float GetMaxSanity() { return Invoke<float>(nameof(GetMaxSanity)); }
        public FixedPoint64 GetMaxMP() { return Invoke<FixedPoint64>(nameof(GetMaxMP)); }
        public FixedPoint64 GetMaxHP() { return Invoke<FixedPoint64>(nameof(GetMaxHP)); }
        public float GetMaxFullStomach() { return Invoke<float>(nameof(GetMaxFullStomach)); }
        public Guid GetMapObjectInstanceIdApproachTo() { return Invoke<Guid>(nameof(GetMapObjectInstanceIdApproachTo)); }
        public int GetLevel() { return Invoke<int>(nameof(GetLevel)); }
        public int GetLegHoldResistLevel() { return Invoke<int>(nameof(GetLegHoldResistLevel)); }
        public bool GetIsCapturedProcessing() { return Invoke<bool>(nameof(GetIsCapturedProcessing)); }
        public PalIndividualCharacterParameter GetIndividualParameter() { return Invoke<PalIndividualCharacterParameter>(nameof(GetIndividualParameter)); }
        public FixedPoint64 GetHP() { return Invoke<FixedPoint64>(nameof(GetHP)); }
        public HitResult GetHitGroundResult() { return Invoke<HitResult>(nameof(GetHitGroundResult)); }
        public float GetFullStomach() { return Invoke<float>(nameof(GetFullStomach)); }
        public byte GetFloorPhisicalSurface() { return Invoke<byte>(nameof(GetFloorPhisicalSurface)); }
        public Vector GetFloorLocation() { return Invoke<Vector>(nameof(GetFloorLocation)); }
        public int GetDefense() { return Invoke<int>(nameof(GetDefense)); }
        public int GetCraftSpeed_WorkSuitability(EPalWorkSuitability WorkSuitability) { return Invoke<int>(nameof(GetCraftSpeed_WorkSuitability), WorkSuitability); }
        public int GetCraftSpeed() { return Invoke<int>(nameof(GetCraftSpeed)); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
        public void AddTrapMovingPanel(Actor TrapActor) { Invoke(nameof(AddTrapMovingPanel), TrapActor); }
        public void AddTrapLegHold(Actor TrapActor) { Invoke(nameof(AddTrapLegHold), TrapActor); }
        public void AddDyingHP(float AddHP) { Invoke(nameof(AddDyingHP), AddHP); }
    }
    public class PalCharacterParameterStorageSubsystem : PalWorldSubsystem
    {
        public PalCharacterParameterStorageSubsystem(nint addr) : base(addr) { }
        public Object OnStoredParameterDelegate_ForServer { get { return this[nameof(OnStoredParameterDelegate_ForServer)]; } set { this[nameof(OnStoredParameterDelegate_ForServer)] = value; } }
        public Object OnRemovedParameterDelegate_ForServer { get { return this[nameof(OnRemovedParameterDelegate_ForServer)]; } set { this[nameof(OnRemovedParameterDelegate_ForServer)] = value; } }
        public Object StoredParameterInfoMap { get { return this[nameof(StoredParameterInfoMap)]; } set { this[nameof(StoredParameterInfoMap)] = value; } }
    }
    public class PalShopBase : Object
    {
        public PalShopBase(nint addr) : base(addr) { }
        public Object OnUpdateAnyProduct { get { return this[nameof(OnUpdateAnyProduct)]; } set { this[nameof(OnUpdateAnyProduct)] = value; } }
        public Guid MyShopID { get { return this[nameof(MyShopID)].As<Guid>(); } set { this["MyShopID"] = value; } }
        public Object MyShopName { get { return this[nameof(MyShopName)]; } set { this[nameof(MyShopName)] = value; } }
        public Array<PalShopProductBase> ProductArray { get { return new Array<PalShopProductBase>(this[nameof(ProductArray)].Address); } }
        public Object ProductMap_ForServer { get { return this[nameof(ProductMap_ForServer)]; } set { this[nameof(ProductMap_ForServer)] = value; } }
        public TimerHandle RestockTimerHandle_ForServer { get { return this[nameof(RestockTimerHandle_ForServer)].As<TimerHandle>(); } set { this["RestockTimerHandle_ForServer"] = value; } }
        public void UpdateAnyProductDelegate__DelegateSignature() { Invoke(nameof(UpdateAnyProductDelegate__DelegateSignature)); }
        public void OnUpdateAnyProductStock(int NowStock) { Invoke(nameof(OnUpdateAnyProductStock), NowStock); }
        public void OnUpdateAnyProductMaxStock(int MaxStock) { Invoke(nameof(OnUpdateAnyProductMaxStock), MaxStock); }
        public void OnTimerTrigger_Restock() { Invoke(nameof(OnTimerTrigger_Restock)); }
        public void OnRep_ProductArray() { Invoke(nameof(OnRep_ProductArray)); }
        public void OnRep_MyShopName() { Invoke(nameof(OnRep_MyShopName)); }
        public void GetId(Guid OutID) { Invoke(nameof(GetId), OutID); }
        public void GetAllProduct(Array<PalShopProductBase> OutProductArray) { Invoke(nameof(GetAllProduct), OutProductArray); }
    }
    public class PalCharacterShop : PalShopBase
    {
        public PalCharacterShop(nint addr) : base(addr) { }
        public Array<PalShopProduct_LostPal> LocalLostPalProductArray { get { return new Array<PalShopProduct_LostPal>(this[nameof(LocalLostPalProductArray)].Address); } }
    }
    public class PalCharacterStatusOperation : Object
    {
        public PalCharacterStatusOperation(nint addr) : base(addr) { }
        public Object GetReturnItemsForResetCharacterStatusAll(Object WorldContextObject, PalIndividualCharacterParameter TargetIndividualParameter) { return Invoke<Object>(nameof(GetReturnItemsForResetCharacterStatusAll), WorldContextObject, TargetIndividualParameter); }
        public int GetRequiredRelicCountForLocalPlayer(Object WorldContextObject) { return Invoke<int>(nameof(GetRequiredRelicCountForLocalPlayer), WorldContextObject); }
        public int GetRequiredMoneyCountForResetLocalPlayer(Object WorldContextObject) { return Invoke<int>(nameof(GetRequiredMoneyCountForResetLocalPlayer), WorldContextObject); }
        public int GetRequiredMoneyCountForResetCharacterStatusAll(Object WorldContextObject, PalIndividualCharacterHandle targetHandle) { return Invoke<int>(nameof(GetRequiredMoneyCountForResetCharacterStatusAll), WorldContextObject, targetHandle); }
        public int GetRequiredMoneyCountForResetCharacterStatus(Object WorldContextObject, PalIndividualCharacterHandle targetHandle, EPalCharacterStatusOperationName StatusName) { return Invoke<int>(nameof(GetRequiredMoneyCountForResetCharacterStatus), WorldContextObject, targetHandle, StatusName); }
        public void GetRequiredItemCountForCharacterStatus(Object WorldContextObject, PalIndividualCharacterHandle targetHandle, EPalCharacterStatusOperationName StatusName, Object OutStaticItemId, int OutItemNum) { Invoke(nameof(GetRequiredItemCountForCharacterStatus), WorldContextObject, targetHandle, StatusName, OutStaticItemId, OutItemNum); }
        public int GetCurrentStatusRank(PalIndividualCharacterParameter TargetIndividualParameter, EPalCharacterStatusOperationName StatusName) { return Invoke<int>(nameof(GetCurrentStatusRank), TargetIndividualParameter, StatusName); }
        public int GetCurrentLocalPlayerStatusPoint(Object WorldContextObject, Object StatusName) { return Invoke<int>(nameof(GetCurrentLocalPlayerStatusPoint), WorldContextObject, StatusName); }
    }
    public class PalHUDDispatchParameter_CharacterStatusOperator : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_CharacterStatusOperator(nint addr) : base(addr) { }
        public void GetCharacterStatusOperationResultText(Object WorldContextObject, EPalCharacterStatusOperationResult Type, Object OutText) { Invoke(nameof(GetCharacterStatusOperationResultText), WorldContextObject, Type, OutText); }
        public void BindReceiveRequestResultDelegate(Object WorldContextObject, Object Delegate) { Invoke(nameof(BindReceiveRequestResultDelegate), WorldContextObject, Delegate); }
    }
    public class PalCheatManager : CheatManager
    {
        public PalCheatManager(nint addr) : base(addr) { }
        public PalDebugWindowSetting DebugWindowSetting { get { return this[nameof(DebugWindowSetting)].As<PalDebugWindowSetting>(); } set { this["DebugWindowSetting"] = value; } }
        public DataTable DebugProgressPresetDataTable { get { return this[nameof(DebugProgressPresetDataTable)].As<DataTable>(); } set { this["DebugProgressPresetDataTable"] = value; } }
        public Object SpawnerInfoReporterClass { get { return this[nameof(SpawnerInfoReporterClass)]; } set { this[nameof(SpawnerInfoReporterClass)] = value; } }
        public PalImGui PalImGui { get { return this[nameof(PalImGui)].As<PalImGui>(); } set { this["PalImGui"] = value; } }
        public PalStatPalCount PalCountSystem { get { return this[nameof(PalCountSystem)].As<PalStatPalCount>(); } set { this["PalCountSystem"] = value; } }
        public PalDebug_SpawnInfoReporter SpawnInfoReporter { get { return this[nameof(SpawnInfoReporter)].As<PalDebug_SpawnInfoReporter>(); } set { this["SpawnInfoReporter"] = value; } }
        public void WorkerEventLog() { Invoke(nameof(WorkerEventLog)); }
        public void WorkerEventInterval(float Interval) { Invoke(nameof(WorkerEventInterval), Interval); }
        public void WildPalCombatStart() { Invoke(nameof(WildPalCombatStart)); }
        public void WazaCoolTimeFastMode() { Invoke(nameof(WazaCoolTimeFastMode)); }
        public void VisitorTravel() { Invoke(nameof(VisitorTravel)); }
        public void UpdateBaseCampWorkerSlotNum(int SlotNum) { Invoke(nameof(UpdateBaseCampWorkerSlotNum), SlotNum); }
        public void UpdateBaseCampTickInvokeMaxNumInOneTick(int Value) { Invoke(nameof(UpdateBaseCampTickInvokeMaxNumInOneTick), Value); }
        public void UpdateBaseCampLevelMax() { Invoke(nameof(UpdateBaseCampLevelMax)); }
        public void UnlockTechnologyByLvCap(int Lv) { Invoke(nameof(UnlockTechnologyByLvCap), Lv); }
        public void UnlockOneTechnology(Object technologyName) { Invoke(nameof(UnlockOneTechnology), technologyName); }
        public void UnlockMap(Object regionId) { Invoke(nameof(UnlockMap), regionId); }
        public void UnlockAllRecipeTechnology() { Invoke(nameof(UnlockAllRecipeTechnology)); }
        public void UnlockAllCategoryTechnology() { Invoke(nameof(UnlockAllCategoryTechnology)); }
        public void UnlockAchievement(Object AchievementId, int Progress) { Invoke(nameof(UnlockAchievement), AchievementId, Progress); }
        public void UNKO() { Invoke(nameof(UNKO)); }
        public void TriggerBaseCampWorkerEvent(EPalBaseCampWorkerEventType EventType) { Invoke(nameof(TriggerBaseCampWorkerEvent), EventType); }
        public void ToggleVisibleFoliageChunk() { Invoke(nameof(ToggleVisibleFoliageChunk)); }
        public void ToggleShowReticleLocation() { Invoke(nameof(ToggleShowReticleLocation)); }
        public void ToggleShowDropItemHitEventLog() { Invoke(nameof(ToggleShowDropItemHitEventLog)); }
        public void ToggleRevision_BP() { Invoke(nameof(ToggleRevision_BP)); }
        public void ToggleRevision() { Invoke(nameof(ToggleRevision)); }
        public void TogglePartnerSkillNoDecrease() { Invoke(nameof(TogglePartnerSkillNoDecrease)); }
        public void ToggleLoadingScreen() { Invoke(nameof(ToggleLoadingScreen)); }
        public void ToggleHUD() { Invoke(nameof(ToggleHUD)); }
        public void ToggleBuildInstallCheckLookToCamera() { Invoke(nameof(ToggleBuildInstallCheckLookToCamera)); }
        public void ToggleBaseCampWorkerSanityDetail() { Invoke(nameof(ToggleBaseCampWorkerSanityDetail)); }
        public void TimeStopForBP() { Invoke(nameof(TimeStopForBP)); }
        public void TeleportToSafePoint() { Invoke(nameof(TeleportToSafePoint)); }
        public void TeleportToNearestPlayer() { Invoke(nameof(TeleportToNearestPlayer)); }
        public void TeleportToNearestCamp() { Invoke(nameof(TeleportToNearestCamp)); }
        public void TeleportToLocationByClipboard() { Invoke(nameof(TeleportToLocationByClipboard)); }
        public void TeleportToLocation(float X, float Y, float Z) { Invoke(nameof(TeleportToLocation), X, Y, Z); }
        public void TeleportToLastLandingLocation() { Invoke(nameof(TeleportToLastLandingLocation)); }
        public void TeleportToDungeonEntranceRandom() { Invoke(nameof(TeleportToDungeonEntranceRandom)); }
        public void TeleportToDungeonEntranceByRandomScattered() { Invoke(nameof(TeleportToDungeonEntranceByRandomScattered)); }
        public void TeleportToDungeonEntranceByIndex(int Index) { Invoke(nameof(TeleportToDungeonEntranceByIndex), Index); }
        public void TeleportToDungeonEntranceByDataLayer(Object DataLayerName) { Invoke(nameof(TeleportToDungeonEntranceByDataLayer), DataLayerName); }
        public void TeleportToCurrentDungeonTreasureBox() { Invoke(nameof(TeleportToCurrentDungeonTreasureBox)); }
        public void TeleportToCurrentDungeonGoal() { Invoke(nameof(TeleportToCurrentDungeonGoal)); }
        public void TeleportToBotLocation(int botIndex) { Invoke(nameof(TeleportToBotLocation), botIndex); }
        public void TeleportToBotCamp(int botIndex) { Invoke(nameof(TeleportToBotCamp), botIndex); }
        public void TeleportToBossTower(EPalBossType BossType) { Invoke(nameof(TeleportToBossTower), BossType); }
        public void TeleportNearestPlayerToMe() { Invoke(nameof(TeleportNearestPlayerToMe)); }
        public void StringToPlayerUID(Object Str) { Invoke(nameof(StringToPlayerUID), Str); }
        public void StopTimerDropItem() { Invoke(nameof(StopTimerDropItem)); }
        public void StopOtomoMovement() { Invoke(nameof(StopOtomoMovement)); }
        public void StopOtomoAI() { Invoke(nameof(StopOtomoAI)); }
        public void StartWildPalCombat() { Invoke(nameof(StartWildPalCombat)); }
        public void StartTraceAllOption() { Invoke(nameof(StartTraceAllOption)); }
        public void StartDismantlingMode() { Invoke(nameof(StartDismantlingMode)); }
        public void StartBuildMode(Object BuildObjectId) { Invoke(nameof(StartBuildMode), BuildObjectId); }
        public void SpectatorOnForBP() { Invoke(nameof(SpectatorOnForBP)); }
        public void SpectatorOn() { Invoke(nameof(SpectatorOn)); }
        public void SpectatorOffForBP() { Invoke(nameof(SpectatorOffForBP)); }
        public void SpectatorOff() { Invoke(nameof(SpectatorOff)); }
        public void SpawnPalEggBreedFarm(Object MonsterId, float Range) { Invoke(nameof(SpawnPalEggBreedFarm), MonsterId, Range); }
        public void SpawnMonsterForPlayer(Object CharacterID, int Num, int Level) { Invoke(nameof(SpawnMonsterForPlayer), CharacterID, Num, Level); }
        public void SpawnMonster(Object CharacterID, int Level) { Invoke(nameof(SpawnMonster), CharacterID, Level); }
        public void SleepAllEnemy() { Invoke(nameof(SleepAllEnemy)); }
        public void SkipCutscene() { Invoke(nameof(SkipCutscene)); }
        public void ShutdownRemoteServer() { Invoke(nameof(ShutdownRemoteServer)); }
        public void ShowTargetLocalPlayerEnemyList() { Invoke(nameof(ShowTargetLocalPlayerEnemyList)); }
        public void ShowSpawnerInfo() { Invoke(nameof(ShowSpawnerInfo)); }
        public void ShowPlayers() { Invoke(nameof(ShowPlayers)); }
        public void ShowPlayerMoveSpeed() { Invoke(nameof(ShowPlayerMoveSpeed)); }
        public void ShowPalEggStatus() { Invoke(nameof(ShowPalEggStatus)); }
        public void ShowPalCount() { Invoke(nameof(ShowPalCount)); }
        public void ShowObjectNameGround() { Invoke(nameof(ShowObjectNameGround)); }
        public void ShowObjectNameForward() { Invoke(nameof(ShowObjectNameForward)); }
        public void ShowMovementMode() { Invoke(nameof(ShowMovementMode)); }
        public void ShowMapObjectStatus() { Invoke(nameof(ShowMapObjectStatus)); }
        public void ShowMapObjectFoliageStatus() { Invoke(nameof(ShowMapObjectFoliageStatus)); }
        public void ShowMapObjectConnector() { Invoke(nameof(ShowMapObjectConnector)); }
        public void ShowLocalSaveData() { Invoke(nameof(ShowLocalSaveData)); }
        public void ShowLaunchArguments() { Invoke(nameof(ShowLaunchArguments)); }
        public void ShowInviteCode() { Invoke(nameof(ShowInviteCode)); }
        public void ShowInvaderDeubgLog() { Invoke(nameof(ShowInvaderDeubgLog)); }
        public void ShowHateArrow() { Invoke(nameof(ShowHateArrow)); }
        public void ShowFloorLocation() { Invoke(nameof(ShowFloorLocation)); }
        public void ShowDialog(Object Msg) { Invoke(nameof(ShowDialog), Msg); }
        public void ShowDefenseAttackTarget() { Invoke(nameof(ShowDefenseAttackTarget)); }
        public void ShowDefenseAttackableRange() { Invoke(nameof(ShowDefenseAttackableRange)); }
        public void ShowDebugWorkAssignTarget() { Invoke(nameof(ShowDebugWorkAssignTarget)); }
        public void ShowDebugWorkAssign() { Invoke(nameof(ShowDebugWorkAssign)); }
        public void ShowDebugWanted() { Invoke(nameof(ShowDebugWanted)); }
        public void ShowDebugCrime() { Invoke(nameof(ShowDebugCrime)); }
        public void ShowCharacterStatus() { Invoke(nameof(ShowCharacterStatus)); }
        public void ShowBuildObjectInstallCheck() { Invoke(nameof(ShowBuildObjectInstallCheck)); }
        public void ShowAlert(Object Msg) { Invoke(nameof(ShowAlert), Msg); }
        public void ShowAISound() { Invoke(nameof(ShowAISound)); }
        public void ShowActionName() { Invoke(nameof(ShowActionName)); }
        public void ShowActionAndStatus_ToServer() { Invoke(nameof(ShowActionAndStatus_ToServer)); }
        public void ShowActionAndStatus() { Invoke(nameof(ShowActionAndStatus)); }
        public void SetWorldPartitionLoadParameter(float Range, bool bIsActivated) { Invoke(nameof(SetWorldPartitionLoadParameter), Range, bIsActivated); }
        public void SetVoiceID(int VoiceID) { Invoke(nameof(SetVoiceID), VoiceID); }
        public void SetSunLightShadowDistance(float InDistance) { Invoke(nameof(SetSunLightShadowDistance), InDistance); }
        public void SetSanityToBaseCampPal(float Sanity) { Invoke(nameof(SetSanityToBaseCampPal), Sanity); }
        public void SetPlayerSP(int NewSP) { Invoke(nameof(SetPlayerSP), NewSP); }
        public void SetPlayerHP(int NewHP) { Invoke(nameof(SetPlayerHP), NewHP); }
        public void SetPlayerCameraBoomLengthRate(float Rate) { Invoke(nameof(SetPlayerCameraBoomLengthRate), Rate); }
        public void SetPassive_PlayerWeapon(Object firstPassive, Object secondPassive, Object thirdPassive) { Invoke(nameof(SetPassive_PlayerWeapon), firstPassive, secondPassive, thirdPassive); }
        public void SetPalWorldTimeScale(float Rate) { Invoke(nameof(SetPalWorldTimeScale), Rate); }
        public void SetPalWorldTime(int Hour) { Invoke(nameof(SetPalWorldTime), Hour); }
        public void SetPalEggStatusRange(float Range) { Invoke(nameof(SetPalEggStatusRange), Range); }
        public void SetPaldexComplete(bool IsComplete) { Invoke(nameof(SetPaldexComplete), IsComplete); }
        public void SetOtomoPalWorkSpeedRank(int Rank) { Invoke(nameof(SetOtomoPalWorkSpeedRank), Rank); }
        public void SetOtomoPalRank(int Rank) { Invoke(nameof(SetOtomoPalRank), Rank); }
        public void SetOtomoPalHPRank(int Rank) { Invoke(nameof(SetOtomoPalHPRank), Rank); }
        public void SetOtomoPalDefenceRank(int Rank) { Invoke(nameof(SetOtomoPalDefenceRank), Rank); }
        public void SetOtomoPalAttackRank(int Rank) { Invoke(nameof(SetOtomoPalAttackRank), Rank); }
        public void SetMultiplayRestriction(bool bRestriction) { Invoke(nameof(SetMultiplayRestriction), bRestriction); }
        public void SetMapObjectStatusRange(float Range) { Invoke(nameof(SetMapObjectStatusRange), Range); }
        public void SetLoadingSceneVisible(bool IsVisible) { Invoke(nameof(SetLoadingSceneVisible), IsVisible); }
        public void SetInventoryItemDurability(float Percent) { Invoke(nameof(SetInventoryItemDurability), Percent); }
        public void SetGameTime_NextNight_SecondsAgo(int SecondsAgo) { Invoke(nameof(SetGameTime_NextNight_SecondsAgo), SecondsAgo); }
        public void SetGameTime_NextNight() { Invoke(nameof(SetGameTime_NextNight)); }
        public void SetGameTime_NextDay_SecondsAgo(int SecondsAgo) { Invoke(nameof(SetGameTime_NextDay_SecondsAgo), SecondsAgo); }
        public void SetGameTime_NextDay() { Invoke(nameof(SetGameTime_NextDay)); }
        public void SetFPSForServer(float fps) { Invoke(nameof(SetFPSForServer), fps); }
        public void SetForceLocationTeleport(bool bForceLocationTeleport) { Invoke(nameof(SetForceLocationTeleport), bForceLocationTeleport); }
        public void SetDisableInteractReticleTarget(bool bIsEnable) { Invoke(nameof(SetDisableInteractReticleTarget), bIsEnable); }
        public void SetDebugRespawnPointForPlayer(PalPlayerCharacter Character, Vector Location) { Invoke(nameof(SetDebugRespawnPointForPlayer), Character, Location); }
        public void SetDebugFullStomachDecreaseRate(float Rate) { Invoke(nameof(SetDebugFullStomachDecreaseRate), Rate); }
        public void SetCharacterName(Object Name) { Invoke(nameof(SetCharacterName), Name); }
        public void SetCharacterMakeColor(Color Color) { Invoke(nameof(SetCharacterMakeColor), Color); }
        public void SetCharacterMakeAllRed() { Invoke(nameof(SetCharacterMakeAllRed)); }
        public void SetCharacterMakeAllNormal() { Invoke(nameof(SetCharacterMakeAllNormal)); }
        public void SetCharacterMakeAllMin() { Invoke(nameof(SetCharacterMakeAllMin)); }
        public void SetCharacterMakeAllMax() { Invoke(nameof(SetCharacterMakeAllMax)); }
        public void SetCharacterMakeAllGreen() { Invoke(nameof(SetCharacterMakeAllGreen)); }
        public void SetCharacterMakeAllBlue() { Invoke(nameof(SetCharacterMakeAllBlue)); }
        public void SetBaseCampWorkerHpSingle(float Percentage) { Invoke(nameof(SetBaseCampWorkerHpSingle), Percentage); }
        public void SetBaseCampWorkerHp(float Percentage) { Invoke(nameof(SetBaseCampWorkerHp), Percentage); }
        public void SetAlwaysGrantPassiveSkillMode(bool Flag) { Invoke(nameof(SetAlwaysGrantPassiveSkillMode), Flag); }
        public void SetActivity(Object ConnStr, int maxPlayer, int currentPlayer) { Invoke(nameof(SetActivity), ConnStr, maxPlayer, currentPlayer); }
        public void SendChatToBroadcast(Object Text) { Invoke(nameof(SendChatToBroadcast), Text); }
        public void SaikyoGamePreset() { Invoke(nameof(SaikyoGamePreset)); }
        public void RideIKEnable() { Invoke(nameof(RideIKEnable)); }
        public void RideIKDisable() { Invoke(nameof(RideIKDisable)); }
        public void RespawnPlayer() { Invoke(nameof(RespawnPlayer)); }
        public void RerollCharacterMake() { Invoke(nameof(RerollCharacterMake)); }
        public void RequestLogTreasureBoxLocalPlayerAround() { Invoke(nameof(RequestLogTreasureBoxLocalPlayerAround)); }
        public void RequestFillSlotChestToInventory() { Invoke(nameof(RequestFillSlotChestToInventory)); }
        public void RequestFillSlotChestFromInventory() { Invoke(nameof(RequestFillSlotChestFromInventory)); }
        public void RepairEquipment() { Invoke(nameof(RepairEquipment)); }
        public void RandomizePassive_PlayerWeapon() { Invoke(nameof(RandomizePassive_PlayerWeapon)); }
        public void PrintInventoryDynamicItemLog() { Invoke(nameof(PrintInventoryDynamicItemLog)); }
        public void PrintGameTime() { Invoke(nameof(PrintGameTime)); }
        public void Ping(Object Address) { Invoke(nameof(Ping), Address); }
        public void ParallelForUpdateActiveTiles() { Invoke(nameof(ParallelForUpdateActiveTiles)); }
        public void PalmiTargetEnemny() { Invoke(nameof(PalmiTargetEnemny)); }
        public void OrderBaseCampWorker(EPalMapBaseCampWorkerOrderType OrderType) { Invoke(nameof(OrderBaseCampWorker), OrderType); }
        public void OpenTitleForBP() { Invoke(nameof(OpenTitleForBP)); }
        public void OpenTitle() { Invoke(nameof(OpenTitle)); }
        public void OpenPrivateServerForBP() { Invoke(nameof(OpenPrivateServerForBP)); }
        public void OpenPrivateServer() { Invoke(nameof(OpenPrivateServer)); }
        public void OpenMultiBattleMapForBP() { Invoke(nameof(OpenMultiBattleMapForBP)); }
        public void OpenMultiBattleMap() { Invoke(nameof(OpenMultiBattleMap)); }
        public void OpenDefaultMap() { Invoke(nameof(OpenDefaultMap)); }
        public void OnPingComplete(PingIP PingIP, Object Address, int TimeMS) { Invoke(nameof(OnPingComplete), PingIP, Address, TimeMS); }
        public void NotDecreaseWeaponItem() { Invoke(nameof(NotDecreaseWeaponItem)); }
        public void NotConsumeMaterialsInCraft() { Invoke(nameof(NotConsumeMaterialsInCraft)); }
        public void NotConsumeMaterialsInBuild() { Invoke(nameof(NotConsumeMaterialsInBuild)); }
        public void MutekiForPlayer() { Invoke(nameof(MutekiForPlayer)); }
        public void MutekiForFriend() { Invoke(nameof(MutekiForFriend)); }
        public void MutekiALL() { Invoke(nameof(MutekiALL)); }
        public void ManyUNKO() { Invoke(nameof(ManyUNKO)); }
        public void LoginNative() { Invoke(nameof(LoginNative)); }
        public void LoginEOS() { Invoke(nameof(LoginEOS)); }
        public void LogBaseCampInfo() { Invoke(nameof(LogBaseCampInfo)); }
        public void KillPlayer() { Invoke(nameof(KillPlayer)); }
        public void KillGuildFriend() { Invoke(nameof(KillGuildFriend)); }
        public void KillBaseCampWorkerSingle() { Invoke(nameof(KillBaseCampWorkerSingle)); }
        public void KillBaseCampWorker() { Invoke(nameof(KillBaseCampWorker)); }
        public void KillAllFriend() { Invoke(nameof(KillAllFriend)); }
        public void KillAllEnemy() { Invoke(nameof(KillAllEnemy)); }
        public void KickPlayer(Object PlayerUIdORSteamId, Object KickReason) { Invoke(nameof(KickPlayer), PlayerUIdORSteamId, KickReason); }
        public void JumpToClientStartLocation() { Invoke(nameof(JumpToClientStartLocation)); }
        public void JoinInviteCode(Object InviteCode) { Invoke(nameof(JoinInviteCode), InviteCode); }
        public void JoinClientPlayerToServerGuild() { Invoke(nameof(JoinClientPlayerToServerGuild)); }
        public bool IsShowCharacterStatus() { return Invoke<bool>(nameof(IsShowCharacterStatus)); }
        public bool IsNotDecreaseWeaponItem() { return Invoke<bool>(nameof(IsNotDecreaseWeaponItem)); }
        public bool IsNotConsumeMaterialsInBuild() { return Invoke<bool>(nameof(IsNotConsumeMaterialsInBuild)); }
        public bool IsMutekiForPlayer() { return Invoke<bool>(nameof(IsMutekiForPlayer)); }
        public bool IsMutekiForFriend() { return Invoke<bool>(nameof(IsMutekiForFriend)); }
        public bool IsMutekiALL() { return Invoke<bool>(nameof(IsMutekiALL)); }
        public bool IsIgnoreBuildRestrictionBaseCamp() { return Invoke<bool>(nameof(IsIgnoreBuildRestrictionBaseCamp)); }
        public bool IsFixedSP() { return Invoke<bool>(nameof(IsFixedSP)); }
        public bool IsDisableEnemyEyeSight() { return Invoke<bool>(nameof(IsDisableEnemyEyeSight)); }
        public bool IsCaptureSuccessAlways() { return Invoke<bool>(nameof(IsCaptureSuccessAlways)); }
        public bool IsCaptureFailAlways() { return Invoke<bool>(nameof(IsCaptureFailAlways)); }
        public void IsAllStreamingCompleted() { Invoke(nameof(IsAllStreamingCompleted)); }
        public bool IsActionName() { return Invoke<bool>(nameof(IsActionName)); }
        public void InvaderMarchRandom() { Invoke(nameof(InvaderMarchRandom)); }
        public void InvaderMarch() { Invoke(nameof(InvaderMarch)); }
        public void InstallVirtualBaseCamp() { Invoke(nameof(InstallVirtualBaseCamp)); }
        public void InsightsTraceStopForServer() { Invoke(nameof(InsightsTraceStopForServer)); }
        public void InsightsTraceStopForLocal() { Invoke(nameof(InsightsTraceStopForLocal)); }
        public void InsightsTraceStartForServer() { Invoke(nameof(InsightsTraceStartForServer)); }
        public void InsightsTraceStartForLocal() { Invoke(nameof(InsightsTraceStartForLocal)); }
        public void InitInventory(Object StaticItemId, int Count) { Invoke(nameof(InitInventory), StaticItemId, Count); }
        public void IgnoreRestrictedByItemsForPartnerSkill() { Invoke(nameof(IgnoreRestrictedByItemsForPartnerSkill)); }
        public void IgnoreBuildRestrictionBaseCamp() { Invoke(nameof(IgnoreBuildRestrictionBaseCamp)); }
        public void HPOneAllCharacter() { Invoke(nameof(HPOneAllCharacter)); }
        public void HideTutorialQuest_BP() { Invoke(nameof(HideTutorialQuest_BP)); }
        public void HideTutorialQuest() { Invoke(nameof(HideTutorialQuest)); }
        public void GetRelic(int Count) { Invoke(nameof(GetRelic), Count); }
        public void GetPlanerPal() { Invoke(nameof(GetPlanerPal)); }
        public void GetPalEgg(Object CharacterID) { Invoke(nameof(GetPalEgg), CharacterID); }
        public void GetItemWithPassiveSkill(Object StaticItemId, int Count, Object PassiveSkillId) { Invoke(nameof(GetItemWithPassiveSkill), StaticItemId, Count, PassiveSkillId); }
        public void GetItemWithPassive(Object StaticItemId, int Count) { Invoke(nameof(GetItemWithPassive), StaticItemId, Count); }
        public void GetItemToLoadoutWithPassive(Object StaticItemId, int Count) { Invoke(nameof(GetItemToLoadoutWithPassive), StaticItemId, Count); }
        public void GetItemToLoadout(Object StaticItemId, int Count) { Invoke(nameof(GetItemToLoadout), StaticItemId, Count); }
        public void GetItem(Object StaticItemId, int Count) { Invoke(nameof(GetItem), StaticItemId, Count); }
        public void GenerateCombiMonster() { Invoke(nameof(GenerateCombiMonster)); }
        public void FullPowerForPlayer() { Invoke(nameof(FullPowerForPlayer)); }
        public void ForceUpdateBaseCampWorkerEvent() { Invoke(nameof(ForceUpdateBaseCampWorkerEvent)); }
        public void ForceSpawnRarePal() { Invoke(nameof(ForceSpawnRarePal)); }
        public void ForceReportCriminal() { Invoke(nameof(ForceReportCriminal)); }
        public void ForceReloadPlayerParameter() { Invoke(nameof(ForceReloadPlayerParameter)); }
        public void ForceReleaseWanted() { Invoke(nameof(ForceReleaseWanted)); }
        public void ForceLowerSpecSetting() { Invoke(nameof(ForceLowerSpecSetting)); }
        public void ForceExitStageAllPlayer() { Invoke(nameof(ForceExitStageAllPlayer)); }
        public void ForceExitStage() { Invoke(nameof(ForceExitStage)); }
        public void ForceDisableTimerLight() { Invoke(nameof(ForceDisableTimerLight)); }
        public void ForceDisablePalMeshCollision() { Invoke(nameof(ForceDisablePalMeshCollision)); }
        public void FootIKEnable() { Invoke(nameof(FootIKEnable)); }
        public void FootIKDisable() { Invoke(nameof(FootIKDisable)); }
        public void FixedUseEagleForGlider() { Invoke(nameof(FixedUseEagleForGlider)); }
        public void FixedSP() { Invoke(nameof(FixedSP)); }
        public void FixedActionRandomSeed() { Invoke(nameof(FixedActionRandomSeed)); }
        public void ExitGuildPlayer(Object GuildName, PalPlayerCharacter Player) { Invoke(nameof(ExitGuildPlayer), GuildName, Player); }
        public void ExitGuildLocalPlayer(Object GuildName) { Invoke(nameof(ExitGuildLocalPlayer), GuildName); }
        public void EnterGuildPlayer(Object GuildName, PalPlayerCharacter Player) { Invoke(nameof(EnterGuildPlayer), GuildName, Player); }
        public void EnterGuildLocalPlayer(Object GuildName) { Invoke(nameof(EnterGuildLocalPlayer), GuildName); }
        public void EnterGroup(Object GroupName, PalInstanceID IndividualId) { Invoke(nameof(EnterGroup), GroupName, IndividualId); }
        public void EnableStatUnit() { Invoke(nameof(EnableStatUnit)); }
        public void EnableStatPlayerInfo() { Invoke(nameof(EnableStatPlayerInfo)); }
        public void EnableStatPalnet() { Invoke(nameof(EnableStatPalnet)); }
        public void EnableCommandToServer() { Invoke(nameof(EnableCommandToServer)); }
        public void EnableCollectServerPalCount() { Invoke(nameof(EnableCollectServerPalCount)); }
        public void EasyGamePreset() { Invoke(nameof(EasyGamePreset)); }
        public void DropItems(Object StaticItemId, int Num, int DropCount) { Invoke(nameof(DropItems), StaticItemId, Num, DropCount); }
        public void DropItemByTimer(Object StaticItemId, int Num, float Interval) { Invoke(nameof(DropItemByTimer), StaticItemId, Num, Interval); }
        public void DropItem(Object StaticItemId, int Num) { Invoke(nameof(DropItem), StaticItemId, Num); }
        public void DrawDebugRangeBaseCamp(float LifeTime) { Invoke(nameof(DrawDebugRangeBaseCamp), LifeTime); }
        public void DrawDebugLimitVolume(EPalLimitVolumeFlag Flag, float Range, float Duration) { Invoke(nameof(DrawDebugLimitVolume), Flag, Range, Duration); }
        public void DisposeGuild(Object GuildName) { Invoke(nameof(DisposeGuild), GuildName); }
        public void DismantleBaseCampFirst() { Invoke(nameof(DismantleBaseCampFirst)); }
        public void DismantleBaseCampByBaseCampId(Guid BaseCampId) { Invoke(nameof(DismantleBaseCampByBaseCampId), BaseCampId); }
        public void DisableScreenMessage() { Invoke(nameof(DisableScreenMessage)); }
        public void DisableEnemyEyeSight() { Invoke(nameof(DisableEnemyEyeSight)); }
        public void DeleteWorldAndShutdownRemoteServer() { Invoke(nameof(DeleteWorldAndShutdownRemoteServer)); }
        public void DeletePlayerAndQuitGame() { Invoke(nameof(DeletePlayerAndQuitGame)); }
        public void DebugWindow() { Invoke(nameof(DebugWindow)); }
        public void DebugSaveWorldOptionData(Object WorldName) { Invoke(nameof(DebugSaveWorldOptionData), WorldName); }
        public void DebugSaveWorldData(Object saveName) { Invoke(nameof(DebugSaveWorldData), saveName); }
        public void DebugSaveLocalWorldData(Object saveName) { Invoke(nameof(DebugSaveLocalWorldData), saveName); }
        public void DebugSaveFullWorldData(Object WorldName) { Invoke(nameof(DebugSaveFullWorldData), WorldName); }
        public void DebugDeleteEnemyCampSaveData() { Invoke(nameof(DebugDeleteEnemyCampSaveData)); }
        public void DebugChangeAutoSaveTimespan(float saveSpan) { Invoke(nameof(DebugChangeAutoSaveTimespan), saveSpan); }
        public void DebugAutoSave() { Invoke(nameof(DebugAutoSave)); }
        public void DebugAutoRun() { Invoke(nameof(DebugAutoRun)); }
        public void CreateGuildWithAdmin(Object GuildName, Guid AdminPlayerUId) { Invoke(nameof(CreateGuildWithAdmin), GuildName, AdminPlayerUId); }
        public void CreateGuildAndEnterLocalPlayer(Object GuildName) { Invoke(nameof(CreateGuildAndEnterLocalPlayer), GuildName); }
        public void CreateGuild(Object GuildName) { Invoke(nameof(CreateGuild), GuildName); }
        public void CountPalCharacter() { Invoke(nameof(CountPalCharacter)); }
        public void CopyWorldDirectoryName() { Invoke(nameof(CopyWorldDirectoryName)); }
        public void CopyPlayerLocation() { Invoke(nameof(CopyPlayerLocation)); }
        public void CommandToServer(Object Command) { Invoke(nameof(CommandToServer), Command); }
        public void CleatDebugInfoText() { Invoke(nameof(CleatDebugInfoText)); }
        public void CheckFoliageChunkStatus(bool bShowInstanceDetail, bool bShowGridDetail) { Invoke(nameof(CheckFoliageChunkStatus), bShowInstanceDetail, bShowGridDetail); }
        public void ChangePassive_PlayerWeapon(int Index, Object SkillName) { Invoke(nameof(ChangePassive_PlayerWeapon), Index, SkillName); }
        public void ChangeHUDScale(float Scale) { Invoke(nameof(ChangeHUDScale), Scale); }
        public void CauseServerCrash() { Invoke(nameof(CauseServerCrash)); }
        public void CauseEnsure() { Invoke(nameof(CauseEnsure)); }
        public void CauseCrash() { Invoke(nameof(CauseCrash)); }
        public void CaptureSuccessAlways() { Invoke(nameof(CaptureSuccessAlways)); }
        public void CaptureNewMonster(Object CharacterID) { Invoke(nameof(CaptureNewMonster), CharacterID); }
        public void CaptureFailAlways() { Invoke(nameof(CaptureFailAlways)); }
        public void CaptureAllMonsters() { Invoke(nameof(CaptureAllMonsters)); }
        public void CaptureAllEnemy() { Invoke(nameof(CaptureAllEnemy)); }
        public void BuildNotConsumeMaterials() { Invoke(nameof(BuildNotConsumeMaterials)); }
        public void BuildDebugBaseCamp(Object Mode) { Invoke(nameof(BuildDebugBaseCamp), Mode); }
        public void BotOn() { Invoke(nameof(BotOn)); }
        public void BotOff() { Invoke(nameof(BotOff)); }
        public void ApplyDebugGameProgress(Object PresetName) { Invoke(nameof(ApplyDebugGameProgress), PresetName); }
        public void AddTechnologyPoints(int AddPoints) { Invoke(nameof(AddTechnologyPoints), AddPoints); }
        public void AddPlayerExp(int addExp) { Invoke(nameof(AddPlayerExp), addExp); }
        public void AddPartyExp(int addExp) { Invoke(nameof(AddPartyExp), addExp); }
        public void AddOneStatusPlayer() { Invoke(nameof(AddOneStatusPlayer)); }
        public void AddOneStatusOtomo() { Invoke(nameof(AddOneStatusOtomo)); }
        public void AddOneStatusEnemy() { Invoke(nameof(AddOneStatusEnemy)); }
        public void AddMoney(long addValue) { Invoke(nameof(AddMoney), addValue); }
        public void AddMapObjectEffectVisualAround_Burn(float Range) { Invoke(nameof(AddMapObjectEffectVisualAround_Burn), Range); }
        public void AddMapObjectEffectVisualAround(float Range, EPalMapObjectVisualEffectType EffectType) { Invoke(nameof(AddMapObjectEffectVisualAround), Range, EffectType); }
        public void AddGameTime_Minutes(int Minutes) { Invoke(nameof(AddGameTime_Minutes), Minutes); }
        public void AddGameTime_Hours(int Hours) { Invoke(nameof(AddGameTime_Hours), Hours); }
        public void AddExpForALLPlayer(int addExp) { Invoke(nameof(AddExpForALLPlayer), addExp); }
        public void AddBossTechnologyPoints(int AddPoints) { Invoke(nameof(AddBossTechnologyPoints), AddPoints); }
        public void AddBaseCampEnergyAmount(EPalEnergyType EnergyType, float Amount) { Invoke(nameof(AddBaseCampEnergyAmount), EnergyType, Amount); }
    }
    public class PalClimbingComponent : ActorComponent
    {
        public PalClimbingComponent(nint addr) : base(addr) { }
        public void StartClimb(HitResult Result) { Invoke(nameof(StartClimb), Result); }
        public void ForceCancelClimb() { Invoke(nameof(ForceCancelClimb)); }
    }
    public class PalCombiMonsterParameter : Object
    {
        public PalCombiMonsterParameter(nint addr) : base(addr) { }
    }
    public class PalComboBoxString : Widget
    {
        public PalComboBoxString(nint addr) : base(addr) { }
        public Array<Object> DefaultOptions { get { return new Array<Object>(this[nameof(DefaultOptions)].Address); } }
        public Object SelectedOption { get { return this[nameof(SelectedOption)]; } set { this[nameof(SelectedOption)] = value; } }
        public ComboBoxStyle WidgetStyle { get { return this[nameof(WidgetStyle)].As<ComboBoxStyle>(); } set { this["WidgetStyle"] = value; } }
        public TableRowStyle ItemStyle { get { return this[nameof(ItemStyle)].As<TableRowStyle>(); } set { this["ItemStyle"] = value; } }
        public Margin ContentPadding { get { return this[nameof(ContentPadding)].As<Margin>(); } set { this["ContentPadding"] = value; } }
        public float MaxListHeight { get { return this[nameof(MaxListHeight)].GetValue<float>(); } set { this[nameof(MaxListHeight)].SetValue<float>(value); } }
        public bool HasDownArrow { get { return this[nameof(HasDownArrow)].Flag; } set { this[nameof(HasDownArrow)].Flag = value; } }
        public bool EnableGamepadNavigationMode { get { return this[nameof(EnableGamepadNavigationMode)].Flag; } set { this[nameof(EnableGamepadNavigationMode)].Flag = value; } }
        public SlateFontInfo Font { get { return this[nameof(Font)].As<SlateFontInfo>(); } set { this["Font"] = value; } }
        public SlateColor ForegroundColor { get { return this[nameof(ForegroundColor)].As<SlateColor>(); } set { this["ForegroundColor"] = value; } }
        public bool bIsFocusable { get { return this[nameof(bIsFocusable)].Flag; } set { this[nameof(bIsFocusable)].Flag = value; } }
        public Object OnGenerateWidgetEvent { get { return this[nameof(OnGenerateWidgetEvent)]; } set { this[nameof(OnGenerateWidgetEvent)] = value; } }
        public Object OnGenerateTopWidgetEvent { get { return this[nameof(OnGenerateTopWidgetEvent)]; } set { this[nameof(OnGenerateTopWidgetEvent)] = value; } }
        public Object OnSelectionChanged { get { return this[nameof(OnSelectionChanged)]; } set { this[nameof(OnSelectionChanged)] = value; } }
        public Object OnOpening { get { return this[nameof(OnOpening)]; } set { this[nameof(OnOpening)] = value; } }
        public void SetSelectedOption(Object Option) { Invoke(nameof(SetSelectedOption), Option); }
        public void SetSelectedIndex(int Index) { Invoke(nameof(SetSelectedIndex), Index); }
        public bool RemoveOption(Object Option) { return Invoke<bool>(nameof(RemoveOption), Option); }
        public void RefreshOptions() { Invoke(nameof(RefreshOptions)); }
        public void OnSelectionChangedEvent__DelegateSignature(Object SelectedItem, byte SelectionType) { Invoke(nameof(OnSelectionChangedEvent__DelegateSignature), SelectedItem, SelectionType); }
        public void OnOpeningEvent__DelegateSignature() { Invoke(nameof(OnOpeningEvent__DelegateSignature)); }
        public bool IsOpen() { return Invoke<bool>(nameof(IsOpen)); }
        public Object GetSelectedOption() { return Invoke<Object>(nameof(GetSelectedOption)); }
        public int GetSelectedIndex() { return Invoke<int>(nameof(GetSelectedIndex)); }
        public int GetOptionCount() { return Invoke<int>(nameof(GetOptionCount)); }
        public Object GetOptionAtIndex(int Index) { return Invoke<Object>(nameof(GetOptionAtIndex), Index); }
        public int FindOptionIndex(Object Option) { return Invoke<int>(nameof(FindOptionIndex), Option); }
        public void ClearSelection() { Invoke(nameof(ClearSelection)); }
        public void ClearOptions() { Invoke(nameof(ClearOptions)); }
        public void AddOption(Object Option) { Invoke(nameof(AddOption), Option); }
    }
    public class PalCommonBoundActionButton : CommonBoundActionButton
    {
        public PalCommonBoundActionButton(nint addr) : base(addr) { }
    }
    public class PalCommonScrollListBase : PalUserWidget
    {
        public PalCommonScrollListBase(nint addr) : base(addr) { }
        public void MoveItem(int Num, PalItemSlot MoveItemSlot, PalContainerId TargetContainerId) { Invoke(nameof(MoveItem), Num, MoveItemSlot, TargetContainerId); }
    }
    public class PalCommonUIActionRouter : CommonUIActionRouterBase
    {
        public PalCommonUIActionRouter(nint addr) : base(addr) { }
    }
    public class PalContainerBase : Object
    {
        public PalContainerBase(nint addr) : base(addr) { }
        public Object OnDisposeContainerDelegate { get { return this[nameof(OnDisposeContainerDelegate)]; } set { this[nameof(OnDisposeContainerDelegate)] = value; } }
        public PalContainerId ID { get { return this[nameof(ID)].As<PalContainerId>(); } set { this["ID"] = value; } }
        public EPalContainerOperationRestrictType OperationRestrictType { get { return (EPalContainerOperationRestrictType)this[nameof(OperationRestrictType)].GetValue<int>(); } set { this[nameof(OperationRestrictType)].SetValue<int>((int)value); } }
        public bool IsEmpty() { return Invoke<bool>(nameof(IsEmpty)); }
        public PalContainerId GetId() { return Invoke<PalContainerId>(nameof(GetId)); }
        public void DisposeContainerDelegate__DelegateSignature() { Invoke(nameof(DisposeContainerDelegate__DelegateSignature)); }
    }
    public class PalContainerUtility : Object
    {
        public PalContainerUtility(nint addr) : base(addr) { }
    }
    public class PalCoopClimbPlayer : Object
    {
        public PalCoopClimbPlayer(nint addr) : base(addr) { }
        public PalCharacter Player { get { return this[nameof(Player)].As<PalCharacter>(); } set { this["Player"] = value; } }
        public PalAnimInstance PlayerAnime { get { return this[nameof(PlayerAnime)].As<PalAnimInstance>(); } set { this["PlayerAnime"] = value; } }
        public Array<EHumanBone> BoneChain { get { return new Array<EHumanBone>(this[nameof(BoneChain)].Address); } }
        public int CurrentIndex { get { return this[nameof(CurrentIndex)].GetValue<int>(); } set { this[nameof(CurrentIndex)].SetValue<int>(value); } }
        public Transform TargetWorldTf { get { return this[nameof(TargetWorldTf)].As<Transform>(); } set { this["TargetWorldTf"] = value; } }
        public float Progress { get { return this[nameof(Progress)].GetValue<float>(); } set { this[nameof(Progress)].SetValue<float>(value); } }
        public bool Complete { get { return this[nameof(Complete)].Flag; } set { this[nameof(Complete)].Flag = value; } }
        public Object StartStandAnimeDelegate { get { return this[nameof(StartStandAnimeDelegate)]; } set { this[nameof(StartStandAnimeDelegate)] = value; } }
        public Transform UpdateTransform(Transform Climber, float ProgressSpeed, float LeapPosSpeed, float LeapRotateSpeed, float DeltaTime) { return Invoke<Transform>(nameof(UpdateTransform), Climber, ProgressSpeed, LeapPosSpeed, LeapRotateSpeed, DeltaTime); }
        public void StartStandAnimeDelegate__DelegateSignature() { Invoke(nameof(StartStandAnimeDelegate__DelegateSignature)); }
        public void InitializeNode(EHumanBone EntryBone, PalCharacter PlayerCharacter, Transform Climber) { Invoke(nameof(InitializeNode), EntryBone, PlayerCharacter, Climber); }
    }
    public class PalCoopSkillModuleBase : Object
    {
        public PalCoopSkillModuleBase(nint addr) : base(addr) { }
        public EPalLogType ExecuteLog { get { return (EPalLogType)this[nameof(ExecuteLog)].GetValue<int>(); } set { this[nameof(ExecuteLog)].SetValue<int>((int)value); } }
        public PalCharacter OwnerCharacter { get { return this[nameof(OwnerCharacter)].As<PalCharacter>(); } set { this["OwnerCharacter"] = value; } }
        public void Start() { Invoke(nameof(Start)); }
        public void SetTrainerCoopFlag(bool IsCoop) { Invoke(nameof(SetTrainerCoopFlag), IsCoop); }
        public void OnTick(float DeltaTime) { Invoke(nameof(OnTick), DeltaTime); }
        public void OnStartSkill() { Invoke(nameof(OnStartSkill)); }
        public void OnSkillOverheat() { Invoke(nameof(OnSkillOverheat)); }
        public void OnInitialized() { Invoke(nameof(OnInitialized)); }
        public void Initialize(PalPartnerSkillParameterComponent PartnerSkillComponent) { Invoke(nameof(Initialize), PartnerSkillComponent); }
        public int GetOwnerRank() { return Invoke<int>(nameof(GetOwnerRank)); }
        public PalCharacter GetOwner() { return Invoke<PalCharacter>(nameof(GetOwner)); }
        public void AddSkillLog() { Invoke(nameof(AddSkillLog)); }
        public void Abort() { Invoke(nameof(Abort)); }
    }
    public class PalCoopSkillModuleAssignPassiveSkill : PalCoopSkillModuleBase
    {
        public PalCoopSkillModuleAssignPassiveSkill(nint addr) : base(addr) { }
        public Array<PalCoopSkillModuleAssignPassiveSkillNames> AssignSkillNamesPerRank { get { return new Array<PalCoopSkillModuleAssignPassiveSkillNames>(this[nameof(AssignSkillNamesPerRank)].Address); } }
        public Object PassiveSkillAssignFlagName { get { return this[nameof(PassiveSkillAssignFlagName)]; } set { this[nameof(PassiveSkillAssignFlagName)] = value; } }
        public void RemovePassiveSkills() { Invoke(nameof(RemovePassiveSkills)); }
        public void AssignPassiveSkills(Array<PalDataTableRowName_PassiveSkillData> AssignSkillName) { Invoke(nameof(AssignPassiveSkills), AssignSkillName); }
        public void AssignPassiveSkill(Object SkillName) { Invoke(nameof(AssignPassiveSkill), SkillName); }
    }
    public class PalCoopSkillSearchBase : Object
    {
        public PalCoopSkillSearchBase(nint addr) : base(addr) { }
        public Array<float> SearchRangeMaxByRank { get { return new Array<float>(this[nameof(SearchRangeMaxByRank)].Address); } }
        public Array<float> ExtendRangePerSecByRank { get { return new Array<float>(this[nameof(ExtendRangePerSecByRank)].Address); } }
        public Vector SearchOrigin { get { return this[nameof(SearchOrigin)].As<Vector>(); } set { this["SearchOrigin"] = value; } }
        public float SearchRangeMax { get { return this[nameof(SearchRangeMax)].GetValue<float>(); } set { this[nameof(SearchRangeMax)].SetValue<float>(value); } }
        public float ExtendRangePerSec { get { return this[nameof(ExtendRangePerSec)].GetValue<float>(); } set { this[nameof(ExtendRangePerSec)].SetValue<float>(value); } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
        public int SkillRank { get { return this[nameof(SkillRank)].GetValue<int>(); } set { this[nameof(SkillRank)].SetValue<int>(value); } }
        public Guid CalledPlayerUId { get { return this[nameof(CalledPlayerUId)].As<Guid>(); } set { this["CalledPlayerUId"] = value; } }
        public bool bIsRunning { get { return this[nameof(bIsRunning)].Flag; } set { this[nameof(bIsRunning)].Flag = value; } }
        public Array<PalCoopSkillSearchResultParameter> SearchResultParameters { get { return new Array<PalCoopSkillSearchResultParameter>(this[nameof(SearchResultParameters)].Address); } }
        public void Tick(float DeltaTime, PalCoopSkillSearchLocationRegister LocationRegister) { Invoke(nameof(Tick), DeltaTime, LocationRegister); }
        public void Terminate() { Invoke(nameof(Terminate)); }
        public void Start(Vector Origin, int Rank, Guid RequestPlayerUId) { Invoke(nameof(Start), Origin, Rank, RequestPlayerUId); }
        public void OnRemoveLocationForCompass_BP(Guid LocationId, PalLocationBase Location) { Invoke(nameof(OnRemoveLocationForCompass_BP), LocationId, Location); }
        public void OnRemoveLocationForCompass(Guid LocationId, PalLocationBase Location) { Invoke(nameof(OnRemoveLocationForCompass), LocationId, Location); }
        public void OnAddedLocationForCompass_BP(Guid LocationId, PalLocationBase Location) { Invoke(nameof(OnAddedLocationForCompass_BP), LocationId, Location); }
        public void OnAddedLocationForCompass(Guid LocationId, PalLocationBase Location) { Invoke(nameof(OnAddedLocationForCompass), LocationId, Location); }
        public bool IsRunning() { return Invoke<bool>(nameof(IsRunning)); }
        public bool IsFinished() { return Invoke<bool>(nameof(IsFinished)); }
        public float GetSearchRangeMax() { return Invoke<float>(nameof(GetSearchRangeMax)); }
        public float GetSearchRangeByRank(int Rank) { return Invoke<float>(nameof(GetSearchRangeByRank), Rank); }
        public int GetRank() { return Invoke<int>(nameof(GetRank)); }
        public Vector GetOrigin() { return Invoke<Vector>(nameof(GetOrigin)); }
        public float GetExtendSearchRangePerSec() { return Invoke<float>(nameof(GetExtendSearchRangePerSec)); }
        public float GetExtendRangePerSecByRank(int Rank) { return Invoke<float>(nameof(GetExtendRangePerSecByRank), Rank); }
        public float GetCurrentSearchRadius() { return Invoke<float>(nameof(GetCurrentSearchRadius)); }
        public void End() { Invoke(nameof(End)); }
        public void ClearSearchResultParameters() { Invoke(nameof(ClearSearchResultParameters)); }
        public void AddSearchResultParameter(PalCoopSkillSearchResultParameter ResultParameter) { Invoke(nameof(AddSearchResultParameter), ResultParameter); }
    }
    public class PalCoopSkillSearchCharacter : PalCoopSkillSearchBase
    {
        public PalCoopSkillSearchCharacter(nint addr) : base(addr) { }
        public void SearchMonsters(Vector Origin, float SearchRadius, Guid RequestPlayerUId) { Invoke(nameof(SearchMonsters), Origin, SearchRadius, RequestPlayerUId); }
    }
    public class PalCoopSkillSearchDungeonPortal : PalCoopSkillSearchBase
    {
        public PalCoopSkillSearchDungeonPortal(nint addr) : base(addr) { }
        public void SearchDungeonPortal(Vector Origin, float SearchRadius, Guid RequestPlayerUId) { Invoke(nameof(SearchDungeonPortal), Origin, SearchRadius, RequestPlayerUId); }
    }
    public class PalCoopSkillSearchEffectController : Object
    {
        public PalCoopSkillSearchEffectController(nint addr) : base(addr) { }
        public void Tick(float DeltaTime) { Invoke(nameof(Tick), DeltaTime); }
        public void Start(Vector Origin, float RadiusFrom, float RadiusTo, float ExtRadiusPerSec) { Invoke(nameof(Start), Origin, RadiusFrom, RadiusTo, ExtRadiusPerSec); }
        public bool IsRunning() { return Invoke<bool>(nameof(IsRunning)); }
        public bool IsFinished() { return Invoke<bool>(nameof(IsFinished)); }
        public void End() { Invoke(nameof(End)); }
    }
    public class PalCoopSkillSearchLocationRegister : Object
    {
        public PalCoopSkillSearchLocationRegister(nint addr) : base(addr) { }
        public Array<Guid> RegisteredLocationIds { get { return new Array<Guid>(this[nameof(RegisteredLocationIds)].Address); } }
        public Object RegisteredLocationElapsedSec { get { return this[nameof(RegisteredLocationElapsedSec)]; } set { this[nameof(RegisteredLocationElapsedSec)] = value; } }
        public float LocationDisplayTimeSec { get { return this[nameof(LocationDisplayTimeSec)].GetValue<float>(); } set { this[nameof(LocationDisplayTimeSec)].SetValue<float>(value); } }
        public void UnregisterMapObjectLocationsFromCompass(Guid guiid) { Invoke(nameof(UnregisterMapObjectLocationsFromCompass), guiid); }
        public void RegisterMapObjectLocationsToCompass(PalCoopSkillSearchResultParameter ResultParameter) { Invoke(nameof(RegisterMapObjectLocationsToCompass), ResultParameter); }
    }
    public class PalCoopSkillSearchMapObject : PalCoopSkillSearchBase
    {
        public PalCoopSkillSearchMapObject(nint addr) : base(addr) { }
        public void SearchMapObjects(Array<Object> SearchMapObjIds, Vector Origin, float SearchRadius, Guid RequestPlayerUId) { Invoke(nameof(SearchMapObjects), SearchMapObjIds, Origin, SearchRadius, RequestPlayerUId); }
    }
    public class PalCoopSkillSearchSystem : Object
    {
        public PalCoopSkillSearchSystem(nint addr) : base(addr) { }
        public Object EffectControllerClass { get { return this[nameof(EffectControllerClass)]; } set { this[nameof(EffectControllerClass)] = value; } }
        public PalCoopSkillSearchLocationRegister LocationRegister { get { return this[nameof(LocationRegister)].As<PalCoopSkillSearchLocationRegister>(); } set { this["LocationRegister"] = value; } }
        public PalCoopSkillSearchEffectController EffectController { get { return this[nameof(EffectController)].As<PalCoopSkillSearchEffectController>(); } set { this["EffectController"] = value; } }
        public Array<PalCoopSkillSearchBase> SearchObjects { get { return new Array<PalCoopSkillSearchBase>(this[nameof(SearchObjects)].Address); } }
        public void StartSearchEffect(PalCoopSkillSearchEffectParameter EffectParam) { Invoke(nameof(StartSearchEffect), EffectParam); }
        public PalCoopSkillSearchBase CreateSearchObject(Object SearchClass) { return Invoke<PalCoopSkillSearchBase>(nameof(CreateSearchObject), SearchClass); }
    }
    public class PalCopyMeshVisualEffect : Actor
    {
        public PalCopyMeshVisualEffect(nint addr) : base(addr) { }
        public CapsuleComponent RootCapsule { get { return this[nameof(RootCapsule)].As<CapsuleComponent>(); } set { this["RootCapsule"] = value; } }
        public PalPoseableMeshComponent PoseableSkeletalMeshComponent { get { return this[nameof(PoseableSkeletalMeshComponent)].As<PalPoseableMeshComponent>(); } set { this["PoseableSkeletalMeshComponent"] = value; } }
        public void Setup(SkeletalMeshComponent MeshComponent) { Invoke(nameof(Setup), MeshComponent); }
        public Array<MaterialInstanceDynamic> GetMainMeshMaterials() { return Invoke<Array<MaterialInstanceDynamic>>(nameof(GetMainMeshMaterials)); }
        public SkinnedMeshComponent GetMainMesh() { return Invoke<SkinnedMeshComponent>(nameof(GetMainMesh)); }
        public void GetAllMesh(Array<SceneComponent> OutComponent) { Invoke(nameof(GetAllMesh), OutComponent); }
    }
    public class PalCryComponentBase : ActorComponent
    {
        public PalCryComponentBase(nint addr) : base(addr) { }
    }
    public class PalCustomPrimitiveWidget : PalUserWidget
    {
        public PalCustomPrimitiveWidget(nint addr) : base(addr) { }
        public SlateBrushAsset SlateBrush { get { return this[nameof(SlateBrush)].As<SlateBrushAsset>(); } set { this["SlateBrush"] = value; } }
        public Array<PalUMGCustomVertexData> VertexData { get { return new Array<PalUMGCustomVertexData>(this[nameof(VertexData)].Address); } }
        public Array<int> vertexIndexes { get { return new Array<int>(this[nameof(vertexIndexes)].Address); } }
        public void UpdateVertexData(int Index, PalUMGCustomVertexData inVertexData) { Invoke(nameof(UpdateVertexData), Index, inVertexData); }
        public void PushVertexData(PalUMGCustomVertexData inVertexData) { Invoke(nameof(PushVertexData), inVertexData); }
        public void DrawVertexData(PaintContext Context) { Invoke(nameof(DrawVertexData), Context); }
    }
    public class PalCutsceneActor : LevelSequenceActor
    {
        public PalCutsceneActor(nint addr) : base(addr) { }
        public float OpeningFadeOutDelay { get { return this[nameof(OpeningFadeOutDelay)].GetValue<float>(); } set { this[nameof(OpeningFadeOutDelay)].SetValue<float>(value); } }
        public float OpeningFadeOutTime { get { return this[nameof(OpeningFadeOutTime)].GetValue<float>(); } set { this[nameof(OpeningFadeOutTime)].SetValue<float>(value); } }
        public void OnPrePlayCutscene() { Invoke(nameof(OnPrePlayCutscene)); }
        public void OnFinishedCutscene() { Invoke(nameof(OnFinishedCutscene)); }
    }
    public class PalCutsceneComponent : ActorComponent
    {
        public PalCutsceneComponent(nint addr) : base(addr) { }
        public Object OnPlayCutsceneDelegate { get { return this[nameof(OnPlayCutsceneDelegate)]; } set { this[nameof(OnPlayCutsceneDelegate)] = value; } }
        public Object OnFinishCutsceneDelegate { get { return this[nameof(OnFinishCutsceneDelegate)]; } set { this[nameof(OnFinishCutsceneDelegate)] = value; } }
        public PalCutsceneActor CutsceneActor { get { return this[nameof(CutsceneActor)].As<PalCutsceneActor>(); } set { this["CutsceneActor"] = value; } }
        public PalHUDDispatchParameter_FadeWidget FadeParam { get { return this[nameof(FadeParam)].As<PalHUDDispatchParameter_FadeWidget>(); } set { this["FadeParam"] = value; } }
        public void StopCutsceneToServer() { Invoke(nameof(StopCutsceneToServer)); }
        public void StopCutscene() { Invoke(nameof(StopCutscene)); }
        public void StartFadeOut() { Invoke(nameof(StartFadeOut)); }
        public PalCutsceneActor SpawnCutsceneActor(Object CutsceneActorClass, Vector Location, Rotator Rotation, Actor Owner) { return Invoke<PalCutsceneActor>(nameof(SpawnCutsceneActor), CutsceneActorClass, Location, Rotation, Owner); }
        public void PlayCutsceneToServer() { Invoke(nameof(PlayCutsceneToServer)); }
        public void PlayCutscene(PalCutsceneActor InCutsceneActor, bool IsAutoDestroy) { Invoke(nameof(PlayCutscene), InCutsceneActor, IsAutoDestroy); }
        public void OnFinished() { Invoke(nameof(OnFinished)); }
        public void OnEndFadeOut() { Invoke(nameof(OnEndFadeOut)); }
        public bool IsPlayingCutscene() { return Invoke<bool>(nameof(IsPlayingCutscene)); }
        public void CutsceneFinishDelegate__DelegateSignature(bool bIsSkipped) { Invoke(nameof(CutsceneFinishDelegate__DelegateSignature), bIsSkipped); }
        public void CutsceneDelegate__DelegateSignature() { Invoke(nameof(CutsceneDelegate__DelegateSignature)); }
    }
    public class PalDamageDisplayCanvas : PalUserWidget
    {
        public PalDamageDisplayCanvas(nint addr) : base(addr) { }
        public int CalcDisplayDamage(PalDamageInfo DamageInfo, Actor Defender, float outSpecialDamageRate, int weakCount) { return Invoke<int>(nameof(CalcDisplayDamage), DamageInfo, Defender, outSpecialDamageRate, weakCount); }
    }
    public class PalHitEffectSlot : Object
    {
        public PalHitEffectSlot(nint addr) : base(addr) { }
        public void PlayHitEffect(PalDamageInfo Info) { Invoke(nameof(PlayHitEffect), Info); }
        public void Initialize() { Invoke(nameof(Initialize)); }
    }
    public class PalDamageExplodeComponent : ActorComponent
    {
        public PalDamageExplodeComponent(nint addr) : base(addr) { }
        public float ExplosionDelayTime { get { return this[nameof(ExplosionDelayTime)].GetValue<float>(); } set { this[nameof(ExplosionDelayTime)].SetValue<float>(value); } }
        public Object OnDamageDelegate_Ex { get { return this[nameof(OnDamageDelegate_Ex)]; } set { this[nameof(OnDamageDelegate_Ex)] = value; } }
        public bool IsExploded { get { return this[nameof(IsExploded)].Flag; } set { this[nameof(IsExploded)].Flag = value; } }
        public void SpawnExplosionActor_Delay(Actor Attacker, float DelayTime) { Invoke(nameof(SpawnExplosionActor_Delay), Attacker, DelayTime); }
        public void SpawnExplosionActor(Actor Attacker) { Invoke(nameof(SpawnExplosionActor), Attacker); }
        public void OnDamageDelegate_Ex__DelegateSignature(PalDamageInfo DamageInfo) { Invoke(nameof(OnDamageDelegate_Ex__DelegateSignature), DamageInfo); }
        public void ForceExplode(Actor Attacker) { Invoke(nameof(ForceExplode), Attacker); }
    }
    public class PalDamageInfoUtility : Object
    {
        public PalDamageInfoUtility(nint addr) : base(addr) { }
        public float GetSpecialAttackRate(PalDamageInfo DamageInfo, EPalSpecialAttackRateType Type) { return Invoke<float>(nameof(GetSpecialAttackRate), DamageInfo, Type); }
    }
    public class PalDamagePopUpManager : Object
    {
        public PalDamagePopUpManager(nint addr) : base(addr) { }
        public Object OnAddDamagePopupDelegate { get { return this[nameof(OnAddDamagePopupDelegate)]; } set { this[nameof(OnAddDamagePopupDelegate)] = value; } }
        public void AddDamagePopupDelegate__DelegateSignature(PalDamageInfo DamageInfo, Actor Defender) { Invoke(nameof(AddDamagePopupDelegate__DelegateSignature), DamageInfo, Defender); }
        public void AddDamagePopUp(PalDamageInfo DamageInfo, Actor Defender) { Invoke(nameof(AddDamagePopUp), DamageInfo, Defender); }
    }
    public class PalDamageReactionComponent : ActorComponent
    {
        public PalDamageReactionComponent(nint addr) : base(addr) { }
        public Object OnDamageDelegate { get { return this[nameof(OnDamageDelegate)]; } set { this[nameof(OnDamageDelegate)] = value; } }
        public Object OnDamageDelegate_Always { get { return this[nameof(OnDamageDelegate_Always)]; } set { this[nameof(OnDamageDelegate_Always)] = value; } }
        public Object OnDeadDelegate { get { return this[nameof(OnDeadDelegate)]; } set { this[nameof(OnDeadDelegate)] = value; } }
        public Object OnDyingDeadEndDelegate { get { return this[nameof(OnDyingDeadEndDelegate)]; } set { this[nameof(OnDyingDeadEndDelegate)] = value; } }
        public Object OnMentalDamageDelegate { get { return this[nameof(OnMentalDamageDelegate)]; } set { this[nameof(OnMentalDamageDelegate)] = value; } }
        public Object OnSleepDelegate { get { return this[nameof(OnSleepDelegate)]; } set { this[nameof(OnSleepDelegate)] = value; } }
        public Object OnDamageReactionDelegate { get { return this[nameof(OnDamageReactionDelegate)]; } set { this[nameof(OnDamageReactionDelegate)] = value; } }
        public Object OnEachDamageReactionDelegate { get { return this[nameof(OnEachDamageReactionDelegate)]; } set { this[nameof(OnEachDamageReactionDelegate)] = value; } }
        public Object OnSlipDamageDelegate { get { return this[nameof(OnSlipDamageDelegate)]; } set { this[nameof(OnSlipDamageDelegate)] = value; } }
        public Object OnCaptureStartDelegate { get { return this[nameof(OnCaptureStartDelegate)]; } set { this[nameof(OnCaptureStartDelegate)] = value; } }
        public Object OnNooseTrapDelegate { get { return this[nameof(OnNooseTrapDelegate)]; } set { this[nameof(OnNooseTrapDelegate)] = value; } }
        public Object DamageEffectSlotClass { get { return this[nameof(DamageEffectSlotClass)]; } set { this[nameof(DamageEffectSlotClass)] = value; } }
        public PalHitEffectSlot EffectSlot { get { return this[nameof(EffectSlot)].As<PalHitEffectSlot>(); } set { this["EffectSlot"] = value; } }
        public Array<float> RateList { get { return new Array<float>(this[nameof(RateList)].Address); } }
        public void SlipDamageAndBlowWhenDead(int Damage, Vector Velocity) { Invoke(nameof(SlipDamageAndBlowWhenDead), Damage, Velocity); }
        public void SlipDamage(int Damage, bool ShieldIgnore) { Invoke(nameof(SlipDamage), Damage, ShieldIgnore); }
        public void ProcessDeath_ToServer() { Invoke(nameof(ProcessDeath_ToServer)); }
        public void ProcessDamage_ToServer(PalDamageInfo Info) { Invoke(nameof(ProcessDamage_ToServer), Info); }
        public void PopupDamageBySlipDamage_ToALL(int Damage) { Invoke(nameof(PopupDamageBySlipDamage_ToALL), Damage); }
        public void PlayEachDamageReaction(PalEachDamageRactionInfo EachReactionInfo) { Invoke(nameof(PlayEachDamageReaction), EachReactionInfo); }
        public void PlayDamageReaction(PalDamageRactionInfo ReactionInfo) { Invoke(nameof(PlayDamageReaction), ReactionInfo); }
        public void PlayAddDamageMotion(EPalDamageAnimationReactionType reactionType) { Invoke(nameof(PlayAddDamageMotion), reactionType); }
        public void OnSlipDamageDelegate__DelegateSignature(int Damage) { Invoke(nameof(OnSlipDamageDelegate__DelegateSignature), Damage); }
        public void OnSleepDelegate__DelegateSignature(int LastDamage) { Invoke(nameof(OnSleepDelegate__DelegateSignature), LastDamage); }
        public void OnNooseTrapDelegate__DelegateSignature(Actor TrapActor, Vector FixLocation) { Invoke(nameof(OnNooseTrapDelegate__DelegateSignature), TrapActor, FixLocation); }
        public void OnMentalDamageDelegate__DelegateSignature(PalDamageResult DamageResult) { Invoke(nameof(OnMentalDamageDelegate__DelegateSignature), DamageResult); }
        public void OnHitNooseTrap(Actor TrapActor, Vector FixLocation) { Invoke(nameof(OnHitNooseTrap), TrapActor, FixLocation); }
        public void OnEndDamageMotion(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnEndDamageMotion), Montage, bInterrupted); }
        public void OnEachDamageReactionDelegate__DelegateSignature(PalEachDamageRactionInfo EachReactionInfo) { Invoke(nameof(OnEachDamageReactionDelegate__DelegateSignature), EachReactionInfo); }
        public void OnDyingDeadEndDelegate_ToALL() { Invoke(nameof(OnDyingDeadEndDelegate_ToALL)); }
        public void OnDyingDeadEnd__DelegateSignature(PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnDyingDeadEnd__DelegateSignature), PlayerCharacter); }
        public void OnDeadDelegate__DelegateSignature(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadDelegate__DelegateSignature), DeadInfo); }
        public void OnDamageReactionDelegate__DelegateSignature(PalDamageRactionInfo ReactionInfo) { Invoke(nameof(OnDamageReactionDelegate__DelegateSignature), ReactionInfo); }
        public void OnDamageDelegate__DelegateSignature(PalDamageResult DamageResult) { Invoke(nameof(OnDamageDelegate__DelegateSignature), DamageResult); }
        public void OnCaptureStartDelegate__DelegateSignature() { Invoke(nameof(OnCaptureStartDelegate__DelegateSignature)); }
        public void ForceDamageDelegateForCaptureBall(Actor Attacker) { Invoke(nameof(ForceDamageDelegateForCaptureBall), Attacker); }
        public void DeathDamage_ForSelfDestruct(Vector Velocity, EPalWazaID WazaID) { Invoke(nameof(DeathDamage_ForSelfDestruct), Velocity, WazaID); }
        public void CallOnDamageDelegateAlways(PalDamageResult DamageResult) { Invoke(nameof(CallOnDamageDelegateAlways), DamageResult); }
        public void CallDeadDelegate_ToALL(PalDeadInfo DeadInfo) { Invoke(nameof(CallDeadDelegate_ToALL), DeadInfo); }
        public void ApplyDamageForMP(PalDamageResult DamageResult) { Invoke(nameof(ApplyDamageForMP), DamageResult); }
        public void ApplyDamageForHP(PalDamageResult DamageResult) { Invoke(nameof(ApplyDamageForHP), DamageResult); }
        public void ApplyDamageForDyingHP(PalDamageResult DamageResult) { Invoke(nameof(ApplyDamageForDyingHP), DamageResult); }
        public void AddDeadImplus(PalDamageResult DamageResult) { Invoke(nameof(AddDeadImplus), DamageResult); }
    }
    public class PalDamageText : PalUserWidget
    {
        public PalDamageText(nint addr) : base(addr) { }
        public Vector2D RandomPositionMin { get { return this[nameof(RandomPositionMin)].As<Vector2D>(); } set { this["RandomPositionMin"] = value; } }
        public Vector2D RandomPositionMax { get { return this[nameof(RandomPositionMax)].As<Vector2D>(); } set { this["RandomPositionMax"] = value; } }
    }
    public class PalDatabaseCharacterParameter : Object
    {
        public PalDatabaseCharacterParameter(nint addr) : base(addr) { }
        public Object AIResponsePresetMap { get { return this[nameof(AIResponsePresetMap)]; } set { this[nameof(AIResponsePresetMap)] = value; } }
        public Object AISightResponsePresetMap { get { return this[nameof(AISightResponsePresetMap)]; } set { this[nameof(AISightResponsePresetMap)] = value; } }
        public Object PettingPressetClass { get { return this[nameof(PettingPressetClass)]; } set { this[nameof(PettingPressetClass)] = value; } }
        public DataTable PlayerParameterDataTable { get { return this[nameof(PlayerParameterDataTable)].As<DataTable>(); } set { this["PlayerParameterDataTable"] = value; } }
        public DataTable MonsterParameterDataTable { get { return this[nameof(MonsterParameterDataTable)].As<DataTable>(); } set { this["MonsterParameterDataTable"] = value; } }
        public DataTable HumanParameterDataTable { get { return this[nameof(HumanParameterDataTable)].As<DataTable>(); } set { this["HumanParameterDataTable"] = value; } }
        public DataTable DropItemDataTable { get { return this[nameof(DropItemDataTable)].As<DataTable>(); } set { this["DropItemDataTable"] = value; } }
        public DataTable MonsterNameDataTable { get { return this[nameof(MonsterNameDataTable)].As<DataTable>(); } set { this["MonsterNameDataTable"] = value; } }
        public DataTable HumanNameDataTable { get { return this[nameof(HumanNameDataTable)].As<DataTable>(); } set { this["HumanNameDataTable"] = value; } }
        public DataTable CharacterIconDataTable { get { return this[nameof(CharacterIconDataTable)].As<DataTable>(); } set { this["CharacterIconDataTable"] = value; } }
        public DataTable BPClassDataTable { get { return this[nameof(BPClassDataTable)].As<DataTable>(); } set { this["BPClassDataTable"] = value; } }
        public DataTable PartnerSkillDataTable { get { return this[nameof(PartnerSkillDataTable)].As<DataTable>(); } set { this["PartnerSkillDataTable"] = value; } }
        public DataTable PalSizeParameterDataTable { get { return this[nameof(PalSizeParameterDataTable)].As<DataTable>(); } set { this["PalSizeParameterDataTable"] = value; } }
        public DataTable PalCapturedCageDataTable { get { return this[nameof(PalCapturedCageDataTable)].As<DataTable>(); } set { this["PalCapturedCageDataTable"] = value; } }
        public DataTable PalStatusEffectFoodDataTable { get { return this[nameof(PalStatusEffectFoodDataTable)].As<DataTable>(); } set { this["PalStatusEffectFoodDataTable"] = value; } }
        public DataTable PalCombiUniqueDataTable { get { return this[nameof(PalCombiUniqueDataTable)].As<DataTable>(); } set { this["PalCombiUniqueDataTable"] = value; } }
        public Array<float> TalentMagnificationList { get { return new Array<float>(this[nameof(TalentMagnificationList)].Address); } }
        public PalPettingPresset PettingPressetInstance { get { return this[nameof(PettingPressetInstance)].As<PalPettingPresset>(); } set { this["PettingPressetInstance"] = value; } }
        public PalCombiMonsterParameter CombiMonsterParameter { get { return this[nameof(CombiMonsterParameter)].As<PalCombiMonsterParameter>(); } set { this["CombiMonsterParameter"] = value; } }
        public void UpdateApplyDatabaseToIndividualParameter(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(UpdateApplyDatabaseToIndividualParameter), IndividualParameter); }
        public bool SetupSaveParameter(Object CharacterID, int Level, Guid OwnerPlayerUId, PalIndividualCharacterSaveParameter outParameter) { return Invoke<bool>(nameof(SetupSaveParameter), CharacterID, Level, OwnerPlayerUId, outParameter); }
        public int HigherLevelOtomoFromTrainer(PalIndividualCharacterParameter IndividualCharacterParameter) { return Invoke<int>(nameof(HigherLevelOtomoFromTrainer), IndividualCharacterParameter); }
        public void GetWorkSuitabilityRank(Object RowName, Object WorkSuitabilities) { Invoke(nameof(GetWorkSuitabilityRank), RowName, WorkSuitabilities); }
        public void GetWorkSuitabilityMaterialSubTypes(Object RowName, Array<EPalMapObjectMaterialSubType> MaterialSubTypes) { Invoke(nameof(GetWorkSuitabilityMaterialSubTypes), RowName, MaterialSubTypes); }
        public void GetWorkSuitability(Object RowName, Array<EPalWorkSuitability> WorkSuitabilities) { Invoke(nameof(GetWorkSuitability), RowName, WorkSuitabilities); }
        public EPalWeaponType GetWeaponType(Object RowName) { return Invoke<EPalWeaponType>(nameof(GetWeaponType), RowName); }
        public bool GetWeaponEquip(Object RowName) { return Invoke<bool>(nameof(GetWeaponEquip), RowName); }
        public int GetViewingDistance_cm(Object RowName) { return Invoke<int>(nameof(GetViewingDistance_cm), RowName); }
        public int GetViewingAngle_Degree(Object RowName) { return Invoke<int>(nameof(GetViewingAngle_Degree), RowName); }
        public EPalTribeID GetTribe(Object RowName) { return Invoke<EPalTribeID>(nameof(GetTribe), RowName); }
        public int GetSupportBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetSupportBySaveParameter), SaveParameter); }
        public int GetSupport(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetSupport), IndividualParameter); }
        public EPalSizeType GetSize(Object RowName) { return Invoke<EPalSizeType>(nameof(GetSize), RowName); }
        public int GetShotAttackBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetShotAttackBySaveParameter), SaveParameter); }
        public int GetShotAttack(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetShotAttack), IndividualParameter); }
        public int GetRarity(Object RowName) { return Invoke<int>(nameof(GetRarity), RowName); }
        public float GetPriceRate(Object RowName) { return Invoke<float>(nameof(GetPriceRate), RowName); }
        public void GetPrefixNameMsgID(Object CharacterID, Object OutMsgID) { Invoke(nameof(GetPrefixNameMsgID), CharacterID, OutMsgID); }
        public PalPettingPresset GetPettingPreset() { return Invoke<PalPettingPresset>(nameof(GetPettingPreset)); }
        public void GetPassiveSkill(Object RowName, Array<Object> PassiveSkill) { Invoke(nameof(GetPassiveSkill), RowName, PassiveSkill); }
        public void GetPartnerSkillMsgID(Object CharacterID, Object OutMsgID) { Invoke(nameof(GetPartnerSkillMsgID), CharacterID, OutMsgID); }
        public EPalOrganizationType GetOrganizationType(Object RowName) { return Invoke<EPalOrganizationType>(nameof(GetOrganizationType), RowName); }
        public bool GetNocturnal(Object RowName) { return Invoke<bool>(nameof(GetNocturnal), RowName); }
        public int GetMeleeAttackBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetMeleeAttackBySaveParameter), SaveParameter); }
        public int GetMeleeAttack(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetMeleeAttack), IndividualParameter); }
        public void GetLocalizedCharacterName(Object CharacterID, Object OutText) { Invoke(nameof(GetLocalizedCharacterName), CharacterID, OutText); }
        public bool GetIsTowerBoss(Object RowName) { return Invoke<bool>(nameof(GetIsTowerBoss), RowName); }
        public bool GetIsPal(Object RowName) { return Invoke<bool>(nameof(GetIsPal), RowName); }
        public bool GetIsBoss(Object RowName) { return Invoke<bool>(nameof(GetIsBoss), RowName); }
        public int GetHPBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetHPBySaveParameter), SaveParameter); }
        public int GetHP(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetHP), IndividualParameter); }
        public float GetHearingRate(Object RowName) { return Invoke<float>(nameof(GetHearingRate), RowName); }
        public EPalGenusCategoryType GetGenusCategory(Object RowName) { return Invoke<EPalGenusCategoryType>(nameof(GetGenusCategory), RowName); }
        public int GetFoodAmount(Object RowName) { return Invoke<int>(nameof(GetFoodAmount), RowName); }
        public float GetExpRatio(Object RowName) { return Invoke<float>(nameof(GetExpRatio), RowName); }
        public void GetElementType(Object RowName, EPalElementType Element1, EPalElementType Element2) { Invoke(nameof(GetElementType), RowName, Element1, Element2); }
        public bool GetDropItemData(Object CharacterID, int Level, PalDropItemDatabaseRow OutData) { return Invoke<bool>(nameof(GetDropItemData), CharacterID, Level, OutData); }
        public int GetDefenseBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetDefenseBySaveParameter), SaveParameter); }
        public int GetDefense(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetDefense), IndividualParameter); }
        public Array<PalWorkSuitabilityInfo> GetCraftSpeeds(PalIndividualCharacterParameter IndividualParameter) { return Invoke<Array<PalWorkSuitabilityInfo>>(nameof(GetCraftSpeeds), IndividualParameter); }
        public int GetCraftSpeedBySaveParameter(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<int>(nameof(GetCraftSpeedBySaveParameter), SaveParameter); }
        public int GetCraftSpeed(PalIndividualCharacterParameter IndividualParameter) { return Invoke<int>(nameof(GetCraftSpeed), IndividualParameter); }
        public SoftObjectPath GetCharacterIconTexturePath(Object CharacterID) { return Invoke<SoftObjectPath>(nameof(GetCharacterIconTexturePath), CharacterID); }
        public Object GetCharacterIconTextureByTribeID(EPalTribeID TribeID) { return Invoke<Object>(nameof(GetCharacterIconTextureByTribeID), TribeID); }
        public Object GetCharacterIconTexture(Object CharacterID) { return Invoke<Object>(nameof(GetCharacterIconTexture), CharacterID); }
        public float GetCaptureRateCorrect(Object RowName) { return Invoke<float>(nameof(GetCaptureRateCorrect), RowName); }
        public Object GetBPClassName(Object RowName) { return Invoke<Object>(nameof(GetBPClassName), RowName); }
        public Object GetBPClass(Object RowName) { return Invoke<Object>(nameof(GetBPClass), RowName); }
        public EPalBattleBGMType GetBattleBGM(Object RowName) { return Invoke<EPalBattleBGMType>(nameof(GetBattleBGM), RowName); }
        public bool FindPalSizeParameter(EPalSizeType CharacterSize, PalSizeParameterDataRow RowData) { return Invoke<bool>(nameof(FindPalSizeParameter), CharacterSize, RowData); }
        public int CalcCorrectedLevel(int TrainerLevel, int TargetCharacterLevel, Object WorldContextObject) { return Invoke<int>(nameof(CalcCorrectedLevel), TrainerLevel, TargetCharacterLevel, WorldContextObject); }
    }
    public class PalDataTableRowIdMapper : Object
    {
        public PalDataTableRowIdMapper(nint addr) : base(addr) { }
        public Array<DataTable> DataTables { get { return new Array<DataTable>(this[nameof(DataTables)].Address); } }
        public Object RowNameHashMap { get { return this[nameof(RowNameHashMap)]; } set { this[nameof(RowNameHashMap)] = value; } }
    }
    public class PalDeadBodyManager : Object
    {
        public PalDeadBodyManager(nint addr) : base(addr) { }
        public Array<PalIndividualCharacterHandle> DeadPalList { get { return new Array<PalIndividualCharacterHandle>(this[nameof(DeadPalList)].Address); } }
        public void GetDeadPalList(Array<PalIndividualCharacterHandle> OutArray) { Invoke(nameof(GetDeadPalList), OutArray); }
    }
    public class PalDeathPenaltyManager : Object
    {
        public PalDeathPenaltyManager(nint addr) : base(addr) { }
        public float StageDeathPenaltyRayStartHeight { get { return this[nameof(StageDeathPenaltyRayStartHeight)].GetValue<float>(); } set { this[nameof(StageDeathPenaltyRayStartHeight)].SetValue<float>(value); } }
        public float StageDeathPenaltyChestRadius { get { return this[nameof(StageDeathPenaltyChestRadius)].GetValue<float>(); } set { this[nameof(StageDeathPenaltyChestRadius)].SetValue<float>(value); } }
        public float StageDeathPenaltySpaceWidth { get { return this[nameof(StageDeathPenaltySpaceWidth)].GetValue<float>(); } set { this[nameof(StageDeathPenaltySpaceWidth)].SetValue<float>(value); } }
        public float StageDeathPenaltySpaceDepth { get { return this[nameof(StageDeathPenaltySpaceDepth)].GetValue<float>(); } set { this[nameof(StageDeathPenaltySpaceDepth)].SetValue<float>(value); } }
        public Object DeathPenaMap { get { return this[nameof(DeathPenaMap)]; } set { this[nameof(DeathPenaMap)] = value; } }
        public void DropDeathPenaltyChest(PalPlayerCharacter Player) { Invoke(nameof(DropDeathPenaltyChest), Player); }
    }
    public class PalDebugInfoGameInstanceSubsystem : GameInstanceSubsystem
    {
        public PalDebugInfoGameInstanceSubsystem(nint addr) : base(addr) { }
        public Font FontObject { get { return this[nameof(FontObject)].As<Font>(); } set { this["FontObject"] = value; } }
    }
    public class PalDebugSetting : Object
    {
        public PalDebugSetting(nint addr) : base(addr) { }
        public bool bEnableCommandToServer { get { return this[nameof(bEnableCommandToServer)].Flag; } set { this[nameof(bEnableCommandToServer)].Flag = value; } }
        public EPalLanguageType EditorPlayTextLanguageType { get { return (EPalLanguageType)this[nameof(EditorPlayTextLanguageType)].GetValue<int>(); } set { this[nameof(EditorPlayTextLanguageType)].SetValue<int>((int)value); } }
        public bool IsRequiredLoadPlayerSaveData { get { return this[nameof(IsRequiredLoadPlayerSaveData)].Flag; } set { this[nameof(IsRequiredLoadPlayerSaveData)].Flag = value; } }
        public Object DefaultLoadPlayerSaveDataName { get { return this[nameof(DefaultLoadPlayerSaveDataName)]; } set { this[nameof(DefaultLoadPlayerSaveDataName)] = value; } }
        public bool IsRequiredLoadWorldSaveData { get { return this[nameof(IsRequiredLoadWorldSaveData)].Flag; } set { this[nameof(IsRequiredLoadWorldSaveData)].Flag = value; } }
        public Object DefaultLoadWorldSaveDataName { get { return this[nameof(DefaultLoadWorldSaveDataName)]; } set { this[nameof(DefaultLoadWorldSaveDataName)] = value; } }
        public bool bIsRequiredLoadLocalWorldSaveData { get { return this[nameof(bIsRequiredLoadLocalWorldSaveData)].Flag; } set { this[nameof(bIsRequiredLoadLocalWorldSaveData)].Flag = value; } }
        public Object EditorPlayerSaveDataOverwriteMap { get { return this[nameof(EditorPlayerSaveDataOverwriteMap)]; } set { this[nameof(EditorPlayerSaveDataOverwriteMap)] = value; } }
        public Object PlayerAutoSaveDataName { get { return this[nameof(PlayerAutoSaveDataName)]; } set { this[nameof(PlayerAutoSaveDataName)] = value; } }
        public Object WorldAutoSaveDataName { get { return this[nameof(WorldAutoSaveDataName)]; } set { this[nameof(WorldAutoSaveDataName)] = value; } }
        public bool bDontAutoSaveInMulti { get { return this[nameof(bDontAutoSaveInMulti)].Flag; } set { this[nameof(bDontAutoSaveInMulti)].Flag = value; } }
        public Object EditorSaveDirectoryName { get { return this[nameof(EditorSaveDirectoryName)]; } set { this[nameof(EditorSaveDirectoryName)] = value; } }
        public float autoSaveSpan { get { return this[nameof(autoSaveSpan)].GetValue<float>(); } set { this[nameof(autoSaveSpan)].SetValue<float>(value); } }
        public bool autoSaveEnable { get { return this[nameof(autoSaveEnable)].Flag; } set { this[nameof(autoSaveEnable)].Flag = value; } }
        public bool bAutoSetTruePalMainStats { get { return this[nameof(bAutoSetTruePalMainStats)].Flag; } set { this[nameof(bAutoSetTruePalMainStats)].Flag = value; } }
        public PalDataTableRowName_GameProgressPreset PlayerDefaultPreset { get { return this[nameof(PlayerDefaultPreset)].As<PalDataTableRowName_GameProgressPreset>(); } set { this["PlayerDefaultPreset"] = value; } }
        public int PlayerLevel { get { return this[nameof(PlayerLevel)].GetValue<int>(); } set { this[nameof(PlayerLevel)].SetValue<int>(value); } }
        public int ForceFixLevelForWildPal { get { return this[nameof(ForceFixLevelForWildPal)].GetValue<int>(); } set { this[nameof(ForceFixLevelForWildPal)].SetValue<int>(value); } }
        public int ForceFixTalent { get { return this[nameof(ForceFixTalent)].GetValue<int>(); } set { this[nameof(ForceFixTalent)].SetValue<int>(value); } }
        public Array<PalDebugOtomoPalInfo> DefaultOtomoPal { get { return new Array<PalDebugOtomoPalInfo>(this[nameof(DefaultOtomoPal)].Address); } }
        public Array<PalDebugPalCaptureInfo> DefaultCapturePalInfos { get { return new Array<PalDebugPalCaptureInfo>(this[nameof(DefaultCapturePalInfos)].Address); } }
        public int DefaultCapturePalRandomNum { get { return this[nameof(DefaultCapturePalRandomNum)].GetValue<int>(); } set { this[nameof(DefaultCapturePalRandomNum)].SetValue<int>(value); } }
        public Array<PalDebugItemCreateInfo> DefaultItem { get { return new Array<PalDebugItemCreateInfo>(this[nameof(DefaultItem)].Address); } }
        public Array<PalDebugItemCreateInfo> DefaultLoadoutItem { get { return new Array<PalDebugItemCreateInfo>(this[nameof(DefaultLoadoutItem)].Address); } }
        public int PlayStart_PalWorldTime { get { return this[nameof(PlayStart_PalWorldTime)].GetValue<int>(); } set { this[nameof(PlayStart_PalWorldTime)].SetValue<int>(value); } }
        public float DebugRate_PalWorldTime { get { return this[nameof(DebugRate_PalWorldTime)].GetValue<float>(); } set { this[nameof(DebugRate_PalWorldTime)].SetValue<float>(value); } }
        public bool bIgnoreOverWeightMove { get { return this[nameof(bIgnoreOverWeightMove)].Flag; } set { this[nameof(bIgnoreOverWeightMove)].Flag = value; } }
        public bool bIsDisableReticleShoot { get { return this[nameof(bIsDisableReticleShoot)].Flag; } set { this[nameof(bIsDisableReticleShoot)].Flag = value; } }
        public bool bEquipDefaultWeapon { get { return this[nameof(bEquipDefaultWeapon)].Flag; } set { this[nameof(bEquipDefaultWeapon)].Flag = value; } }
        public bool bGetAllBulletItems { get { return this[nameof(bGetAllBulletItems)].Flag; } set { this[nameof(bGetAllBulletItems)].Flag = value; } }
        public bool bIgnoreItemDurabilityDecrease { get { return this[nameof(bIgnoreItemDurabilityDecrease)].Flag; } set { this[nameof(bIgnoreItemDurabilityDecrease)].Flag = value; } }
        public bool bNotConsumeMaterialsInRepair { get { return this[nameof(bNotConsumeMaterialsInRepair)].Flag; } set { this[nameof(bNotConsumeMaterialsInRepair)].Flag = value; } }
        public bool bIsMutekiALL { get { return this[nameof(bIsMutekiALL)].Flag; } set { this[nameof(bIsMutekiALL)].Flag = value; } }
        public bool bIsMutekiForPlayer { get { return this[nameof(bIsMutekiForPlayer)].Flag; } set { this[nameof(bIsMutekiForPlayer)].Flag = value; } }
        public bool bIsMutekiForFriend { get { return this[nameof(bIsMutekiForFriend)].Flag; } set { this[nameof(bIsMutekiForFriend)].Flag = value; } }
        public bool bDisableDeathPenalty { get { return this[nameof(bDisableDeathPenalty)].Flag; } set { this[nameof(bDisableDeathPenalty)].Flag = value; } }
        public bool bIgnoreRespawnTimer { get { return this[nameof(bIgnoreRespawnTimer)].Flag; } set { this[nameof(bIgnoreRespawnTimer)].Flag = value; } }
        public bool bIsDisableDyingCountdown { get { return this[nameof(bIsDisableDyingCountdown)].Flag; } set { this[nameof(bIsDisableDyingCountdown)].Flag = value; } }
        public bool bIsFixedSP { get { return this[nameof(bIsFixedSP)].Flag; } set { this[nameof(bIsFixedSP)].Flag = value; } }
        public bool bDisiablePlayerShield { get { return this[nameof(bDisiablePlayerShield)].Flag; } set { this[nameof(bDisiablePlayerShield)].Flag = value; } }
        public bool bIsFullPowerForPlayer { get { return this[nameof(bIsFullPowerForPlayer)].Flag; } set { this[nameof(bIsFullPowerForPlayer)].Flag = value; } }
        public bool bIsCaptureSuccessAlways { get { return this[nameof(bIsCaptureSuccessAlways)].Flag; } set { this[nameof(bIsCaptureSuccessAlways)].Flag = value; } }
        public bool bIsCaptureFailAlways_BounceBall { get { return this[nameof(bIsCaptureFailAlways_BounceBall)].Flag; } set { this[nameof(bIsCaptureFailAlways_BounceBall)].Flag = value; } }
        public bool bIsShowActionName { get { return this[nameof(bIsShowActionName)].Flag; } set { this[nameof(bIsShowActionName)].Flag = value; } }
        public bool bIsShowCharacterStatus { get { return this[nameof(bIsShowCharacterStatus)].Flag; } set { this[nameof(bIsShowCharacterStatus)].Flag = value; } }
        public bool bIsShowCharacterTickInfo { get { return this[nameof(bIsShowCharacterTickInfo)].Flag; } set { this[nameof(bIsShowCharacterTickInfo)].Flag = value; } }
        public bool bIsWazaCoolTimeFast { get { return this[nameof(bIsWazaCoolTimeFast)].Flag; } set { this[nameof(bIsWazaCoolTimeFast)].Flag = value; } }
        public bool bIsShowUseRootMotion { get { return this[nameof(bIsShowUseRootMotion)].Flag; } set { this[nameof(bIsShowUseRootMotion)].Flag = value; } }
        public bool bIsEnableClimbing { get { return this[nameof(bIsEnableClimbing)].Flag; } set { this[nameof(bIsEnableClimbing)].Flag = value; } }
        public bool bIsDisableFallDamage { get { return this[nameof(bIsDisableFallDamage)].Flag; } set { this[nameof(bIsDisableFallDamage)].Flag = value; } }
        public bool bIsShowPlayerFallHeight { get { return this[nameof(bIsShowPlayerFallHeight)].Flag; } set { this[nameof(bIsShowPlayerFallHeight)].Flag = value; } }
        public bool bIsShowGroundObjectName { get { return this[nameof(bIsShowGroundObjectName)].Flag; } set { this[nameof(bIsShowGroundObjectName)].Flag = value; } }
        public bool bIsShowForwardObjectName { get { return this[nameof(bIsShowForwardObjectName)].Flag; } set { this[nameof(bIsShowForwardObjectName)].Flag = value; } }
        public bool bDisableStatus_Darkness { get { return this[nameof(bDisableStatus_Darkness)].Flag; } set { this[nameof(bDisableStatus_Darkness)].Flag = value; } }
        public bool bIsIgnoreBuildRestrictionBaseCamp { get { return this[nameof(bIsIgnoreBuildRestrictionBaseCamp)].Flag; } set { this[nameof(bIsIgnoreBuildRestrictionBaseCamp)].Flag = value; } }
        public EPalMovementSpeedType ConfirmTransportItemBaseSpeedType { get { return (EPalMovementSpeedType)this[nameof(ConfirmTransportItemBaseSpeedType)].GetValue<int>(); } set { this[nameof(ConfirmTransportItemBaseSpeedType)].SetValue<int>((int)value); } }
        public float ConfirmTransportItemSpeedMultipleRate { get { return this[nameof(ConfirmTransportItemSpeedMultipleRate)].GetValue<float>(); } set { this[nameof(ConfirmTransportItemSpeedMultipleRate)].SetValue<float>(value); } }
        public bool bNotConsumeMaterialsInBuild { get { return this[nameof(bNotConsumeMaterialsInBuild)].Flag; } set { this[nameof(bNotConsumeMaterialsInBuild)].Flag = value; } }
        public float BuildRequiredWorkAmount { get { return this[nameof(BuildRequiredWorkAmount)].GetValue<float>(); } set { this[nameof(BuildRequiredWorkAmount)].SetValue<float>(value); } }
        public bool bIsDisableEnemyEyeSight { get { return this[nameof(bIsDisableEnemyEyeSight)].Flag; } set { this[nameof(bIsDisableEnemyEyeSight)].Flag = value; } }
        public bool bIsEnableNPCDrawRaycastDebug { get { return this[nameof(bIsEnableNPCDrawRaycastDebug)].Flag; } set { this[nameof(bIsEnableNPCDrawRaycastDebug)].Flag = value; } }
        public bool bIsHideScreenMessage { get { return this[nameof(bIsHideScreenMessage)].Flag; } set { this[nameof(bIsHideScreenMessage)].Flag = value; } }
        public bool bIsHungerDisable { get { return this[nameof(bIsHungerDisable)].Flag; } set { this[nameof(bIsHungerDisable)].Flag = value; } }
        public bool bIsAllRecipeUnlock { get { return this[nameof(bIsAllRecipeUnlock)].Flag; } set { this[nameof(bIsAllRecipeUnlock)].Flag = value; } }
        public bool bNotDecreaseWeaponItem { get { return this[nameof(bNotDecreaseWeaponItem)].Flag; } set { this[nameof(bNotDecreaseWeaponItem)].Flag = value; } }
        public bool bNotRequiredBulletWhenReload { get { return this[nameof(bNotRequiredBulletWhenReload)].Flag; } set { this[nameof(bNotRequiredBulletWhenReload)].Flag = value; } }
        public bool bShowReticleLocation { get { return this[nameof(bShowReticleLocation)].Flag; } set { this[nameof(bShowReticleLocation)].Flag = value; } }
        public bool bShowAutoAimInfo { get { return this[nameof(bShowAutoAimInfo)].Flag; } set { this[nameof(bShowAutoAimInfo)].Flag = value; } }
        public bool bIsEnableMouseAutoAim { get { return this[nameof(bIsEnableMouseAutoAim)].Flag; } set { this[nameof(bIsEnableMouseAutoAim)].Flag = value; } }
        public float MouseSensitivityRate { get { return this[nameof(MouseSensitivityRate)].GetValue<float>(); } set { this[nameof(MouseSensitivityRate)].SetValue<float>(value); } }
        public int CaptureFPS { get { return this[nameof(CaptureFPS)].GetValue<int>(); } set { this[nameof(CaptureFPS)].SetValue<int>(value); } }
        public bool bIsDisableDropItem { get { return this[nameof(bIsDisableDropItem)].Flag; } set { this[nameof(bIsDisableDropItem)].Flag = value; } }
        public bool bShowDropItemHitEvent { get { return this[nameof(bShowDropItemHitEvent)].Flag; } set { this[nameof(bShowDropItemHitEvent)].Flag = value; } }
        public bool bPrintLogGroupsWhenGroupOperated { get { return this[nameof(bPrintLogGroupsWhenGroupOperated)].Flag; } set { this[nameof(bPrintLogGroupsWhenGroupOperated)].Flag = value; } }
        public bool bIsSoundRangeVisual { get { return this[nameof(bIsSoundRangeVisual)].Flag; } set { this[nameof(bIsSoundRangeVisual)].Flag = value; } }
        public bool bIsToggleHUDWhenEject { get { return this[nameof(bIsToggleHUDWhenEject)].Flag; } set { this[nameof(bIsToggleHUDWhenEject)].Flag = value; } }
        public bool bIsLookAtDisable { get { return this[nameof(bIsLookAtDisable)].Flag; } set { this[nameof(bIsLookAtDisable)].Flag = value; } }
        public bool bPalBoxInLevelBelongingToServerPlayer { get { return this[nameof(bPalBoxInLevelBelongingToServerPlayer)].Flag; } set { this[nameof(bPalBoxInLevelBelongingToServerPlayer)].Flag = value; } }
        public bool bCreateGameInstanceViewActor { get { return this[nameof(bCreateGameInstanceViewActor)].Flag; } set { this[nameof(bCreateGameInstanceViewActor)].Flag = value; } }
        public bool bIsFixedLightingControllerTime { get { return this[nameof(bIsFixedLightingControllerTime)].Flag; } set { this[nameof(bIsFixedLightingControllerTime)].Flag = value; } }
        public float LightingControllerTimeIfFixed { get { return this[nameof(LightingControllerTimeIfFixed)].GetValue<float>(); } set { this[nameof(LightingControllerTimeIfFixed)].SetValue<float>(value); } }
        public bool bIsShowFloorLocation { get { return this[nameof(bIsShowFloorLocation)].Flag; } set { this[nameof(bIsShowFloorLocation)].Flag = value; } }
        public bool bIsShowGroundTilt { get { return this[nameof(bIsShowGroundTilt)].Flag; } set { this[nameof(bIsShowGroundTilt)].Flag = value; } }
        public bool bIsDisableShiftKey { get { return this[nameof(bIsDisableShiftKey)].Flag; } set { this[nameof(bIsDisableShiftKey)].Flag = value; } }
        public bool IsSpawnAlwaysFromSpawner { get { return this[nameof(IsSpawnAlwaysFromSpawner)].Flag; } set { this[nameof(IsSpawnAlwaysFromSpawner)].Flag = value; } }
        public bool IsDisableSpawner { get { return this[nameof(IsDisableSpawner)].Flag; } set { this[nameof(IsDisableSpawner)].Flag = value; } }
        public float OverrideSpawnRadius { get { return this[nameof(OverrideSpawnRadius)].GetValue<float>(); } set { this[nameof(OverrideSpawnRadius)].SetValue<float>(value); } }
        public float OverrideDespawnRadius { get { return this[nameof(OverrideDespawnRadius)].GetValue<float>(); } set { this[nameof(OverrideDespawnRadius)].SetValue<float>(value); } }
        public bool bIsPlayerCompleteSTEALTH { get { return this[nameof(bIsPlayerCompleteSTEALTH)].Flag; } set { this[nameof(bIsPlayerCompleteSTEALTH)].Flag = value; } }
        public bool bIsShowEnemyHate { get { return this[nameof(bIsShowEnemyHate)].Flag; } set { this[nameof(bIsShowEnemyHate)].Flag = value; } }
        public bool bIsShowEnemyHateArrow { get { return this[nameof(bIsShowEnemyHateArrow)].Flag; } set { this[nameof(bIsShowEnemyHateArrow)].Flag = value; } }
        public bool bIsShowTargetLocalPlayerList { get { return this[nameof(bIsShowTargetLocalPlayerList)].Flag; } set { this[nameof(bIsShowTargetLocalPlayerList)].Flag = value; } }
        public bool bIsShowMovementMode { get { return this[nameof(bIsShowMovementMode)].Flag; } set { this[nameof(bIsShowMovementMode)].Flag = value; } }
        public bool bIsShowOrganization { get { return this[nameof(bIsShowOrganization)].Flag; } set { this[nameof(bIsShowOrganization)].Flag = value; } }
        public bool bCanAccessToOtherGuildMapObject { get { return this[nameof(bCanAccessToOtherGuildMapObject)].Flag; } set { this[nameof(bCanAccessToOtherGuildMapObject)].Flag = value; } }
        public bool bFirstBuildPalBox { get { return this[nameof(bFirstBuildPalBox)].Flag; } set { this[nameof(bFirstBuildPalBox)].Flag = value; } }
        public float WorkExtraRate { get { return this[nameof(WorkExtraRate)].GetValue<float>(); } set { this[nameof(WorkExtraRate)].SetValue<float>(value); } }
        public bool bIsDisableFootIK { get { return this[nameof(bIsDisableFootIK)].Flag; } set { this[nameof(bIsDisableFootIK)].Flag = value; } }
        public bool bBuildInstallCheckLookToCamera { get { return this[nameof(bBuildInstallCheckLookToCamera)].Flag; } set { this[nameof(bBuildInstallCheckLookToCamera)].Flag = value; } }
        public bool bBuildFXDebugLog { get { return this[nameof(bBuildFXDebugLog)].Flag; } set { this[nameof(bBuildFXDebugLog)].Flag = value; } }
        public bool bDamageTextStack { get { return this[nameof(bDamageTextStack)].Flag; } set { this[nameof(bDamageTextStack)].Flag = value; } }
        public bool bFootStepNotify_DebugDisplay { get { return this[nameof(bFootStepNotify_DebugDisplay)].Flag; } set { this[nameof(bFootStepNotify_DebugDisplay)].Flag = value; } }
        public bool bSkipBossCutscene { get { return this[nameof(bSkipBossCutscene)].Flag; } set { this[nameof(bSkipBossCutscene)].Flag = value; } }
        public bool bShowRangeDistributeExpAround { get { return this[nameof(bShowRangeDistributeExpAround)].Flag; } set { this[nameof(bShowRangeDistributeExpAround)].Flag = value; } }
        public bool bNotDropOtomoAtPlayerDeath { get { return this[nameof(bNotDropOtomoAtPlayerDeath)].Flag; } set { this[nameof(bNotDropOtomoAtPlayerDeath)].Flag = value; } }
        public bool bNotDropItemsAtPlayerDeath { get { return this[nameof(bNotDropItemsAtPlayerDeath)].Flag; } set { this[nameof(bNotDropItemsAtPlayerDeath)].Flag = value; } }
        public bool bEnableDebugMoveSpeed { get { return this[nameof(bEnableDebugMoveSpeed)].Flag; } set { this[nameof(bEnableDebugMoveSpeed)].Flag = value; } }
        public bool bForceToggleDash { get { return this[nameof(bForceToggleDash)].Flag; } set { this[nameof(bForceToggleDash)].Flag = value; } }
        public bool bDebugAutoRun { get { return this[nameof(bDebugAutoRun)].Flag; } set { this[nameof(bDebugAutoRun)].Flag = value; } }
        public bool bDrawPlayerInDoor { get { return this[nameof(bDrawPlayerInDoor)].Flag; } set { this[nameof(bDrawPlayerInDoor)].Flag = value; } }
        public int PlayerPalStoragePage { get { return this[nameof(PlayerPalStoragePage)].GetValue<int>(); } set { this[nameof(PlayerPalStoragePage)].SetValue<int>(value); } }
        public bool ShowPlayerMoveSpeed { get { return this[nameof(ShowPlayerMoveSpeed)].Flag; } set { this[nameof(ShowPlayerMoveSpeed)].Flag = value; } }
        public bool bSwimming_DebugDisplay { get { return this[nameof(bSwimming_DebugDisplay)].Flag; } set { this[nameof(bSwimming_DebugDisplay)].Flag = value; } }
        public bool bSwimming_NoDecreaseSP { get { return this[nameof(bSwimming_NoDecreaseSP)].Flag; } set { this[nameof(bSwimming_NoDecreaseSP)].Flag = value; } }
        public bool bPartnerSkill_DebugDisplay { get { return this[nameof(bPartnerSkill_DebugDisplay)].Flag; } set { this[nameof(bPartnerSkill_DebugDisplay)].Flag = value; } }
        public bool bPartnerSkill_NoDecrease { get { return this[nameof(bPartnerSkill_NoDecrease)].Flag; } set { this[nameof(bPartnerSkill_NoDecrease)].Flag = value; } }
        public float PartnerSkill_CooldownSpeedRate { get { return this[nameof(PartnerSkill_CooldownSpeedRate)].GetValue<float>(); } set { this[nameof(PartnerSkill_CooldownSpeedRate)].SetValue<float>(value); } }
        public bool PartnerSkill_IgnoreRestrictedByItems { get { return this[nameof(PartnerSkill_IgnoreRestrictedByItems)].Flag; } set { this[nameof(PartnerSkill_IgnoreRestrictedByItems)].Flag = value; } }
        public bool bNotConsumeMaterialsInCraft { get { return this[nameof(bNotConsumeMaterialsInCraft)].Flag; } set { this[nameof(bNotConsumeMaterialsInCraft)].Flag = value; } }
        public bool bSelectableRecipeWhenNothingMaterials { get { return this[nameof(bSelectableRecipeWhenNothingMaterials)].Flag; } set { this[nameof(bSelectableRecipeWhenNothingMaterials)].Flag = value; } }
        public bool bIgnoreWorkableElementType { get { return this[nameof(bIgnoreWorkableElementType)].Flag; } set { this[nameof(bIgnoreWorkableElementType)].Flag = value; } }
        public bool bIgnoreWorkableGenusCategories { get { return this[nameof(bIgnoreWorkableGenusCategories)].Flag; } set { this[nameof(bIgnoreWorkableGenusCategories)].Flag = value; } }
        public bool bShowDebugWorkAssign { get { return this[nameof(bShowDebugWorkAssign)].Flag; } set { this[nameof(bShowDebugWorkAssign)].Flag = value; } }
        public bool bShowDebugWorkAssignTarget { get { return this[nameof(bShowDebugWorkAssignTarget)].Flag; } set { this[nameof(bShowDebugWorkAssignTarget)].Flag = value; } }
        public bool bForceRunInWork { get { return this[nameof(bForceRunInWork)].Flag; } set { this[nameof(bForceRunInWork)].Flag = value; } }
        public bool bContinueSpeedInTransportWork { get { return this[nameof(bContinueSpeedInTransportWork)].Flag; } set { this[nameof(bContinueSpeedInTransportWork)].Flag = value; } }
        public bool bNotInterruptTransportingWork { get { return this[nameof(bNotInterruptTransportingWork)].Flag; } set { this[nameof(bNotInterruptTransportingWork)].Flag = value; } }
        public bool bPrintLogWorkerEventDetail { get { return this[nameof(bPrintLogWorkerEventDetail)].Flag; } set { this[nameof(bPrintLogWorkerEventDetail)].Flag = value; } }
        public float BaseCampWorkerEventTriggerInterval { get { return this[nameof(BaseCampWorkerEventTriggerInterval)].GetValue<float>(); } set { this[nameof(BaseCampWorkerEventTriggerInterval)].SetValue<float>(value); } }
        public bool IgnoreBaseCampTask { get { return this[nameof(IgnoreBaseCampTask)].Flag; } set { this[nameof(IgnoreBaseCampTask)].Flag = value; } }
        public bool bBaseCampSpawnLevelMax { get { return this[nameof(bBaseCampSpawnLevelMax)].Flag; } set { this[nameof(bBaseCampSpawnLevelMax)].Flag = value; } }
        public bool bBaseCampWorkerSanityDetail { get { return this[nameof(bBaseCampWorkerSanityDetail)].Flag; } set { this[nameof(bBaseCampWorkerSanityDetail)].Flag = value; } }
        public float BaseCampWorkerEatTime { get { return this[nameof(BaseCampWorkerEatTime)].GetValue<float>(); } set { this[nameof(BaseCampWorkerEatTime)].SetValue<float>(value); } }
        public bool bBaseCampShowCannotTransportTarget { get { return this[nameof(bBaseCampShowCannotTransportTarget)].Flag; } set { this[nameof(bBaseCampShowCannotTransportTarget)].Flag = value; } }
        public PalArrowSettings BaseCampCannotTransportTargetArrowSettings { get { return this[nameof(BaseCampCannotTransportTargetArrowSettings)].As<PalArrowSettings>(); } set { this["BaseCampCannotTransportTargetArrowSettings"] = value; } }
        public bool bBaseCampMoveModeTeleportForce { get { return this[nameof(bBaseCampMoveModeTeleportForce)].Flag; } set { this[nameof(bBaseCampMoveModeTeleportForce)].Flag = value; } }
        public int fallBackDefense { get { return this[nameof(fallBackDefense)].GetValue<int>(); } set { this[nameof(fallBackDefense)].SetValue<int>(value); } }
        public bool bDebugLogWorldSecurity { get { return this[nameof(bDebugLogWorldSecurity)].Flag; } set { this[nameof(bDebugLogWorldSecurity)].Flag = value; } }
        public bool bDebugLogEnableCriminal { get { return this[nameof(bDebugLogEnableCriminal)].Flag; } set { this[nameof(bDebugLogEnableCriminal)].Flag = value; } }
        public bool bDebugLogEnableWanted { get { return this[nameof(bDebugLogEnableWanted)].Flag; } set { this[nameof(bDebugLogEnableWanted)].Flag = value; } }
        public bool bDebugLogEnableCriminalPlayer { get { return this[nameof(bDebugLogEnableCriminalPlayer)].Flag; } set { this[nameof(bDebugLogEnableCriminalPlayer)].Flag = value; } }
        public bool bShowDebugWantedSpawnerSphere { get { return this[nameof(bShowDebugWantedSpawnerSphere)].Flag; } set { this[nameof(bShowDebugWantedSpawnerSphere)].Flag = value; } }
        public bool bTransportGrantedMonsterToPalBox { get { return this[nameof(bTransportGrantedMonsterToPalBox)].Flag; } set { this[nameof(bTransportGrantedMonsterToPalBox)].Flag = value; } }
        public bool bInvaderDisable { get { return this[nameof(bInvaderDisable)].Flag; } set { this[nameof(bInvaderDisable)].Flag = value; } }
        public float DebugSpawnWildPal_DistanceFromPlayer { get { return this[nameof(DebugSpawnWildPal_DistanceFromPlayer)].GetValue<float>(); } set { this[nameof(DebugSpawnWildPal_DistanceFromPlayer)].SetValue<float>(value); } }
        public EPalStatusID DebugAddStatus { get { return (EPalStatusID)this[nameof(DebugAddStatus)].GetValue<int>(); } set { this[nameof(DebugAddStatus)].SetValue<int>((int)value); } }
        public bool bIsDisplayDebug_PassiveSkill { get { return this[nameof(bIsDisplayDebug_PassiveSkill)].Flag; } set { this[nameof(bIsDisplayDebug_PassiveSkill)].Flag = value; } }
        public bool bShowPassiveSkillStatus { get { return this[nameof(bShowPassiveSkillStatus)].Flag; } set { this[nameof(bShowPassiveSkillStatus)].Flag = value; } }
        public float ShowPassiveSkillStatusRange { get { return this[nameof(ShowPassiveSkillStatusRange)].GetValue<float>(); } set { this[nameof(ShowPassiveSkillStatusRange)].SetValue<float>(value); } }
        public bool bIgnorePalPassiveSkill { get { return this[nameof(bIgnorePalPassiveSkill)].Flag; } set { this[nameof(bIgnorePalPassiveSkill)].Flag = value; } }
        public Array<PalDataTableRowName_PassiveSkillData> PalPassiveSkillOverride { get { return new Array<PalDataTableRowName_PassiveSkillData>(this[nameof(PalPassiveSkillOverride)].Address); } }
        public bool bGrantPassiveSkillAlways { get { return this[nameof(bGrantPassiveSkillAlways)].Flag; } set { this[nameof(bGrantPassiveSkillAlways)].Flag = value; } }
        public Object PassiveSkill_AttachSkill { get { return this[nameof(PassiveSkill_AttachSkill)]; } set { this[nameof(PassiveSkill_AttachSkill)] = value; } }
        public bool bPassiveSkill_CollectItem_10Sec { get { return this[nameof(bPassiveSkill_CollectItem_10Sec)].Flag; } set { this[nameof(bPassiveSkill_CollectItem_10Sec)].Flag = value; } }
        public bool bPassiveSkill_LifeSteal_DisplayRecoverHp { get { return this[nameof(bPassiveSkill_LifeSteal_DisplayRecoverHp)].Flag; } set { this[nameof(bPassiveSkill_LifeSteal_DisplayRecoverHp)].Flag = value; } }
        public bool bLogMapObjectFailedSpawn { get { return this[nameof(bLogMapObjectFailedSpawn)].Flag; } set { this[nameof(bLogMapObjectFailedSpawn)].Flag = value; } }
        public bool bShowMapObjectStatus { get { return this[nameof(bShowMapObjectStatus)].Flag; } set { this[nameof(bShowMapObjectStatus)].Flag = value; } }
        public bool bShowMapObjectFoliageStatus { get { return this[nameof(bShowMapObjectFoliageStatus)].Flag; } set { this[nameof(bShowMapObjectFoliageStatus)].Flag = value; } }
        public float ShowMapObjectStatusRange { get { return this[nameof(ShowMapObjectStatusRange)].GetValue<float>(); } set { this[nameof(ShowMapObjectStatusRange)].SetValue<float>(value); } }
        public bool bDisablePalFoliageComponentBeginPlay { get { return this[nameof(bDisablePalFoliageComponentBeginPlay)].Flag; } set { this[nameof(bDisablePalFoliageComponentBeginPlay)].Flag = value; } }
        public bool bShowMapObjectSpawnerStatus { get { return this[nameof(bShowMapObjectSpawnerStatus)].Flag; } set { this[nameof(bShowMapObjectSpawnerStatus)].Flag = value; } }
        public bool bDisableMapObjectEffect { get { return this[nameof(bDisableMapObjectEffect)].Flag; } set { this[nameof(bDisableMapObjectEffect)].Flag = value; } }
        public bool bDrawDetectMapObjectInDoor { get { return this[nameof(bDrawDetectMapObjectInDoor)].Flag; } set { this[nameof(bDrawDetectMapObjectInDoor)].Flag = value; } }
        public bool bCanDamageToMapObjectFromSameGroup { get { return this[nameof(bCanDamageToMapObjectFromSameGroup)].Flag; } set { this[nameof(bCanDamageToMapObjectFromSameGroup)].Flag = value; } }
        public int MapObjectHpOverride { get { return this[nameof(MapObjectHpOverride)].GetValue<int>(); } set { this[nameof(MapObjectHpOverride)].SetValue<int>(value); } }
        public float FoliageRespawnIntervalOverrideSeconds { get { return this[nameof(FoliageRespawnIntervalOverrideSeconds)].GetValue<float>(); } set { this[nameof(FoliageRespawnIntervalOverrideSeconds)].SetValue<float>(value); } }
        public bool bVisibleFoliageChunk { get { return this[nameof(bVisibleFoliageChunk)].Flag; } set { this[nameof(bVisibleFoliageChunk)].Flag = value; } }
        public bool bShowPalEggStatus { get { return this[nameof(bShowPalEggStatus)].Flag; } set { this[nameof(bShowPalEggStatus)].Flag = value; } }
        public float ShowPalEggStatusRange { get { return this[nameof(ShowPalEggStatusRange)].GetValue<float>(); } set { this[nameof(ShowPalEggStatusRange)].SetValue<float>(value); } }
        public bool bIsHideAllHUD { get { return this[nameof(bIsHideAllHUD)].Flag; } set { this[nameof(bIsHideAllHUD)].Flag = value; } }
        public bool bIsNowHUDHide { get { return this[nameof(bIsNowHUDHide)].Flag; } set { this[nameof(bIsNowHUDHide)].Flag = value; } }
        public bool bForceCreateDispatchParameterByHUDService { get { return this[nameof(bForceCreateDispatchParameterByHUDService)].Flag; } set { this[nameof(bForceCreateDispatchParameterByHUDService)].Flag = value; } }
        public bool bShowDebugMapIcon { get { return this[nameof(bShowDebugMapIcon)].Flag; } set { this[nameof(bShowDebugMapIcon)].Flag = value; } }
        public bool bIsHideUIForPV { get { return this[nameof(bIsHideUIForPV)].Flag; } set { this[nameof(bIsHideUIForPV)].Flag = value; } }
        public bool bIsCompletePaldex { get { return this[nameof(bIsCompletePaldex)].Flag; } set { this[nameof(bIsCompletePaldex)].Flag = value; } }
        public bool bUseFixedPositionPlayerUI { get { return this[nameof(bUseFixedPositionPlayerUI)].Flag; } set { this[nameof(bUseFixedPositionPlayerUI)].Flag = value; } }
        public bool bForceShowHPGauge { get { return this[nameof(bForceShowHPGauge)].Flag; } set { this[nameof(bForceShowHPGauge)].Flag = value; } }
        public bool bIsFixedRandomSeed { get { return this[nameof(bIsFixedRandomSeed)].Flag; } set { this[nameof(bIsFixedRandomSeed)].Flag = value; } }
        public int actionRandomSeed { get { return this[nameof(actionRandomSeed)].GetValue<int>(); } set { this[nameof(actionRandomSeed)].SetValue<int>(value); } }
        public bool bAvailableBuildObjectInDevelop { get { return this[nameof(bAvailableBuildObjectInDevelop)].Flag; } set { this[nameof(bAvailableBuildObjectInDevelop)].Flag = value; } }
        public bool bShowBuildObjectInstallCheck { get { return this[nameof(bShowBuildObjectInstallCheck)].Flag; } set { this[nameof(bShowBuildObjectInstallCheck)].Flag = value; } }
        public Array<EPalMapObjectOperationResult> IgnoreInstallErrors { get { return new Array<EPalMapObjectOperationResult>(this[nameof(IgnoreInstallErrors)].Address); } }
        public bool bDrawDebugInstallConnection { get { return this[nameof(bDrawDebugInstallConnection)].Flag; } set { this[nameof(bDrawDebugInstallConnection)].Flag = value; } }
        public bool bUseEagleForGlider { get { return this[nameof(bUseEagleForGlider)].Flag; } set { this[nameof(bUseEagleForGlider)].Flag = value; } }
        public bool bEquipDefaultGlider { get { return this[nameof(bEquipDefaultGlider)].Flag; } set { this[nameof(bEquipDefaultGlider)].Flag = value; } }
        public float ExtraHpRegenRateInSleepingBed { get { return this[nameof(ExtraHpRegenRateInSleepingBed)].GetValue<float>(); } set { this[nameof(ExtraHpRegenRateInSleepingBed)].SetValue<float>(value); } }
        public bool bForceDisableLamp { get { return this[nameof(bForceDisableLamp)].Flag; } set { this[nameof(bForceDisableLamp)].Flag = value; } }
        public bool bForceDisableTimerLight { get { return this[nameof(bForceDisableTimerLight)].Flag; } set { this[nameof(bForceDisableTimerLight)].Flag = value; } }
        public bool bForceDisableTickOptimization { get { return this[nameof(bForceDisableTickOptimization)].Flag; } set { this[nameof(bForceDisableTickOptimization)].Flag = value; } }
        public bool bForceDisableDamagePopup { get { return this[nameof(bForceDisableDamagePopup)].Flag; } set { this[nameof(bForceDisableDamagePopup)].Flag = value; } }
        public bool bIsShowTickOptimizationType { get { return this[nameof(bIsShowTickOptimizationType)].Flag; } set { this[nameof(bIsShowTickOptimizationType)].Flag = value; } }
        public bool bIgnoreFastTravelLock { get { return this[nameof(bIgnoreFastTravelLock)].Flag; } set { this[nameof(bIgnoreFastTravelLock)].Flag = value; } }
        public Object AudioBusVolumes { get { return this[nameof(AudioBusVolumes)]; } set { this[nameof(AudioBusVolumes)] = value; } }
        public Object AudioBusMute { get { return this[nameof(AudioBusMute)]; } set { this[nameof(AudioBusMute)] = value; } }
        public bool bIsShowPostAkEvent { get { return this[nameof(bIsShowPostAkEvent)].Flag; } set { this[nameof(bIsShowPostAkEvent)].Flag = value; } }
        public Object SoundDebugModelClass { get { return this[nameof(SoundDebugModelClass)]; } set { this[nameof(SoundDebugModelClass)] = value; } }
        public bool bIsMuteForPlayerSoundOnly { get { return this[nameof(bIsMuteForPlayerSoundOnly)].Flag; } set { this[nameof(bIsMuteForPlayerSoundOnly)].Flag = value; } }
        public bool bDisplayPlaySoundId { get { return this[nameof(bDisplayPlaySoundId)].Flag; } set { this[nameof(bDisplayPlaySoundId)].Flag = value; } }
        public bool bPlayFootStepSound { get { return this[nameof(bPlayFootStepSound)].Flag; } set { this[nameof(bPlayFootStepSound)].Flag = value; } }
        public Array<Object> IgnoreSoundIds { get { return new Array<Object>(this[nameof(IgnoreSoundIds)].Address); } }
        public bool bIsSpawnFootStepEffect { get { return this[nameof(bIsSpawnFootStepEffect)].Flag; } set { this[nameof(bIsSpawnFootStepEffect)].Flag = value; } }
        public bool bIsDisableCameraPitchLimit { get { return this[nameof(bIsDisableCameraPitchLimit)].Flag; } set { this[nameof(bIsDisableCameraPitchLimit)].Flag = value; } }
        public bool bIsIgnoreNetworkVersionCompatible { get { return this[nameof(bIsIgnoreNetworkVersionCompatible)].Flag; } set { this[nameof(bIsIgnoreNetworkVersionCompatible)].Flag = value; } }
        public bool bIsUseClientOtomoSetting { get { return this[nameof(bIsUseClientOtomoSetting)].Flag; } set { this[nameof(bIsUseClientOtomoSetting)].Flag = value; } }
        public Array<PalDebugOtomoPalInfo> DefaultOtomoPalForClient { get { return new Array<PalDebugOtomoPalInfo>(this[nameof(DefaultOtomoPalForClient)].Address); } }
        public bool bIsForcedSynchronizedMapObject { get { return this[nameof(bIsForcedSynchronizedMapObject)].Flag; } set { this[nameof(bIsForcedSynchronizedMapObject)].Flag = value; } }
        public bool bEnableCharacterCountInServer { get { return this[nameof(bEnableCharacterCountInServer)].Flag; } set { this[nameof(bEnableCharacterCountInServer)].Flag = value; } }
        public bool bUseDedicatedServerOptimizeInListenServer { get { return this[nameof(bUseDedicatedServerOptimizeInListenServer)].Flag; } set { this[nameof(bUseDedicatedServerOptimizeInListenServer)].Flag = value; } }
        public bool bIsDisableInitRandomCharacterMake { get { return this[nameof(bIsDisableInitRandomCharacterMake)].Flag; } set { this[nameof(bIsDisableInitRandomCharacterMake)].Flag = value; } }
        public bool bForceSpawnTreasureBox { get { return this[nameof(bForceSpawnTreasureBox)].Flag; } set { this[nameof(bForceSpawnTreasureBox)].Flag = value; } }
        public bool bForceSpawnEnemyCamp { get { return this[nameof(bForceSpawnEnemyCamp)].Flag; } set { this[nameof(bForceSpawnEnemyCamp)].Flag = value; } }
        public bool bForceSpawnPalEgg { get { return this[nameof(bForceSpawnPalEgg)].Flag; } set { this[nameof(bForceSpawnPalEgg)].Flag = value; } }
        public bool bForceSpawnRarePal { get { return this[nameof(bForceSpawnRarePal)].Flag; } set { this[nameof(bForceSpawnRarePal)].Flag = value; } }
        public bool IgnoreAudio { get { return this[nameof(IgnoreAudio)].Flag; } set { this[nameof(IgnoreAudio)].Flag = value; } }
        public bool bIsShowAudioSoundPlayer { get { return this[nameof(bIsShowAudioSoundPlayer)].Flag; } set { this[nameof(bIsShowAudioSoundPlayer)].Flag = value; } }
        public bool bForceSpawnRandomIncident { get { return this[nameof(bForceSpawnRandomIncident)].Flag; } set { this[nameof(bForceSpawnRandomIncident)].Flag = value; } }
        public bool bForceDisableSpawnRandomIncident { get { return this[nameof(bForceDisableSpawnRandomIncident)].Flag; } set { this[nameof(bForceDisableSpawnRandomIncident)].Flag = value; } }
        public Object ForceSpawnRandomIncidentName { get { return this[nameof(ForceSpawnRandomIncidentName)]; } set { this[nameof(ForceSpawnRandomIncidentName)] = value; } }
        public bool bShowRandomIncidentSpawnArea { get { return this[nameof(bShowRandomIncidentSpawnArea)].Flag; } set { this[nameof(bShowRandomIncidentSpawnArea)].Flag = value; } }
        public bool bShowRandomIncidentEndArea { get { return this[nameof(bShowRandomIncidentEndArea)].Flag; } set { this[nameof(bShowRandomIncidentEndArea)].Flag = value; } }
        public bool bShowRandomIncidentExcludeArea { get { return this[nameof(bShowRandomIncidentExcludeArea)].Flag; } set { this[nameof(bShowRandomIncidentExcludeArea)].Flag = value; } }
        public bool bInvadeSetting_Override { get { return this[nameof(bInvadeSetting_Override)].Flag; } set { this[nameof(bInvadeSetting_Override)].Flag = value; } }
        public float InvadeProbability_Override { get { return this[nameof(InvadeProbability_Override)].GetValue<float>(); } set { this[nameof(InvadeProbability_Override)].SetValue<float>(value); } }
        public int InvadeOccurablePlayerLevel_Override { get { return this[nameof(InvadeOccurablePlayerLevel_Override)].GetValue<int>(); } set { this[nameof(InvadeOccurablePlayerLevel_Override)].SetValue<int>(value); } }
        public Object ForceOccurInvaderName { get { return this[nameof(ForceOccurInvaderName)]; } set { this[nameof(ForceOccurInvaderName)] = value; } }
        public EPalBiomeType Biome_Override { get { return (EPalBiomeType)this[nameof(Biome_Override)].GetValue<int>(); } set { this[nameof(Biome_Override)].SetValue<int>((int)value); } }
        public int InvadeJudgmentInterval_Minutes_Override { get { return this[nameof(InvadeJudgmentInterval_Minutes_Override)].GetValue<int>(); } set { this[nameof(InvadeJudgmentInterval_Minutes_Override)].SetValue<int>(value); } }
        public int InvadeCollTime_Max_Minutes_Override { get { return this[nameof(InvadeCollTime_Max_Minutes_Override)].GetValue<int>(); } set { this[nameof(InvadeCollTime_Max_Minutes_Override)].SetValue<int>(value); } }
        public int InvadeCollTime_Min_Minutes_Override { get { return this[nameof(InvadeCollTime_Min_Minutes_Override)].GetValue<int>(); } set { this[nameof(InvadeCollTime_Min_Minutes_Override)].SetValue<int>(value); } }
        public int InvadeReturnTime_Minutes_Override { get { return this[nameof(InvadeReturnTime_Minutes_Override)].GetValue<int>(); } set { this[nameof(InvadeReturnTime_Minutes_Override)].SetValue<int>(value); } }
        public int InvadeStartPoint_BaseCampRadius_Min_cm_Override { get { return this[nameof(InvadeStartPoint_BaseCampRadius_Min_cm_Override)].GetValue<int>(); } set { this[nameof(InvadeStartPoint_BaseCampRadius_Min_cm_Override)].SetValue<int>(value); } }
        public int InvadeStartPoint_BaseCampRadius_Max_cm_Override { get { return this[nameof(InvadeStartPoint_BaseCampRadius_Max_cm_Override)].GetValue<int>(); } set { this[nameof(InvadeStartPoint_BaseCampRadius_Max_cm_Override)].SetValue<int>(value); } }
        public float VisitorNPCProbability_Override { get { return this[nameof(VisitorNPCProbability_Override)].GetValue<float>(); } set { this[nameof(VisitorNPCProbability_Override)].SetValue<float>(value); } }
        public Object ForceOccurVisitorNPCName { get { return this[nameof(ForceOccurVisitorNPCName)]; } set { this[nameof(ForceOccurVisitorNPCName)] = value; } }
        public int VisitorNPCReturnTime_Minutes_Override { get { return this[nameof(VisitorNPCReturnTime_Minutes_Override)].GetValue<int>(); } set { this[nameof(VisitorNPCReturnTime_Minutes_Override)].SetValue<int>(value); } }
        public bool bIsDisableCrossKeyQuickSwitch { get { return this[nameof(bIsDisableCrossKeyQuickSwitch)].Flag; } set { this[nameof(bIsDisableCrossKeyQuickSwitch)].Flag = value; } }
        public bool bIsEnableAirRolling { get { return this[nameof(bIsEnableAirRolling)].Flag; } set { this[nameof(bIsEnableAirRolling)].Flag = value; } }
        public bool bIsEnablePalWarp { get { return this[nameof(bIsEnablePalWarp)].Flag; } set { this[nameof(bIsEnablePalWarp)].Flag = value; } }
        public bool bDungeonDevelopFlag { get { return this[nameof(bDungeonDevelopFlag)].Flag; } set { this[nameof(bDungeonDevelopFlag)].Flag = value; } }
        public bool bIsDisableOptionWorldLoadConfig { get { return this[nameof(bIsDisableOptionWorldLoadConfig)].Flag; } set { this[nameof(bIsDisableOptionWorldLoadConfig)].Flag = value; } }
        public bool bIsShowNightSkipLog { get { return this[nameof(bIsShowNightSkipLog)].Flag; } set { this[nameof(bIsShowNightSkipLog)].Flag = value; } }
        public bool bIsApplyOptionWorldModePreset { get { return this[nameof(bIsApplyOptionWorldModePreset)].Flag; } set { this[nameof(bIsApplyOptionWorldModePreset)].Flag = value; } }
        public bool bShowAnimRateScale { get { return this[nameof(bShowAnimRateScale)].Flag; } set { this[nameof(bShowAnimRateScale)].Flag = value; } }
        public float ShowAnimRateScaleRange { get { return this[nameof(ShowAnimRateScaleRange)].GetValue<float>(); } set { this[nameof(ShowAnimRateScaleRange)].SetValue<float>(value); } }
        public bool bIsParallelForUpdateActiveTiles { get { return this[nameof(bIsParallelForUpdateActiveTiles)].Flag; } set { this[nameof(bIsParallelForUpdateActiveTiles)].Flag = value; } }
        public bool bIsDisablePlayerTeleportTimeout { get { return this[nameof(bIsDisablePlayerTeleportTimeout)].Flag; } set { this[nameof(bIsDisablePlayerTeleportTimeout)].Flag = value; } }
        public bool bUseMalePlayer { get { return this[nameof(bUseMalePlayer)].Flag; } set { this[nameof(bUseMalePlayer)].Flag = value; } }
        public bool bEnableLoadingScreen { get { return this[nameof(bEnableLoadingScreen)].Flag; } set { this[nameof(bEnableLoadingScreen)].Flag = value; } }
        public Object OnLoadingScreenVisibilityChanged { get { return this[nameof(OnLoadingScreenVisibilityChanged)]; } set { this[nameof(OnLoadingScreenVisibilityChanged)] = value; } }
        public bool bIsSkipCharacterMake { get { return this[nameof(bIsSkipCharacterMake)].Flag; } set { this[nameof(bIsSkipCharacterMake)].Flag = value; } }
        public bool bDrawHitCollision { get { return this[nameof(bDrawHitCollision)].Flag; } set { this[nameof(bDrawHitCollision)].Flag = value; } }
        public bool bDisableGrapplingCoolDown { get { return this[nameof(bDisableGrapplingCoolDown)].Flag; } set { this[nameof(bDisableGrapplingCoolDown)].Flag = value; } }
        public bool bDrawGrapplingLine { get { return this[nameof(bDrawGrapplingLine)].Flag; } set { this[nameof(bDrawGrapplingLine)].Flag = value; } }
        public bool bDrawGrapplingHitPoint { get { return this[nameof(bDrawGrapplingHitPoint)].Flag; } set { this[nameof(bDrawGrapplingHitPoint)].Flag = value; } }
        public bool bDrawAmbientSoundLinePlayLocation { get { return this[nameof(bDrawAmbientSoundLinePlayLocation)].Flag; } set { this[nameof(bDrawAmbientSoundLinePlayLocation)].Flag = value; } }
        public bool bDrawAmbientSoundActivateTrigger { get { return this[nameof(bDrawAmbientSoundActivateTrigger)].Flag; } set { this[nameof(bDrawAmbientSoundActivateTrigger)].Flag = value; } }
        public bool bDrawDefenseAttackableRange { get { return this[nameof(bDrawDefenseAttackableRange)].Flag; } set { this[nameof(bDrawDefenseAttackableRange)].Flag = value; } }
        public bool bShowDefenseAttackTarget { get { return this[nameof(bShowDefenseAttackTarget)].Flag; } set { this[nameof(bShowDefenseAttackTarget)].Flag = value; } }
        public float ShowDefenseRange { get { return this[nameof(ShowDefenseRange)].GetValue<float>(); } set { this[nameof(ShowDefenseRange)].SetValue<float>(value); } }
        public float WorldPartitionLoadCheckRange { get { return this[nameof(WorldPartitionLoadCheckRange)].GetValue<float>(); } set { this[nameof(WorldPartitionLoadCheckRange)].SetValue<float>(value); } }
        public bool WorldPartitionLoadActivatedCheck { get { return this[nameof(WorldPartitionLoadActivatedCheck)].Flag; } set { this[nameof(WorldPartitionLoadActivatedCheck)].Flag = value; } }
        public bool bDisableInteractRecicleTarget { get { return this[nameof(bDisableInteractRecicleTarget)].Flag; } set { this[nameof(bDisableInteractRecicleTarget)].Flag = value; } }
        public bool bShowStageDeathPenaltyLocation { get { return this[nameof(bShowStageDeathPenaltyLocation)].Flag; } set { this[nameof(bShowStageDeathPenaltyLocation)].Flag = value; } }
        public bool bForceLocationTeleport { get { return this[nameof(bForceLocationTeleport)].Flag; } set { this[nameof(bForceLocationTeleport)].Flag = value; } }
        public bool bShowInvaderDeubgLog { get { return this[nameof(bShowInvaderDeubgLog)].Flag; } set { this[nameof(bShowInvaderDeubgLog)].Flag = value; } }
    }
    public class PalDebug_SpawnInfoReporter : Actor
    {
        public PalDebug_SpawnInfoReporter(nint addr) : base(addr) { }
        public Array<PalNPCSpawnerBase> CacheSpawner { get { return new Array<PalNPCSpawnerBase>(this[nameof(CacheSpawner)].Address); } }
        public Object GetDebugInfoString(PalNPCSpawnerBase spawner) { return Invoke<Object>(nameof(GetDebugInfoString), spawner); }
    }
    public class PalDefine : BlueprintFunctionLibrary
    {
        public PalDefine(nint addr) : base(addr) { }
        public GameplayTag UILayerTag_Modal() { return Invoke<GameplayTag>(nameof(UILayerTag_Modal)); }
        public GameplayTag UILayerTag_Menu() { return Invoke<GameplayTag>(nameof(UILayerTag_Menu)); }
        public GameplayTag UILayerTag_GameMenu7() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu7)); }
        public GameplayTag UILayerTag_GameMenu6() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu6)); }
        public GameplayTag UILayerTag_GameMenu5() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu5)); }
        public GameplayTag UILayerTag_GameMenu4() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu4)); }
        public GameplayTag UILayerTag_GameMenu3() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu3)); }
        public GameplayTag UILayerTag_GameMenu2() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu2)); }
        public GameplayTag UILayerTag_GameMenu() { return Invoke<GameplayTag>(nameof(UILayerTag_GameMenu)); }
        public GameplayTag UILayerTag_Game() { return Invoke<GameplayTag>(nameof(UILayerTag_Game)); }
        public Object TextId_UICommon_SystemMessageUnlockFastTravel() { return Invoke<Object>(nameof(TextId_UICommon_SystemMessageUnlockFastTravel)); }
        public Object TextId_UICommon_SystemErrorCantMoveNotOwned() { return Invoke<Object>(nameof(TextId_UICommon_SystemErrorCantMoveNotOwned)); }
        public Object TextId_UICommon_LOG_NeedItemToOpenTreasureBox() { return Invoke<Object>(nameof(TextId_UICommon_LOG_NeedItemToOpenTreasureBox)); }
        public Object TextId_UICommon_LOG_ConsumeItem() { return Invoke<Object>(nameof(TextId_UICommon_LOG_ConsumeItem)); }
        public Object TextId_UICommon_InteractIndicator_InputPassword_CannotTry() { return Invoke<Object>(nameof(TextId_UICommon_InteractIndicator_InputPassword_CannotTry)); }
        public Object TextId_UICommon_InteractIndicator_ConsumeAndOpen() { return Invoke<Object>(nameof(TextId_UICommon_InteractIndicator_ConsumeAndOpen)); }
        public Object TextId_UICommon_INFINITE() { return Invoke<Object>(nameof(TextId_UICommon_INFINITE)); }
        public Object TextId_UICommon_DISMANTLING_FAILED_PALBOX() { return Invoke<Object>(nameof(TextId_UICommon_DISMANTLING_FAILED_PALBOX)); }
        public Object TextId_UICommon_DISMANTLING_CONFIRM_PALBOX() { return Invoke<Object>(nameof(TextId_UICommon_DISMANTLING_CONFIRM_PALBOX)); }
        public Object TextId_UICommon_CONFIRM_DUNGEON_EXIT() { return Invoke<Object>(nameof(TextId_UICommon_CONFIRM_DUNGEON_EXIT)); }
        public Object TextId_UICommon_CONFIRM_DUNGEON_ENTER() { return Invoke<Object>(nameof(TextId_UICommon_CONFIRM_DUNGEON_ENTER)); }
        public Object StatusPointName_AddWorkSpeed() { return Invoke<Object>(nameof(StatusPointName_AddWorkSpeed)); }
        public Object StatusPointName_AddPower() { return Invoke<Object>(nameof(StatusPointName_AddPower)); }
        public Object StatusPointName_AddMaxSP() { return Invoke<Object>(nameof(StatusPointName_AddMaxSP)); }
        public Object StatusPointName_AddMaxInventoryWeight() { return Invoke<Object>(nameof(StatusPointName_AddMaxInventoryWeight)); }
        public Object StatusPointName_AddMaxHP() { return Invoke<Object>(nameof(StatusPointName_AddMaxHP)); }
        public Object StatusPointName_AddCaptureLevel() { return Invoke<Object>(nameof(StatusPointName_AddCaptureLevel)); }
        public Object StaticItemID_UnlockLantern() { return Invoke<Object>(nameof(StaticItemID_UnlockLantern)); }
        public Object StaticItemID_UnlockAutoMeal_Tier(int Num) { return Invoke<Object>(nameof(StaticItemID_UnlockAutoMeal_Tier), Num); }
        public Object StaticItemID_Money() { return Invoke<Object>(nameof(StaticItemID_Money)); }
        public Object Socket_Mouth() { return Invoke<Object>(nameof(Socket_Mouth)); }
        public Object Socket_JumpEffect() { return Invoke<Object>(nameof(Socket_JumpEffect)); }
        public Object Socket_EquipWeapon3() { return Invoke<Object>(nameof(Socket_EquipWeapon3)); }
        public Object Socket_EquipWeapon2() { return Invoke<Object>(nameof(Socket_EquipWeapon2)); }
        public Object Socket_EquipWeapon1() { return Invoke<Object>(nameof(Socket_EquipWeapon1)); }
        public Object Socket_BulletMuzzle() { return Invoke<Object>(nameof(Socket_BulletMuzzle)); }
        public Object Socket_BodyCenter() { return Invoke<Object>(nameof(Socket_BodyCenter)); }
        public Object NP_PlayerCenterPosition() { return Invoke<Object>(nameof(NP_PlayerCenterPosition)); }
        public Object MS_HumanHeadName() { return Invoke<Object>(nameof(MS_HumanHeadName)); }
        public Object MS_HumanHairName() { return Invoke<Object>(nameof(MS_HumanHairName)); }
        public Object MS_HumanEyeName() { return Invoke<Object>(nameof(MS_HumanEyeName)); }
        public Object MS_HumanClothName() { return Invoke<Object>(nameof(MS_HumanClothName)); }
        public Object MS_HumanBrowName() { return Invoke<Object>(nameof(MS_HumanBrowName)); }
        public Object MS_HumanBodyName() { return Invoke<Object>(nameof(MS_HumanBodyName)); }
        public Object MP_TorsoNormalMinIntensityName() { return Invoke<Object>(nameof(MP_TorsoNormalMinIntensityName)); }
        public Object MP_TorsoNormalMaxIntensityName() { return Invoke<Object>(nameof(MP_TorsoNormalMaxIntensityName)); }
        public Object MP_PalLitBaseColorName() { return Invoke<Object>(nameof(MP_PalLitBaseColorName)); }
        public Object MP_LegNormalMinIntensityName() { return Invoke<Object>(nameof(MP_LegNormalMinIntensityName)); }
        public Object MP_LegNormalMaxIntensityName() { return Invoke<Object>(nameof(MP_LegNormalMaxIntensityName)); }
        public Object MP_CharacterMakeSubsurfaceColorName() { return Invoke<Object>(nameof(MP_CharacterMakeSubsurfaceColorName)); }
        public Object MP_CharacterMakeBaseColorSaturationName() { return Invoke<Object>(nameof(MP_CharacterMakeBaseColorSaturationName)); }
        public Object MP_CharacterMakeBaseColorHueName() { return Invoke<Object>(nameof(MP_CharacterMakeBaseColorHueName)); }
        public Object MP_CharacterMakeBaseColorBrightnessName() { return Invoke<Object>(nameof(MP_CharacterMakeBaseColorBrightnessName)); }
        public Object MP_ArmNormalMinIntensityName() { return Invoke<Object>(nameof(MP_ArmNormalMinIntensityName)); }
        public Object MP_ArmNormalMaxIntensityName() { return Invoke<Object>(nameof(MP_ArmNormalMaxIntensityName)); }
        public Object FlagName_OverWeightInventory() { return Invoke<Object>(nameof(FlagName_OverWeightInventory)); }
        public Object FlagName_DebugBotGuildName() { return Invoke<Object>(nameof(FlagName_DebugBotGuildName)); }
        public Object FlagName_CameraOffsetInLiftup() { return Invoke<Object>(nameof(FlagName_CameraOffsetInLiftup)); }
        public Object DecreaseSanityRate_WorkHard() { return Invoke<Object>(nameof(DecreaseSanityRate_WorkHard)); }
        public Object DecreaseFullStomachRate_WorkHard() { return Invoke<Object>(nameof(DecreaseFullStomachRate_WorkHard)); }
        public Object DecreaseFullStomachRate_Work() { return Invoke<Object>(nameof(DecreaseFullStomachRate_Work)); }
        public Object BS_TorsoArmMinName() { return Invoke<Object>(nameof(BS_TorsoArmMinName)); }
        public Object BS_TorsoArmMaxName() { return Invoke<Object>(nameof(BS_TorsoArmMaxName)); }
        public Object BS_LegArmMinName() { return Invoke<Object>(nameof(BS_LegArmMinName)); }
        public Object BS_LegArmMaxName() { return Invoke<Object>(nameof(BS_LegArmMaxName)); }
        public Object BS_BodyArmMinName() { return Invoke<Object>(nameof(BS_BodyArmMinName)); }
        public Object BS_BodyArmMaxName() { return Invoke<Object>(nameof(BS_BodyArmMaxName)); }
        public Object ActionNotify_MiningImpactTiming() { return Invoke<Object>(nameof(ActionNotify_MiningImpactTiming)); }
        public Object ActionNotify_MiningEndTiming() { return Invoke<Object>(nameof(ActionNotify_MiningEndTiming)); }
        public Object ActionBBKey_FeedItem() { return Invoke<Object>(nameof(ActionBBKey_FeedItem)); }
    }
    public class PalDismantleObjectChecker : Actor
    {
        public PalDismantleObjectChecker(nint addr) : base(addr) { }
        public PalBuildObject TargetBuildObject { get { return this[nameof(TargetBuildObject)].As<PalBuildObject>(); } set { this["TargetBuildObject"] = value; } }
        public PalBuildObject GetTargetObject() { return Invoke<PalBuildObject>(nameof(GetTargetObject)); }
    }
    public class PalStageAreaVolume : Actor
    {
        public PalStageAreaVolume(nint addr) : base(addr) { }
        public DataLayerAsset RelatedDataLayerAsset { get { return this[nameof(RelatedDataLayerAsset)].As<DataLayerAsset>(); } set { this["RelatedDataLayerAsset"] = value; } }
        public void SetRelatedDataLayerAsset(DataLayerAsset DataLayerAsset) { Invoke(nameof(SetRelatedDataLayerAsset), DataLayerAsset); }
        public DataLayerAsset GetRelatedDataLayerAsset() { return Invoke<DataLayerAsset>(nameof(GetRelatedDataLayerAsset)); }
        public Box GetBoundingBox() { return Invoke<Box>(nameof(GetBoundingBox)); }
    }
    public class PalDungeonAreaVolume : PalStageAreaVolume
    {
        public PalDungeonAreaVolume(nint addr) : base(addr) { }
        public void OnOverlapActor(Actor Other) { Invoke(nameof(OnOverlapActor), Other); }
    }
    public class PalDungeonLevelDataAsset : DataAsset
    {
        public PalDungeonLevelDataAsset(nint addr) : base(addr) { }
        public Box LevelBounds { get { return this[nameof(LevelBounds)].As<Box>(); } set { this["LevelBounds"] = value; } }
    }
    public class PalDungeonSpawnerDataAsset : DataAsset
    {
        public PalDungeonSpawnerDataAsset(nint addr) : base(addr) { }
        public Array<Object> SpawnerPatternNames { get { return new Array<Object>(this[nameof(SpawnerPatternNames)].Address); } }
    }
    public class PalDungeonDefines : Object
    {
        public PalDungeonDefines(nint addr) : base(addr) { }
    }
    public class PalDungeonInfoParameterUtility : Object
    {
        public PalDungeonInfoParameterUtility(nint addr) : base(addr) { }
        public float CalcDisappearRemainSeconds(Object WorldContextObject, PalDungeonInfoParameter InParameter) { return Invoke<float>(nameof(CalcDisappearRemainSeconds), WorldContextObject, InParameter); }
    }
    public class PalDungeonEnemySpawnerPoint : Actor
    {
        public PalDungeonEnemySpawnerPoint(nint addr) : base(addr) { }
        public EPalDungeonEnemySpawnerRankType RankType { get { return (EPalDungeonEnemySpawnerRankType)this[nameof(RankType)].GetValue<int>(); } set { this[nameof(RankType)].SetValue<int>((int)value); } }
        public void ReturnIndividualHandleDelegate__DelegateSignature(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(ReturnIndividualHandleDelegate__DelegateSignature), IndividualHandle); }
        public void OnEnterCharacterToGroup(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(OnEnterCharacterToGroup), IndividualHandle); }
        public void OnCreatedGroup() { Invoke(nameof(OnCreatedGroup)); }
        public void OnChangeBossState_ServerInternal(PalDungeonInstanceModel InstanceModel) { Invoke(nameof(OnChangeBossState_ServerInternal), InstanceModel); }
        public void CheckLevelStreamingCompleted() { Invoke(nameof(CheckLevelStreamingCompleted)); }
    }
    public class PalDungeonEntrance : Actor
    {
        public PalDungeonEntrance(nint addr) : base(addr) { }
        public PalStageModelDungeon StageModel { get { return this[nameof(StageModel)].As<PalStageModelDungeon>(); } set { this["StageModel"] = value; } }
        public bool TryGetDungeonInstanceModel(PalDungeonInstanceModel OutModel) { return Invoke<bool>(nameof(TryGetDungeonInstanceModel), OutModel); }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnResponseDialogEnterDungeon(bool bResponse) { Invoke(nameof(OnResponseDialogEnterDungeon), bResponse); }
        public Transform GetWarpPoint() { return Invoke<Transform>(nameof(GetWarpPoint)); }
        public PalStageModelDungeon GetStageModel() { return Invoke<PalStageModelDungeon>(nameof(GetStageModel)); }
        public PalStageInstanceId GetStageInstanceId() { return Invoke<PalStageInstanceId>(nameof(GetStageInstanceId)); }
        public Guid GetDungeonInstanceId() { return Invoke<Guid>(nameof(GetDungeonInstanceId)); }
        public Transform GetDeadItemDropPoint() { return Invoke<Transform>(nameof(GetDeadItemDropPoint)); }
    }
    public class PalDungeonExit : Actor
    {
        public PalDungeonExit(nint addr) : base(addr) { }
        public bool bStartPoint { get { return this[nameof(bStartPoint)].Flag; } set { this[nameof(bStartPoint)].Flag = value; } }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnResponseDialogExitDungeon(bool bResponse) { Invoke(nameof(OnResponseDialogExitDungeon), bResponse); }
        public bool IsStartPoint() { return Invoke<bool>(nameof(IsStartPoint)); }
        public Transform GetWarpPoint() { return Invoke<Transform>(nameof(GetWarpPoint)); }
    }
    public class PalDungeonFixedEntrance : PalDungeonEntrance
    {
        public PalDungeonFixedEntrance(nint addr) : base(addr) { }
        public Guid LevelObjectInstanceId { get { return this[nameof(LevelObjectInstanceId)].As<Guid>(); } set { this["LevelObjectInstanceId"] = value; } }
        public DataTableRowHandle DungeonNameRowHandle { get { return this[nameof(DungeonNameRowHandle)].As<DataTableRowHandle>(); } set { this["DungeonNameRowHandle"] = value; } }
        public DataLayerAsset DataLayerAsset { get { return this[nameof(DataLayerAsset)].As<DataLayerAsset>(); } set { this["DataLayerAsset"] = value; } }
        public Object EnemySpawnerSoftClass { get { return this[nameof(EnemySpawnerSoftClass)]; } set { this[nameof(EnemySpawnerSoftClass)] = value; } }
        public float RespawnCoolTimeMinutesAfterBossDefeated { get { return this[nameof(RespawnCoolTimeMinutesAfterBossDefeated)].GetValue<float>(); } set { this[nameof(RespawnCoolTimeMinutesAfterBossDefeated)].SetValue<float>(value); } }
        public Object EnemySpawnerClass { get { return this[nameof(EnemySpawnerClass)]; } set { this[nameof(EnemySpawnerClass)] = value; } }
        public Guid GetLevelObjectInstanceId() { return Invoke<Guid>(nameof(GetLevelObjectInstanceId)); }
        public Object GetEnemySpawnerSoftClass() { return Invoke<Object>(nameof(GetEnemySpawnerSoftClass)); }
        public Object GetEnemySpawner() { return Invoke<Object>(nameof(GetEnemySpawner)); }
        public DataLayerAsset GetDataLayerAsset() { return Invoke<DataLayerAsset>(nameof(GetDataLayerAsset)); }
    }
    public class PalDungeonGimmickUnlockableDoor : Actor
    {
        public PalDungeonGimmickUnlockableDoor(nint addr) : base(addr) { }
    }
    public class PalDungeonGimmickUnlockableDoor_DefeatBoss : PalDungeonGimmickUnlockableDoor
    {
        public PalDungeonGimmickUnlockableDoor_DefeatBoss(nint addr) : base(addr) { }
        public EPalDungeonInstanceBossState BossState { get { return (EPalDungeonInstanceBossState)this[nameof(BossState)].GetValue<int>(); } set { this[nameof(BossState)].SetValue<int>((int)value); } }
        public void OnRep_BossState() { Invoke(nameof(OnRep_BossState)); }
        public void OnChangeBossStateImpl(EPalDungeonInstanceBossState ToState) { Invoke(nameof(OnChangeBossStateImpl), ToState); }
        public void OnChangeBossState_ServerInternal(PalDungeonInstanceModel InstanceModel) { Invoke(nameof(OnChangeBossState_ServerInternal), InstanceModel); }
    }
    public class PalDungeonInstanceModel : Object
    {
        public PalDungeonInstanceModel(nint addr) : base(addr) { }
        public Object OnChangeInstanceStatusDelegate { get { return this[nameof(OnChangeInstanceStatusDelegate)]; } set { this[nameof(OnChangeInstanceStatusDelegate)] = value; } }
        public Guid DungeonInstanceId { get { return this[nameof(DungeonInstanceId)].As<Guid>(); } set { this["DungeonInstanceId"] = value; } }
        public Guid MarkerPointId { get { return this[nameof(MarkerPointId)].As<Guid>(); } set { this["MarkerPointId"] = value; } }
        public Object DungeonSpawnAreaId { get { return this[nameof(DungeonSpawnAreaId)]; } set { this[nameof(DungeonSpawnAreaId)] = value; } }
        public Object DungeonLevelName { get { return this[nameof(DungeonLevelName)]; } set { this[nameof(DungeonLevelName)] = value; } }
        public Object OverrideDungeonNameTextId { get { return this[nameof(OverrideDungeonNameTextId)]; } set { this[nameof(OverrideDungeonNameTextId)] = value; } }
        public Vector_NetQuantize RepFieldWarpPointLocation { get { return this[nameof(RepFieldWarpPointLocation)].As<Vector_NetQuantize>(); } set { this["RepFieldWarpPointLocation"] = value; } }
        public Transform FieldWarpPointTransform { get { return this[nameof(FieldWarpPointTransform)].As<Transform>(); } set { this["FieldWarpPointTransform"] = value; } }
        public Transform StartPointTransform { get { return this[nameof(StartPointTransform)].As<Transform>(); } set { this["StartPointTransform"] = value; } }
        public Transform DeadItemDropTransform { get { return this[nameof(DeadItemDropTransform)].As<Transform>(); } set { this["DeadItemDropTransform"] = value; } }
        public EPalDungeonInstanceBossState BossState { get { return (EPalDungeonInstanceBossState)this[nameof(BossState)].GetValue<int>(); } set { this[nameof(BossState)].SetValue<int>((int)value); } }
        public Object EnemySpawner_Boss_RowName { get { return this[nameof(EnemySpawner_Boss_RowName)]; } set { this[nameof(EnemySpawner_Boss_RowName)] = value; } }
        public Object EnemySpawnerClass_Boss { get { return this[nameof(EnemySpawnerClass_Boss)]; } set { this[nameof(EnemySpawnerClass_Boss)] = value; } }
        public GameDateTime DisappearTimeAt { get { return this[nameof(DisappearTimeAt)].As<GameDateTime>(); } set { this["DisappearTimeAt"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public PalStageInstanceId StageInstanceId { get { return this[nameof(StageInstanceId)].As<PalStageInstanceId>(); } set { this["StageInstanceId"] = value; } }
        public Array<PalMapObjectSaveData> MapObjectSaveDataArray { get { return new Array<PalMapObjectSaveData>(this[nameof(MapObjectSaveDataArray)].Address); } }
        public int ReservedDataLayerAssetIndex { get { return this[nameof(ReservedDataLayerAssetIndex)].GetValue<int>(); } set { this[nameof(ReservedDataLayerAssetIndex)].SetValue<int>(value); } }
        public DataLayerAsset ReservedDataLayerAsset { get { return this[nameof(ReservedDataLayerAsset)].As<DataLayerAsset>(); } set { this["ReservedDataLayerAsset"] = value; } }
        public void ReturnSelfDelegate__DelegateSignature(PalDungeonInstanceModel Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public void OnUpdateBossState() { Invoke(nameof(OnUpdateBossState)); }
        public void OnSpawnedCharacter_ServerInternal(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(OnSpawnedCharacter_ServerInternal), IndividualHandle); }
        public void OnRep_DisappearTimeAt() { Invoke(nameof(OnRep_DisappearTimeAt)); }
        public void OnRep_BossState() { Invoke(nameof(OnRep_BossState)); }
        public void OnDeadBoss_ServerInternal(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadBoss_ServerInternal), DeadInfo); }
        public void OnChangeInstanceStatus() { Invoke(nameof(OnChangeInstanceStatus)); }
        public void OnCapturedBoss_ServerInternal(PalCharacter Character, PalCharacter Attacker) { Invoke(nameof(OnCapturedBoss_ServerInternal), Character, Attacker); }
        public int GetLevel() { return Invoke<int>(nameof(GetLevel)); }
        public Object GetDungeonSpawnAreaId() { return Invoke<Object>(nameof(GetDungeonSpawnAreaId)); }
        public Object GetDungeonNameText() { return Invoke<Object>(nameof(GetDungeonNameText)); }
        public GameDateTime GetDisappearTimeAt() { return Invoke<GameDateTime>(nameof(GetDisappearTimeAt)); }
        public EPalDungeonInstanceBossState GetBossState() { return Invoke<EPalDungeonInstanceBossState>(nameof(GetBossState)); }
        public float CalcRemainSecondsBy(Object WorldContextObject, GameDateTime TimeAt) { return Invoke<float>(nameof(CalcRemainSecondsBy), WorldContextObject, TimeAt); }
        public float CalcDisappearRemainSeconds(Object WorldContextObject, GameDateTime InDisappearTimeAt) { return Invoke<float>(nameof(CalcDisappearRemainSeconds), WorldContextObject, InDisappearTimeAt); }
    }
    public class PalDungeonInstanceModelFixedDungeon : PalDungeonInstanceModel
    {
        public PalDungeonInstanceModelFixedDungeon(nint addr) : base(addr) { }
        public GameDateTime RespawnBossTimeAt { get { return this[nameof(RespawnBossTimeAt)].As<GameDateTime>(); } set { this["RespawnBossTimeAt"] = value; } }
        public GameDateTime GetRespawnBossTimeAt() { return Invoke<GameDateTime>(nameof(GetRespawnBossTimeAt)); }
    }
    public class PalLevelObjectActor : Actor
    {
        public PalLevelObjectActor(nint addr) : base(addr) { }
        public Guid LevelObjectInstanceId { get { return this[nameof(LevelObjectInstanceId)].As<Guid>(); } set { this["LevelObjectInstanceId"] = value; } }
        public Guid GetLevelObjectInstanceId() { return Invoke<Guid>(nameof(GetLevelObjectInstanceId)); }
    }
    public class PalDungeonItemSpawnerPoint : PalLevelObjectActor
    {
        public PalDungeonItemSpawnerPoint(nint addr) : base(addr) { }
        public EPalDungeonItemSpawnerType ItemSpawnerType { get { return (EPalDungeonItemSpawnerType)this[nameof(ItemSpawnerType)].GetValue<int>(); } set { this[nameof(ItemSpawnerType)].SetValue<int>((int)value); } }
        public Object TreasureBoxSpawnerSoftClass { get { return this[nameof(TreasureBoxSpawnerSoftClass)]; } set { this[nameof(TreasureBoxSpawnerSoftClass)] = value; } }
    }
    public class PalDungeonPointMarker : PalLevelObjectActor
    {
        public PalDungeonPointMarker(nint addr) : base(addr) { }
        public Array<PalDataTableRowName_DungeonSpawnAreaData> SpawnAreaIds { get { return new Array<PalDataTableRowName_DungeonSpawnAreaData>(this[nameof(SpawnAreaIds)].Address); } }
        public bool bEditSpawnParameter { get { return this[nameof(bEditSpawnParameter)].Flag; } set { this[nameof(bEditSpawnParameter)].Flag = value; } }
        public PalDungeonMarkerPointSpawnParameter EditSpawnParameter { get { return this[nameof(EditSpawnParameter)].As<PalDungeonMarkerPointSpawnParameter>(); } set { this["EditSpawnParameter"] = value; } }
        public Object DungeonEntranceClass { get { return this[nameof(DungeonEntranceClass)]; } set { this[nameof(DungeonEntranceClass)] = value; } }
    }
    public class PalDungeonStartPointMarker : Actor
    {
        public PalDungeonStartPointMarker(nint addr) : base(addr) { }
    }
    public class PalDungeonWorldSubsystem : PalWorldSubsystem
    {
        public PalDungeonWorldSubsystem(nint addr) : base(addr) { }
        public Object MarkerPointDataMap { get { return this[nameof(MarkerPointDataMap)]; } set { this[nameof(MarkerPointDataMap)] = value; } }
        public Object InstanceModelMap { get { return this[nameof(InstanceModelMap)]; } set { this[nameof(InstanceModelMap)] = value; } }
        public Vector DungeonMargin { get { return this[nameof(DungeonMargin)].As<Vector>(); } set { this["DungeonMargin"] = value; } }
        public float TickInterval { get { return this[nameof(TickInterval)].GetValue<float>(); } set { this[nameof(TickInterval)].SetValue<float>(value); } }
        public Object DataLayerAssetMap { get { return this[nameof(DataLayerAssetMap)]; } set { this[nameof(DataLayerAssetMap)] = value; } }
        public Array<PalDungeonPointMarker> PointMarkersWaitSystemInitializeInServer { get { return new Array<PalDungeonPointMarker>(this[nameof(PointMarkersWaitSystemInitializeInServer)].Address); } }
        public bool bInitializedWithSaveData { get { return this[nameof(bInitializedWithSaveData)].Flag; } set { this[nameof(bInitializedWithSaveData)].Flag = value; } }
        public bool TryGetDungeonInfo(PalStageInstanceId StageInstanceId, PalDungeonInfoParameter OutInfo) { return Invoke<bool>(nameof(TryGetDungeonInfo), StageInstanceId, OutInfo); }
        public Guid Debug_GetDungeonInstanceIdByIndex(int Index) { return Invoke<Guid>(nameof(Debug_GetDungeonInstanceIdByIndex), Index); }
    }
    public class PalDynamicItemDataBase : Object
    {
        public PalDynamicItemDataBase(nint addr) : base(addr) { }
        public PalDynamicItemId ID { get { return this[nameof(ID)].As<PalDynamicItemId>(); } set { this["ID"] = value; } }
        public Object StaticId { get { return this[nameof(StaticId)]; } set { this[nameof(StaticId)] = value; } }
        public Object GetStaticId() { return Invoke<Object>(nameof(GetStaticId)); }
        public PalDynamicItemId GetId() { return Invoke<PalDynamicItemId>(nameof(GetId)); }
    }
    public class PalDynamicArmorItemDataBase : PalDynamicItemDataBase
    {
        public PalDynamicArmorItemDataBase(nint addr) : base(addr) { }
        public float Durability { get { return this[nameof(Durability)].GetValue<float>(); } set { this[nameof(Durability)].SetValue<float>(value); } }
        public float MaxDurability { get { return this[nameof(MaxDurability)].GetValue<float>(); } set { this[nameof(MaxDurability)].SetValue<float>(value); } }
        public float OldDurability { get { return this[nameof(OldDurability)].GetValue<float>(); } set { this[nameof(OldDurability)].SetValue<float>(value); } }
        public Array<Object> PassiveSkillList { get { return new Array<Object>(this[nameof(PassiveSkillList)].Address); } }
        public void SetDurability(float NewDurability) { Invoke(nameof(SetDurability), NewDurability); }
        public void OnRep_Durability() { Invoke(nameof(OnRep_Durability)); }
        public Array<Object> GetPassiveSkillList() { return Invoke<Array<Object>>(nameof(GetPassiveSkillList)); }
        public float GetMaxDurability() { return Invoke<float>(nameof(GetMaxDurability)); }
        public float GetDurability() { return Invoke<float>(nameof(GetDurability)); }
        public void DeleteAllPassive() { Invoke(nameof(DeleteAllPassive)); }
        public bool ChangePassiveSkill(int passiveIndex, Object SkillName) { return Invoke<bool>(nameof(ChangePassiveSkill), passiveIndex, SkillName); }
        public bool AddPassiveSkill(Object SkillName) { return Invoke<bool>(nameof(AddPassiveSkill), SkillName); }
    }
    public class PalDynamicItemDataManager : Object
    {
        public PalDynamicItemDataManager(nint addr) : base(addr) { }
        public Object OnCreateItemInServerDelegate { get { return this[nameof(OnCreateItemInServerDelegate)]; } set { this[nameof(OnCreateItemInServerDelegate)] = value; } }
        public Object ItemDynamicDataMap { get { return this[nameof(ItemDynamicDataMap)]; } set { this[nameof(ItemDynamicDataMap)] = value; } }
        public float DisposeReservedDynamicItemRemainingTime { get { return this[nameof(DisposeReservedDynamicItemRemainingTime)].GetValue<float>(); } set { this[nameof(DisposeReservedDynamicItemRemainingTime)].SetValue<float>(value); } }
        public int DynamicItemDisposeReserveCount { get { return this[nameof(DynamicItemDisposeReserveCount)].GetValue<int>(); } set { this[nameof(DynamicItemDisposeReserveCount)].SetValue<int>(value); } }
        public Object DisposeDynamicItemIdRequestWaitInfoMap_ServerInternal { get { return this[nameof(DisposeDynamicItemIdRequestWaitInfoMap_ServerInternal)]; } set { this[nameof(DisposeDynamicItemIdRequestWaitInfoMap_ServerInternal)] = value; } }
    }
    public class PalDynamicItemWorldSubsystem : PalWorldSubsystem
    {
        public PalDynamicItemWorldSubsystem(nint addr) : base(addr) { }
        public Object DynamicItemDataMap_InServer { get { return this[nameof(DynamicItemDataMap_InServer)]; } set { this[nameof(DynamicItemDataMap_InServer)] = value; } }
        public Object WeakDynamicItemDataMap_InClient { get { return this[nameof(WeakDynamicItemDataMap_InClient)]; } set { this[nameof(WeakDynamicItemDataMap_InClient)] = value; } }
        public Array<PalDynamicItemDataBase> DynamicItemDataCache_InClient { get { return new Array<PalDynamicItemDataBase>(this[nameof(DynamicItemDataCache_InClient)].Address); } }
    }
    public class PalDynamicObjectBase : Actor
    {
        public PalDynamicObjectBase(nint addr) : base(addr) { }
    }
    public class PalDynamicPalEggItemDataBase : PalDynamicItemDataBase
    {
        public PalDynamicPalEggItemDataBase(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public PalIndividualCharacterSaveParameter SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameter"] = value; } }
    }
    public class PalDynamicWeaponItemDataBase : PalDynamicItemDataBase
    {
        public PalDynamicWeaponItemDataBase(nint addr) : base(addr) { }
        public float Durability { get { return this[nameof(Durability)].GetValue<float>(); } set { this[nameof(Durability)].SetValue<float>(value); } }
        public float MaxDurability { get { return this[nameof(MaxDurability)].GetValue<float>(); } set { this[nameof(MaxDurability)].SetValue<float>(value); } }
        public float OldDurability { get { return this[nameof(OldDurability)].GetValue<float>(); } set { this[nameof(OldDurability)].SetValue<float>(value); } }
        public int RemainingBullets { get { return this[nameof(RemainingBullets)].GetValue<int>(); } set { this[nameof(RemainingBullets)].SetValue<int>(value); } }
        public Array<Object> PassiveSkillList { get { return new Array<Object>(this[nameof(PassiveSkillList)].Address); } }
        public int UseBullets(int useNum) { return Invoke<int>(nameof(UseBullets), useNum); }
        public bool UseBullet() { return Invoke<bool>(nameof(UseBullet)); }
        public void SetDurability(float NewDurability) { Invoke(nameof(SetDurability), NewDurability); }
        public void SetBulletsNum(int bulletsNum) { Invoke(nameof(SetBulletsNum), bulletsNum); }
        public void OnRep_Durability() { Invoke(nameof(OnRep_Durability)); }
        public bool IsEmptyMagazine() { return Invoke<bool>(nameof(IsEmptyMagazine)); }
        public int GetRemainingBulletsNum() { return Invoke<int>(nameof(GetRemainingBulletsNum)); }
        public Array<Object> GetPassiveSkillList() { return Invoke<Array<Object>>(nameof(GetPassiveSkillList)); }
        public float GetMaxDurability() { return Invoke<float>(nameof(GetMaxDurability)); }
        public float GetDurability() { return Invoke<float>(nameof(GetDurability)); }
        public void DeleteAllPassive() { Invoke(nameof(DeleteAllPassive)); }
        public bool ChangePassiveSkill(int passiveIndex, Object SkillName) { return Invoke<bool>(nameof(ChangePassiveSkill), passiveIndex, SkillName); }
        public bool AddPassiveSkill(Object SkillName) { return Invoke<bool>(nameof(AddPassiveSkill), SkillName); }
    }
    public class PalEditorMapObjectCheckPlacer : Actor
    {
        public PalEditorMapObjectCheckPlacer(nint addr) : base(addr) { }
        public ArrowComponent LeftEdgeArrow { get { return this[nameof(LeftEdgeArrow)].As<ArrowComponent>(); } set { this["LeftEdgeArrow"] = value; } }
        public ArrowComponent RightEdgeArrow { get { return this[nameof(RightEdgeArrow)].As<ArrowComponent>(); } set { this["RightEdgeArrow"] = value; } }
        public ArrowComponent StackRowArrow { get { return this[nameof(StackRowArrow)].As<ArrowComponent>(); } set { this["StackRowArrow"] = value; } }
        public Vector2D PlacementMargin { get { return this[nameof(PlacementMargin)].As<Vector2D>(); } set { this["PlacementMargin"] = value; } }
        public Array<PalDataTableRowName_MapObjectData> IgnoreRowNames { get { return new Array<PalDataTableRowName_MapObjectData>(this[nameof(IgnoreRowNames)].Address); } }
        public void PlaceMapObjects() { Invoke(nameof(PlaceMapObjects)); }
    }
    public class PalEditorSetting : Object
    {
        public PalEditorSetting(nint addr) : base(addr) { }
        public SoftObjectPath ItemDataTableAssetPath { get { return this[nameof(ItemDataTableAssetPath)].As<SoftObjectPath>(); } set { this["ItemDataTableAssetPath"] = value; } }
        public SoftObjectPath PalMonsterDataTableAssetPath { get { return this[nameof(PalMonsterDataTableAssetPath)].As<SoftObjectPath>(); } set { this["PalMonsterDataTableAssetPath"] = value; } }
        public SoftObjectPath PalHumanDataTableAssetPath { get { return this[nameof(PalHumanDataTableAssetPath)].As<SoftObjectPath>(); } set { this["PalHumanDataTableAssetPath"] = value; } }
        public SoftObjectPath MapObjectDataTableAssetPath { get { return this[nameof(MapObjectDataTableAssetPath)].As<SoftObjectPath>(); } set { this["MapObjectDataTableAssetPath"] = value; } }
        public SoftObjectPath FarmCropDataTableAssetPath { get { return this[nameof(FarmCropDataTableAssetPath)].As<SoftObjectPath>(); } set { this["FarmCropDataTableAssetPath"] = value; } }
        public SoftObjectPath CrimeMasterDataTableAssetPath { get { return this[nameof(CrimeMasterDataTableAssetPath)].As<SoftObjectPath>(); } set { this["CrimeMasterDataTableAssetPath"] = value; } }
        public SoftObjectPath PassiveSkillDataTableAssetPath { get { return this[nameof(PassiveSkillDataTableAssetPath)].As<SoftObjectPath>(); } set { this["PassiveSkillDataTableAssetPath"] = value; } }
        public SoftObjectPath ItemProductDataTableAssetPath { get { return this[nameof(ItemProductDataTableAssetPath)].As<SoftObjectPath>(); } set { this["ItemProductDataTableAssetPath"] = value; } }
        public SoftObjectPath NPCUniqueDataTableAssetPath { get { return this[nameof(NPCUniqueDataTableAssetPath)].As<SoftObjectPath>(); } set { this["NPCUniqueDataTableAssetPath"] = value; } }
        public SoftObjectPath RecipeTechnologyDataTableAssetPath { get { return this[nameof(RecipeTechnologyDataTableAssetPath)].As<SoftObjectPath>(); } set { this["RecipeTechnologyDataTableAssetPath"] = value; } }
        public SoftObjectPath BaseCampWorkerEventDataTableAssetPath { get { return this[nameof(BaseCampWorkerEventDataTableAssetPath)].As<SoftObjectPath>(); } set { this["BaseCampWorkerEventDataTableAssetPath"] = value; } }
        public SoftObjectPath UIInputActionTableAssetPath { get { return this[nameof(UIInputActionTableAssetPath)].As<SoftObjectPath>(); } set { this["UIInputActionTableAssetPath"] = value; } }
        public SoftObjectPath SoundIDTableAssetPath { get { return this[nameof(SoundIDTableAssetPath)].As<SoftObjectPath>(); } set { this["SoundIDTableAssetPath"] = value; } }
        public SoftObjectPath ItemShopCreateDataTableAssetPath { get { return this[nameof(ItemShopCreateDataTableAssetPath)].As<SoftObjectPath>(); } set { this["ItemShopCreateDataTableAssetPath"] = value; } }
        public SoftObjectPath ItemShopLotteryDataTableAssetPath { get { return this[nameof(ItemShopLotteryDataTableAssetPath)].As<SoftObjectPath>(); } set { this["ItemShopLotteryDataTableAssetPath"] = value; } }
        public SoftObjectPath PalShopCreateDataTableAssetPath { get { return this[nameof(PalShopCreateDataTableAssetPath)].As<SoftObjectPath>(); } set { this["PalShopCreateDataTableAssetPath"] = value; } }
        public SoftObjectPath DungeonSpawnAreaDataTableAssetPath { get { return this[nameof(DungeonSpawnAreaDataTableAssetPath)].As<SoftObjectPath>(); } set { this["DungeonSpawnAreaDataTableAssetPath"] = value; } }
        public SoftObjectPath FieldLotteryNameDataTableAssetPath { get { return this[nameof(FieldLotteryNameDataTableAssetPath)].As<SoftObjectPath>(); } set { this["FieldLotteryNameDataTableAssetPath"] = value; } }
        public SoftObjectPath NoteDataTableAssetPath { get { return this[nameof(NoteDataTableAssetPath)].As<SoftObjectPath>(); } set { this["NoteDataTableAssetPath"] = value; } }
        public SoftObjectPath GameProgressPresetTableAssetPath { get { return this[nameof(GameProgressPresetTableAssetPath)].As<SoftObjectPath>(); } set { this["GameProgressPresetTableAssetPath"] = value; } }
    }
    public class PalEnemySpawner : Actor
    {
        public PalEnemySpawner(nint addr) : base(addr) { }
        public EPalEnemySpawnActorType EnemyActorType { get { return (EPalEnemySpawnActorType)this[nameof(EnemyActorType)].GetValue<int>(); } set { this[nameof(EnemyActorType)].SetValue<int>((int)value); } }
        public EPalEnemySpawnDefaultAction DefaultAction { get { return (EPalEnemySpawnDefaultAction)this[nameof(DefaultAction)].GetValue<int>(); } set { this[nameof(DefaultAction)].SetValue<int>((int)value); } }
    }
    public class PalEnemyVirtualCommander : Actor
    {
        public PalEnemyVirtualCommander(nint addr) : base(addr) { }
    }
    public class PalEquipWeaponShooterComponent : ActorComponent
    {
        public PalEquipWeaponShooterComponent(nint addr) : base(addr) { }
        public Object SpawnedWeaponInfoMap { get { return this[nameof(SpawnedWeaponInfoMap)]; } set { this[nameof(SpawnedWeaponInfoMap)] = value; } }
        public void SetWeapon_ForDebug_DirectBP(EPalMonsterEquipWeaponSocketType SocketType, Object WeaponActorClass) { Invoke(nameof(SetWeapon_ForDebug_DirectBP), SocketType, WeaponActorClass); }
        public void SetWeapon_ForDebug(EPalMonsterEquipWeaponSocketType SocketType, Object ItemName) { Invoke(nameof(SetWeapon_ForDebug), SocketType, ItemName); }
        public void PullTrigger() { Invoke(nameof(PullTrigger)); }
    }
    public class PalEventNotifySystem : PalWorldSubsystem
    {
        public PalEventNotifySystem(nint addr) : base(addr) { }
        public Array<Object> EventNotifyClassArray { get { return new Array<Object>(this[nameof(EventNotifyClassArray)].Address); } }
        public Object EventNotifyMap { get { return this[nameof(EventNotifyMap)]; } set { this[nameof(EventNotifyMap)] = value; } }
        public PalEventNotifyBase GetEventNotify(Object Class) { return Invoke<PalEventNotifyBase>(nameof(GetEventNotify), Class); }
    }
    public class PalEventNotifyBase : Object
    {
        public PalEventNotifyBase(nint addr) : base(addr) { }
    }
    public class PalEventNotifySystem_Concrete : BlueprintFunctionLibrary
    {
        public PalEventNotifySystem_Concrete(nint addr) : base(addr) { }
    }
    public class PalEventNotify_Area : PalEventNotifyBase
    {
        public PalEventNotify_Area(nint addr) : base(addr) { }
        public Object OnNotifyEventBeginInvasionInServer { get { return this[nameof(OnNotifyEventBeginInvasionInServer)]; } set { this[nameof(OnNotifyEventBeginInvasionInServer)] = value; } }
        public Object OnNotifyEventEndInvasionInServer { get { return this[nameof(OnNotifyEventEndInvasionInServer)]; } set { this[nameof(OnNotifyEventEndInvasionInServer)] = value; } }
        public void OnRegiterdArea_ServerInternal(PalTriggerAreaBase TriggerBase) { Invoke(nameof(OnRegiterdArea_ServerInternal), TriggerBase); }
        public void OnEndAreaInvasion_ServerInternal(Actor HitActor, Guid AreaInstanceId) { Invoke(nameof(OnEndAreaInvasion_ServerInternal), HitActor, AreaInstanceId); }
        public void OnBeginAreaInvasion_ServerInternal(Actor HitActor, Guid AreaInstanceId) { Invoke(nameof(OnBeginAreaInvasion_ServerInternal), HitActor, AreaInstanceId); }
        public PalEventNotify_Area GetEventNotify_Area(Object WorldContextObject) { return Invoke<PalEventNotify_Area>(nameof(GetEventNotify_Area), WorldContextObject); }
    }
    public class PalEventNotify_Character : PalEventNotifyBase
    {
        public PalEventNotify_Character(nint addr) : base(addr) { }
        public Object OnNotifyEventDamagedInServer { get { return this[nameof(OnNotifyEventDamagedInServer)]; } set { this[nameof(OnNotifyEventDamagedInServer)] = value; } }
        public Object OnNotifyEventDeadInServer { get { return this[nameof(OnNotifyEventDeadInServer)]; } set { this[nameof(OnNotifyEventDeadInServer)] = value; } }
        public void OnCharacterSpawned_ServerInternal(PalIndividualCharacterHandle CharacterHandle) { Invoke(nameof(OnCharacterSpawned_ServerInternal), CharacterHandle); }
        public void OnCharacterDead_ServerInternal(PalDeadInfo DeadInfo) { Invoke(nameof(OnCharacterDead_ServerInternal), DeadInfo); }
        public void OnCharacterDamaged_ServerInternal(PalDamageResult DamageResult) { Invoke(nameof(OnCharacterDamaged_ServerInternal), DamageResult); }
        public PalEventNotify_Character GetEventNotify_Character(Object WorldContextObject) { return Invoke<PalEventNotify_Character>(nameof(GetEventNotify_Character), WorldContextObject); }
    }
    public class PalEventNotify_ItemContainer : PalEventNotifyBase
    {
        public PalEventNotify_ItemContainer(nint addr) : base(addr) { }
        public Object OnNotifyEventMoveInServer { get { return this[nameof(OnNotifyEventMoveInServer)]; } set { this[nameof(OnNotifyEventMoveInServer)] = value; } }
        public void OnItemOperationMove_ServerInternal(Array<PalItemOperationInfo_Move> OperationInfoSet) { Invoke(nameof(OnItemOperationMove_ServerInternal), OperationInfoSet); }
        public PalEventNotify_ItemContainer GetEventNotify_Item(Object WorldContextObject) { return Invoke<PalEventNotify_ItemContainer>(nameof(GetEventNotify_Item), WorldContextObject); }
    }
    public class PalExpDatabase : Object
    {
        public PalExpDatabase(nint addr) : base(addr) { }
        public DataTable ExpDataTable { get { return this[nameof(ExpDataTable)].As<DataTable>(); } set { this["ExpDataTable"] = value; } }
        public DataTable PaldexBonusExpDataTable { get { return this[nameof(PaldexBonusExpDataTable)].As<DataTable>(); } set { this["PaldexBonusExpDataTable"] = value; } }
        public int GetTotalExp(int Level, bool IsPlayer) { return Invoke<int>(nameof(GetTotalExp), Level, IsPlayer); }
        public int GetNextExp(int Level, bool IsPlayer) { return Invoke<int>(nameof(GetNextExp), Level, IsPlayer); }
        public int GetDropExp(int Level, Object RowName) { return Invoke<int>(nameof(GetDropExp), Level, RowName); }
        public void DistributionExpValue_forPlayerParty_Server(int ExpValue, Array<PalPlayerCharacter> GiftPlayerList, bool isCallDelegate) { Invoke(nameof(DistributionExpValue_forPlayerParty_Server), ExpValue, GiftPlayerList, isCallDelegate); }
        public int CalcPaldexBonusExp(Object CharacterID, int CaptureCount, PalPlayerState captureOwnerState) { return Invoke<int>(nameof(CalcPaldexBonusExp), CharacterID, CaptureCount, captureOwnerState); }
        public int CalcLevelFromTotalExp(int TotalEXP, bool IsPlayer) { return Invoke<int>(nameof(CalcLevelFromTotalExp), TotalEXP, IsPlayer); }
        public void AddExpValue_forPlayerParty_Server(int ExpValue, Array<PalPlayerCharacter> GiftPlayerList, bool isCallDelegate) { Invoke(nameof(AddExpValue_forPlayerParty_Server), ExpValue, GiftPlayerList, isCallDelegate); }
        public void AddExp_forPlayerParty_TowerBoss(PalIndividualCharacterHandle DeadEnemyHandle, Array<PalPlayerCharacter> GiftPlayerList, bool isCallDelegate) { Invoke(nameof(AddExp_forPlayerParty_TowerBoss), DeadEnemyHandle, GiftPlayerList, isCallDelegate); }
        public void AddExp_forBaseCamp(PalIndividualCharacterHandle DeadEnemyHandle, PalBaseCampModel CampModel) { Invoke(nameof(AddExp_forBaseCamp), DeadEnemyHandle, CampModel); }
        public void AddExp_EnemyDeath(PalDeadInfo DeadInfo) { Invoke(nameof(AddExp_EnemyDeath), DeadInfo); }
    }
    public class PalExponentialHeightFogVolume : Actor
    {
        public PalExponentialHeightFogVolume(nint addr) : base(addr) { }
        public ExponentialHeightFogComponent Component { get { return this[nameof(Component)].As<ExponentialHeightFogComponent>(); } set { this["Component"] = value; } }
        public bool bEnabled { get { return this[nameof(bEnabled)].Flag; } set { this[nameof(bEnabled)].Flag = value; } }
        public bool bEnableSwitchVisibility { get { return this[nameof(bEnableSwitchVisibility)].Flag; } set { this[nameof(bEnableSwitchVisibility)].Flag = value; } }
        public bool bDisableEnabledFlag { get { return this[nameof(bDisableEnabledFlag)].Flag; } set { this[nameof(bDisableEnabledFlag)].Flag = value; } }
        public void OnRep_bEnabled() { Invoke(nameof(OnRep_bEnabled)); }
    }
    public class PalFacialComponent : ActorComponent
    {
        public PalFacialComponent(nint addr) : base(addr) { }
        public bool bIsEnableEyeBlink { get { return this[nameof(bIsEnableEyeBlink)].Flag; } set { this[nameof(bIsEnableEyeBlink)].Flag = value; } }
        public PalFacial_MainModule MainModule { get { return this[nameof(MainModule)].As<PalFacial_MainModule>(); } set { this["MainModule"] = value; } }
        public void SetUpTestMesh(SkeletalMeshComponent SkeletalMeshComponent) { Invoke(nameof(SetUpTestMesh), SkeletalMeshComponent); }
        public void SetDisableNotify(bool Disable) { Invoke(nameof(SetDisableNotify), Disable); }
        public void SetDefaultLayer(EPalFacialEyeType Eye) { Invoke(nameof(SetDefaultLayer), Eye); }
        public bool ExistFacialNotifyInMontage(AnimMontage Montage) { return Invoke<bool>(nameof(ExistFacialNotifyInMontage), Montage); }
        public bool ExistEyeNotifyInMontage(AnimMontage Montage) { return Invoke<bool>(nameof(ExistEyeNotifyInMontage), Montage); }
        public void ChangeMouth_ForMontageNotify(EPalFacialMouthType Mouth) { Invoke(nameof(ChangeMouth_ForMontageNotify), Mouth); }
        public void ChangeEyeAndMouthMesh(EPalFacialEyeType Eye) { Invoke(nameof(ChangeEyeAndMouthMesh), Eye); }
        public void ChangeEye_ForMontageNotify(EPalFacialEyeType Eye) { Invoke(nameof(ChangeEye_ForMontageNotify), Eye); }
        public void ChangeDefaultFacial() { Invoke(nameof(ChangeDefaultFacial)); }
        public void Blink() { Invoke(nameof(Blink)); }
    }
    public class PalFacial_MainModule : Object
    {
        public PalFacial_MainModule(nint addr) : base(addr) { }
        public int EyeMaterialIndex { get { return this[nameof(EyeMaterialIndex)].GetValue<int>(); } set { this[nameof(EyeMaterialIndex)].SetValue<int>(value); } }
        public int MouthMaterialIndex { get { return this[nameof(MouthMaterialIndex)].GetValue<int>(); } set { this[nameof(MouthMaterialIndex)].SetValue<int>(value); } }
        public int BrowMaterialIndex { get { return this[nameof(BrowMaterialIndex)].GetValue<int>(); } set { this[nameof(BrowMaterialIndex)].SetValue<int>(value); } }
        public Object MorphSetting_Eye { get { return this[nameof(MorphSetting_Eye)]; } set { this[nameof(MorphSetting_Eye)] = value; } }
        public Object MorphSetting_Mouth { get { return this[nameof(MorphSetting_Mouth)]; } set { this[nameof(MorphSetting_Mouth)] = value; } }
        public Object BlendShape_TypeEyeWeight { get { return this[nameof(BlendShape_TypeEyeWeight)]; } set { this[nameof(BlendShape_TypeEyeWeight)] = value; } }
        public Object BlendShape_TypeMouthWeight { get { return this[nameof(BlendShape_TypeMouthWeight)]; } set { this[nameof(BlendShape_TypeMouthWeight)] = value; } }
        public Object BlendShape_EyeWeight { get { return this[nameof(BlendShape_EyeWeight)]; } set { this[nameof(BlendShape_EyeWeight)] = value; } }
        public Object BlendShape_MouthWeight { get { return this[nameof(BlendShape_MouthWeight)]; } set { this[nameof(BlendShape_MouthWeight)] = value; } }
        public void Setup_FacialModule(SkeletalMeshComponent SkeletalMeshComponent) { Invoke(nameof(Setup_FacialModule), SkeletalMeshComponent); }
    }
    public class PalFadeWidgetBase : PalUserWidget
    {
        public PalFadeWidgetBase(nint addr) : base(addr) { }
    }
    public class PalFirePointLightComponent : PointLightComponent
    {
        public PalFirePointLightComponent(nint addr) : base(addr) { }
    }
    public class PalFlyMeshHeightCtrlComponent : ActorComponent
    {
        public PalFlyMeshHeightCtrlComponent(nint addr) : base(addr) { }
        public float FlingAdditionalHeight { get { return this[nameof(FlingAdditionalHeight)].GetValue<float>(); } set { this[nameof(FlingAdditionalHeight)].SetValue<float>(value); } }
        public float HighFlingAddtionalHeight { get { return this[nameof(HighFlingAddtionalHeight)].GetValue<float>(); } set { this[nameof(HighFlingAddtionalHeight)].SetValue<float>(value); } }
        public EPalFlyHeightType State { get { return (EPalFlyHeightType)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public bool bIsHighFling { get { return this[nameof(bIsHighFling)].Flag; } set { this[nameof(bIsHighFling)].Flag = value; } }
        public bool bIsHighFlingCache { get { return this[nameof(bIsHighFlingCache)].Flag; } set { this[nameof(bIsHighFlingCache)].Flag = value; } }
        public SkeletalMeshComponent SK { get { return this[nameof(SK)].As<SkeletalMeshComponent>(); } set { this["SK"] = value; } }
        public void ToLand(float Duration) { Invoke(nameof(ToLand), Duration); }
        public void ToFly(float Duration) { Invoke(nameof(ToFly), Duration); }
        public void SetupMesh() { Invoke(nameof(SetupMesh)); }
        public void OnRep_bIsHighFling() { Invoke(nameof(OnRep_bIsHighFling)); }
        public void OnInitializedCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(OnInitializedCharacter), OwnerCharacter); }
        public void OnChangeBattleMode(bool bIsBattleMode) { Invoke(nameof(OnChangeBattleMode), bIsBattleMode); }
        public bool IsFlying() { return Invoke<bool>(nameof(IsFlying)); }
        public void HighFlingEnd_Server() { Invoke(nameof(HighFlingEnd_Server)); }
        public void HighFlingEnd_Implementation() { Invoke(nameof(HighFlingEnd_Implementation)); }
        public void HighFlingEnd() { Invoke(nameof(HighFlingEnd)); }
        public float GetDefaultMeshLocationZ() { return Invoke<float>(nameof(GetDefaultMeshLocationZ)); }
        public void Debug_ForceHighFlingEnd() { Invoke(nameof(Debug_ForceHighFlingEnd)); }
    }
    public class PalFoliageDamageReactionComponent : ActorComponent
    {
        public PalFoliageDamageReactionComponent(nint addr) : base(addr) { }
        public PalHitEffectSlot EffectSlot { get { return this[nameof(EffectSlot)].As<PalHitEffectSlot>(); } set { this["EffectSlot"] = value; } }
    }
    public class PalFoliageGridModel : Object
    {
        public PalFoliageGridModel(nint addr) : base(addr) { }
        public Object FoliageModelMapInServer { get { return this[nameof(FoliageModelMapInServer)]; } set { this[nameof(FoliageModelMapInServer)] = value; } }
        public Object InstanceMapByComponentId { get { return this[nameof(InstanceMapByComponentId)]; } set { this[nameof(InstanceMapByComponentId)] = value; } }
        public Object InstanceIdMapByLocation { get { return this[nameof(InstanceIdMapByLocation)]; } set { this[nameof(InstanceIdMapByLocation)] = value; } }
    }
    public class PalFoliageInstallDataAssetByIFA : DataAsset
    {
        public PalFoliageInstallDataAssetByIFA(nint addr) : base(addr) { }
        public Object InstallDataArrayMap { get { return this[nameof(InstallDataArrayMap)]; } set { this[nameof(InstallDataArrayMap)] = value; } }
    }
    public class PalFoliageInstallDataAsset : DataAsset
    {
        public PalFoliageInstallDataAsset(nint addr) : base(addr) { }
        public Object InstallDataSetMap { get { return this[nameof(InstallDataSetMap)]; } set { this[nameof(InstallDataSetMap)] = value; } }
    }
    public class PalFoliageInstance : Object
    {
        public PalFoliageInstance(nint addr) : base(addr) { }
        public Object DirtyMap { get { return this[nameof(DirtyMap)]; } set { this[nameof(DirtyMap)] = value; } }
        public Guid ModelInstanceId { get { return this[nameof(ModelInstanceId)].As<Guid>(); } set { this["ModelInstanceId"] = value; } }
        public Object FoliageTypeId { get { return this[nameof(FoliageTypeId)]; } set { this[nameof(FoliageTypeId)] = value; } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public bool bAlive { get { return this[nameof(bAlive)].Flag; } set { this[nameof(bAlive)].Flag = value; } }
        public PalFoliageInstanceTransform WorldTransform { get { return this[nameof(WorldTransform)].As<PalFoliageInstanceTransform>(); } set { this["WorldTransform"] = value; } }
        public Transform WorldTransformCache { get { return this[nameof(WorldTransformCache)].As<Transform>(); } set { this["WorldTransformCache"] = value; } }
        public GameDateTime RespawnTimeAt { get { return this[nameof(RespawnTimeAt)].As<GameDateTime>(); } set { this["RespawnTimeAt"] = value; } }
        public void OnRep_WorldTransform() { Invoke(nameof(OnRep_WorldTransform)); }
        public void OnRep_Alive(bool bOldValue) { Invoke(nameof(OnRep_Alive), bOldValue); }
        public void FoliageInstanceDelegate__DelegateSignature(PalFoliageInstance Instance) { Invoke(nameof(FoliageInstanceDelegate__DelegateSignature), Instance); }
    }
    public class PalFoliageISMComponent : FoliageInstancedStaticMeshComponent
    {
        public PalFoliageISMComponent(nint addr) : base(addr) { }
    }
    public class PalFoliageISMComponentBase : PalFoliageISMComponent
    {
        public PalFoliageISMComponentBase(nint addr) : base(addr) { }
        public Object InstanceIndexMapByLocation { get { return this[nameof(InstanceIndexMapByLocation)]; } set { this[nameof(InstanceIndexMapByLocation)] = value; } }
        public void SpawnInstance(PalFoliageInstance Instance) { Invoke(nameof(SpawnInstance), Instance); }
        public void OnRemoveInstance(Object FoliageTypeId, PalFoliageInstance Instance) { Invoke(nameof(OnRemoveInstance), FoliageTypeId, Instance); }
        public void OnRegisterInstance(Object FoliageTypeId, PalFoliageInstance Instance) { Invoke(nameof(OnRegisterInstance), FoliageTypeId, Instance); }
        public void OnReceiveDamageInClient(PalDamageInfo DamageInfo) { Invoke(nameof(OnReceiveDamageInClient), DamageInfo); }
        public void OnDisposeModel(PalMapObjectFoliageModel Model) { Invoke(nameof(OnDisposeModel), Model); }
        public void DespawnInstance(PalFoliageInstance Instance) { Invoke(nameof(DespawnInstance), Instance); }
    }
    public class PalFoliageModelChunk : Actor
    {
        public PalFoliageModelChunk(nint addr) : base(addr) { }
        public PalFoliageInstanceRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<PalFoliageInstanceRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
        public int ChunkGridSize { get { return this[nameof(ChunkGridSize)].GetValue<int>(); } set { this[nameof(ChunkGridSize)].SetValue<int>(value); } }
        public int InstanceNum { get { return this[nameof(InstanceNum)].GetValue<int>(); } set { this[nameof(InstanceNum)].SetValue<int>(value); } }
        public void OnRep_ChunkGridSize() { Invoke(nameof(OnRep_ChunkGridSize)); }
        public void OnReceivedChunkGridSize(int NewChunkGridSize) { Invoke(nameof(OnReceivedChunkGridSize), NewChunkGridSize); }
    }
    public class PalFoliagePresetDataSet : DataAsset
    {
        public PalFoliagePresetDataSet(nint addr) : base(addr) { }
        public Object Presets { get { return this[nameof(Presets)]; } set { this[nameof(Presets)] = value; } }
    }
    public class PalFoliageType_InstancedStaticMesh : FoliageType_InstancedStaticMesh
    {
        public PalFoliageType_InstancedStaticMesh(nint addr) : base(addr) { }
        public EPalFoliagePresetType PresetType { get { return (EPalFoliagePresetType)this[nameof(PresetType)].GetValue<int>(); } set { this[nameof(PresetType)].SetValue<int>((int)value); } }
    }
    public class PalFollowingComponent : PathFollowingComponent
    {
        public PalFollowingComponent(nint addr) : base(addr) { }
    }
    public class PalFootIKComponent : ActorComponent
    {
        public PalFootIKComponent(nint addr) : base(addr) { }
        public bool bIsEnableFootIK { get { return this[nameof(bIsEnableFootIK)].Flag; } set { this[nameof(bIsEnableFootIK)].Flag = value; } }
        public float MinMeshOffset { get { return this[nameof(MinMeshOffset)].GetValue<float>(); } set { this[nameof(MinMeshOffset)].SetValue<float>(value); } }
        public float FootIKInterpTime { get { return this[nameof(FootIKInterpTime)].GetValue<float>(); } set { this[nameof(FootIKInterpTime)].SetValue<float>(value); } }
        public Object FootIKSettings { get { return this[nameof(FootIKSettings)]; } set { this[nameof(FootIKSettings)] = value; } }
        public float FootIKMeshOffset { get { return this[nameof(FootIKMeshOffset)].GetValue<float>(); } set { this[nameof(FootIKMeshOffset)].SetValue<float>(value); } }
        public Object FootGroundResult { get { return this[nameof(FootGroundResult)]; } set { this[nameof(FootGroundResult)] = value; } }
        public void SetFootIKDisable(Object flagName, bool bIsDisable) { Invoke(nameof(SetFootIKDisable), flagName, bIsDisable); }
        public bool IsEnableFootIK() { return Invoke<bool>(nameof(IsEnableFootIK)); }
    }
    public class PalFootStepEffectAssetBase : Object
    {
        public PalFootStepEffectAssetBase(nint addr) : base(addr) { }
        public Object FootStepEffectInfo { get { return this[nameof(FootStepEffectInfo)]; } set { this[nameof(FootStepEffectInfo)] = value; } }
        public Object GetEffectObjectPtr(EPalLandingType LandingType, byte PhysicalSurface) { return Invoke<Object>(nameof(GetEffectObjectPtr), LandingType, PhysicalSurface); }
        public bool GetEffectInfo(EPalLandingType LandingType, FootStepEffectInfo OutVal) { return Invoke<bool>(nameof(GetEffectInfo), LandingType, OutVal); }
    }
    public class PalFunnelCharacter : PalCharacter
    {
        public PalFunnelCharacter(nint addr) : base(addr) { }
        public Object FunnelSkillAIActionClass { get { return this[nameof(FunnelSkillAIActionClass)]; } set { this[nameof(FunnelSkillAIActionClass)] = value; } }
        public Object FunnelSkillModuleClass { get { return this[nameof(FunnelSkillModuleClass)]; } set { this[nameof(FunnelSkillModuleClass)] = value; } }
        public PalInstanceID OwnerCharacterId { get { return this[nameof(OwnerCharacterId)].As<PalInstanceID>(); } set { this["OwnerCharacterId"] = value; } }
        public void SetOwnerCharacterId(PalInstanceID OwnerCharacterId) { Invoke(nameof(SetOwnerCharacterId), OwnerCharacterId); }
        public void SetLocationNearTrainer() { Invoke(nameof(SetLocationNearTrainer)); }
        public void OnTrainerMoveToRespawnLocation(PalPlayerCharacter Player, Vector Location) { Invoke(nameof(OnTrainerMoveToRespawnLocation), Player, Location); }
        public void OnTrainerDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnTrainerDead), DeadInfo); }
        public void OnSpawned() { Invoke(nameof(OnSpawned)); }
        public void OnRep_OwnerCharacterId() { Invoke(nameof(OnRep_OwnerCharacterId)); }
        public void OnOwnerDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnOwnerDead), DeadInfo); }
        public void OnInactive() { Invoke(nameof(OnInactive)); }
        public void OnActive() { Invoke(nameof(OnActive)); }
        public void InactivateSelf() { Invoke(nameof(InactivateSelf)); }
        public PalCharacter GetTrainer() { return Invoke<PalCharacter>(nameof(GetTrainer)); }
        public int GetRank() { return Invoke<int>(nameof(GetRank)); }
        public PalCharacter GetOwnerPal() { return Invoke<PalCharacter>(nameof(GetOwnerPal)); }
        public Object GetCharacterID() { return Invoke<Object>(nameof(GetCharacterID)); }
        public void ActivateSelf() { Invoke(nameof(ActivateSelf)); }
    }
    public class PalFunnelCharacterManager : PalWorldSubsystem
    {
        public PalFunnelCharacterManager(nint addr) : base(addr) { }
        public Object ManagedCharacterInfo { get { return this[nameof(ManagedCharacterInfo)]; } set { this[nameof(ManagedCharacterInfo)] = value; } }
        public Object PickupTarget { get { return this[nameof(PickupTarget)]; } set { this[nameof(PickupTarget)] = value; } }
        public void SpawnActorCallback(Guid Guid, Actor Actor) { Invoke(nameof(SpawnActorCallback), Guid, Actor); }
        public void SetFunnelCharacterActive(PalFunnelCharacter FunnelCharacter, bool IsActive) { Invoke(nameof(SetFunnelCharacterActive), FunnelCharacter, IsActive); }
        public void InitializeForServer_BP() { Invoke(nameof(InitializeForServer_BP)); }
        public void Initialize_BP() { Invoke(nameof(Initialize_BP)); }
        public PalCharacter GetOwnerCharacter(PalFunnelCharacter FunnelCharacter) { return Invoke<PalCharacter>(nameof(GetOwnerCharacter), FunnelCharacter); }
        public int GetIndexOfFunnelsWithinSameTrainer(PalFunnelCharacter FunnelCharacter) { return Invoke<int>(nameof(GetIndexOfFunnelsWithinSameTrainer), FunnelCharacter); }
    }
    public class PalFunnelSkillModule : Object
    {
        public PalFunnelSkillModule(nint addr) : base(addr) { }
        public PalFunnelCharacter FunnelCharacter { get { return this[nameof(FunnelCharacter)].As<PalFunnelCharacter>(); } set { this["FunnelCharacter"] = value; } }
        public bool ShouldSetSkillAction() { return Invoke<bool>(nameof(ShouldSetSkillAction)); }
        public void SetCharacter(PalCharacter Character) { Invoke(nameof(SetCharacter), Character); }
        public void OnTick(float DeltaTime) { Invoke(nameof(OnTick), DeltaTime); }
        public void OnNotifyFinishSkillAction() { Invoke(nameof(OnNotifyFinishSkillAction)); }
        public PalCharacter GetCharacter() { return Invoke<PalCharacter>(nameof(GetCharacter)); }
    }
    public class PalFunnelSkillModuleCollectItem : PalFunnelSkillModule
    {
        public PalFunnelSkillModuleCollectItem(nint addr) : base(addr) { }
        public Array<float> SearchItemRange { get { return new Array<float>(this[nameof(SearchItemRange)].Address); } }
        public Guid CollectItemId { get { return this[nameof(CollectItemId)].As<Guid>(); } set { this["CollectItemId"] = value; } }
        public bool bShouldSetSkillAction { get { return this[nameof(bShouldSetSkillAction)].Flag; } set { this[nameof(bShouldSetSkillAction)].Flag = value; } }
        public Object SearchItemInfoList { get { return this[nameof(SearchItemInfoList)]; } set { this[nameof(SearchItemInfoList)] = value; } }
        public void SearchCollectableItem(float DeltaTime) { Invoke(nameof(SearchCollectableItem), DeltaTime); }
        public void Reset() { Invoke(nameof(Reset)); }
        public bool Pickup() { return Invoke<bool>(nameof(Pickup)); }
        public void ObserveCollectItem(float DeltaTime) { Invoke(nameof(ObserveCollectItem), DeltaTime); }
        public bool IsNearTargetLocation(Vector Location) { return Invoke<bool>(nameof(IsNearTargetLocation), Location); }
        public PalMapObject GetTargetObject() { return Invoke<PalMapObject>(nameof(GetTargetObject)); }
        public bool GetTargetLocation(Vector Location) { return Invoke<bool>(nameof(GetTargetLocation), Location); }
        public Guid GetTargetId() { return Invoke<Guid>(nameof(GetTargetId)); }
    }
    public class PalFunnelSkillModuleReticleTargetAttack : PalFunnelSkillModule
    {
        public PalFunnelSkillModuleReticleTargetAttack(nint addr) : base(addr) { }
        public bool bShouldSetSkillAction { get { return this[nameof(bShouldSetSkillAction)].Flag; } set { this[nameof(bShouldSetSkillAction)].Flag = value; } }
        public float SearchRange { get { return this[nameof(SearchRange)].GetValue<float>(); } set { this[nameof(SearchRange)].SetValue<float>(value); } }
        public float CoolTime { get { return this[nameof(CoolTime)].GetValue<float>(); } set { this[nameof(CoolTime)].SetValue<float>(value); } }
        public Object ReticleTarget { get { return this[nameof(ReticleTarget)]; } set { this[nameof(ReticleTarget)] = value; } }
        public void Reset() { Invoke(nameof(Reset)); }
        public PalCharacter GetTarget() { return Invoke<PalCharacter>(nameof(GetTarget)); }
    }
    public class PalGameInstance : GameInstance
    {
        public PalGameInstance(nint addr) : base(addr) { }
        public Object OnCompletedCharacterMakeDelegate { get { return this[nameof(OnCompletedCharacterMakeDelegate)]; } set { this[nameof(OnCompletedCharacterMakeDelegate)] = value; } }
        public Object OnPawnLocalPlayerControllerChangedDelegates { get { return this[nameof(OnPawnLocalPlayerControllerChangedDelegates)]; } set { this[nameof(OnPawnLocalPlayerControllerChangedDelegates)] = value; } }
        public bool bNetworkError { get { return this[nameof(bNetworkError)].Flag; } set { this[nameof(bNetworkError)].Flag = value; } }
        public Object DisplayVersion { get { return this[nameof(DisplayVersion)]; } set { this[nameof(DisplayVersion)] = value; } }
        public Object ErrorString { get { return this[nameof(ErrorString)]; } set { this[nameof(ErrorString)] = value; } }
        public Object InputPassword { get { return this[nameof(InputPassword)]; } set { this[nameof(InputPassword)] = value; } }
        public Array<Object> BanList { get { return new Array<Object>(this[nameof(BanList)].Address); } }
        public Object GameSettingClass { get { return this[nameof(GameSettingClass)]; } set { this[nameof(GameSettingClass)] = value; } }
        public PalGameSetting GameSetting { get { return this[nameof(GameSetting)].As<PalGameSetting>(); } set { this["GameSetting"] = value; } }
        public Object MasterDataTablesClass { get { return this[nameof(MasterDataTablesClass)]; } set { this[nameof(MasterDataTablesClass)] = value; } }
        public PalMasterDataTables MasterDataTables { get { return this[nameof(MasterDataTables)].As<PalMasterDataTables>(); } set { this["MasterDataTables"] = value; } }
        public Object MapObjectManagerClass { get { return this[nameof(MapObjectManagerClass)]; } set { this[nameof(MapObjectManagerClass)] = value; } }
        public Object GroupManagerClass { get { return this[nameof(GroupManagerClass)]; } set { this[nameof(GroupManagerClass)] = value; } }
        public Object CharacterManagerClass { get { return this[nameof(CharacterManagerClass)]; } set { this[nameof(CharacterManagerClass)] = value; } }
        public Object CharacterContainerManagerClass { get { return this[nameof(CharacterContainerManagerClass)]; } set { this[nameof(CharacterContainerManagerClass)] = value; } }
        public PalCharacterContainerManager CharacterContainerManager { get { return this[nameof(CharacterContainerManager)].As<PalCharacterContainerManager>(); } set { this["CharacterContainerManager"] = value; } }
        public Object BaseCampManagerClass { get { return this[nameof(BaseCampManagerClass)]; } set { this[nameof(BaseCampManagerClass)] = value; } }
        public Object WorkProgressManagerClass { get { return this[nameof(WorkProgressManagerClass)]; } set { this[nameof(WorkProgressManagerClass)] = value; } }
        public Object DamagePopUpManagerClass { get { return this[nameof(DamagePopUpManagerClass)]; } set { this[nameof(DamagePopUpManagerClass)] = value; } }
        public PalDamagePopUpManager DamagePopUpManager { get { return this[nameof(DamagePopUpManager)].As<PalDamagePopUpManager>(); } set { this["DamagePopUpManager"] = value; } }
        public Object ItemContainerManagerClass { get { return this[nameof(ItemContainerManagerClass)]; } set { this[nameof(ItemContainerManagerClass)] = value; } }
        public Object ItemIDManagerClass { get { return this[nameof(ItemIDManagerClass)]; } set { this[nameof(ItemIDManagerClass)] = value; } }
        public PalItemIDManager ItemIDManager { get { return this[nameof(ItemIDManager)].As<PalItemIDManager>(); } set { this["ItemIDManager"] = value; } }
        public Object WazaDatabaseClass { get { return this[nameof(WazaDatabaseClass)]; } set { this[nameof(WazaDatabaseClass)] = value; } }
        public PalWazaDatabase WazaDatabase { get { return this[nameof(WazaDatabase)].As<PalWazaDatabase>(); } set { this["WazaDatabase"] = value; } }
        public Object BattleManagerClass { get { return this[nameof(BattleManagerClass)]; } set { this[nameof(BattleManagerClass)] = value; } }
        public Object BossBattleManagerClass { get { return this[nameof(BossBattleManagerClass)]; } set { this[nameof(BossBattleManagerClass)] = value; } }
        public Object PlayerDataStorageClass { get { return this[nameof(PlayerDataStorageClass)]; } set { this[nameof(PlayerDataStorageClass)] = value; } }
        public PalPlayerDataStorage PlayerDataStorage { get { return this[nameof(PlayerDataStorage)].As<PalPlayerDataStorage>(); } set { this["PlayerDataStorage"] = value; } }
        public Object HUDServiceClass { get { return this[nameof(HUDServiceClass)]; } set { this[nameof(HUDServiceClass)] = value; } }
        public PalHUDService HUDService { get { return this[nameof(HUDService)].As<PalHUDService>(); } set { this["HUDService"] = value; } }
        public Object ExpDatabaseClass { get { return this[nameof(ExpDatabaseClass)]; } set { this[nameof(ExpDatabaseClass)] = value; } }
        public PalExpDatabase ExpDatabase { get { return this[nameof(ExpDatabase)].As<PalExpDatabase>(); } set { this["ExpDatabase"] = value; } }
        public Object DatabaseCharacterParameterClass { get { return this[nameof(DatabaseCharacterParameterClass)]; } set { this[nameof(DatabaseCharacterParameterClass)] = value; } }
        public PalDatabaseCharacterParameter DatabaseCharacterParameter { get { return this[nameof(DatabaseCharacterParameter)].As<PalDatabaseCharacterParameter>(); } set { this["DatabaseCharacterParameter"] = value; } }
        public Object AssetStreamableManagerClass { get { return this[nameof(AssetStreamableManagerClass)]; } set { this[nameof(AssetStreamableManagerClass)] = value; } }
        public PalAssetStreamableManager AssetStreamableManager { get { return this[nameof(AssetStreamableManager)].As<PalAssetStreamableManager>(); } set { this["AssetStreamableManager"] = value; } }
        public Object PassiveSkillManagerClass { get { return this[nameof(PassiveSkillManagerClass)]; } set { this[nameof(PassiveSkillManagerClass)] = value; } }
        public PalPassiveSkillManager PassiveSkillManager { get { return this[nameof(PassiveSkillManager)].As<PalPassiveSkillManager>(); } set { this["PassiveSkillManager"] = value; } }
        public Object DataTableRowIdMapperClass { get { return this[nameof(DataTableRowIdMapperClass)]; } set { this[nameof(DataTableRowIdMapperClass)] = value; } }
        public PalDataTableRowIdMapper DataTableRowIdMapper { get { return this[nameof(DataTableRowIdMapper)].As<PalDataTableRowIdMapper>(); } set { this["DataTableRowIdMapper"] = value; } }
        public Object DeadBodyManagerClass { get { return this[nameof(DeadBodyManagerClass)]; } set { this[nameof(DeadBodyManagerClass)] = value; } }
        public PalDeadBodyManager DeadBodyManager { get { return this[nameof(DeadBodyManager)].As<PalDeadBodyManager>(); } set { this["DeadBodyManager"] = value; } }
        public Object BulletCreatorClass { get { return this[nameof(BulletCreatorClass)]; } set { this[nameof(BulletCreatorClass)] = value; } }
        public PalBulletCreator BulletCreator { get { return this[nameof(BulletCreator)].As<PalBulletCreator>(); } set { this["BulletCreator"] = value; } }
        public Object PlayerManagerClass { get { return this[nameof(PlayerManagerClass)]; } set { this[nameof(PlayerManagerClass)] = value; } }
        public Object SaveGameManagerClass { get { return this[nameof(SaveGameManagerClass)]; } set { this[nameof(SaveGameManagerClass)] = value; } }
        public PalSaveGameManager SaveGameManager { get { return this[nameof(SaveGameManager)].As<PalSaveGameManager>(); } set { this["SaveGameManager"] = value; } }
        public Object VisualEffectDataBaseClass { get { return this[nameof(VisualEffectDataBaseClass)]; } set { this[nameof(VisualEffectDataBaseClass)] = value; } }
        public PalVisualEffectDataBase VisualEffectDataBase { get { return this[nameof(VisualEffectDataBase)].As<PalVisualEffectDataBase>(); } set { this["VisualEffectDataBase"] = value; } }
        public Object EventNotifySystemClass { get { return this[nameof(EventNotifySystemClass)]; } set { this[nameof(EventNotifySystemClass)] = value; } }
        public Object WorldSecuritySystemClass { get { return this[nameof(WorldSecuritySystemClass)]; } set { this[nameof(WorldSecuritySystemClass)] = value; } }
        public Object LocationManagerClass { get { return this[nameof(LocationManagerClass)]; } set { this[nameof(LocationManagerClass)] = value; } }
        public Object NPCManagerClass { get { return this[nameof(NPCManagerClass)]; } set { this[nameof(NPCManagerClass)] = value; } }
        public PalNPCManager NPCManager { get { return this[nameof(NPCManager)].As<PalNPCManager>(); } set { this["NPCManager"] = value; } }
        public Object DeathPenaltyManagerClass { get { return this[nameof(DeathPenaltyManagerClass)]; } set { this[nameof(DeathPenaltyManagerClass)] = value; } }
        public PalDeathPenaltyManager DeathPenaltyManager { get { return this[nameof(DeathPenaltyManager)].As<PalDeathPenaltyManager>(); } set { this["DeathPenaltyManager"] = value; } }
        public Object CoopSkillSearchSystemClass { get { return this[nameof(CoopSkillSearchSystemClass)]; } set { this[nameof(CoopSkillSearchSystemClass)] = value; } }
        public PalCoopSkillSearchSystem CoopSkillSearchSystem { get { return this[nameof(CoopSkillSearchSystem)].As<PalCoopSkillSearchSystem>(); } set { this["CoopSkillSearchSystem"] = value; } }
        public Object CharacterImportanceManagerClass { get { return this[nameof(CharacterImportanceManagerClass)]; } set { this[nameof(CharacterImportanceManagerClass)] = value; } }
        public PalCharacterImportanceManager CharacterImportanceManager { get { return this[nameof(CharacterImportanceManager)].As<PalCharacterImportanceManager>(); } set { this["CharacterImportanceManager"] = value; } }
        public Object AudioSettingClass { get { return this[nameof(AudioSettingClass)]; } set { this[nameof(AudioSettingClass)] = value; } }
        public PalAudioSettingSystem AudioSettingSystem { get { return this[nameof(AudioSettingSystem)].As<PalAudioSettingSystem>(); } set { this["AudioSettingSystem"] = value; } }
        public Object CharacterParameterStorageSubsystemClass { get { return this[nameof(CharacterParameterStorageSubsystemClass)]; } set { this[nameof(CharacterParameterStorageSubsystemClass)] = value; } }
        public Object TutorialManagerClass { get { return this[nameof(TutorialManagerClass)]; } set { this[nameof(TutorialManagerClass)] = value; } }
        public Object ObjectCollectorClass { get { return this[nameof(ObjectCollectorClass)]; } set { this[nameof(ObjectCollectorClass)] = value; } }
        public Object ActionDummyTargetManager { get { return this[nameof(ActionDummyTargetManager)]; } set { this[nameof(ActionDummyTargetManager)] = value; } }
        public Object LogManagerClass { get { return this[nameof(LogManagerClass)]; } set { this[nameof(LogManagerClass)] = value; } }
        public int revisionNum { get { return this[nameof(revisionNum)].GetValue<int>(); } set { this[nameof(revisionNum)].SetValue<int>(value); } }
        public Object FxiedCharacterMakeDataDelegate { get { return this[nameof(FxiedCharacterMakeDataDelegate)]; } set { this[nameof(FxiedCharacterMakeDataDelegate)] = value; } }
        public Object FxiedCharacterNameDelegate { get { return this[nameof(FxiedCharacterNameDelegate)]; } set { this[nameof(FxiedCharacterNameDelegate)] = value; } }
        public Array<Object> NeedWorldSyncSystems { get { return new Array<Object>(this[nameof(NeedWorldSyncSystems)].Address); } }
        public Object TitleBGMPlayerClass { get { return this[nameof(TitleBGMPlayerClass)]; } set { this[nameof(TitleBGMPlayerClass)] = value; } }
        public PalPersistentSoundPlayer TitleBGMPlayer { get { return this[nameof(TitleBGMPlayer)].As<PalPersistentSoundPlayer>(); } set { this["TitleBGMPlayer"] = value; } }
        public Object SelectedWorldName { get { return this[nameof(SelectedWorldName)]; } set { this[nameof(SelectedWorldName)] = value; } }
        public Object SelectedWorldSaveDirectoryName { get { return this[nameof(SelectedWorldSaveDirectoryName)]; } set { this[nameof(SelectedWorldSaveDirectoryName)] = value; } }
        public bool bIsNewGame { get { return this[nameof(bIsNewGame)].Flag; } set { this[nameof(bIsNewGame)].Flag = value; } }
        public PalOptionWorldSettings NewGameWorldSetting { get { return this[nameof(NewGameWorldSetting)].As<PalOptionWorldSettings>(); } set { this["NewGameWorldSetting"] = value; } }
        public void ShowUIMultiplayRestriction(bool bOverrideChecking) { Invoke(nameof(ShowUIMultiplayRestriction), bOverrideChecking); }
        public void ShowCharacterMakeScreen() { Invoke(nameof(ShowCharacterMakeScreen)); }
        public void SetupGameInit() { Invoke(nameof(SetupGameInit)); }
        public void SetNewWorldName(Object WorldName) { Invoke(nameof(SetNewWorldName), WorldName); }
        public void SetIsNewGame() { Invoke(nameof(SetIsNewGame)); }
        public bool SelectWorldSaveDirectoryName(Object WorldSaveDirectoryName) { return Invoke<bool>(nameof(SelectWorldSaveDirectoryName), WorldSaveDirectoryName); }
        public bool SelectWorld(Object WorldName) { return Invoke<bool>(nameof(SelectWorld), WorldName); }
        public void OnPawnLocalPlayerControllerChanged__DelegateSignature(Pawn Pawn, Controller Controller) { Invoke(nameof(OnPawnLocalPlayerControllerChanged__DelegateSignature), Pawn, Controller); }
        public void OnInitializeCompleteSystem() { Invoke(nameof(OnInitializeCompleteSystem)); }
        public void OnCompletedJoinSession(bool IsSuccess, JoinSessionResultType Type) { Invoke(nameof(OnCompletedJoinSession), IsSuccess, Type); }
        public void OnCompletedFindSessions(bool bIsSuccess, Array<BlueprintSessionResult> Results, Object ErrorStr) { Invoke(nameof(OnCompletedFindSessions), bIsSuccess, Results, ErrorStr); }
        public void OnCompletedCharacterMake__DelegateSignature() { Invoke(nameof(OnCompletedCharacterMake__DelegateSignature)); }
        public void LoadingFinished() { Invoke(nameof(LoadingFinished)); }
        public bool IsPlayFromTitle() { return Invoke<bool>(nameof(IsPlayFromTitle)); }
        public bool IsNewGame() { return Invoke<bool>(nameof(IsNewGame)); }
        public void GoToDefaultMap() { Invoke(nameof(GoToDefaultMap)); }
        public Object GetSelectedWorldSaveDirectoryName() { return Invoke<Object>(nameof(GetSelectedWorldSaveDirectoryName)); }
        public Object GetSelectedWorldName() { return Invoke<Object>(nameof(GetSelectedWorldName)); }
        public void FxiedCharacterName__DelegateSignature(Object Name) { Invoke(nameof(FxiedCharacterName__DelegateSignature), Name); }
        public void FxiedCharacterMakeData__DelegateSignature(PalPlayerDataCharacterMakeInfo MakeInfo) { Invoke(nameof(FxiedCharacterMakeData__DelegateSignature), MakeInfo); }
        public void CompleteInitCharacterMakeData() { Invoke(nameof(CompleteInitCharacterMakeData)); }
        public void ClearNetworkError() { Invoke(nameof(ClearNetworkError)); }
        public void CheckInvite() { Invoke(nameof(CheckInvite)); }
        public void ApplicationHasReactivated() { Invoke(nameof(ApplicationHasReactivated)); }
        public void ApplicationHasEnteredForeground() { Invoke(nameof(ApplicationHasEnteredForeground)); }
    }
    public class PalGameInstanceViewActor : Actor
    {
        public PalGameInstanceViewActor(nint addr) : base(addr) { }
        public Object Target { get { return this[nameof(Target)]; } set { this[nameof(Target)] = value; } }
    }
    public class PalGameLocalSettings : Object
    {
        public PalGameLocalSettings(nint addr) : base(addr) { }
        public PalOptionAudioSettings AudioSettings { get { return this[nameof(AudioSettings)].As<PalOptionAudioSettings>(); } set { this["AudioSettings"] = value; } }
        public EPalOptionGraphicsLevel GraphicsLevel { get { return (EPalOptionGraphicsLevel)this[nameof(GraphicsLevel)].GetValue<int>(); } set { this[nameof(GraphicsLevel)].SetValue<int>((int)value); } }
        public EPalOptionGraphicsLevel DefaultGraphicsLevel { get { return (EPalOptionGraphicsLevel)this[nameof(DefaultGraphicsLevel)].GetValue<int>(); } set { this[nameof(DefaultGraphicsLevel)].SetValue<int>((int)value); } }
        public bool bRunedBenchMark { get { return this[nameof(bRunedBenchMark)].Flag; } set { this[nameof(bRunedBenchMark)].Flag = value; } }
        public bool bHasAppliedUserSetting { get { return this[nameof(bHasAppliedUserSetting)].Flag; } set { this[nameof(bHasAppliedUserSetting)].Flag = value; } }
        public Object DedicatedServerName { get { return this[nameof(DedicatedServerName)]; } set { this[nameof(DedicatedServerName)] = value; } }
        public byte AntiAliasingType { get { return this[nameof(AntiAliasingType)].GetValue<byte>(); } set { this[nameof(AntiAliasingType)].SetValue<byte>(value); } }
        public UDLSSMode DLSSMode { get { return (UDLSSMode)this[nameof(DLSSMode)].GetValue<int>(); } set { this[nameof(DLSSMode)].SetValue<int>((int)value); } }
        public int GraphicsCommonQuality { get { return this[nameof(GraphicsCommonQuality)].GetValue<int>(); } set { this[nameof(GraphicsCommonQuality)].SetValue<int>(value); } }
        public bool RequireBenchMarkScalaBility() { return Invoke<bool>(nameof(RequireBenchMarkScalaBility)); }
    }
    public class PalGameModeBase : GameModeBase
    {
        public PalGameModeBase(nint addr) : base(addr) { }
        public EPalGameModeType GameModeType { get { return (EPalGameModeType)this[nameof(GameModeType)].GetValue<int>(); } set { this[nameof(GameModeType)].SetValue<int>((int)value); } }
    }
    public class PalGameMode : PalGameModeBase
    {
        public PalGameMode(nint addr) : base(addr) { }
        public void RestartGame() { Invoke(nameof(RestartGame)); }
        public void RespawnPlayer(int PlayerIndex) { Invoke(nameof(RespawnPlayer), PlayerIndex); }
        public void OnServerLobbyUpdate() { Invoke(nameof(OnServerLobbyUpdate)); }
        public void OnEOSLoginDedicatedServerComplete(PocketpairUserInfo UserInfo, bool bSuccess, Object ErrorStr) { Invoke(nameof(OnEOSLoginDedicatedServerComplete), UserInfo, bSuccess, ErrorStr); }
        public void OnCompleteCreateSession(bool IsSuccess, Object ErrorStr) { Invoke(nameof(OnCompleteCreateSession), IsSuccess, ErrorStr); }
        public void CreateSession(Object Address) { Invoke(nameof(CreateSession), Address); }
    }
    public class PalGameModeLogin : PalGameModeBase
    {
        public PalGameModeLogin(nint addr) : base(addr) { }
        public void OnSwitchUserUICompleted(PocketpairUserInfo UserInfo, bool bSuccess, Object ErrorStr) { Invoke(nameof(OnSwitchUserUICompleted), UserInfo, bSuccess, ErrorStr); }
        public void OnLoginEOSCompleted(PocketpairUserInfo UserInfo, bool bSuccess, Object ErrorStr) { Invoke(nameof(OnLoginEOSCompleted), UserInfo, bSuccess, ErrorStr); }
        public void OnLoginCompleted(PocketpairUserInfo UserInfo, bool bSuccess, Object ErrorStr) { Invoke(nameof(OnLoginCompleted), UserInfo, bSuccess, ErrorStr); }
        public void OnConfirmAlert_MultiplayRestricted(bool bSuccess) { Invoke(nameof(OnConfirmAlert_MultiplayRestricted), bSuccess); }
        public void OnConfirmAlert_EOSLogin(bool bSuccess) { Invoke(nameof(OnConfirmAlert_EOSLogin), bSuccess); }
        public void OnCloseEalryAccess(bool _) { Invoke(nameof(OnCloseEalryAccess), _); }
        public void GoToTitle() { Invoke(nameof(GoToTitle)); }
    }
    public class PalGameModeServerEntry : PalGameModeBase
    {
        public PalGameModeServerEntry(nint addr) : base(addr) { }
        public void LoadLevel() { Invoke(nameof(LoadLevel)); }
    }
    public class PalGameModeTitle : PalGameModeBase
    {
        public PalGameModeTitle(nint addr) : base(addr) { }
    }
    public class PalGameSetting : BlueprintFunctionLibrary
    {
        public PalGameSetting(nint addr) : base(addr) { }
        public int CharacterMaxLevel { get { return this[nameof(CharacterMaxLevel)].GetValue<int>(); } set { this[nameof(CharacterMaxLevel)].SetValue<int>(value); } }
        public int GuildCharacterMaxLevel { get { return this[nameof(GuildCharacterMaxLevel)].GetValue<int>(); } set { this[nameof(GuildCharacterMaxLevel)].SetValue<int>(value); } }
        public int OtomoLevelSyncAddMaxLevel { get { return this[nameof(OtomoLevelSyncAddMaxLevel)].GetValue<int>(); } set { this[nameof(OtomoLevelSyncAddMaxLevel)].SetValue<int>(value); } }
        public EPalPlayerSprintStaminaDecreaseType PlayerSprintStaminaType { get { return (EPalPlayerSprintStaminaDecreaseType)this[nameof(PlayerSprintStaminaType)].GetValue<int>(); } set { this[nameof(PlayerSprintStaminaType)].SetValue<int>((int)value); } }
        public int CharacterMaxRank { get { return this[nameof(CharacterMaxRank)].GetValue<int>(); } set { this[nameof(CharacterMaxRank)].SetValue<int>(value); } }
        public int ConsumStamina_PalThrow { get { return this[nameof(ConsumStamina_PalThrow)].GetValue<int>(); } set { this[nameof(ConsumStamina_PalThrow)].SetValue<int>(value); } }
        public float ReturnOtomoPalCoolTime { get { return this[nameof(ReturnOtomoPalCoolTime)].GetValue<float>(); } set { this[nameof(ReturnOtomoPalCoolTime)].SetValue<float>(value); } }
        public int OtomoSlotNum { get { return this[nameof(OtomoSlotNum)].GetValue<int>(); } set { this[nameof(OtomoSlotNum)].SetValue<int>(value); } }
        public float OtomoWazaCoolDownSpeedRate { get { return this[nameof(OtomoWazaCoolDownSpeedRate)].GetValue<float>(); } set { this[nameof(OtomoWazaCoolDownSpeedRate)].SetValue<float>(value); } }
        public float PlayerHPRateFromRespawn { get { return this[nameof(PlayerHPRateFromRespawn)].GetValue<float>(); } set { this[nameof(PlayerHPRateFromRespawn)].SetValue<float>(value); } }
        public float PlayerStomachRateFromRespawn { get { return this[nameof(PlayerStomachRateFromRespawn)].GetValue<float>(); } set { this[nameof(PlayerStomachRateFromRespawn)].SetValue<float>(value); } }
        public float RarePal_AppearanceProbability { get { return this[nameof(RarePal_AppearanceProbability)].GetValue<float>(); } set { this[nameof(RarePal_AppearanceProbability)].SetValue<float>(value); } }
        public float RarePal_LevelMultiply { get { return this[nameof(RarePal_LevelMultiply)].GetValue<float>(); } set { this[nameof(RarePal_LevelMultiply)].SetValue<float>(value); } }
        public int BossOrRarePal_TalentMin { get { return this[nameof(BossOrRarePal_TalentMin)].GetValue<int>(); } set { this[nameof(BossOrRarePal_TalentMin)].SetValue<int>(value); } }
        public int CharacterRankUpRequiredNumDefault { get { return this[nameof(CharacterRankUpRequiredNumDefault)].GetValue<int>(); } set { this[nameof(CharacterRankUpRequiredNumDefault)].SetValue<int>(value); } }
        public Object CharacterRankUpRequiredNumMap { get { return this[nameof(CharacterRankUpRequiredNumMap)]; } set { this[nameof(CharacterRankUpRequiredNumMap)] = value; } }
        public float NaturalUpdateSaveParameterInterval { get { return this[nameof(NaturalUpdateSaveParameterInterval)].GetValue<float>(); } set { this[nameof(NaturalUpdateSaveParameterInterval)].SetValue<float>(value); } }
        public float CharacterHUDDisplayRange { get { return this[nameof(CharacterHUDDisplayRange)].GetValue<float>(); } set { this[nameof(CharacterHUDDisplayRange)].SetValue<float>(value); } }
        public float CharacterFedEatingTime { get { return this[nameof(CharacterFedEatingTime)].GetValue<float>(); } set { this[nameof(CharacterFedEatingTime)].SetValue<float>(value); } }
        public float CharacterStayingSecondsInSpa { get { return this[nameof(CharacterStayingSecondsInSpa)].GetValue<float>(); } set { this[nameof(CharacterStayingSecondsInSpa)].SetValue<float>(value); } }
        public int PalBoxPageNum { get { return this[nameof(PalBoxPageNum)].GetValue<int>(); } set { this[nameof(PalBoxPageNum)].SetValue<int>(value); } }
        public int PalBoxSlotNumInPage { get { return this[nameof(PalBoxSlotNumInPage)].GetValue<int>(); } set { this[nameof(PalBoxSlotNumInPage)].SetValue<int>(value); } }
        public float PlayerBattleJudge_EnemyDistance { get { return this[nameof(PlayerBattleJudge_EnemyDistance)].GetValue<float>(); } set { this[nameof(PlayerBattleJudge_EnemyDistance)].SetValue<float>(value); } }
        public Object BodyTemperature_SlipDamage_Percent { get { return this[nameof(BodyTemperature_SlipDamage_Percent)]; } set { this[nameof(BodyTemperature_SlipDamage_Percent)] = value; } }
        public Object BodyTemperature_StomachDecreaceRate { get { return this[nameof(BodyTemperature_StomachDecreaceRate)]; } set { this[nameof(BodyTemperature_StomachDecreaceRate)] = value; } }
        public Object SleepFXDefault { get { return this[nameof(SleepFXDefault)]; } set { this[nameof(SleepFXDefault)] = value; } }
        public float LiftupCharacterThrownVelocityScalar { get { return this[nameof(LiftupCharacterThrownVelocityScalar)].GetValue<float>(); } set { this[nameof(LiftupCharacterThrownVelocityScalar)].SetValue<float>(value); } }
        public float LiftupCharacterClearCollisionDelayTime { get { return this[nameof(LiftupCharacterClearCollisionDelayTime)].GetValue<float>(); } set { this[nameof(LiftupCharacterClearCollisionDelayTime)].SetValue<float>(value); } }
        public int NickNameMaxLength { get { return this[nameof(NickNameMaxLength)].GetValue<int>(); } set { this[nameof(NickNameMaxLength)].SetValue<int>(value); } }
        public float IntervalForPalAttackFromBall { get { return this[nameof(IntervalForPalAttackFromBall)].GetValue<float>(); } set { this[nameof(IntervalForPalAttackFromBall)].SetValue<float>(value); } }
        public bool CanShootRiderByFullRide { get { return this[nameof(CanShootRiderByFullRide)].Flag; } set { this[nameof(CanShootRiderByFullRide)].Flag = value; } }
        public bool HitWazaAttackForMapObject { get { return this[nameof(HitWazaAttackForMapObject)].Flag; } set { this[nameof(HitWazaAttackForMapObject)].Flag = value; } }
        public int KnockBack_MaxHpPercent { get { return this[nameof(KnockBack_MaxHpPercent)].GetValue<int>(); } set { this[nameof(KnockBack_MaxHpPercent)].SetValue<int>(value); } }
        public float KnockBack_Power { get { return this[nameof(KnockBack_Power)].GetValue<float>(); } set { this[nameof(KnockBack_Power)].SetValue<float>(value); } }
        public float StunTime { get { return this[nameof(StunTime)].GetValue<float>(); } set { this[nameof(StunTime)].SetValue<float>(value); } }
        public float StepCooldownTime { get { return this[nameof(StepCooldownTime)].GetValue<float>(); } set { this[nameof(StepCooldownTime)].SetValue<float>(value); } }
        public float Stun_GunDamageRate { get { return this[nameof(Stun_GunDamageRate)].GetValue<float>(); } set { this[nameof(Stun_GunDamageRate)].SetValue<float>(value); } }
        public bool IsEnableAutoReload { get { return this[nameof(IsEnableAutoReload)].Flag; } set { this[nameof(IsEnableAutoReload)].Flag = value; } }
        public float DeadShootImpulseRate { get { return this[nameof(DeadShootImpulseRate)].GetValue<float>(); } set { this[nameof(DeadShootImpulseRate)].SetValue<float>(value); } }
        public float DeadShootImpulseMax { get { return this[nameof(DeadShootImpulseMax)].GetValue<float>(); } set { this[nameof(DeadShootImpulseMax)].SetValue<float>(value); } }
        public float OtomoDamageRate_Defense { get { return this[nameof(OtomoDamageRate_Defense)].GetValue<float>(); } set { this[nameof(OtomoDamageRate_Defense)].SetValue<float>(value); } }
        public int DamageValueMin_MapObject { get { return this[nameof(DamageValueMin_MapObject)].GetValue<int>(); } set { this[nameof(DamageValueMin_MapObject)].SetValue<int>(value); } }
        public float DamageRate_WealPoint { get { return this[nameof(DamageRate_WealPoint)].GetValue<float>(); } set { this[nameof(DamageRate_WealPoint)].SetValue<float>(value); } }
        public float DamageRate_StrongPoint { get { return this[nameof(DamageRate_StrongPoint)].GetValue<float>(); } set { this[nameof(DamageRate_StrongPoint)].SetValue<float>(value); } }
        public float DamageRate_SleepHit { get { return this[nameof(DamageRate_SleepHit)].GetValue<float>(); } set { this[nameof(DamageRate_SleepHit)].SetValue<float>(value); } }
        public float FinalDamageRate_Waza { get { return this[nameof(FinalDamageRate_Waza)].GetValue<float>(); } set { this[nameof(FinalDamageRate_Waza)].SetValue<float>(value); } }
        public float FinalDamageRate_Weapon { get { return this[nameof(FinalDamageRate_Weapon)].GetValue<float>(); } set { this[nameof(FinalDamageRate_Weapon)].SetValue<float>(value); } }
        public float FinalDamageRate_Mine { get { return this[nameof(FinalDamageRate_Mine)].GetValue<float>(); } set { this[nameof(FinalDamageRate_Mine)].SetValue<float>(value); } }
        public float FinalDamageRate_MapObject_Waza { get { return this[nameof(FinalDamageRate_MapObject_Waza)].GetValue<float>(); } set { this[nameof(FinalDamageRate_MapObject_Waza)].SetValue<float>(value); } }
        public float FinalDamageRate_MapObject_Weapon { get { return this[nameof(FinalDamageRate_MapObject_Weapon)].GetValue<float>(); } set { this[nameof(FinalDamageRate_MapObject_Weapon)].SetValue<float>(value); } }
        public float FinalDamageRate_MapObject_Mine { get { return this[nameof(FinalDamageRate_MapObject_Mine)].GetValue<float>(); } set { this[nameof(FinalDamageRate_MapObject_Mine)].SetValue<float>(value); } }
        public float FoliageDefault_Defense { get { return this[nameof(FoliageDefault_Defense)].GetValue<float>(); } set { this[nameof(FoliageDefault_Defense)].SetValue<float>(value); } }
        public float WazaAttackerLevelDamage_Power { get { return this[nameof(WazaAttackerLevelDamage_Power)].GetValue<float>(); } set { this[nameof(WazaAttackerLevelDamage_Power)].SetValue<float>(value); } }
        public float DamageRandomRate_Min { get { return this[nameof(DamageRandomRate_Min)].GetValue<float>(); } set { this[nameof(DamageRandomRate_Min)].SetValue<float>(value); } }
        public float DamageRandomRate_Max { get { return this[nameof(DamageRandomRate_Max)].GetValue<float>(); } set { this[nameof(DamageRandomRate_Max)].SetValue<float>(value); } }
        public float LevelDamageCorrect { get { return this[nameof(LevelDamageCorrect)].GetValue<float>(); } set { this[nameof(LevelDamageCorrect)].SetValue<float>(value); } }
        public float LevelStatusAccumulateCorrect { get { return this[nameof(LevelStatusAccumulateCorrect)].GetValue<float>(); } set { this[nameof(LevelStatusAccumulateCorrect)].SetValue<float>(value); } }
        public float DamageElementMatchRate { get { return this[nameof(DamageElementMatchRate)].GetValue<float>(); } set { this[nameof(DamageElementMatchRate)].SetValue<float>(value); } }
        public float MineAttack_DefensePower { get { return this[nameof(MineAttack_DefensePower)].GetValue<float>(); } set { this[nameof(MineAttack_DefensePower)].SetValue<float>(value); } }
        public float StatusCalculate_LevelMultiply_HP { get { return this[nameof(StatusCalculate_LevelMultiply_HP)].GetValue<float>(); } set { this[nameof(StatusCalculate_LevelMultiply_HP)].SetValue<float>(value); } }
        public int StatusCalculate_TribePlus_HP { get { return this[nameof(StatusCalculate_TribePlus_HP)].GetValue<int>(); } set { this[nameof(StatusCalculate_TribePlus_HP)].SetValue<int>(value); } }
        public int StatusCalculate_ConstPlus_HP { get { return this[nameof(StatusCalculate_ConstPlus_HP)].GetValue<int>(); } set { this[nameof(StatusCalculate_ConstPlus_HP)].SetValue<int>(value); } }
        public float StatusCalculate_LevelMultiply_Attack { get { return this[nameof(StatusCalculate_LevelMultiply_Attack)].GetValue<float>(); } set { this[nameof(StatusCalculate_LevelMultiply_Attack)].SetValue<float>(value); } }
        public int StatusCalculate_ConstPlus_Attack { get { return this[nameof(StatusCalculate_ConstPlus_Attack)].GetValue<int>(); } set { this[nameof(StatusCalculate_ConstPlus_Attack)].SetValue<int>(value); } }
        public float StatusCalculate_LevelMultiply_Defense { get { return this[nameof(StatusCalculate_LevelMultiply_Defense)].GetValue<float>(); } set { this[nameof(StatusCalculate_LevelMultiply_Defense)].SetValue<float>(value); } }
        public int StatusCalculate_ConstPlus_Defense { get { return this[nameof(StatusCalculate_ConstPlus_Defense)].GetValue<int>(); } set { this[nameof(StatusCalculate_ConstPlus_Defense)].SetValue<int>(value); } }
        public float StatusCalculate_TribeMultiply_CraftSpeed { get { return this[nameof(StatusCalculate_TribeMultiply_CraftSpeed)].GetValue<float>(); } set { this[nameof(StatusCalculate_TribeMultiply_CraftSpeed)].SetValue<float>(value); } }
        public float StatusCalculate_GenkaiToppa_PerAdd { get { return this[nameof(StatusCalculate_GenkaiToppa_PerAdd)].GetValue<float>(); } set { this[nameof(StatusCalculate_GenkaiToppa_PerAdd)].SetValue<float>(value); } }
        public float StatusCalculate_Talent_PerAdd { get { return this[nameof(StatusCalculate_Talent_PerAdd)].GetValue<float>(); } set { this[nameof(StatusCalculate_Talent_PerAdd)].SetValue<float>(value); } }
        public float BreakedWeaponDamageRate { get { return this[nameof(BreakedWeaponDamageRate)].GetValue<float>(); } set { this[nameof(BreakedWeaponDamageRate)].SetValue<float>(value); } }
        public float BreakedArmorDefenseRate { get { return this[nameof(BreakedArmorDefenseRate)].GetValue<float>(); } set { this[nameof(BreakedArmorDefenseRate)].SetValue<float>(value); } }
        public float ArmorDurabilityDamageDivide { get { return this[nameof(ArmorDurabilityDamageDivide)].GetValue<float>(); } set { this[nameof(ArmorDurabilityDamageDivide)].SetValue<float>(value); } }
        public float ClimbingStamina_Move { get { return this[nameof(ClimbingStamina_Move)].GetValue<float>(); } set { this[nameof(ClimbingStamina_Move)].SetValue<float>(value); } }
        public float ClimbingStamina_Jump { get { return this[nameof(ClimbingStamina_Jump)].GetValue<float>(); } set { this[nameof(ClimbingStamina_Jump)].SetValue<float>(value); } }
        public float RideWazaStaminaRate { get { return this[nameof(RideWazaStaminaRate)].GetValue<float>(); } set { this[nameof(RideWazaStaminaRate)].SetValue<float>(value); } }
        public bool bIsEnableJumpPreliminary { get { return this[nameof(bIsEnableJumpPreliminary)].Flag; } set { this[nameof(bIsEnableJumpPreliminary)].Flag = value; } }
        public float JumpInterval { get { return this[nameof(JumpInterval)].GetValue<float>(); } set { this[nameof(JumpInterval)].SetValue<float>(value); } }
        public float FlyMaxHeight { get { return this[nameof(FlyMaxHeight)].GetValue<float>(); } set { this[nameof(FlyMaxHeight)].SetValue<float>(value); } }
        public float FlyHover_SP { get { return this[nameof(FlyHover_SP)].GetValue<float>(); } set { this[nameof(FlyHover_SP)].SetValue<float>(value); } }
        public float FlyHorizon_SP { get { return this[nameof(FlyHorizon_SP)].GetValue<float>(); } set { this[nameof(FlyHorizon_SP)].SetValue<float>(value); } }
        public float FlyHorizon_Dash_SP { get { return this[nameof(FlyHorizon_Dash_SP)].GetValue<float>(); } set { this[nameof(FlyHorizon_Dash_SP)].SetValue<float>(value); } }
        public float FlyVertical_SP { get { return this[nameof(FlyVertical_SP)].GetValue<float>(); } set { this[nameof(FlyVertical_SP)].SetValue<float>(value); } }
        public float AimingSpeedRateInRide { get { return this[nameof(AimingSpeedRateInRide)].GetValue<float>(); } set { this[nameof(AimingSpeedRateInRide)].SetValue<float>(value); } }
        public float SlidingEndSpeed { get { return this[nameof(SlidingEndSpeed)].GetValue<float>(); } set { this[nameof(SlidingEndSpeed)].SetValue<float>(value); } }
        public int JumpSP { get { return this[nameof(JumpSP)].GetValue<int>(); } set { this[nameof(JumpSP)].SetValue<int>(value); } }
        public int StepSP { get { return this[nameof(StepSP)].GetValue<int>(); } set { this[nameof(StepSP)].SetValue<int>(value); } }
        public int MeleeAttackSP { get { return this[nameof(MeleeAttackSP)].GetValue<int>(); } set { this[nameof(MeleeAttackSP)].SetValue<int>(value); } }
        public float SprintSP { get { return this[nameof(SprintSP)].GetValue<float>(); } set { this[nameof(SprintSP)].SetValue<float>(value); } }
        public float GliderSP { get { return this[nameof(GliderSP)].GetValue<float>(); } set { this[nameof(GliderSP)].SetValue<float>(value); } }
        public float SwimmingFallWaitTimeSec { get { return this[nameof(SwimmingFallWaitTimeSec)].GetValue<float>(); } set { this[nameof(SwimmingFallWaitTimeSec)].SetValue<float>(value); } }
        public float Swimming_SP_Idle { get { return this[nameof(Swimming_SP_Idle)].GetValue<float>(); } set { this[nameof(Swimming_SP_Idle)].SetValue<float>(value); } }
        public float Swimming_SP_Swim { get { return this[nameof(Swimming_SP_Swim)].GetValue<float>(); } set { this[nameof(Swimming_SP_Swim)].SetValue<float>(value); } }
        public float Swimming_SP_DashSwim { get { return this[nameof(Swimming_SP_DashSwim)].GetValue<float>(); } set { this[nameof(Swimming_SP_DashSwim)].SetValue<float>(value); } }
        public float FluidFriction { get { return this[nameof(FluidFriction)].GetValue<float>(); } set { this[nameof(FluidFriction)].SetValue<float>(value); } }
        public float OverWeightSpeedZero_AddPercent { get { return this[nameof(OverWeightSpeedZero_AddPercent)].GetValue<float>(); } set { this[nameof(OverWeightSpeedZero_AddPercent)].SetValue<float>(value); } }
        public float WalkableFloorAngleForDefault { get { return this[nameof(WalkableFloorAngleForDefault)].GetValue<float>(); } set { this[nameof(WalkableFloorAngleForDefault)].SetValue<float>(value); } }
        public float WalkableFloorAngleForRide { get { return this[nameof(WalkableFloorAngleForRide)].GetValue<float>(); } set { this[nameof(WalkableFloorAngleForRide)].SetValue<float>(value); } }
        public bool IsEnableSpeedCollision { get { return this[nameof(IsEnableSpeedCollision)].Flag; } set { this[nameof(IsEnableSpeedCollision)].Flag = value; } }
        public float CollisionDamageMinSpeed { get { return this[nameof(CollisionDamageMinSpeed)].GetValue<float>(); } set { this[nameof(CollisionDamageMinSpeed)].SetValue<float>(value); } }
        public float SpeedCollisionDamagePower { get { return this[nameof(SpeedCollisionDamagePower)].GetValue<float>(); } set { this[nameof(SpeedCollisionDamagePower)].SetValue<float>(value); } }
        public float CollisionDamageSpeedMultiplay { get { return this[nameof(CollisionDamageSpeedMultiplay)].GetValue<float>(); } set { this[nameof(CollisionDamageSpeedMultiplay)].SetValue<float>(value); } }
        public float CollisionDamageWeightThreshold { get { return this[nameof(CollisionDamageWeightThreshold)].GetValue<float>(); } set { this[nameof(CollisionDamageWeightThreshold)].SetValue<float>(value); } }
        public float AutoHPRegene_Percent_perSecond { get { return this[nameof(AutoHPRegene_Percent_perSecond)].GetValue<float>(); } set { this[nameof(AutoHPRegene_Percent_perSecond)].SetValue<float>(value); } }
        public float AutoHPRegene_Percent_perSecond_Sleeping { get { return this[nameof(AutoHPRegene_Percent_perSecond_Sleeping)].GetValue<float>(); } set { this[nameof(AutoHPRegene_Percent_perSecond_Sleeping)].SetValue<float>(value); } }
        public float PosionHPDecrease_Percent_perSecond { get { return this[nameof(PosionHPDecrease_Percent_perSecond)].GetValue<float>(); } set { this[nameof(PosionHPDecrease_Percent_perSecond)].SetValue<float>(value); } }
        public float Starvation_DecreaseHP_Percent_perSecond { get { return this[nameof(Starvation_DecreaseHP_Percent_perSecond)].GetValue<float>(); } set { this[nameof(Starvation_DecreaseHP_Percent_perSecond)].SetValue<float>(value); } }
        public float AutoSANRegene_Percent_perSecond_PalStorage { get { return this[nameof(AutoSANRegene_Percent_perSecond_PalStorage)].GetValue<float>(); } set { this[nameof(AutoSANRegene_Percent_perSecond_PalStorage)].SetValue<float>(value); } }
        public float StomachDecreace_perSecond_Monster { get { return this[nameof(StomachDecreace_perSecond_Monster)].GetValue<float>(); } set { this[nameof(StomachDecreace_perSecond_Monster)].SetValue<float>(value); } }
        public float StomachDecreace_perSecond_Player { get { return this[nameof(StomachDecreace_perSecond_Player)].GetValue<float>(); } set { this[nameof(StomachDecreace_perSecond_Player)].SetValue<float>(value); } }
        public float StomachDecreace_AutoHealing { get { return this[nameof(StomachDecreace_AutoHealing)].GetValue<float>(); } set { this[nameof(StomachDecreace_AutoHealing)].SetValue<float>(value); } }
        public float StomachDecreace_WorkingRate { get { return this[nameof(StomachDecreace_WorkingRate)].GetValue<float>(); } set { this[nameof(StomachDecreace_WorkingRate)].SetValue<float>(value); } }
        public int HungerStart_StomachValue { get { return this[nameof(HungerStart_StomachValue)].GetValue<int>(); } set { this[nameof(HungerStart_StomachValue)].SetValue<int>(value); } }
        public int FullStomachPalStartEatFood { get { return this[nameof(FullStomachPalStartEatFood)].GetValue<int>(); } set { this[nameof(FullStomachPalStartEatFood)].SetValue<int>(value); } }
        public float FullStomachCost_ByWazaUse_Base { get { return this[nameof(FullStomachCost_ByWazaUse_Base)].GetValue<float>(); } set { this[nameof(FullStomachCost_ByWazaUse_Base)].SetValue<float>(value); } }
        public Object FullStomachCost_ByWazaUse_RateMap { get { return this[nameof(FullStomachCost_ByWazaUse_RateMap)]; } set { this[nameof(FullStomachCost_ByWazaUse_RateMap)] = value; } }
        public float StomachDecreaceRate_GroundRide_Sprint { get { return this[nameof(StomachDecreaceRate_GroundRide_Sprint)].GetValue<float>(); } set { this[nameof(StomachDecreaceRate_GroundRide_Sprint)].SetValue<float>(value); } }
        public float StomachDecreaceRate_WaterRide { get { return this[nameof(StomachDecreaceRate_WaterRide)].GetValue<float>(); } set { this[nameof(StomachDecreaceRate_WaterRide)].SetValue<float>(value); } }
        public float StomachDecreaceRate_WaterRide_Sprint { get { return this[nameof(StomachDecreaceRate_WaterRide_Sprint)].GetValue<float>(); } set { this[nameof(StomachDecreaceRate_WaterRide_Sprint)].SetValue<float>(value); } }
        public float StomachDecreaceRate_FlyRide { get { return this[nameof(StomachDecreaceRate_FlyRide)].GetValue<float>(); } set { this[nameof(StomachDecreaceRate_FlyRide)].SetValue<float>(value); } }
        public float StomachDecreaceRate_FlyRide_Sprint { get { return this[nameof(StomachDecreaceRate_FlyRide_Sprint)].GetValue<float>(); } set { this[nameof(StomachDecreaceRate_FlyRide_Sprint)].SetValue<float>(value); } }
        public int RemainderOfLife_Second { get { return this[nameof(RemainderOfLife_Second)].GetValue<int>(); } set { this[nameof(RemainderOfLife_Second)].SetValue<int>(value); } }
        public float HpDecreaseRate_Drowning { get { return this[nameof(HpDecreaseRate_Drowning)].GetValue<float>(); } set { this[nameof(HpDecreaseRate_Drowning)].SetValue<float>(value); } }
        public float PlayerShield_RecoverStartTime { get { return this[nameof(PlayerShield_RecoverStartTime)].GetValue<float>(); } set { this[nameof(PlayerShield_RecoverStartTime)].SetValue<float>(value); } }
        public float PlayerShield_RecoverPercentPerSecond { get { return this[nameof(PlayerShield_RecoverPercentPerSecond)].GetValue<float>(); } set { this[nameof(PlayerShield_RecoverPercentPerSecond)].SetValue<float>(value); } }
        public float StaminaRecover_PercentPerSecond { get { return this[nameof(StaminaRecover_PercentPerSecond)].GetValue<float>(); } set { this[nameof(StaminaRecover_PercentPerSecond)].SetValue<float>(value); } }
        public float ResuscitationTime { get { return this[nameof(ResuscitationTime)].GetValue<float>(); } set { this[nameof(ResuscitationTime)].SetValue<float>(value); } }
        public int PlayerDeath_DropOtomoNum { get { return this[nameof(PlayerDeath_DropOtomoNum)].GetValue<int>(); } set { this[nameof(PlayerDeath_DropOtomoNum)].SetValue<int>(value); } }
        public float PlayerDeath_DropOtomoRange { get { return this[nameof(PlayerDeath_DropOtomoRange)].GetValue<float>(); } set { this[nameof(PlayerDeath_DropOtomoRange)].SetValue<float>(value); } }
        public int PlayerDeath_DropOtomoDisappearHours { get { return this[nameof(PlayerDeath_DropOtomoDisappearHours)].GetValue<int>(); } set { this[nameof(PlayerDeath_DropOtomoDisappearHours)].SetValue<int>(value); } }
        public float PlayerDyingDamagePerTime { get { return this[nameof(PlayerDyingDamagePerTime)].GetValue<float>(); } set { this[nameof(PlayerDyingDamagePerTime)].SetValue<float>(value); } }
        public int ElementStatus_ResistanceInitialValue { get { return this[nameof(ElementStatus_ResistanceInitialValue)].GetValue<int>(); } set { this[nameof(ElementStatus_ResistanceInitialValue)].SetValue<int>(value); } }
        public float ElementStatus_AutoDecreasePerSecond { get { return this[nameof(ElementStatus_AutoDecreasePerSecond)].GetValue<float>(); } set { this[nameof(ElementStatus_AutoDecreasePerSecond)].SetValue<float>(value); } }
        public int ElementStatus_ResetResistanceSecond { get { return this[nameof(ElementStatus_ResetResistanceSecond)].GetValue<int>(); } set { this[nameof(ElementStatus_ResetResistanceSecond)].SetValue<int>(value); } }
        public int BuildExp { get { return this[nameof(BuildExp)].GetValue<int>(); } set { this[nameof(BuildExp)].SetValue<int>(value); } }
        public int CraftExp { get { return this[nameof(CraftExp)].GetValue<int>(); } set { this[nameof(CraftExp)].SetValue<int>(value); } }
        public int PickupItemOnLevelExp { get { return this[nameof(PickupItemOnLevelExp)].GetValue<int>(); } set { this[nameof(PickupItemOnLevelExp)].SetValue<int>(value); } }
        public int MapObjectDestroyProceedExp { get { return this[nameof(MapObjectDestroyProceedExp)].GetValue<int>(); } set { this[nameof(MapObjectDestroyProceedExp)].SetValue<int>(value); } }
        public float MapObjectDistributeExpRange { get { return this[nameof(MapObjectDistributeExpRange)].GetValue<float>(); } set { this[nameof(MapObjectDistributeExpRange)].SetValue<float>(value); } }
        public Object OtomoExp_LevelDifferenceMap { get { return this[nameof(OtomoExp_LevelDifferenceMap)]; } set { this[nameof(OtomoExp_LevelDifferenceMap)] = value; } }
        public int OtomoExp_HigherPlayerLevel { get { return this[nameof(OtomoExp_HigherPlayerLevel)].GetValue<int>(); } set { this[nameof(OtomoExp_HigherPlayerLevel)].SetValue<int>(value); } }
        public int CaptureExpBonus_Tier1_TableReferenceNum { get { return this[nameof(CaptureExpBonus_Tier1_TableReferenceNum)].GetValue<int>(); } set { this[nameof(CaptureExpBonus_Tier1_TableReferenceNum)].SetValue<int>(value); } }
        public int CaptureExpBonus_Tier2_TableReferenceNum { get { return this[nameof(CaptureExpBonus_Tier2_TableReferenceNum)].GetValue<int>(); } set { this[nameof(CaptureExpBonus_Tier2_TableReferenceNum)].SetValue<int>(value); } }
        public int CaptureExpBonus_Tier3_TableReferenceNum { get { return this[nameof(CaptureExpBonus_Tier3_TableReferenceNum)].GetValue<int>(); } set { this[nameof(CaptureExpBonus_Tier3_TableReferenceNum)].SetValue<int>(value); } }
        public Array<PalDebugOtomoPalInfo> NewGameOtomoPalSet { get { return new Array<PalDebugOtomoPalInfo>(this[nameof(NewGameOtomoPalSet)].Address); } }
        public Object NewGameInventoryItemSet { get { return this[nameof(NewGameInventoryItemSet)]; } set { this[nameof(NewGameInventoryItemSet)] = value; } }
        public Object NewGameLoadoutItemSet { get { return this[nameof(NewGameLoadoutItemSet)]; } set { this[nameof(NewGameLoadoutItemSet)] = value; } }
        public Vector WorldHUDDisplayOffsetDefault { get { return this[nameof(WorldHUDDisplayOffsetDefault)].As<Vector>(); } set { this["WorldHUDDisplayOffsetDefault"] = value; } }
        public float WorldHUDDisplayRangeDefault { get { return this[nameof(WorldHUDDisplayRangeDefault)].GetValue<float>(); } set { this[nameof(WorldHUDDisplayRangeDefault)].SetValue<float>(value); } }
        public float WorldHUDDetailDisplayRange { get { return this[nameof(WorldHUDDetailDisplayRange)].GetValue<float>(); } set { this[nameof(WorldHUDDetailDisplayRange)].SetValue<float>(value); } }
        public Array<PalDataTableRowName_ItemData> FarmCropWaterItemIds { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(FarmCropWaterItemIds)].Address); } }
        public float FarmCropGrowupSpeedBySec { get { return this[nameof(FarmCropGrowupSpeedBySec)].GetValue<float>(); } set { this[nameof(FarmCropGrowupSpeedBySec)].SetValue<float>(value); } }
        public float FarmCropIncreaseRateByWaterFillRate { get { return this[nameof(FarmCropIncreaseRateByWaterFillRate)].GetValue<float>(); } set { this[nameof(FarmCropIncreaseRateByWaterFillRate)].SetValue<float>(value); } }
        public Object MaxMoney { get { return this[nameof(MaxMoney)]; } set { this[nameof(MaxMoney)] = value; } }
        public int DefaultMoney { get { return this[nameof(DefaultMoney)].GetValue<int>(); } set { this[nameof(DefaultMoney)].SetValue<int>(value); } }
        public float SneakAttackBackJudgeAngle_Degree { get { return this[nameof(SneakAttackBackJudgeAngle_Degree)].GetValue<float>(); } set { this[nameof(SneakAttackBackJudgeAngle_Degree)].SetValue<float>(value); } }
        public float SneakAttack_PalMeleeWaza_AttackRate { get { return this[nameof(SneakAttack_PalMeleeWaza_AttackRate)].GetValue<float>(); } set { this[nameof(SneakAttack_PalMeleeWaza_AttackRate)].SetValue<float>(value); } }
        public float AutoAimCameraMoveRate { get { return this[nameof(AutoAimCameraMoveRate)].GetValue<float>(); } set { this[nameof(AutoAimCameraMoveRate)].SetValue<float>(value); } }
        public float AutoAimCharacterMoveRate { get { return this[nameof(AutoAimCharacterMoveRate)].GetValue<float>(); } set { this[nameof(AutoAimCharacterMoveRate)].SetValue<float>(value); } }
        public float AutoAimCameraAdsorptionSpeed { get { return this[nameof(AutoAimCameraAdsorptionSpeed)].GetValue<float>(); } set { this[nameof(AutoAimCameraAdsorptionSpeed)].SetValue<float>(value); } }
        public float AutoAimLockOnScreenSpaceRate { get { return this[nameof(AutoAimLockOnScreenSpaceRate)].GetValue<float>(); } set { this[nameof(AutoAimLockOnScreenSpaceRate)].SetValue<float>(value); } }
        public float ForceAutoAimTime { get { return this[nameof(ForceAutoAimTime)].GetValue<float>(); } set { this[nameof(ForceAutoAimTime)].SetValue<float>(value); } }
        public float SellItemRate { get { return this[nameof(SellItemRate)].GetValue<float>(); } set { this[nameof(SellItemRate)].SetValue<float>(value); } }
        public float PalPriceConstantValueA { get { return this[nameof(PalPriceConstantValueA)].GetValue<float>(); } set { this[nameof(PalPriceConstantValueA)].SetValue<float>(value); } }
        public float PalPriceConstantValueB { get { return this[nameof(PalPriceConstantValueB)].GetValue<float>(); } set { this[nameof(PalPriceConstantValueB)].SetValue<float>(value); } }
        public float SellPalRate { get { return this[nameof(SellPalRate)].GetValue<float>(); } set { this[nameof(SellPalRate)].SetValue<float>(value); } }
        public float SearchRangeOnThrowedCharacterLanded { get { return this[nameof(SearchRangeOnThrowedCharacterLanded)].GetValue<float>(); } set { this[nameof(SearchRangeOnThrowedCharacterLanded)].SetValue<float>(value); } }
        public float WorkCompleteReactionRangeFromPlayer { get { return this[nameof(WorkCompleteReactionRangeFromPlayer)].GetValue<float>(); } set { this[nameof(WorkCompleteReactionRangeFromPlayer)].SetValue<float>(value); } }
        public int WorkerCollectResourceStackMaxNum { get { return this[nameof(WorkerCollectResourceStackMaxNum)].GetValue<int>(); } set { this[nameof(WorkerCollectResourceStackMaxNum)].SetValue<int>(value); } }
        public EPalFacialEyeType FacialTypeHardWork { get { return (EPalFacialEyeType)this[nameof(FacialTypeHardWork)].GetValue<int>(); } set { this[nameof(FacialTypeHardWork)].SetValue<int>((int)value); } }
        public float Timeout_WorkerApproachToTarget { get { return this[nameof(Timeout_WorkerApproachToTarget)].GetValue<float>(); } set { this[nameof(Timeout_WorkerApproachToTarget)].SetValue<float>(value); } }
        public float WaitTime_WorkRepairFailedFindPath { get { return this[nameof(WaitTime_WorkRepairFailedFindPath)].GetValue<float>(); } set { this[nameof(WaitTime_WorkRepairFailedFindPath)].SetValue<float>(value); } }
        public float WorkerWaitingNotifyInterval { get { return this[nameof(WorkerWaitingNotifyInterval)].GetValue<float>(); } set { this[nameof(WorkerWaitingNotifyInterval)].SetValue<float>(value); } }
        public float WarpCheckInterval { get { return this[nameof(WarpCheckInterval)].GetValue<float>(); } set { this[nameof(WarpCheckInterval)].SetValue<float>(value); } }
        public float WarpCheckMoveDistanceThreshold { get { return this[nameof(WarpCheckMoveDistanceThreshold)].GetValue<float>(); } set { this[nameof(WarpCheckMoveDistanceThreshold)].SetValue<float>(value); } }
        public float WarpThreshold { get { return this[nameof(WarpThreshold)].GetValue<float>(); } set { this[nameof(WarpThreshold)].SetValue<float>(value); } }
        public float AutoDecreaseHateValue_PercentMaxHP_PerSecond { get { return this[nameof(AutoDecreaseHateValue_PercentMaxHP_PerSecond)].GetValue<float>(); } set { this[nameof(AutoDecreaseHateValue_PercentMaxHP_PerSecond)].SetValue<float>(value); } }
        public float HateDecreaseDamageRate { get { return this[nameof(HateDecreaseDamageRate)].GetValue<float>(); } set { this[nameof(HateDecreaseDamageRate)].SetValue<float>(value); } }
        public float Hate_ForceUp_HPRate_OtomoActive { get { return this[nameof(Hate_ForceUp_HPRate_OtomoActive)].GetValue<float>(); } set { this[nameof(Hate_ForceUp_HPRate_OtomoActive)].SetValue<float>(value); } }
        public float Hate_ForceUp_HPRate_IncidentBattle { get { return this[nameof(Hate_ForceUp_HPRate_IncidentBattle)].GetValue<float>(); } set { this[nameof(Hate_ForceUp_HPRate_IncidentBattle)].SetValue<float>(value); } }
        public float CombatEndDistance_BattleStartSelfPos_To_SelfPos { get { return this[nameof(CombatEndDistance_BattleStartSelfPos_To_SelfPos)].GetValue<float>(); } set { this[nameof(CombatEndDistance_BattleStartSelfPos_To_SelfPos)].SetValue<float>(value); } }
        public float CombatEndDistance_BattleStartSelfPos_To_TargetPos { get { return this[nameof(CombatEndDistance_BattleStartSelfPos_To_TargetPos)].GetValue<float>(); } set { this[nameof(CombatEndDistance_BattleStartSelfPos_To_TargetPos)].SetValue<float>(value); } }
        public float CombatEndDistance_BattleStartSelfPos_To_TargetPos_AddFirstTargetDistance { get { return this[nameof(CombatEndDistance_BattleStartSelfPos_To_TargetPos_AddFirstTargetDistance)].GetValue<float>(); } set { this[nameof(CombatEndDistance_BattleStartSelfPos_To_TargetPos_AddFirstTargetDistance)].SetValue<float>(value); } }
        public float NavigationAreaDivideExtents { get { return this[nameof(NavigationAreaDivideExtents)].GetValue<float>(); } set { this[nameof(NavigationAreaDivideExtents)].SetValue<float>(value); } }
        public Array<PalNavigationUpdateFrequencySetting> NavigationUpdateFrequencySettingsFromPlayer { get { return new Array<PalNavigationUpdateFrequencySetting>(this[nameof(NavigationUpdateFrequencySettingsFromPlayer)].Address); } }
        public float autoSaveSpan { get { return this[nameof(autoSaveSpan)].GetValue<float>(); } set { this[nameof(autoSaveSpan)].SetValue<float>(value); } }
        public Object SaveDataName_WorldBaseInfo { get { return this[nameof(SaveDataName_WorldBaseInfo)]; } set { this[nameof(SaveDataName_WorldBaseInfo)] = value; } }
        public Object SaveDataName_World { get { return this[nameof(SaveDataName_World)]; } set { this[nameof(SaveDataName_World)] = value; } }
        public Object SaveDataName_PlayerDirectory { get { return this[nameof(SaveDataName_PlayerDirectory)]; } set { this[nameof(SaveDataName_PlayerDirectory)] = value; } }
        public Object SaveDataName_LocalData { get { return this[nameof(SaveDataName_LocalData)]; } set { this[nameof(SaveDataName_LocalData)] = value; } }
        public Object SaveDataName_WorldOption { get { return this[nameof(SaveDataName_WorldOption)]; } set { this[nameof(SaveDataName_WorldOption)] = value; } }
        public Object MaxWorldDataNumMap { get { return this[nameof(MaxWorldDataNumMap)]; } set { this[nameof(MaxWorldDataNumMap)] = value; } }
        public int PalWorldTime_GameStartHour { get { return this[nameof(PalWorldTime_GameStartHour)].GetValue<int>(); } set { this[nameof(PalWorldTime_GameStartHour)].SetValue<int>(value); } }
        public int PalWorldMinutes_RealOneMinute { get { return this[nameof(PalWorldMinutes_RealOneMinute)].GetValue<int>(); } set { this[nameof(PalWorldMinutes_RealOneMinute)].SetValue<int>(value); } }
        public int NightStartHour { get { return this[nameof(NightStartHour)].GetValue<int>(); } set { this[nameof(NightStartHour)].SetValue<int>(value); } }
        public int NightEndHour { get { return this[nameof(NightEndHour)].GetValue<int>(); } set { this[nameof(NightEndHour)].SetValue<int>(value); } }
        public int PlayerMorningHour { get { return this[nameof(PlayerMorningHour)].GetValue<int>(); } set { this[nameof(PlayerMorningHour)].SetValue<int>(value); } }
        public int PlayerSleepStartHour { get { return this[nameof(PlayerSleepStartHour)].GetValue<int>(); } set { this[nameof(PlayerSleepStartHour)].SetValue<int>(value); } }
        public int NightSkipWaitSecond { get { return this[nameof(NightSkipWaitSecond)].GetValue<int>(); } set { this[nameof(NightSkipWaitSecond)].SetValue<int>(value); } }
        public float LocalPlayerAndOtomo_LightRangeScale { get { return this[nameof(LocalPlayerAndOtomo_LightRangeScale)].GetValue<float>(); } set { this[nameof(LocalPlayerAndOtomo_LightRangeScale)].SetValue<float>(value); } }
        public Vector BuildBaseUnitGridDefinition { get { return this[nameof(BuildBaseUnitGridDefinition)].As<Vector>(); } set { this["BuildBaseUnitGridDefinition"] = value; } }
        public float BuildSimulationVerticalAdjustRate { get { return this[nameof(BuildSimulationVerticalAdjustRate)].GetValue<float>(); } set { this[nameof(BuildSimulationVerticalAdjustRate)].SetValue<float>(value); } }
        public float BuildSimulationVerticalMinLength { get { return this[nameof(BuildSimulationVerticalMinLength)].GetValue<float>(); } set { this[nameof(BuildSimulationVerticalMinLength)].SetValue<float>(value); } }
        public float BuildSimulationFoundationFloatingAllowance { get { return this[nameof(BuildSimulationFoundationFloatingAllowance)].GetValue<float>(); } set { this[nameof(BuildSimulationFoundationFloatingAllowance)].SetValue<float>(value); } }
        public Object BuildSimulationFoundationCheckCollisionScale { get { return this[nameof(BuildSimulationFoundationCheckCollisionScale)]; } set { this[nameof(BuildSimulationFoundationCheckCollisionScale)] = value; } }
        public float BuildSimulationRoofHeightOffset { get { return this[nameof(BuildSimulationRoofHeightOffset)].GetValue<float>(); } set { this[nameof(BuildSimulationRoofHeightOffset)].SetValue<float>(value); } }
        public float BuildSimulationStairHeightOffset { get { return this[nameof(BuildSimulationStairHeightOffset)].GetValue<float>(); } set { this[nameof(BuildSimulationStairHeightOffset)].SetValue<float>(value); } }
        public float BuildSimulationLeanAngleMax { get { return this[nameof(BuildSimulationLeanAngleMax)].GetValue<float>(); } set { this[nameof(BuildSimulationLeanAngleMax)].SetValue<float>(value); } }
        public float BuildingProgressInterpolationSpeed { get { return this[nameof(BuildingProgressInterpolationSpeed)].GetValue<float>(); } set { this[nameof(BuildingProgressInterpolationSpeed)].SetValue<float>(value); } }
        public int PlayerRecord_BuildingObjectMaxNum { get { return this[nameof(PlayerRecord_BuildingObjectMaxNum)].GetValue<int>(); } set { this[nameof(PlayerRecord_BuildingObjectMaxNum)].SetValue<int>(value); } }
        public float BuildingMaxZ { get { return this[nameof(BuildingMaxZ)].GetValue<float>(); } set { this[nameof(BuildingMaxZ)].SetValue<float>(value); } }
        public int BuildObj_HatchedPalCharacterLevel { get { return this[nameof(BuildObj_HatchedPalCharacterLevel)].GetValue<int>(); } set { this[nameof(BuildObj_HatchedPalCharacterLevel)].SetValue<int>(value); } }
        public float BuildObj_DamageScarecrowStartRecoveryTime { get { return this[nameof(BuildObj_DamageScarecrowStartRecoveryTime)].GetValue<float>(); } set { this[nameof(BuildObj_DamageScarecrowStartRecoveryTime)].SetValue<float>(value); } }
        public float BaseCampAreaRange { get { return this[nameof(BaseCampAreaRange)].GetValue<float>(); } set { this[nameof(BaseCampAreaRange)].SetValue<float>(value); } }
        public float BaseCampPalFindWorkRange { get { return this[nameof(BaseCampPalFindWorkRange)].GetValue<float>(); } set { this[nameof(BaseCampPalFindWorkRange)].SetValue<float>(value); } }
        public float PalArriveToWorkLocationRange { get { return this[nameof(PalArriveToWorkLocationRange)].GetValue<float>(); } set { this[nameof(PalArriveToWorkLocationRange)].SetValue<float>(value); } }
        public float PalArriveToWorkLocationRangeZ { get { return this[nameof(PalArriveToWorkLocationRangeZ)].GetValue<float>(); } set { this[nameof(PalArriveToWorkLocationRangeZ)].SetValue<float>(value); } }
        public float BaseCampNeighborMinimumDistance { get { return this[nameof(BaseCampNeighborMinimumDistance)].GetValue<float>(); } set { this[nameof(BaseCampNeighborMinimumDistance)].SetValue<float>(value); } }
        public float PalRotateSpeedToWork { get { return this[nameof(PalRotateSpeedToWork)].GetValue<float>(); } set { this[nameof(PalRotateSpeedToWork)].SetValue<float>(value); } }
        public float BaseCampFoliageWorkableRange { get { return this[nameof(BaseCampFoliageWorkableRange)].GetValue<float>(); } set { this[nameof(BaseCampFoliageWorkableRange)].SetValue<float>(value); } }
        public float BaseCampHungerApproachToPlayer { get { return this[nameof(BaseCampHungerApproachToPlayer)].GetValue<float>(); } set { this[nameof(BaseCampHungerApproachToPlayer)].SetValue<float>(value); } }
        public float BaseCampHungerUnreachableObjectTimeoutRealSeconds { get { return this[nameof(BaseCampHungerUnreachableObjectTimeoutRealSeconds)].GetValue<float>(); } set { this[nameof(BaseCampHungerUnreachableObjectTimeoutRealSeconds)].SetValue<float>(value); } }
        public float HungerHUDDisplayRange { get { return this[nameof(HungerHUDDisplayRange)].GetValue<float>(); } set { this[nameof(HungerHUDDisplayRange)].SetValue<float>(value); } }
        public float WorkAmountBySecForPlayer { get { return this[nameof(WorkAmountBySecForPlayer)].GetValue<float>(); } set { this[nameof(WorkAmountBySecForPlayer)].SetValue<float>(value); } }
        public float BaseCampWorkerEventTriggerInterval { get { return this[nameof(BaseCampWorkerEventTriggerInterval)].GetValue<float>(); } set { this[nameof(BaseCampWorkerEventTriggerInterval)].SetValue<float>(value); } }
        public float BaseCampWorkerEventTriggerProbability { get { return this[nameof(BaseCampWorkerEventTriggerProbability)].GetValue<float>(); } set { this[nameof(BaseCampWorkerEventTriggerProbability)].SetValue<float>(value); } }
        public float BaseCampWorkerSanityWarningThreshold { get { return this[nameof(BaseCampWorkerSanityWarningThreshold)].GetValue<float>(); } set { this[nameof(BaseCampWorkerSanityWarningThreshold)].SetValue<float>(value); } }
        public float BaseCampWorkerFinishEatingFullStomach { get { return this[nameof(BaseCampWorkerFinishEatingFullStomach)].GetValue<float>(); } set { this[nameof(BaseCampWorkerFinishEatingFullStomach)].SetValue<float>(value); } }
        public float BaseCampWorkerFinishEatingSanity { get { return this[nameof(BaseCampWorkerFinishEatingSanity)].GetValue<float>(); } set { this[nameof(BaseCampWorkerFinishEatingSanity)].SetValue<float>(value); } }
        public int BaseCampWorkerFinishEatCount { get { return this[nameof(BaseCampWorkerFinishEatCount)].GetValue<int>(); } set { this[nameof(BaseCampWorkerFinishEatCount)].SetValue<int>(value); } }
        public float BaseCampWorkerRecoverHungryTurnToTargetTimeout { get { return this[nameof(BaseCampWorkerRecoverHungryTurnToTargetTimeout)].GetValue<float>(); } set { this[nameof(BaseCampWorkerRecoverHungryTurnToTargetTimeout)].SetValue<float>(value); } }
        public float BaseCampWorkerStartSleepHpPercentage { get { return this[nameof(BaseCampWorkerStartSleepHpPercentage)].GetValue<float>(); } set { this[nameof(BaseCampWorkerStartSleepHpPercentage)].SetValue<float>(value); } }
        public float BaseCampWorkerSleepInPlaceRecoverSanityRate { get { return this[nameof(BaseCampWorkerSleepInPlaceRecoverSanityRate)].GetValue<float>(); } set { this[nameof(BaseCampWorkerSleepInPlaceRecoverSanityRate)].SetValue<float>(value); } }
        public float BaseCampWorkerDistancePickableItem { get { return this[nameof(BaseCampWorkerDistancePickableItem)].GetValue<float>(); } set { this[nameof(BaseCampWorkerDistancePickableItem)].SetValue<float>(value); } }
        public Array<EPalBaseCampItemContainerType> BaseCampBuildingItemContainerPriority { get { return new Array<EPalBaseCampItemContainerType>(this[nameof(BaseCampBuildingItemContainerPriority)].Address); } }
        public float FoliageRespawnFailedExtraRangeOfBaseCamp { get { return this[nameof(FoliageRespawnFailedExtraRangeOfBaseCamp)].GetValue<float>(); } set { this[nameof(FoliageRespawnFailedExtraRangeOfBaseCamp)].SetValue<float>(value); } }
        public float BaseCampPalCombatRange_AddCampRange { get { return this[nameof(BaseCampPalCombatRange_AddCampRange)].GetValue<float>(); } set { this[nameof(BaseCampPalCombatRange_AddCampRange)].SetValue<float>(value); } }
        public FloatInterval BaseCampPalWalkTime_BeforeSleep { get { return this[nameof(BaseCampPalWalkTime_BeforeSleep)].As<FloatInterval>(); } set { this["BaseCampPalWalkTime_BeforeSleep"] = value; } }
        public float BaseCampTimeFinishBattleModeAfterEmptyEnemy { get { return this[nameof(BaseCampTimeFinishBattleModeAfterEmptyEnemy)].GetValue<float>(); } set { this[nameof(BaseCampTimeFinishBattleModeAfterEmptyEnemy)].SetValue<float>(value); } }
        public EPalCharacterImportanceType BaseCampWorkerMoveModeChangeThreshold { get { return (EPalCharacterImportanceType)this[nameof(BaseCampWorkerMoveModeChangeThreshold)].GetValue<int>(); } set { this[nameof(BaseCampWorkerMoveModeChangeThreshold)].SetValue<int>((int)value); } }
        public int BaseCampWorkerDirectorTickForAssignWorkByCount { get { return this[nameof(BaseCampWorkerDirectorTickForAssignWorkByCount)].GetValue<int>(); } set { this[nameof(BaseCampWorkerDirectorTickForAssignWorkByCount)].SetValue<int>(value); } }
        public float BaseCampWorkerLookToTargetWork { get { return this[nameof(BaseCampWorkerLookToTargetWork)].GetValue<float>(); } set { this[nameof(BaseCampWorkerLookToTargetWork)].SetValue<float>(value); } }
        public float ReviveWorkAdditionalRange { get { return this[nameof(ReviveWorkAdditionalRange)].GetValue<float>(); } set { this[nameof(ReviveWorkAdditionalRange)].SetValue<float>(value); } }
        public float WorkAroundRangeDefault { get { return this[nameof(WorkAroundRangeDefault)].GetValue<float>(); } set { this[nameof(WorkAroundRangeDefault)].SetValue<float>(value); } }
        public Array<EPalWorkType> IssueNotifyWorkTypes { get { return new Array<EPalWorkType>(this[nameof(IssueNotifyWorkTypes)].Address); } }
        public float WorkAmountByManMonth { get { return this[nameof(WorkAmountByManMonth)].GetValue<float>(); } set { this[nameof(WorkAmountByManMonth)].SetValue<float>(value); } }
        public float WorkNotifyDelayTime { get { return this[nameof(WorkNotifyDelayTime)].GetValue<float>(); } set { this[nameof(WorkNotifyDelayTime)].SetValue<float>(value); } }
        public float WorkFinishDelayCallAddWorkNotifyDelayTime { get { return this[nameof(WorkFinishDelayCallAddWorkNotifyDelayTime)].GetValue<float>(); } set { this[nameof(WorkFinishDelayCallAddWorkNotifyDelayTime)].SetValue<float>(value); } }
        public float WorkIgnitionTorchWaitTime { get { return this[nameof(WorkIgnitionTorchWaitTime)].GetValue<float>(); } set { this[nameof(WorkIgnitionTorchWaitTime)].SetValue<float>(value); } }
        public Object WorkAssignFailedLogTypeMap { get { return this[nameof(WorkAssignFailedLogTypeMap)]; } set { this[nameof(WorkAssignFailedLogTypeMap)] = value; } }
        public float WorkTransportingSpeedRate { get { return this[nameof(WorkTransportingSpeedRate)].GetValue<float>(); } set { this[nameof(WorkTransportingSpeedRate)].SetValue<float>(value); } }
        public Array<PalDataTableRowName_ItemData> BaseCampNotTransportItemBlackList { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(BaseCampNotTransportItemBlackList)].Address); } }
        public float WorkTransportingDelayTimeDropItem { get { return this[nameof(WorkTransportingDelayTimeDropItem)].GetValue<float>(); } set { this[nameof(WorkTransportingDelayTimeDropItem)].SetValue<float>(value); } }
        public float BaseCampStopProvideEnergyInterval { get { return this[nameof(BaseCampStopProvideEnergyInterval)].GetValue<float>(); } set { this[nameof(BaseCampStopProvideEnergyInterval)].SetValue<float>(value); } }
        public Object BaseCampPassiveEffectWorkHardInfoMap { get { return this[nameof(BaseCampPassiveEffectWorkHardInfoMap)]; } set { this[nameof(BaseCampPassiveEffectWorkHardInfoMap)] = value; } }
        public float BaseCampWorkCollectionRestoreStashSeconds { get { return this[nameof(BaseCampWorkCollectionRestoreStashSeconds)].GetValue<float>(); } set { this[nameof(BaseCampWorkCollectionRestoreStashSeconds)].SetValue<float>(value); } }
        public Array<PalWorkTypeSet> WorkTypeAssignPriorityOrder { get { return new Array<PalWorkTypeSet>(this[nameof(WorkTypeAssignPriorityOrder)].Address); } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_Build { get { return this[nameof(WorkAssignDefineData_Build)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_Build"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_FoliageWork { get { return this[nameof(WorkAssignDefineData_FoliageWork)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_FoliageWork"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_ReviveCharacterWork { get { return this[nameof(WorkAssignDefineData_ReviveCharacterWork)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_ReviveCharacterWork"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_TransportItemInBaseCamp { get { return this[nameof(WorkAssignDefineData_TransportItemInBaseCamp)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_TransportItemInBaseCamp"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_RepairBuildObjectInBaseCamp { get { return this[nameof(WorkAssignDefineData_RepairBuildObjectInBaseCamp)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_RepairBuildObjectInBaseCamp"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_BreedFarm { get { return this[nameof(WorkAssignDefineData_BreedFarm)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_BreedFarm"] = value; } }
        public PalWorkAssignDefineDataStaticSetting WorkAssignDefineData_ExtinguishBurn { get { return this[nameof(WorkAssignDefineData_ExtinguishBurn)].As<PalWorkAssignDefineDataStaticSetting>(); } set { this["WorkAssignDefineData_ExtinguishBurn"] = value; } }
        public int WorkSuitabilityMaxRank { get { return this[nameof(WorkSuitabilityMaxRank)].GetValue<int>(); } set { this[nameof(WorkSuitabilityMaxRank)].SetValue<int>(value); } }
        public Object WorkSuitabilityDefineDataMap { get { return this[nameof(WorkSuitabilityDefineDataMap)]; } set { this[nameof(WorkSuitabilityDefineDataMap)] = value; } }
        public PalWorkSuitabilityCollectionDefineData WorkSuitabilityDefineData_Collection { get { return this[nameof(WorkSuitabilityDefineData_Collection)].As<PalWorkSuitabilityCollectionDefineData>(); } set { this["WorkSuitabilityDefineData_Collection"] = value; } }
        public PalWorkSuitabilityDeforestDefineData WorkSuitabilityDefineData_Deforest { get { return this[nameof(WorkSuitabilityDefineData_Deforest)].As<PalWorkSuitabilityDeforestDefineData>(); } set { this["WorkSuitabilityDefineData_Deforest"] = value; } }
        public PalWorkSuitabilityMiningDefineData WorkSuitabilityDefineData_Mining { get { return this[nameof(WorkSuitabilityDefineData_Mining)].As<PalWorkSuitabilityMiningDefineData>(); } set { this["WorkSuitabilityDefineData_Mining"] = value; } }
        public int DropItemWaitInsertMaxNumPerTick { get { return this[nameof(DropItemWaitInsertMaxNumPerTick)].GetValue<int>(); } set { this[nameof(DropItemWaitInsertMaxNumPerTick)].SetValue<int>(value); } }
        public PalDungeonMarkerPointSpawnParameter DungeonSpawnParameterDefault { get { return this[nameof(DungeonSpawnParameterDefault)].As<PalDungeonMarkerPointSpawnParameter>(); } set { this["DungeonSpawnParameterDefault"] = value; } }
        public float GamePad_NotAimCameraRotateSpeed_DegreePerSecond { get { return this[nameof(GamePad_NotAimCameraRotateSpeed_DegreePerSecond)].GetValue<float>(); } set { this[nameof(GamePad_NotAimCameraRotateSpeed_DegreePerSecond)].SetValue<float>(value); } }
        public float GamePad_AimCameraRotateSpeed_DegreePerSecond { get { return this[nameof(GamePad_AimCameraRotateSpeed_DegreePerSecond)].GetValue<float>(); } set { this[nameof(GamePad_AimCameraRotateSpeed_DegreePerSecond)].SetValue<float>(value); } }
        public float Mouse_NotAimCameraRotateSpeed { get { return this[nameof(Mouse_NotAimCameraRotateSpeed)].GetValue<float>(); } set { this[nameof(Mouse_NotAimCameraRotateSpeed)].SetValue<float>(value); } }
        public float Mouse_AimCameraRotateSpeed { get { return this[nameof(Mouse_AimCameraRotateSpeed)].GetValue<float>(); } set { this[nameof(Mouse_AimCameraRotateSpeed)].SetValue<float>(value); } }
        public float YawCameraMaxSpeedRate { get { return this[nameof(YawCameraMaxSpeedRate)].GetValue<float>(); } set { this[nameof(YawCameraMaxSpeedRate)].SetValue<float>(value); } }
        public float TimeForCameraMaxSpeed { get { return this[nameof(TimeForCameraMaxSpeed)].GetValue<float>(); } set { this[nameof(TimeForCameraMaxSpeed)].SetValue<float>(value); } }
        public float AimInterpInterval { get { return this[nameof(AimInterpInterval)].GetValue<float>(); } set { this[nameof(AimInterpInterval)].SetValue<float>(value); } }
        public int InvaderSelfDeleteAddTime { get { return this[nameof(InvaderSelfDeleteAddTime)].GetValue<int>(); } set { this[nameof(InvaderSelfDeleteAddTime)].SetValue<int>(value); } }
        public float InvadeProbability { get { return this[nameof(InvadeProbability)].GetValue<float>(); } set { this[nameof(InvadeProbability)].SetValue<float>(value); } }
        public int InvadeOccurablePlayerLevel { get { return this[nameof(InvadeOccurablePlayerLevel)].GetValue<int>(); } set { this[nameof(InvadeOccurablePlayerLevel)].SetValue<int>(value); } }
        public int InvadeJudgmentInterval_Minutes { get { return this[nameof(InvadeJudgmentInterval_Minutes)].GetValue<int>(); } set { this[nameof(InvadeJudgmentInterval_Minutes)].SetValue<int>(value); } }
        public int InvadeCollTime_Max_Minutes { get { return this[nameof(InvadeCollTime_Max_Minutes)].GetValue<int>(); } set { this[nameof(InvadeCollTime_Max_Minutes)].SetValue<int>(value); } }
        public int InvadeCollTime_Min_Minutes { get { return this[nameof(InvadeCollTime_Min_Minutes)].GetValue<int>(); } set { this[nameof(InvadeCollTime_Min_Minutes)].SetValue<int>(value); } }
        public int InvadeReturnTime_Minutes { get { return this[nameof(InvadeReturnTime_Minutes)].GetValue<int>(); } set { this[nameof(InvadeReturnTime_Minutes)].SetValue<int>(value); } }
        public int InvadeStartPoint_BaseCampRadius_Min_cm { get { return this[nameof(InvadeStartPoint_BaseCampRadius_Min_cm)].GetValue<int>(); } set { this[nameof(InvadeStartPoint_BaseCampRadius_Min_cm)].SetValue<int>(value); } }
        public int InvadeStartPoint_BaseCampRadius_Max_cm { get { return this[nameof(InvadeStartPoint_BaseCampRadius_Max_cm)].GetValue<int>(); } set { this[nameof(InvadeStartPoint_BaseCampRadius_Max_cm)].SetValue<int>(value); } }
        public float VisitorNPCProbability { get { return this[nameof(VisitorNPCProbability)].GetValue<float>(); } set { this[nameof(VisitorNPCProbability)].SetValue<float>(value); } }
        public int VisitorNPCReturnTime_Minutes { get { return this[nameof(VisitorNPCReturnTime_Minutes)].GetValue<int>(); } set { this[nameof(VisitorNPCReturnTime_Minutes)].SetValue<int>(value); } }
        public float RidingAimOpacity { get { return this[nameof(RidingAimOpacity)].GetValue<float>(); } set { this[nameof(RidingAimOpacity)].SetValue<float>(value); } }
        public float hideUITimeWhenNotConflict { get { return this[nameof(hideUITimeWhenNotConflict)].GetValue<float>(); } set { this[nameof(hideUITimeWhenNotConflict)].SetValue<float>(value); } }
        public float firstCapturedUIDisplayTime { get { return this[nameof(firstCapturedUIDisplayTime)].GetValue<float>(); } set { this[nameof(firstCapturedUIDisplayTime)].SetValue<float>(value); } }
        public float capturedUIDisplayTime { get { return this[nameof(capturedUIDisplayTime)].GetValue<float>(); } set { this[nameof(capturedUIDisplayTime)].SetValue<float>(value); } }
        public float firstActivatedOtomoInfoDisplayTime { get { return this[nameof(firstActivatedOtomoInfoDisplayTime)].GetValue<float>(); } set { this[nameof(firstActivatedOtomoInfoDisplayTime)].SetValue<float>(value); } }
        public float playerLevelUpUIDIsplayTime { get { return this[nameof(playerLevelUpUIDIsplayTime)].GetValue<float>(); } set { this[nameof(playerLevelUpUIDIsplayTime)].SetValue<float>(value); } }
        public float playerExpGaugeUIDisplayTime { get { return this[nameof(playerExpGaugeUIDisplayTime)].GetValue<float>(); } set { this[nameof(playerExpGaugeUIDisplayTime)].SetValue<float>(value); } }
        public float otomoExpGaugeUIDisplayTime { get { return this[nameof(otomoExpGaugeUIDisplayTime)].GetValue<float>(); } set { this[nameof(otomoExpGaugeUIDisplayTime)].SetValue<float>(value); } }
        public float npcGaugeDisplayDistance { get { return this[nameof(npcGaugeDisplayDistance)].GetValue<float>(); } set { this[nameof(npcGaugeDisplayDistance)].SetValue<float>(value); } }
        public float npcGaugeDisplayRange_CameraSight { get { return this[nameof(npcGaugeDisplayRange_CameraSight)].GetValue<float>(); } set { this[nameof(npcGaugeDisplayRange_CameraSight)].SetValue<float>(value); } }
        public float GuildMemberGaugeDisplayDIstance { get { return this[nameof(GuildMemberGaugeDisplayDIstance)].GetValue<float>(); } set { this[nameof(GuildMemberGaugeDisplayDIstance)].SetValue<float>(value); } }
        public float downPlayerLoupeDisplayDistance { get { return this[nameof(downPlayerLoupeDisplayDistance)].GetValue<float>(); } set { this[nameof(downPlayerLoupeDisplayDistance)].SetValue<float>(value); } }
        public float downPlayerGaugeDisplayRange_CameraSight { get { return this[nameof(downPlayerGaugeDisplayRange_CameraSight)].GetValue<float>(); } set { this[nameof(downPlayerGaugeDisplayRange_CameraSight)].SetValue<float>(value); } }
        public Vector2D ReticleOffsetRate { get { return this[nameof(ReticleOffsetRate)].As<Vector2D>(); } set { this["ReticleOffsetRate"] = value; } }
        public int lowHealthEffectParcent { get { return this[nameof(lowHealthEffectParcent)].GetValue<int>(); } set { this[nameof(lowHealthEffectParcent)].SetValue<int>(value); } }
        public Object damageTextMargineMap { get { return this[nameof(damageTextMargineMap)]; } set { this[nameof(damageTextMargineMap)] = value; } }
        public float DamageTextDisplayLength { get { return this[nameof(DamageTextDisplayLength)].GetValue<float>(); } set { this[nameof(DamageTextDisplayLength)].SetValue<float>(value); } }
        public Vector2D damageTextMaxOffset { get { return this[nameof(damageTextMaxOffset)].As<Vector2D>(); } set { this["damageTextMaxOffset"] = value; } }
        public float damageTextOffsetInterpolationLength { get { return this[nameof(damageTextOffsetInterpolationLength)].GetValue<float>(); } set { this[nameof(damageTextOffsetInterpolationLength)].SetValue<float>(value); } }
        public Object damageTextScaleMap { get { return this[nameof(damageTextScaleMap)]; } set { this[nameof(damageTextScaleMap)] = value; } }
        public Vector2D damageTextRandomOffset { get { return this[nameof(damageTextRandomOffset)].As<Vector2D>(); } set { this["damageTextRandomOffset"] = value; } }
        public int strongEnemyMarkLevel { get { return this[nameof(strongEnemyMarkLevel)].GetValue<int>(); } set { this[nameof(strongEnemyMarkLevel)].SetValue<int>(value); } }
        public float otomoInteractUIDisplayDistance { get { return this[nameof(otomoInteractUIDisplayDistance)].GetValue<float>(); } set { this[nameof(otomoInteractUIDisplayDistance)].SetValue<float>(value); } }
        public float enemyMarkUIMinScale { get { return this[nameof(enemyMarkUIMinScale)].GetValue<float>(); } set { this[nameof(enemyMarkUIMinScale)].SetValue<float>(value); } }
        public float enemyMarkScaleInterpolationLength { get { return this[nameof(enemyMarkScaleInterpolationLength)].GetValue<float>(); } set { this[nameof(enemyMarkScaleInterpolationLength)].SetValue<float>(value); } }
        public Vector2D npcHPGaugeGlobalOffset { get { return this[nameof(npcHPGaugeGlobalOffset)].As<Vector2D>(); } set { this["npcHPGaugeGlobalOffset"] = value; } }
        public float delayGaugeStartTime { get { return this[nameof(delayGaugeStartTime)].GetValue<float>(); } set { this[nameof(delayGaugeStartTime)].SetValue<float>(value); } }
        public float delayGaugeProgressPerSecond { get { return this[nameof(delayGaugeProgressPerSecond)].GetValue<float>(); } set { this[nameof(delayGaugeProgressPerSecond)].SetValue<float>(value); } }
        public float inventoryWeaponRangeMaxBorder { get { return this[nameof(inventoryWeaponRangeMaxBorder)].GetValue<float>(); } set { this[nameof(inventoryWeaponRangeMaxBorder)].SetValue<float>(value); } }
        public float inventoryWeaponStabilityMinBorder { get { return this[nameof(inventoryWeaponStabilityMinBorder)].GetValue<float>(); } set { this[nameof(inventoryWeaponStabilityMinBorder)].SetValue<float>(value); } }
        public float inventoryWeaponAccuracyMinBorder { get { return this[nameof(inventoryWeaponAccuracyMinBorder)].GetValue<float>(); } set { this[nameof(inventoryWeaponAccuracyMinBorder)].SetValue<float>(value); } }
        public float worldmapUIMaskClearSize { get { return this[nameof(worldmapUIMaskClearSize)].GetValue<float>(); } set { this[nameof(worldmapUIMaskClearSize)].SetValue<float>(value); } }
        public float worldmapUIFTMergeDistance { get { return this[nameof(worldmapUIFTMergeDistance)].GetValue<float>(); } set { this[nameof(worldmapUIFTMergeDistance)].SetValue<float>(value); } }
        public int worldmapUIMaxMarker { get { return this[nameof(worldmapUIMaxMarker)].GetValue<int>(); } set { this[nameof(worldmapUIMaxMarker)].SetValue<int>(value); } }
        public float NPCHPGaugeUpdateSpan { get { return this[nameof(NPCHPGaugeUpdateSpan)].GetValue<float>(); } set { this[nameof(NPCHPGaugeUpdateSpan)].SetValue<float>(value); } }
        public float CaptureFailedUIDisplayTime { get { return this[nameof(CaptureFailedUIDisplayTime)].GetValue<float>(); } set { this[nameof(CaptureFailedUIDisplayTime)].SetValue<float>(value); } }
        public Array<PalDataTableRowName_ItemData> CaptureSphereSortArray { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(CaptureSphereSortArray)].Address); } }
        public float OpenGameOverUITime { get { return this[nameof(OpenGameOverUITime)].GetValue<float>(); } set { this[nameof(OpenGameOverUITime)].SetValue<float>(value); } }
        public float BlockRespawnTime { get { return this[nameof(BlockRespawnTime)].GetValue<float>(); } set { this[nameof(BlockRespawnTime)].SetValue<float>(value); } }
        public float InventoryWeightAlertRate { get { return this[nameof(InventoryWeightAlertRate)].GetValue<float>(); } set { this[nameof(InventoryWeightAlertRate)].SetValue<float>(value); } }
        public float InventoryWeightGaugeDIsplayTime { get { return this[nameof(InventoryWeightGaugeDIsplayTime)].GetValue<float>(); } set { this[nameof(InventoryWeightGaugeDIsplayTime)].SetValue<float>(value); } }
        public float OtomoLevelUpNoticeUIDisplayTime { get { return this[nameof(OtomoLevelUpNoticeUIDisplayTime)].GetValue<float>(); } set { this[nameof(OtomoLevelUpNoticeUIDisplayTime)].SetValue<float>(value); } }
        public float OtomoMasteredWazaNoticeUIDisplayTime { get { return this[nameof(OtomoMasteredWazaNoticeUIDisplayTime)].GetValue<float>(); } set { this[nameof(OtomoMasteredWazaNoticeUIDisplayTime)].SetValue<float>(value); } }
        public float ProgressGaugeInterpolationSpeed { get { return this[nameof(ProgressGaugeInterpolationSpeed)].GetValue<float>(); } set { this[nameof(ProgressGaugeInterpolationSpeed)].SetValue<float>(value); } }
        public float TeleportFadeInTime { get { return this[nameof(TeleportFadeInTime)].GetValue<float>(); } set { this[nameof(TeleportFadeInTime)].SetValue<float>(value); } }
        public float TeleportFadeOutTime { get { return this[nameof(TeleportFadeOutTime)].GetValue<float>(); } set { this[nameof(TeleportFadeOutTime)].SetValue<float>(value); } }
        public float PlayerTeleportTimeoutTime { get { return this[nameof(PlayerTeleportTimeoutTime)].GetValue<float>(); } set { this[nameof(PlayerTeleportTimeoutTime)].SetValue<float>(value); } }
        public Array<float> PassiveSkillAppendNumWeights { get { return new Array<float>(this[nameof(PassiveSkillAppendNumWeights)].Address); } }
        public bool bIsEggLauncherExplosion { get { return this[nameof(bIsEggLauncherExplosion)].Flag; } set { this[nameof(bIsEggLauncherExplosion)].Flag = value; } }
        public float ThrowPalBattleRadius { get { return this[nameof(ThrowPalBattleRadius)].GetValue<float>(); } set { this[nameof(ThrowPalBattleRadius)].SetValue<float>(value); } }
        public float ThrowPalWorkRadius { get { return this[nameof(ThrowPalWorkRadius)].GetValue<float>(); } set { this[nameof(ThrowPalWorkRadius)].SetValue<float>(value); } }
        public float RopeHitPowe { get { return this[nameof(RopeHitPowe)].GetValue<float>(); } set { this[nameof(RopeHitPowe)].SetValue<float>(value); } }
        public float RopePullPower { get { return this[nameof(RopePullPower)].GetValue<float>(); } set { this[nameof(RopePullPower)].SetValue<float>(value); } }
        public float DefaultMaxInventoryWeight { get { return this[nameof(DefaultMaxInventoryWeight)].GetValue<float>(); } set { this[nameof(DefaultMaxInventoryWeight)].SetValue<float>(value); } }
        public float RaycastLengthForDetectIndoor { get { return this[nameof(RaycastLengthForDetectIndoor)].GetValue<float>(); } set { this[nameof(RaycastLengthForDetectIndoor)].SetValue<float>(value); } }
        public float MapObjectConnectAnyPlaceRaycastLength { get { return this[nameof(MapObjectConnectAnyPlaceRaycastLength)].GetValue<float>(); } set { this[nameof(MapObjectConnectAnyPlaceRaycastLength)].SetValue<float>(value); } }
        public float ShootingTargetRayCastDistance { get { return this[nameof(ShootingTargetRayCastDistance)].GetValue<float>(); } set { this[nameof(ShootingTargetRayCastDistance)].SetValue<float>(value); } }
        public Array<float> CaptureJudgeRateArray { get { return new Array<float>(this[nameof(CaptureJudgeRateArray)].Address); } }
        public int CaptureBallBoundCountMax { get { return this[nameof(CaptureBallBoundCountMax)].GetValue<int>(); } set { this[nameof(CaptureBallBoundCountMax)].SetValue<int>(value); } }
        public Array<Object> ExceptCapturedItemList { get { return new Array<Object>(this[nameof(ExceptCapturedItemList)].Address); } }
        public Object CaptureSphereLevelMap { get { return this[nameof(CaptureSphereLevelMap)]; } set { this[nameof(CaptureSphereLevelMap)] = value; } }
        public Object CaptureRateAddByStatusMap { get { return this[nameof(CaptureRateAddByStatusMap)]; } set { this[nameof(CaptureRateAddByStatusMap)] = value; } }
        public float IgnoreFirstCaptureFailedHPRate { get { return this[nameof(IgnoreFirstCaptureFailedHPRate)].GetValue<float>(); } set { this[nameof(IgnoreFirstCaptureFailedHPRate)].SetValue<float>(value); } }
        public float CaptureRateAdd_ByLegHold { get { return this[nameof(CaptureRateAdd_ByLegHold)].GetValue<float>(); } set { this[nameof(CaptureRateAdd_ByLegHold)].SetValue<float>(value); } }
        public float LongPressInterval { get { return this[nameof(LongPressInterval)].GetValue<float>(); } set { this[nameof(LongPressInterval)].SetValue<float>(value); } }
        public float LongPressInterval_EnemyCampCage { get { return this[nameof(LongPressInterval_EnemyCampCage)].GetValue<float>(); } set { this[nameof(LongPressInterval_EnemyCampCage)].SetValue<float>(value); } }
        public float LongPressInterval_GetHatchedPal { get { return this[nameof(LongPressInterval_GetHatchedPal)].GetValue<float>(); } set { this[nameof(LongPressInterval_GetHatchedPal)].SetValue<float>(value); } }
        public float CrouchLockAttenuation { get { return this[nameof(CrouchLockAttenuation)].GetValue<float>(); } set { this[nameof(CrouchLockAttenuation)].SetValue<float>(value); } }
        public bool IsEnableCharacterWazaScale { get { return this[nameof(IsEnableCharacterWazaScale)].Flag; } set { this[nameof(IsEnableCharacterWazaScale)].Flag = value; } }
        public bool IsOverrideDamageAdditiveAnimation { get { return this[nameof(IsOverrideDamageAdditiveAnimation)].Flag; } set { this[nameof(IsOverrideDamageAdditiveAnimation)].Flag = value; } }
        public float BlinkInterval { get { return this[nameof(BlinkInterval)].GetValue<float>(); } set { this[nameof(BlinkInterval)].SetValue<float>(value); } }
        public float CrimeStateMaintainDurationBaseDefault { get { return this[nameof(CrimeStateMaintainDurationBaseDefault)].GetValue<float>(); } set { this[nameof(CrimeStateMaintainDurationBaseDefault)].SetValue<float>(value); } }
        public int technologyPointPerLevel { get { return this[nameof(technologyPointPerLevel)].GetValue<int>(); } set { this[nameof(technologyPointPerLevel)].SetValue<int>(value); } }
        public int bossTechnologyPointPerTowerBoss { get { return this[nameof(bossTechnologyPointPerTowerBoss)].GetValue<int>(); } set { this[nameof(bossTechnologyPointPerTowerBoss)].SetValue<int>(value); } }
        public int bossTechnologyPointPerNormalBoss { get { return this[nameof(bossTechnologyPointPerNormalBoss)].GetValue<int>(); } set { this[nameof(bossTechnologyPointPerNormalBoss)].SetValue<int>(value); } }
        public Array<PalDataTableRowName_RecipeTechnologyData> DefaultUnlockTechnology { get { return new Array<PalDataTableRowName_RecipeTechnologyData>(this[nameof(DefaultUnlockTechnology)].Address); } }
        public int DefaultTechnologyPoint { get { return this[nameof(DefaultTechnologyPoint)].GetValue<int>(); } set { this[nameof(DefaultTechnologyPoint)].SetValue<int>(value); } }
        public int TechnologyPoint_UnlockFastTravel { get { return this[nameof(TechnologyPoint_UnlockFastTravel)].GetValue<int>(); } set { this[nameof(TechnologyPoint_UnlockFastTravel)].SetValue<int>(value); } }
        public float DecreaseSanity_DamagedMultiply { get { return this[nameof(DecreaseSanity_DamagedMultiply)].GetValue<float>(); } set { this[nameof(DecreaseSanity_DamagedMultiply)].SetValue<float>(value); } }
        public int FullStomachPercent_RecoverySanity { get { return this[nameof(FullStomachPercent_RecoverySanity)].GetValue<int>(); } set { this[nameof(FullStomachPercent_RecoverySanity)].SetValue<int>(value); } }
        public float RecoverySanity_FullStomach { get { return this[nameof(RecoverySanity_FullStomach)].GetValue<float>(); } set { this[nameof(RecoverySanity_FullStomach)].SetValue<float>(value); } }
        public float DecreaseSanity_Hunger { get { return this[nameof(DecreaseSanity_Hunger)].GetValue<float>(); } set { this[nameof(DecreaseSanity_Hunger)].SetValue<float>(value); } }
        public float DecreaseSanity_Starvation { get { return this[nameof(DecreaseSanity_Starvation)].GetValue<float>(); } set { this[nameof(DecreaseSanity_Starvation)].SetValue<float>(value); } }
        public bool Spawner_IsCheckLoadedWorldPartition { get { return this[nameof(Spawner_IsCheckLoadedWorldPartition)].Flag; } set { this[nameof(Spawner_IsCheckLoadedWorldPartition)].Flag = value; } }
        public float SpawnerDisableDistanceCM_FromBaseCamp { get { return this[nameof(SpawnerDisableDistanceCM_FromBaseCamp)].GetValue<float>(); } set { this[nameof(SpawnerDisableDistanceCM_FromBaseCamp)].SetValue<float>(value); } }
        public float Spawner_DefaultSpawnRadius_S { get { return this[nameof(Spawner_DefaultSpawnRadius_S)].GetValue<float>(); } set { this[nameof(Spawner_DefaultSpawnRadius_S)].SetValue<float>(value); } }
        public float Spawner_DefaultSpawnRadius_M { get { return this[nameof(Spawner_DefaultSpawnRadius_M)].GetValue<float>(); } set { this[nameof(Spawner_DefaultSpawnRadius_M)].SetValue<float>(value); } }
        public float Spawner_DefaultSpawnRadius_L { get { return this[nameof(Spawner_DefaultSpawnRadius_L)].GetValue<float>(); } set { this[nameof(Spawner_DefaultSpawnRadius_L)].SetValue<float>(value); } }
        public float Spawner_DefaultSpawnRadius_NPC { get { return this[nameof(Spawner_DefaultSpawnRadius_NPC)].GetValue<float>(); } set { this[nameof(Spawner_DefaultSpawnRadius_NPC)].SetValue<float>(value); } }
        public float Spawner_DefaultDespawnDistance_S { get { return this[nameof(Spawner_DefaultDespawnDistance_S)].GetValue<float>(); } set { this[nameof(Spawner_DefaultDespawnDistance_S)].SetValue<float>(value); } }
        public float Spawner_DefaultDespawnDistance_M { get { return this[nameof(Spawner_DefaultDespawnDistance_M)].GetValue<float>(); } set { this[nameof(Spawner_DefaultDespawnDistance_M)].SetValue<float>(value); } }
        public float Spawner_DefaultDespawnDistance_L { get { return this[nameof(Spawner_DefaultDespawnDistance_L)].GetValue<float>(); } set { this[nameof(Spawner_DefaultDespawnDistance_L)].SetValue<float>(value); } }
        public float Spawner_DefaultDespawnDistance_NPC { get { return this[nameof(Spawner_DefaultDespawnDistance_NPC)].GetValue<float>(); } set { this[nameof(Spawner_DefaultDespawnDistance_NPC)].SetValue<float>(value); } }
        public DataTable CharacterHeadMeshDataTable { get { return this[nameof(CharacterHeadMeshDataTable)].As<DataTable>(); } set { this["CharacterHeadMeshDataTable"] = value; } }
        public DataTable CharacterBodyMeshDataTable { get { return this[nameof(CharacterBodyMeshDataTable)].As<DataTable>(); } set { this["CharacterBodyMeshDataTable"] = value; } }
        public DataTable CharacterHairMeshDataTable { get { return this[nameof(CharacterHairMeshDataTable)].As<DataTable>(); } set { this["CharacterHairMeshDataTable"] = value; } }
        public DataTable CharacterEquipmentArmorMeshDataTable { get { return this[nameof(CharacterEquipmentArmorMeshDataTable)].As<DataTable>(); } set { this["CharacterEquipmentArmorMeshDataTable"] = value; } }
        public DataTable CharacterEyeMaterialDataTable { get { return this[nameof(CharacterEyeMaterialDataTable)].As<DataTable>(); } set { this["CharacterEyeMaterialDataTable"] = value; } }
        public float CharacterMakeColorLimit_SV { get { return this[nameof(CharacterMakeColorLimit_SV)].GetValue<float>(); } set { this[nameof(CharacterMakeColorLimit_SV)].SetValue<float>(value); } }
        public bool IsAutoEquipMasteredWaza { get { return this[nameof(IsAutoEquipMasteredWaza)].Flag; } set { this[nameof(IsAutoEquipMasteredWaza)].Flag = value; } }
        public bool ActiveUNKO { get { return this[nameof(ActiveUNKO)].Flag; } set { this[nameof(ActiveUNKO)].Flag = value; } }
        public int MaxSpawnableDeathPenaltyChest { get { return this[nameof(MaxSpawnableDeathPenaltyChest)].GetValue<int>(); } set { this[nameof(MaxSpawnableDeathPenaltyChest)].SetValue<int>(value); } }
        public Object BuildObjectInstallStrategy_SinkAllowCollisionPresetName { get { return this[nameof(BuildObjectInstallStrategy_SinkAllowCollisionPresetName)]; } set { this[nameof(BuildObjectInstallStrategy_SinkAllowCollisionPresetName)] = value; } }
        public float MapObjectShakeTimeOnDamaged { get { return this[nameof(MapObjectShakeTimeOnDamaged)].GetValue<float>(); } set { this[nameof(MapObjectShakeTimeOnDamaged)].SetValue<float>(value); } }
        public Vector MapObjectShakeOffsetOnDamaged { get { return this[nameof(MapObjectShakeOffsetOnDamaged)].As<Vector>(); } set { this["MapObjectShakeOffsetOnDamaged"] = value; } }
        public int MapObjectOutlineByReticleTargetting { get { return this[nameof(MapObjectOutlineByReticleTargetting)].GetValue<int>(); } set { this[nameof(MapObjectOutlineByReticleTargetting)].SetValue<int>(value); } }
        public int MapObjectOutlineByInteractable { get { return this[nameof(MapObjectOutlineByInteractable)].GetValue<int>(); } set { this[nameof(MapObjectOutlineByInteractable)].SetValue<int>(value); } }
        public PalMapObjectRepairInfo MapObjectRepairInfo { get { return this[nameof(MapObjectRepairInfo)].As<PalMapObjectRepairInfo>(); } set { this["MapObjectRepairInfo"] = value; } }
        public float FoliageExtentsXY { get { return this[nameof(FoliageExtentsXY)].GetValue<float>(); } set { this[nameof(FoliageExtentsXY)].SetValue<float>(value); } }
        public int FoliageChunkSeparateScale { get { return this[nameof(FoliageChunkSeparateScale)].GetValue<int>(); } set { this[nameof(FoliageChunkSeparateScale)].SetValue<int>(value); } }
        public float MapObjectHPDisplayDistance { get { return this[nameof(MapObjectHPDisplayDistance)].GetValue<float>(); } set { this[nameof(MapObjectHPDisplayDistance)].SetValue<float>(value); } }
        public float MapObjectHPDisplayTime { get { return this[nameof(MapObjectHPDisplayTime)].GetValue<float>(); } set { this[nameof(MapObjectHPDisplayTime)].SetValue<float>(value); } }
        public float MapObjectGateLockTime { get { return this[nameof(MapObjectGateLockTime)].GetValue<float>(); } set { this[nameof(MapObjectGateLockTime)].SetValue<float>(value); } }
        public bool bDirectObtainFromTreasureBox { get { return this[nameof(bDirectObtainFromTreasureBox)].Flag; } set { this[nameof(bDirectObtainFromTreasureBox)].Flag = value; } }
        public float MapObjectEffectTriggerAccumulate_Burn { get { return this[nameof(MapObjectEffectTriggerAccumulate_Burn)].GetValue<float>(); } set { this[nameof(MapObjectEffectTriggerAccumulate_Burn)].SetValue<float>(value); } }
        public float MapObjectEffect_Burn_DamageHpRate { get { return this[nameof(MapObjectEffect_Burn_DamageHpRate)].GetValue<float>(); } set { this[nameof(MapObjectEffect_Burn_DamageHpRate)].SetValue<float>(value); } }
        public Vector MapObjectEffect_Burn_DamageAroundRange { get { return this[nameof(MapObjectEffect_Burn_DamageAroundRange)].As<Vector>(); } set { this["MapObjectEffect_Burn_DamageAroundRange"] = value; } }
        public float MapObjectEffect_Burn_DamageAroundInterval { get { return this[nameof(MapObjectEffect_Burn_DamageAroundInterval)].GetValue<float>(); } set { this[nameof(MapObjectEffect_Burn_DamageAroundInterval)].SetValue<float>(value); } }
        public float MapObjectEffect_Burn_DamageAroundDamageValue { get { return this[nameof(MapObjectEffect_Burn_DamageAroundDamageValue)].GetValue<float>(); } set { this[nameof(MapObjectEffect_Burn_DamageAroundDamageValue)].SetValue<float>(value); } }
        public float MapObjectEffect_Burn_DamageAroundAccumulateValue { get { return this[nameof(MapObjectEffect_Burn_DamageAroundAccumulateValue)].GetValue<float>(); } set { this[nameof(MapObjectEffect_Burn_DamageAroundAccumulateValue)].SetValue<float>(value); } }
        public float MapObjectEffect_Burn_DamageAroundAccumulateValue_ForCharacter { get { return this[nameof(MapObjectEffect_Burn_DamageAroundAccumulateValue_ForCharacter)].GetValue<float>(); } set { this[nameof(MapObjectEffect_Burn_DamageAroundAccumulateValue_ForCharacter)].SetValue<float>(value); } }
        public int PasswordLockFailedMaxNum { get { return this[nameof(PasswordLockFailedMaxNum)].GetValue<int>(); } set { this[nameof(PasswordLockFailedMaxNum)].SetValue<int>(value); } }
        public float MapObjectItemChestCorruptionRateFromWorkSpeed { get { return this[nameof(MapObjectItemChestCorruptionRateFromWorkSpeed)].GetValue<float>(); } set { this[nameof(MapObjectItemChestCorruptionRateFromWorkSpeed)].SetValue<float>(value); } }
        public PalOptimizeParameter RuntimeOptimizeParameter { get { return this[nameof(RuntimeOptimizeParameter)].As<PalOptimizeParameter>(); } set { this["RuntimeOptimizeParameter"] = value; } }
        public Object WorldSecurityWantedPoliceSettingDataMap { get { return this[nameof(WorldSecurityWantedPoliceSettingDataMap)]; } set { this[nameof(WorldSecurityWantedPoliceSettingDataMap)] = value; } }
        public Object WorldSecurityWantedPoliceSettingDataMapForDS { get { return this[nameof(WorldSecurityWantedPoliceSettingDataMapForDS)]; } set { this[nameof(WorldSecurityWantedPoliceSettingDataMapForDS)] = value; } }
        public int StatusPointPerLevel { get { return this[nameof(StatusPointPerLevel)].GetValue<int>(); } set { this[nameof(StatusPointPerLevel)].SetValue<int>(value); } }
        public float AddMaxHPPerStatusPoint { get { return this[nameof(AddMaxHPPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddMaxHPPerStatusPoint)].SetValue<float>(value); } }
        public float AddMaxSPPerStatusPoint { get { return this[nameof(AddMaxSPPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddMaxSPPerStatusPoint)].SetValue<float>(value); } }
        public float AddPowerPerStatusPoint { get { return this[nameof(AddPowerPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddPowerPerStatusPoint)].SetValue<float>(value); } }
        public float AddMaxInventoryWeightPerStatusPoint { get { return this[nameof(AddMaxInventoryWeightPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddMaxInventoryWeightPerStatusPoint)].SetValue<float>(value); } }
        public float AddCaptureLevelPerStatusPoint { get { return this[nameof(AddCaptureLevelPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddCaptureLevelPerStatusPoint)].SetValue<float>(value); } }
        public float AddWorkSpeedPerStatusPoint { get { return this[nameof(AddWorkSpeedPerStatusPoint)].GetValue<float>(); } set { this[nameof(AddWorkSpeedPerStatusPoint)].SetValue<float>(value); } }
        public float AddMaxHPPerHPRank { get { return this[nameof(AddMaxHPPerHPRank)].GetValue<float>(); } set { this[nameof(AddMaxHPPerHPRank)].SetValue<float>(value); } }
        public float AddAttackPerAttackRank { get { return this[nameof(AddAttackPerAttackRank)].GetValue<float>(); } set { this[nameof(AddAttackPerAttackRank)].SetValue<float>(value); } }
        public float AddDefencePerDefenceRank { get { return this[nameof(AddDefencePerDefenceRank)].GetValue<float>(); } set { this[nameof(AddDefencePerDefenceRank)].SetValue<float>(value); } }
        public float AddWorkSpeedPerWorkSpeedRank { get { return this[nameof(AddWorkSpeedPerWorkSpeedRank)].GetValue<float>(); } set { this[nameof(AddWorkSpeedPerWorkSpeedRank)].SetValue<float>(value); } }
        public Array<float> Combi_TalentInheritNum { get { return new Array<float>(this[nameof(Combi_TalentInheritNum)].Address); } }
        public Array<float> Combi_PassiveInheritNum { get { return new Array<float>(this[nameof(Combi_PassiveInheritNum)].Address); } }
        public Array<float> Combi_PassiveRandomAddNum { get { return new Array<float>(this[nameof(Combi_PassiveRandomAddNum)].Address); } }
        public Array<PalEggRankInfo> PalEggRankInfoArray { get { return new Array<PalEggRankInfo>(this[nameof(PalEggRankInfoArray)].Address); } }
        public Object PalEggMapObjectIdMap { get { return this[nameof(PalEggMapObjectIdMap)]; } set { this[nameof(PalEggMapObjectIdMap)] = value; } }
        public Object PalEggHatchingSpeedRateByTemperature { get { return this[nameof(PalEggHatchingSpeedRateByTemperature)]; } set { this[nameof(PalEggHatchingSpeedRateByTemperature)] = value; } }
        public Font DebugInfoFont { get { return this[nameof(DebugInfoFont)].As<Font>(); } set { this["DebugInfoFont"] = value; } }
        public int MaxGuildNameLength { get { return this[nameof(MaxGuildNameLength)].GetValue<int>(); } set { this[nameof(MaxGuildNameLength)].SetValue<int>(value); } }
        public float JoinGuildRequestInteractLongPushTime { get { return this[nameof(JoinGuildRequestInteractLongPushTime)].GetValue<float>(); } set { this[nameof(JoinGuildRequestInteractLongPushTime)].SetValue<float>(value); } }
        public float TutorialMinDisplayTime { get { return this[nameof(TutorialMinDisplayTime)].GetValue<float>(); } set { this[nameof(TutorialMinDisplayTime)].SetValue<float>(value); } }
        public float TutorialDisplayTime { get { return this[nameof(TutorialDisplayTime)].GetValue<float>(); } set { this[nameof(TutorialDisplayTime)].SetValue<float>(value); } }
        public Object CommonRewardDisplayTime { get { return this[nameof(CommonRewardDisplayTime)]; } set { this[nameof(CommonRewardDisplayTime)] = value; } }
        public float DeadBodyDestroySecond { get { return this[nameof(DeadBodyDestroySecond)].GetValue<float>(); } set { this[nameof(DeadBodyDestroySecond)].SetValue<float>(value); } }
        public float EnemyCampRespawnCoolTime { get { return this[nameof(EnemyCampRespawnCoolTime)].GetValue<float>(); } set { this[nameof(EnemyCampRespawnCoolTime)].SetValue<float>(value); } }
        public float EnemyCampDespawnDelayTime { get { return this[nameof(EnemyCampDespawnDelayTime)].GetValue<float>(); } set { this[nameof(EnemyCampDespawnDelayTime)].SetValue<float>(value); } }
        public float PalBoxReviveTime { get { return this[nameof(PalBoxReviveTime)].GetValue<float>(); } set { this[nameof(PalBoxReviveTime)].SetValue<float>(value); } }
        public float AfterNPCTalkDelayTime_Interact { get { return this[nameof(AfterNPCTalkDelayTime_Interact)].GetValue<float>(); } set { this[nameof(AfterNPCTalkDelayTime_Interact)].SetValue<float>(value); } }
        public float MinSprintThreshold { get { return this[nameof(MinSprintThreshold)].GetValue<float>(); } set { this[nameof(MinSprintThreshold)].SetValue<float>(value); } }
        public float MaxSprintThreshold { get { return this[nameof(MaxSprintThreshold)].GetValue<float>(); } set { this[nameof(MaxSprintThreshold)].SetValue<float>(value); } }
        public float MinHPGaugeDisplayTime { get { return this[nameof(MinHPGaugeDisplayTime)].GetValue<float>(); } set { this[nameof(MinHPGaugeDisplayTime)].SetValue<float>(value); } }
        public DataTable SoundSourceDataTable { get { return this[nameof(SoundSourceDataTable)].As<DataTable>(); } set { this["SoundSourceDataTable"] = value; } }
        public Object OptimizeParameterSettingClass { get { return this[nameof(OptimizeParameterSettingClass)]; } set { this[nameof(OptimizeParameterSettingClass)] = value; } }
        public bool TryGetWorkSuitabilityDefineData(EPalWorkSuitability WorkSuitability, PalWorkSuitabilityDefineData outDefineData) { return Invoke<bool>(nameof(TryGetWorkSuitabilityDefineData), WorkSuitability, outDefineData); }
        public bool IsSoundMuteable(Object RowName) { return Invoke<bool>(nameof(IsSoundMuteable), RowName); }
        public float GetWeakScale(int weakCount) { return Invoke<float>(nameof(GetWeakScale), weakCount); }
        public int GetSoundRadius_cm(Object RowName) { return Invoke<int>(nameof(GetSoundRadius_cm), RowName); }
        public PalOptionSubsystem GetOptionSubsystem(Object WorldContextObject) { return Invoke<PalOptionSubsystem>(nameof(GetOptionSubsystem), WorldContextObject); }
        public void GetMiningRankDefineData(int MiningRank, PalMiningRankDefineData outDefineData) { Invoke(nameof(GetMiningRankDefineData), MiningRank, outDefineData); }
        public float GetMiningDamageRate(int MiningRank) { return Invoke<float>(nameof(GetMiningDamageRate), MiningRank); }
        public float GetEnemyMarkScale(Vector targetPosition, Vector selfPosition) { return Invoke<float>(nameof(GetEnemyMarkScale), targetPosition, selfPosition); }
        public void GetDeforestRankDefineData(int DeforestRank, PalDeforestRankDefineData outDefineData) { Invoke(nameof(GetDeforestRankDefineData), DeforestRank, outDefineData); }
        public float GetDeforestDamageRate(int DeforestRank) { return Invoke<float>(nameof(GetDeforestDamageRate), DeforestRank); }
        public float GetCollectionDropNumRate(int CollectionRank) { return Invoke<float>(nameof(GetCollectionDropNumRate), CollectionRank); }
        public float GetCaptureRateByStatus_ForGameSettingBP(Actor TargetPal) { return Invoke<float>(nameof(GetCaptureRateByStatus_ForGameSettingBP), TargetPal); }
        public int GetCaptureLevelBySphereType(EPalCaptureSphereLevelType SphereType) { return Invoke<int>(nameof(GetCaptureLevelBySphereType), SphereType); }
        public float CalcCaptureRate(float captureItemLevel, PalIndividualCharacterHandle targetHandle, PalIndividualCharacterHandle throwCharacterHandle) { return Invoke<float>(nameof(CalcCaptureRate), captureItemLevel, targetHandle, throwCharacterHandle); }
    }
    public class PalGameState : GameStateBase
    {
        public PalGameState(nint addr) : base(addr) { }
    }
    public class PalGameStateInGame : PalGameState
    {
        public PalGameStateInGame(nint addr) : base(addr) { }
        public PalCharacterManagerReplicator CharacterManagerReplicator { get { return this[nameof(CharacterManagerReplicator)].As<PalCharacterManagerReplicator>(); } set { this["CharacterManagerReplicator"] = value; } }
        public PalBaseCampReplicator BaseCampReplicator { get { return this[nameof(BaseCampReplicator)].As<PalBaseCampReplicator>(); } set { this["BaseCampReplicator"] = value; } }
        public PalOptionReplicator OptionReplicator { get { return this[nameof(OptionReplicator)].As<PalOptionReplicator>(); } set { this["OptionReplicator"] = value; } }
        public PalStageReplicator StageReplicator { get { return this[nameof(StageReplicator)].As<PalStageReplicator>(); } set { this["StageReplicator"] = value; } }
        public PalLocationReplicator LocationReplicator { get { return this[nameof(LocationReplicator)].As<PalLocationReplicator>(); } set { this["LocationReplicator"] = value; } }
        public PalNetworkTransmitter DedicatedServerTransmitter { get { return this[nameof(DedicatedServerTransmitter)].As<PalNetworkTransmitter>(); } set { this["DedicatedServerTransmitter"] = value; } }
        public PalGameSystemInitManagerComponent GameSystemInitManager { get { return this[nameof(GameSystemInitManager)].As<PalGameSystemInitManagerComponent>(); } set { this["GameSystemInitManager"] = value; } }
        public Array<PalBotBuilderLocationBase> BotBuilderLocation { get { return new Array<PalBotBuilderLocationBase>(this[nameof(BotBuilderLocation)].Address); } }
        public Object WorldName { get { return this[nameof(WorldName)]; } set { this[nameof(WorldName)] = value; } }
        public Object WorldSaveDirectoryName { get { return this[nameof(WorldSaveDirectoryName)]; } set { this[nameof(WorldSaveDirectoryName)] = value; } }
        public bool bIsDedicatedServer { get { return this[nameof(bIsDedicatedServer)].Flag; } set { this[nameof(bIsDedicatedServer)].Flag = value; } }
        public int MaxPlayerNum { get { return this[nameof(MaxPlayerNum)].GetValue<int>(); } set { this[nameof(MaxPlayerNum)].SetValue<int>(value); } }
        public GameDateTime WorldTime { get { return this[nameof(WorldTime)].As<GameDateTime>(); } set { this["WorldTime"] = value; } }
        public DateTime RealUtcTime { get { return this[nameof(RealUtcTime)].As<DateTime>(); } set { this["RealUtcTime"] = value; } }
        public float ServerFrameTime { get { return this[nameof(ServerFrameTime)].GetValue<float>(); } set { this[nameof(ServerFrameTime)].SetValue<float>(value); } }
        public Object ServerSessionId { get { return this[nameof(ServerSessionId)]; } set { this[nameof(ServerSessionId)] = value; } }
        public int ServerWildMonsterCount { get { return this[nameof(ServerWildMonsterCount)].GetValue<int>(); } set { this[nameof(ServerWildMonsterCount)].SetValue<int>(value); } }
        public int ServerOtomoMonsterCount { get { return this[nameof(ServerOtomoMonsterCount)].GetValue<int>(); } set { this[nameof(ServerOtomoMonsterCount)].SetValue<int>(value); } }
        public int ServerBaseCampMonsterCount { get { return this[nameof(ServerBaseCampMonsterCount)].GetValue<int>(); } set { this[nameof(ServerBaseCampMonsterCount)].SetValue<int>(value); } }
        public int ServerNPCCount { get { return this[nameof(ServerNPCCount)].GetValue<int>(); } set { this[nameof(ServerNPCCount)].SetValue<int>(value); } }
        public int ServerOtherCharacterCount { get { return this[nameof(ServerOtherCharacterCount)].GetValue<int>(); } set { this[nameof(ServerOtherCharacterCount)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_AllUpdate { get { return this[nameof(ImportanceCharacterCount_AllUpdate)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_AllUpdate)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_Nearest { get { return this[nameof(ImportanceCharacterCount_Nearest)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_Nearest)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_Near { get { return this[nameof(ImportanceCharacterCount_Near)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_Near)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_MidInSight { get { return this[nameof(ImportanceCharacterCount_MidInSight)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_MidInSight)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_FarInSight { get { return this[nameof(ImportanceCharacterCount_FarInSight)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_FarInSight)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_MidOutSight { get { return this[nameof(ImportanceCharacterCount_MidOutSight)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_MidOutSight)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_FarOutSight { get { return this[nameof(ImportanceCharacterCount_FarOutSight)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_FarOutSight)].SetValue<int>(value); } }
        public int ImportanceCharacterCount_Farthest { get { return this[nameof(ImportanceCharacterCount_Farthest)].GetValue<int>(); } set { this[nameof(ImportanceCharacterCount_Farthest)].SetValue<int>(value); } }
        public int BaseCampCount { get { return this[nameof(BaseCampCount)].GetValue<int>(); } set { this[nameof(BaseCampCount)].SetValue<int>(value); } }
        public int NavMeshInvokerCount { get { return this[nameof(NavMeshInvokerCount)].GetValue<int>(); } set { this[nameof(NavMeshInvokerCount)].SetValue<int>(value); } }
        public Array<PalChatMessage> ChatMessages { get { return new Array<PalChatMessage>(this[nameof(ChatMessages)].Address); } }
        public Object OnRecievedChatMessageDelegate { get { return this[nameof(OnRecievedChatMessageDelegate)]; } set { this[nameof(OnRecievedChatMessageDelegate)] = value; } }
        public void OnRep_WorldSaveDirectoryName() { Invoke(nameof(OnRep_WorldSaveDirectoryName)); }
        public void OnRep_StageReplicator() { Invoke(nameof(OnRep_StageReplicator)); }
        public void OnRep_OptionReplicator() { Invoke(nameof(OnRep_OptionReplicator)); }
        public void OnRep_LocationReplicator() { Invoke(nameof(OnRep_LocationReplicator)); }
        public void OnRep_CharacterManagerReplicator() { Invoke(nameof(OnRep_CharacterManagerReplicator)); }
        public void OnRep_BaseCampReplicator() { Invoke(nameof(OnRep_BaseCampReplicator)); }
        public void OnRecievedChatMessageDelegate__DelegateSignature(PalChatMessage Message) { Invoke(nameof(OnRecievedChatMessageDelegate__DelegateSignature), Message); }
        public Object GetWorldName() { return Invoke<Object>(nameof(GetWorldName)); }
        public float GetServerFrameTime() { return Invoke<float>(nameof(GetServerFrameTime)); }
        public int GetMaxPlayerNum() { return Invoke<int>(nameof(GetMaxPlayerNum)); }
        public void BroadcastChatMessage(PalChatMessage ChatMessage) { Invoke(nameof(BroadcastChatMessage), ChatMessage); }
    }
    public class PalGameSystemInitProcessHandle : Object
    {
        public PalGameSystemInitProcessHandle(nint addr) : base(addr) { }
        public Array<PalGameSystemInitProcessHandle> ChildProcessHandles { get { return new Array<PalGameSystemInitProcessHandle>(this[nameof(ChildProcessHandles)].Address); } }
    }
    public class PalGameSystemInitSequenceBase : Object
    {
        public PalGameSystemInitSequenceBase(nint addr) : base(addr) { }
        public Array<PalGameSystemInitProcessHandle> ProcessHandles { get { return new Array<PalGameSystemInitProcessHandle>(this[nameof(ProcessHandles)].Address); } }
    }
    public class PalGameSystemInitManagerComponent : GameStateComponent
    {
        public PalGameSystemInitManagerComponent(nint addr) : base(addr) { }
        public Array<PalGameSystemInitSequenceSet> InitSequences { get { return new Array<PalGameSystemInitSequenceSet>(this[nameof(InitSequences)].Address); } }
        public int CurrentSequenceIndex { get { return this[nameof(CurrentSequenceIndex)].GetValue<int>(); } set { this[nameof(CurrentSequenceIndex)].SetValue<int>(value); } }
        public void OnChangeProcessState(PalGameSystemInitProcessHandle ChangedProcessHandle) { Invoke(nameof(OnChangeProcessState), ChangedProcessHandle); }
        public void OnChangeProcessProgressRate(PalGameSystemInitProcessHandle ChangedProcessHandle) { Invoke(nameof(OnChangeProcessProgressRate), ChangedProcessHandle); }
    }
    public class PalGameSystemInitSequence_WaitForWorldSystemInit : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_WaitForWorldSystemInit(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_WaitForLocalNetworkTransmitter : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_WaitForLocalNetworkTransmitter(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_WaitForLocalPlayerStateSetup : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_WaitForLocalPlayerStateSetup(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_CreateSystemForDedicatedServer : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_CreateSystemForDedicatedServer(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_ReadyWorldSaveData : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_ReadyWorldSaveData(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_InitializeWorld : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_InitializeWorld(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_ApplyWorldSaveData : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_ApplyWorldSaveData(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_InitializeWorldAfterAppliedSaveData : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_InitializeWorldAfterAppliedSaveData(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_StartAutoSave_WorldOnly : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_StartAutoSave_WorldOnly(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_StartAutoSave_WorldAndLocal : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_StartAutoSave_WorldAndLocal(nint addr) : base(addr) { }
    }
    public class PalGameSystemInitSequence_MapObjectRegistration : PalGameSystemInitSequenceBase
    {
        public PalGameSystemInitSequence_MapObjectRegistration(nint addr) : base(addr) { }
    }
    public class PalGameViewportClient : CommonGameViewportClient
    {
        public PalGameViewportClient(nint addr) : base(addr) { }
    }
    public class PalGameWorldSettings : Object
    {
        public PalGameWorldSettings(nint addr) : base(addr) { }
        public PalOptionWorldSettings OptionSettings { get { return this[nameof(OptionSettings)].As<PalOptionWorldSettings>(); } set { this["OptionSettings"] = value; } }
    }
    public class PalGetWorldUObject : Object
    {
        public PalGetWorldUObject(nint addr) : base(addr) { }
    }
    public class PalGliderComponent : ActorComponent
    {
        public PalGliderComponent(nint addr) : base(addr) { }
        public Object OnStartGlidingDelegate { get { return this[nameof(OnStartGlidingDelegate)]; } set { this[nameof(OnStartGlidingDelegate)] = value; } }
        public Object OnEndGlidingDelegate { get { return this[nameof(OnEndGlidingDelegate)]; } set { this[nameof(OnEndGlidingDelegate)] = value; } }
        public Array<PalGliderPalInfo> GliderPalInfos { get { return new Array<PalGliderPalInfo>(this[nameof(GliderPalInfos)].Address); } }
        public PalGliderObject CurrentGlider { get { return this[nameof(CurrentGlider)].As<PalGliderObject>(); } set { this["CurrentGlider"] = value; } }
        public Object CurrentGliderSoftClass { get { return this[nameof(CurrentGliderSoftClass)]; } set { this[nameof(CurrentGliderSoftClass)] = value; } }
        public Object CurrentGliderClass { get { return this[nameof(CurrentGliderClass)]; } set { this[nameof(CurrentGliderClass)] = value; } }
        public bool bIsGliding { get { return this[nameof(bIsGliding)].Flag; } set { this[nameof(bIsGliding)].Flag = value; } }
        public PalIndividualCharacterHandle TryGetGliderIndividualHandleFromOtomoHolder() { return Invoke<PalIndividualCharacterHandle>(nameof(TryGetGliderIndividualHandleFromOtomoHolder)); }
        public void StopGliderSound(PalDataTableRowName_SoundID ID) { Invoke(nameof(StopGliderSound), ID); }
        public void StartGliding_ToServer() { Invoke(nameof(StartGliding_ToServer)); }
        public void StartGliding() { Invoke(nameof(StartGliding)); }
        public void SetCurrentGliderSoftClass_ToServer(Object gliderSoftClass) { Invoke(nameof(SetCurrentGliderSoftClass_ToServer), gliderSoftClass); }
        public void PlayGliderSound(PalDataTableRowName_SoundID ID, PalSoundOptions Option) { Invoke(nameof(PlayGliderSound), ID, Option); }
        public void OnUpdateOtomoHolderSlot(int SlotIndex, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(OnUpdateOtomoHolderSlot), SlotIndex, LastHandle); }
        public void OnUpdateOtomoHolderInitialized(PalCharacter Character) { Invoke(nameof(OnUpdateOtomoHolderInitialized), Character); }
        public void OnUpdateInventoryContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateInventoryContainer), Container); }
        public void OnUpdateIndividualActor(PalIndividualCharacterHandle Handle) { Invoke(nameof(OnUpdateIndividualActor), Handle); }
        public void OnUpdateEquipmentSlot(PalItemSlot itemSlot, EPalPlayerEquipItemSlotType slotType) { Invoke(nameof(OnUpdateEquipmentSlot), itemSlot, slotType); }
        public void OnStartGliding__DelegateSignature() { Invoke(nameof(OnStartGliding__DelegateSignature)); }
        public void OnStartGliding() { Invoke(nameof(OnStartGliding)); }
        public void OnRep_IsGliding() { Invoke(nameof(OnRep_IsGliding)); }
        public void OnRep_CurrentGliderSoftClass() { Invoke(nameof(OnRep_CurrentGliderSoftClass)); }
        public void OnInitializeGlider() { Invoke(nameof(OnInitializeGlider)); }
        public void OnEndGliding__DelegateSignature() { Invoke(nameof(OnEndGliding__DelegateSignature)); }
        public void OnEndGliding() { Invoke(nameof(OnEndGliding)); }
        public void OnDeadGliderPal(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadGliderPal), DeadInfo); }
        public void OnCompleteOwnerInitialize() { Invoke(nameof(OnCompleteOwnerInitialize)); }
        public void OnChangeMovementMode(PalCharacterMovementComponent Component, byte prevMode, byte newMode, EPalCharacterMovementCustomMode PrevCustomMode, EPalCharacterMovementCustomMode NewCustomMode) { Invoke(nameof(OnChangeMovementMode), Component, prevMode, newMode, PrevCustomMode, NewCustomMode); }
        public void OnChangeGliderVisibility(bool bIsVisibility) { Invoke(nameof(OnChangeGliderVisibility), bIsVisibility); }
        public bool IsGliding() { return Invoke<bool>(nameof(IsGliding)); }
        public bool IsEquipGlider() { return Invoke<bool>(nameof(IsEquipGlider)); }
        public bool HasGliderPal() { return Invoke<bool>(nameof(HasGliderPal)); }
        public Array<Object> GetAllGliderPalNames() { return Invoke<Array<Object>>(nameof(GetAllGliderPalNames)); }
        public void EndGliding_ToServer() { Invoke(nameof(EndGliding_ToServer)); }
        public void EndGliding() { Invoke(nameof(EndGliding)); }
        public bool CanGliding() { return Invoke<bool>(nameof(CanGliding)); }
        public bool CanEndGliding() { return Invoke<bool>(nameof(CanEndGliding)); }
        public void CancelGliding() { Invoke(nameof(CancelGliding)); }
    }
    public class PalGliderObject : Actor
    {
        public PalGliderObject(nint addr) : base(addr) { }
        public float GliderMaxSpeed { get { return this[nameof(GliderMaxSpeed)].GetValue<float>(); } set { this[nameof(GliderMaxSpeed)].SetValue<float>(value); } }
        public float GliderSP { get { return this[nameof(GliderSP)].GetValue<float>(); } set { this[nameof(GliderSP)].SetValue<float>(value); } }
        public float GliderAirControl { get { return this[nameof(GliderAirControl)].GetValue<float>(); } set { this[nameof(GliderAirControl)].SetValue<float>(value); } }
        public float GliderGravityScale { get { return this[nameof(GliderGravityScale)].GetValue<float>(); } set { this[nameof(GliderGravityScale)].SetValue<float>(value); } }
        public Vector OffsetLocation { get { return this[nameof(OffsetLocation)].As<Vector>(); } set { this["OffsetLocation"] = value; } }
        public Rotator OffsetRotation { get { return this[nameof(OffsetRotation)].As<Rotator>(); } set { this["OffsetRotation"] = value; } }
        public bool bUseLeftHand { get { return this[nameof(bUseLeftHand)].Flag; } set { this[nameof(bUseLeftHand)].Flag = value; } }
        public bool bUseRightHand { get { return this[nameof(bUseRightHand)].Flag; } set { this[nameof(bUseRightHand)].Flag = value; } }
        public Object attachBoneName { get { return this[nameof(attachBoneName)]; } set { this[nameof(attachBoneName)] = value; } }
        public AnimMontage GliderStartAnimation { get { return this[nameof(GliderStartAnimation)].As<AnimMontage>(); } set { this["GliderStartAnimation"] = value; } }
        public AnimMontage GliderLoopAnimation { get { return this[nameof(GliderLoopAnimation)].As<AnimMontage>(); } set { this["GliderLoopAnimation"] = value; } }
        public AnimMontage GliderStartPlayerAnimation { get { return this[nameof(GliderStartPlayerAnimation)].As<AnimMontage>(); } set { this["GliderStartPlayerAnimation"] = value; } }
        public AnimMontage GliderLoopPlayerAnimation { get { return this[nameof(GliderLoopPlayerAnimation)].As<AnimMontage>(); } set { this["GliderLoopPlayerAnimation"] = value; } }
        public PalSoundPlayerComponent SoundPlayerComponent { get { return this[nameof(SoundPlayerComponent)].As<PalSoundPlayerComponent>(); } set { this["SoundPlayerComponent"] = value; } }
        public PalSkeletalMeshComponent GetMainMesh() { return Invoke<PalSkeletalMeshComponent>(nameof(GetMainMesh)); }
        public SceneComponent GetAkOwnerComponent() { return Invoke<SceneComponent>(nameof(GetAkOwnerComponent)); }
    }
    public class PalGroupBase : Object
    {
        public PalGroupBase(nint addr) : base(addr) { }
        public Object OnChangedGroupName { get { return this[nameof(OnChangedGroupName)]; } set { this[nameof(OnChangedGroupName)] = value; } }
        public Object OnEnterCharacterDelegate { get { return this[nameof(OnEnterCharacterDelegate)]; } set { this[nameof(OnEnterCharacterDelegate)] = value; } }
        public Object OnExitCharacterDelegate { get { return this[nameof(OnExitCharacterDelegate)]; } set { this[nameof(OnExitCharacterDelegate)] = value; } }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public Array<PalInstanceID> IndividualCharacterHandleIds { get { return new Array<PalInstanceID>(this[nameof(IndividualCharacterHandleIds)].Address); } }
        public void OnUpdateIndividualActor(PalIndividualCharacterHandle CharacterHandle) { Invoke(nameof(OnUpdateIndividualActor), CharacterHandle); }
        public void OnRep_GroupName() { Invoke(nameof(OnRep_GroupName)); }
        public void IndividualHandleDelegate__DelegateSignature(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(IndividualHandleDelegate__DelegateSignature), IndividualHandle); }
        public Guid GetId() { return Invoke<Guid>(nameof(GetId)); }
        public Object GetGroupName() { return Invoke<Object>(nameof(GetGroupName)); }
        public void ChangedGroupNameDelegate__DelegateSignature(Object NewGroupName) { Invoke(nameof(ChangedGroupNameDelegate__DelegateSignature), NewGroupName); }
    }
    public class PalGroupOperationResultUtility : Object
    {
        public PalGroupOperationResultUtility(nint addr) : base(addr) { }
    }
    public class PalGroupDefine : Object
    {
        public PalGroupDefine(nint addr) : base(addr) { }
    }
    public class PalGroupOrganization : PalGroupBase
    {
        public PalGroupOrganization(nint addr) : base(addr) { }
        public EPalOrganizationType OrganizationType { get { return (EPalOrganizationType)this[nameof(OrganizationType)].GetValue<int>(); } set { this[nameof(OrganizationType)].SetValue<int>((int)value); } }
        public Array<Guid> BaseCampIds { get { return new Array<Guid>(this[nameof(BaseCampIds)].Address); } }
        public void OnDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnDead), DeadInfo); }
        public void OnDamage(PalDamageResult DamageResult) { Invoke(nameof(OnDamage), DamageResult); }
    }
    public class PalGroupGuildBase : PalGroupOrganization
    {
        public PalGroupGuildBase(nint addr) : base(addr) { }
        public PalGuildPalStorage PalStorage { get { return this[nameof(PalStorage)].As<PalGuildPalStorage>(); } set { this["PalStorage"] = value; } }
        public Array<Guid> MapObjectInstanceIds_BaseCampPoint { get { return new Array<Guid>(this[nameof(MapObjectInstanceIds_BaseCampPoint)].Address); } }
        public int BaseCampLevel { get { return this[nameof(BaseCampLevel)].GetValue<int>(); } set { this[nameof(BaseCampLevel)].SetValue<int>(value); } }
        public Object WeakGuildInfo { get { return this[nameof(WeakGuildInfo)]; } set { this[nameof(WeakGuildInfo)] = value; } }
        public Object GuildName { get { return this[nameof(GuildName)]; } set { this[nameof(GuildName)] = value; } }
        public bool bAllPlayerNotOnlineAndAlreadyReset { get { return this[nameof(bAllPlayerNotOnlineAndAlreadyReset)].Flag; } set { this[nameof(bAllPlayerNotOnlineAndAlreadyReset)].Flag = value; } }
        public void UpdatedGuildNameDelegate__DelegateSignature(Object NewGuildName) { Invoke(nameof(UpdatedGuildNameDelegate__DelegateSignature), NewGuildName); }
        public void ReturnSelfDelegate__DelegateSignature(PalGroupGuildBase Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public EPalGroupOperationResult RequestDismantleBaseCamp(Guid BaseCampId) { return Invoke<EPalGroupOperationResult>(nameof(RequestDismantleBaseCamp), BaseCampId); }
        public void OnRep_Guildname() { Invoke(nameof(OnRep_Guildname)); }
        public void OnRep_BaseCampLevel(int OldValue) { Invoke(nameof(OnRep_BaseCampLevel), OldValue); }
        public void OnDeletePlayerAccount_ServerInternal(PalPlayerAccount DeleteAccount) { Invoke(nameof(OnDeletePlayerAccount_ServerInternal), DeleteAccount); }
        public void NotifyPlayerInfoDelegate__DelegateSignature(PalGroupGuildBase Self, Guid PlayerUId, PalGuildPlayerInfo PlayerInfo) { Invoke(nameof(NotifyPlayerInfoDelegate__DelegateSignature), Self, PlayerUId, PlayerInfo); }
        public Object GetGuildName() { return Invoke<Object>(nameof(GetGuildName)); }
        public int GetBaseCampMaxNumInGuild() { return Invoke<int>(nameof(GetBaseCampMaxNumInGuild)); }
        public int GetBaseCampLevel() { return Invoke<int>(nameof(GetBaseCampLevel)); }
    }
    public class PalGroupGuild : PalGroupGuildBase
    {
        public PalGroupGuild(nint addr) : base(addr) { }
        public PalFastGuildPlayerInfoRepInfoArray PlayerInfoRepInfoArray { get { return this[nameof(PlayerInfoRepInfoArray)].As<PalFastGuildPlayerInfoRepInfoArray>(); } set { this["PlayerInfoRepInfoArray"] = value; } }
        public Guid AdminPlayerUId { get { return this[nameof(AdminPlayerUId)].As<Guid>(); } set { this["AdminPlayerUId"] = value; } }
        public void OnChangedGuildMemberNickName(PalIndividualCharacterParameter Parameter, Object NickName) { Invoke(nameof(OnChangedGuildMemberNickName), Parameter, NickName); }
    }
    public class PalGuildPlayerInfoUtility : BlueprintFunctionLibrary
    {
        public PalGuildPlayerInfoUtility(nint addr) : base(addr) { }
        public bool IsValid(PalGuildPlayerInfo PlayerInfo) { return Invoke<bool>(nameof(IsValid), PlayerInfo); }
    }
    public class PalGuildJoinRequestResultUtility : Object
    {
        public PalGuildJoinRequestResultUtility(nint addr) : base(addr) { }
    }
    public class PalGroupIndependentGuild : PalGroupGuildBase
    {
        public PalGroupIndependentGuild(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public PalGuildPlayerInfo PlayerInfo { get { return this[nameof(PlayerInfo)].As<PalGuildPlayerInfo>(); } set { this["PlayerInfo"] = value; } }
    }
    public class PalGroupManager : PalWorldSubsystem
    {
        public PalGroupManager(nint addr) : base(addr) { }
        public Object GroupMap { get { return this[nameof(GroupMap)]; } set { this[nameof(GroupMap)] = value; } }
        public Object GuildMap { get { return this[nameof(GuildMap)]; } set { this[nameof(GuildMap)] = value; } }
        public Object StaticOrganizationGroupTypeMap { get { return this[nameof(StaticOrganizationGroupTypeMap)]; } set { this[nameof(StaticOrganizationGroupTypeMap)] = value; } }
        public Object StaticOrganizationGroupIdMap { get { return this[nameof(StaticOrganizationGroupIdMap)]; } set { this[nameof(StaticOrganizationGroupIdMap)] = value; } }
        public bool TryGetGuildName(Guid GroupID, Object OutGuildName) { return Invoke<bool>(nameof(TryGetGuildName), GroupID, OutGuildName); }
        public bool TryGetGroupName(Guid GroupID, Object OutGroupName) { return Invoke<bool>(nameof(TryGetGroupName), GroupID, OutGroupName); }
        public bool IsExistGroup(Object GroupName) { return Invoke<bool>(nameof(IsExistGroup), GroupName); }
        public Guid GetOrganizationGroupId(Object WorldContextObject, EPalOrganizationType OrganizationType) { return Invoke<Guid>(nameof(GetOrganizationGroupId), WorldContextObject, OrganizationType); }
        public void Debug_RequestNewGroup(PalGroupCreateParameter CreateParam, Object Callback) { Invoke(nameof(Debug_RequestNewGroup), CreateParam, Callback); }
        public void Debug_RequestExitGroup(PalInstanceID IndividualId, Object Callback) { Invoke(nameof(Debug_RequestExitGroup), IndividualId, Callback); }
        public void Debug_RequestEnterGroup(PalInstanceID IndividualId, Guid GroupID, Object Callback) { Invoke(nameof(Debug_RequestEnterGroup), IndividualId, GroupID, Callback); }
        public void Debug_RequestDisposeGroup(Guid GroupID, Object Callback) { Invoke(nameof(Debug_RequestDisposeGroup), GroupID, Callback); }
        public PalGroupBase Debug_GetFirstGroupByType(EPalGroupType Type) { return Invoke<PalGroupBase>(nameof(Debug_GetFirstGroupByType), Type); }
    }
    public class PalGroupNeutral : PalGroupBase
    {
        public PalGroupNeutral(nint addr) : base(addr) { }
    }
    public class PalGroupUtility : BlueprintFunctionLibrary
    {
        public PalGroupUtility(nint addr) : base(addr) { }
        public EPalOrganizationType GetOrganizationTypeByIndividualId(Object WorldContextObject, PalInstanceID IndividualId) { return Invoke<EPalOrganizationType>(nameof(GetOrganizationTypeByIndividualId), WorldContextObject, IndividualId); }
        public EPalOrganizationType GetOrganizationTypeByIndividualHandle(Object WorldContextObject, PalIndividualCharacterHandle IndividualHandle) { return Invoke<EPalOrganizationType>(nameof(GetOrganizationTypeByIndividualHandle), WorldContextObject, IndividualHandle); }
        public PalGroupGuildBase GetLocalPlayerGuild(Object WorldContextObject) { return Invoke<PalGroupGuildBase>(nameof(GetLocalPlayerGuild), WorldContextObject); }
        public Guid GetGroupIdByIndividualId(Object WorldContextObject, PalInstanceID IndividualId) { return Invoke<Guid>(nameof(GetGroupIdByIndividualId), WorldContextObject, IndividualId); }
    }
    public class PalGuildInfo : Info
    {
        public PalGuildInfo(nint addr) : base(addr) { }
        public Guid GroupID { get { return this[nameof(GroupID)].As<Guid>(); } set { this["GroupID"] = value; } }
        public PalGroupGuildBase Guild { get { return this[nameof(Guild)].As<PalGroupGuildBase>(); } set { this["Guild"] = value; } }
        public void OnRep_Guild(PalGroupGuildBase OldValue) { Invoke(nameof(OnRep_Guild), OldValue); }
    }
    public class PalGuildPalStorage : Object
    {
        public PalGuildPalStorage(nint addr) : base(addr) { }
        public void OnNotifiedRemovedCharacterFromPalBoxInServer(PalIndividualCharacterHandle Handle) { Invoke(nameof(OnNotifiedRemovedCharacterFromPalBoxInServer), Handle); }
        public void OnNotifiedObtainCharacterInServer(PalIndividualCharacterHandle Handle) { Invoke(nameof(OnNotifiedObtainCharacterInServer), Handle); }
    }
    public class PalHate : Object
    {
        public PalHate(nint addr) : base(addr) { }
        public Object HateMap { get { return this[nameof(HateMap)]; } set { this[nameof(HateMap)] = value; } }
        public TimerHandle HateTimerHandle { get { return this[nameof(HateTimerHandle)].As<TimerHandle>(); } set { this["HateTimerHandle"] = value; } }
        public void SelfDeathEvent(PalDeadInfo DeadInfo) { Invoke(nameof(SelfDeathEvent), DeadInfo); }
        public void ForceHateUp_ForActiveAndAttackOtomoPal(Actor OtomoPal) { Invoke(nameof(ForceHateUp_ForActiveAndAttackOtomoPal), OtomoPal); }
        public Actor FindMostHateTarget() { return Invoke<Actor>(nameof(FindMostHateTarget)); }
        public void DamageEvent(PalDamageResult DamageResult) { Invoke(nameof(DamageEvent), DamageResult); }
        public void ChangeHate(Actor Attacker, float PlusHateValue) { Invoke(nameof(ChangeHate), Attacker, PlusHateValue); }
        public void AttackSuccessEvent(PalDamageResult DamageResult) { Invoke(nameof(AttackSuccessEvent), DamageResult); }
    }
    public class PalHeadUpDisplayComponent : ActorComponent
    {
        public PalHeadUpDisplayComponent(nint addr) : base(addr) { }
        public float HeadUpOffset { get { return this[nameof(HeadUpOffset)].GetValue<float>(); } set { this[nameof(HeadUpOffset)].SetValue<float>(value); } }
        public void UpdateInvaderHUD() { Invoke(nameof(UpdateInvaderHUD)); }
        public void ShowInvaderHUD() { Invoke(nameof(ShowInvaderHUD)); }
        public void OnUpdatePossessItem(PalCharacterParameterComponent Parameter) { Invoke(nameof(OnUpdatePossessItem), Parameter); }
        public void OnUpdateOwnerCharacterGroupId(Guid GroupID) { Invoke(nameof(OnUpdateOwnerCharacterGroupId), GroupID); }
        public void OnInitializedCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(OnInitializedCharacter), OwnerCharacter); }
    }
    public class PalHeatSourceBoxComponent : BoxComponent
    {
        public PalHeatSourceBoxComponent(nint addr) : base(addr) { }
        public bool DefaultActive { get { return this[nameof(DefaultActive)].Flag; } set { this[nameof(DefaultActive)].Flag = value; } }
        public PalHeatSourceModule HeatSourceModule { get { return this[nameof(HeatSourceModule)].As<PalHeatSourceModule>(); } set { this["HeatSourceModule"] = value; } }
        public void SetActiveHeatSource(bool NextIsActive) { Invoke(nameof(SetActiveHeatSource), NextIsActive); }
        public PalHeatSourceModule GetModule() { return Invoke<PalHeatSourceModule>(nameof(GetModule)); }
    }
    public class PalHeatSourceModule : Object
    {
        public PalHeatSourceModule(nint addr) : base(addr) { }
        public Array<Object> PlayerList { get { return new Array<Object>(this[nameof(PlayerList)].Address); } }
        public Array<Object> ActorList { get { return new Array<Object>(this[nameof(ActorList)].Address); } }
        public bool IsActive { get { return this[nameof(IsActive)].Flag; } set { this[nameof(IsActive)].Flag = value; } }
        public Object UnieqName { get { return this[nameof(UnieqName)]; } set { this[nameof(UnieqName)] = value; } }
        public PalHeatSourceInfo HeatSourceInfo { get { return this[nameof(HeatSourceInfo)].As<PalHeatSourceInfo>(); } set { this["HeatSourceInfo"] = value; } }
        public void SetActivate(bool Active) { Invoke(nameof(SetActivate), Active); }
        public void RemovePlayer(Actor Player) { Invoke(nameof(RemovePlayer), Player); }
        public void RemoveActor(Actor Actor) { Invoke(nameof(RemoveActor), Actor); }
        public void InitializeHeatSource(Object SourceName, PalHeatSourceInfo Info, bool DefaultActive) { Invoke(nameof(InitializeHeatSource), SourceName, Info, DefaultActive); }
        public void AddPlayer(Actor Player) { Invoke(nameof(AddPlayer), Player); }
        public void AddActor(Actor Actor) { Invoke(nameof(AddActor), Actor); }
    }
    public class PalHeatSourceSphereComponent : SphereComponent
    {
        public PalHeatSourceSphereComponent(nint addr) : base(addr) { }
        public bool DefaultActive { get { return this[nameof(DefaultActive)].Flag; } set { this[nameof(DefaultActive)].Flag = value; } }
        public PalHeatSourceModule HeatSourceModule { get { return this[nameof(HeatSourceModule)].As<PalHeatSourceModule>(); } set { this["HeatSourceModule"] = value; } }
        public void SetActiveHeatSource(bool NextIsActive) { Invoke(nameof(SetActiveHeatSource), NextIsActive); }
        public PalHeatSourceModule GetModule() { return Invoke<PalHeatSourceModule>(nameof(GetModule)); }
    }
    public class PalHiddenAreaBase : Actor
    {
        public PalHiddenAreaBase(nint addr) : base(addr) { }
        public PalProceduralFoliageComponent ProceduralComponent { get { return this[nameof(ProceduralComponent)].As<PalProceduralFoliageComponent>(); } set { this["ProceduralComponent"] = value; } }
    }
    public class PalHiddenAreaBox : PalHiddenAreaBase
    {
        public PalHiddenAreaBox(nint addr) : base(addr) { }
        public PalHiddenBoxComponent HiddenBoxComponent { get { return this[nameof(HiddenBoxComponent)].As<PalHiddenBoxComponent>(); } set { this["HiddenBoxComponent"] = value; } }
    }
    public class PalHiddenAreaCapsule : PalHiddenAreaBase
    {
        public PalHiddenAreaCapsule(nint addr) : base(addr) { }
        public PalHiddenCapsuleComponent HiddenCapsuleComponent { get { return this[nameof(HiddenCapsuleComponent)].As<PalHiddenCapsuleComponent>(); } set { this["HiddenCapsuleComponent"] = value; } }
    }
    public class PalHiddenBoxComponent : BoxComponent
    {
        public PalHiddenBoxComponent(nint addr) : base(addr) { }
        public void EndOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(EndOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex); }
        public void BeginOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(BeginOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalHiddenCapsuleComponent : CapsuleComponent
    {
        public PalHiddenCapsuleComponent(nint addr) : base(addr) { }
        public void EndOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(EndOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex); }
        public void BeginOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(BeginOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalHitCollision : Actor
    {
        public PalHitCollision(nint addr) : base(addr) { }
        public PalHitFilter HitFilter { get { return this[nameof(HitFilter)].As<PalHitFilter>(); } set { this["HitFilter"] = value; } }
    }
    public class PalHitCollisionBox : PalHitCollision
    {
        public PalHitCollisionBox(nint addr) : base(addr) { }
        public BoxComponent BoxComponent { get { return this[nameof(BoxComponent)].As<BoxComponent>(); } set { this["BoxComponent"] = value; } }
        public void DrawHitCollision() { Invoke(nameof(DrawHitCollision)); }
    }
    public class PalHitLocationCalculator : Object
    {
        public PalHitLocationCalculator(nint addr) : base(addr) { }
        public Vector CalcLocation(PrimitiveComponent MyHitComponent, PrimitiveComponent OtherHitComponent) { return Invoke<Vector>(nameof(CalcLocation), MyHitComponent, OtherHitComponent); }
    }
    public class PalHUD : HUD
    {
        public PalHUD(nint addr) : base(addr) { }
    }
    public class PalHUDDispatchParameter_MapObject : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_MapObject(nint addr) : base(addr) { }
        public PalMapObjectConcreteModelBase MapObjectConcreteModel { get { return this[nameof(MapObjectConcreteModel)].As<PalMapObjectConcreteModelBase>(); } set { this["MapObjectConcreteModel"] = value; } }
    }
    public class PalHUDDispatchParameter_MonsterDetail : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_MonsterDetail(nint addr) : base(addr) { }
        public PalIndividualCharacterHandle IndividualHandle { get { return this[nameof(IndividualHandle)].As<PalIndividualCharacterHandle>(); } set { this["IndividualHandle"] = value; } }
    }
    public class PalHUDDispatchParameter_ConvertItem : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_ConvertItem(nint addr) : base(addr) { }
        public PalMapObjectConvertItemModel ConvertItemModel { get { return this[nameof(ConvertItemModel)].As<PalMapObjectConvertItemModel>(); } set { this["ConvertItemModel"] = value; } }
    }
    public class PalHUDDispatchParameter_MapObjectEnergyModule : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_MapObjectEnergyModule(nint addr) : base(addr) { }
        public PalMapObjectEnergyModule EnergyModule { get { return this[nameof(EnergyModule)].As<PalMapObjectEnergyModule>(); } set { this["EnergyModule"] = value; } }
    }
    public class PalHUDDispatchParameter_RecoverOtomo : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_RecoverOtomo(nint addr) : base(addr) { }
        public PalMapObjectRecoverOtomoModel RecoverOtomoModel { get { return this[nameof(RecoverOtomoModel)].As<PalMapObjectRecoverOtomoModel>(); } set { this["RecoverOtomoModel"] = value; } }
    }
    public class PalHUDDispatchParameter_CharacterDisplay : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_CharacterDisplay(nint addr) : base(addr) { }
        public PalMapObjectDisplayCharacterModel Model { get { return this[nameof(Model)].As<PalMapObjectDisplayCharacterModel>(); } set { this["Model"] = value; } }
    }
    public class PalHUDDispatchParameter_PalBox : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_PalBox(nint addr) : base(addr) { }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
    }
    public class PalHUDDispatchParameter_WorkerRadialMenu : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_WorkerRadialMenu(nint addr) : base(addr) { }
        public PalIndividualCharacterHandle IndividualHandle { get { return this[nameof(IndividualHandle)].As<PalIndividualCharacterHandle>(); } set { this["IndividualHandle"] = value; } }
        public EPalWorkerRadialMenuResult ResultType { get { return (EPalWorkerRadialMenuResult)this[nameof(ResultType)].GetValue<int>(); } set { this[nameof(ResultType)].SetValue<int>((int)value); } }
    }
    public class PalHUDDispatchParameter_HungerIcon : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_HungerIcon(nint addr) : base(addr) { }
        public bool IsExistFood { get { return this[nameof(IsExistFood)].Flag; } set { this[nameof(IsExistFood)].Flag = value; } }
        public Guid BelongGroupId { get { return this[nameof(BelongGroupId)].As<Guid>(); } set { this["BelongGroupId"] = value; } }
    }
    public class PalHUDDispatchParameter_Invader : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_Invader(nint addr) : base(addr) { }
        public Object ParentCharacter { get { return this[nameof(ParentCharacter)]; } set { this[nameof(ParentCharacter)] = value; } }
    }
    public class PalHUDDispatchParameter_FadeWidget : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_FadeWidget(nint addr) : base(addr) { }
        public EPalFadeWidgetType FadeWidgetType { get { return (EPalFadeWidgetType)this[nameof(FadeWidgetType)].GetValue<int>(); } set { this[nameof(FadeWidgetType)].SetValue<int>((int)value); } }
        public LinearColor CustomColor { get { return this[nameof(CustomColor)].As<LinearColor>(); } set { this["CustomColor"] = value; } }
        public float FadeInTime { get { return this[nameof(FadeInTime)].GetValue<float>(); } set { this[nameof(FadeInTime)].SetValue<float>(value); } }
        public float FadeOutTime { get { return this[nameof(FadeOutTime)].GetValue<float>(); } set { this[nameof(FadeOutTime)].SetValue<float>(value); } }
        public Object OnStartFadeIn { get { return this[nameof(OnStartFadeIn)]; } set { this[nameof(OnStartFadeIn)] = value; } }
        public Object OnEndFadeIn { get { return this[nameof(OnEndFadeIn)]; } set { this[nameof(OnEndFadeIn)] = value; } }
        public Object OnStartFadeOut { get { return this[nameof(OnStartFadeOut)]; } set { this[nameof(OnStartFadeOut)] = value; } }
        public Object OnEndFadeOut { get { return this[nameof(OnEndFadeOut)]; } set { this[nameof(OnEndFadeOut)] = value; } }
    }
    public class PalHUDDispatchParameter_CutsceneOverlay : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_CutsceneOverlay(nint addr) : base(addr) { }
        public PalCutsceneComponent CutsceneComponent { get { return this[nameof(CutsceneComponent)].As<PalCutsceneComponent>(); } set { this["CutsceneComponent"] = value; } }
    }
    public class PalWorldHUDDisplayInfo : Object
    {
        public PalWorldHUDDisplayInfo(nint addr) : base(addr) { }
        public PalWorldHUDParameter Parameter { get { return this[nameof(Parameter)].As<PalWorldHUDParameter>(); } set { this["Parameter"] = value; } }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public bool bDisposeFlag { get { return this[nameof(bDisposeFlag)].Flag; } set { this[nameof(bDisposeFlag)].Flag = value; } }
        public Guid WidgetId { get { return this[nameof(WidgetId)].As<Guid>(); } set { this["WidgetId"] = value; } }
    }
    public class PalHUDInGame : HUD
    {
        public PalHUDInGame(nint addr) : base(addr) { }
        public Object HUDLayoutClass { get { return this[nameof(HUDLayoutClass)]; } set { this[nameof(HUDLayoutClass)] = value; } }
        public Object PlayerInputGuardClass { get { return this[nameof(PlayerInputGuardClass)]; } set { this[nameof(PlayerInputGuardClass)] = value; } }
        public PalUIHUDLayoutBase HUDLayout { get { return this[nameof(HUDLayout)].As<PalUIHUDLayoutBase>(); } set { this["HUDLayout"] = value; } }
        public Object WorldHUDWidgetMap { get { return this[nameof(WorldHUDWidgetMap)]; } set { this[nameof(WorldHUDWidgetMap)] = value; } }
        public Array<PalUserWidget> HUDWidgets { get { return new Array<PalUserWidget>(this[nameof(HUDWidgets)].Address); } }
        public Array<PalUserWidgetStackableUI> StackableUIWidgets { get { return new Array<PalUserWidgetStackableUI>(this[nameof(StackableUIWidgets)].Address); } }
        public PalUILiftSlotModel LiftSlotModel { get { return this[nameof(LiftSlotModel)].As<PalUILiftSlotModel>(); } set { this["LiftSlotModel"] = value; } }
        public UserWidget HoverWidget { get { return this[nameof(HoverWidget)].As<UserWidget>(); } set { this["HoverWidget"] = value; } }
        public Array<PalWorldHUDDisplayInfo> WorldHUDDisplayInfos { get { return new Array<PalWorldHUDDisplayInfo>(this[nameof(WorldHUDDisplayInfos)].Address); } }
        public Array<PalWorldHUDDisplayInfo> ActiveWorldHUDDisplayInfos { get { return new Array<PalWorldHUDDisplayInfo>(this[nameof(ActiveWorldHUDDisplayInfos)].Address); } }
        public Object CommonUIClassMap { get { return this[nameof(CommonUIClassMap)]; } set { this[nameof(CommonUIClassMap)] = value; } }
        public Object WorldHUDClassMap { get { return this[nameof(WorldHUDClassMap)]; } set { this[nameof(WorldHUDClassMap)] = value; } }
        public Object LoadedCommonUIClassMap { get { return this[nameof(LoadedCommonUIClassMap)]; } set { this[nameof(LoadedCommonUIClassMap)] = value; } }
        public Object LoadedWorldHUDClassMap { get { return this[nameof(LoadedWorldHUDClassMap)]; } set { this[nameof(LoadedWorldHUDClassMap)] = value; } }
        public PalSoundPlayer SoundPlayer { get { return this[nameof(SoundPlayer)].As<PalSoundPlayer>(); } set { this["SoundPlayer"] = value; } }
        public Array<GameplayTag> GameMenuLayerTagOrder { get { return new Array<GameplayTag>(this[nameof(GameMenuLayerTagOrder)].Address); } }
        public Object LayerHideFlagMap { get { return this[nameof(LayerHideFlagMap)]; } set { this[nameof(LayerHideFlagMap)] = value; } }
        public void TickWorldHUDs() { Invoke(nameof(TickWorldHUDs)); }
        public void ShowLiftIcon() { Invoke(nameof(ShowLiftIcon)); }
        public void RemoveWorldHUDFromWidgetId(Guid ID) { Invoke(nameof(RemoveWorldHUDFromWidgetId), ID); }
        public void RemoveWorldHUD(Guid ID) { Invoke(nameof(RemoveWorldHUD), ID); }
        public void RemoveHUD(Guid ID) { Invoke(nameof(RemoveHUD), ID); }
        public Guid PushWidgetStackableUI(Object WidgetClass, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(PushWidgetStackableUI), WidgetClass, Parameter); }
        public void OnApplicationActivationStateChanged(bool bIsFocused) { Invoke(nameof(OnApplicationActivationStateChanged), bIsFocused); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public void HideLiftIcon() { Invoke(nameof(HideLiftIcon)); }
        public PalUserWidgetWorldHUD CreateWorldHUDWidget(Object WidgetClass, PalHUDDispatchParameterBase Parameter) { return Invoke<PalUserWidgetWorldHUD>(nameof(CreateWorldHUDWidget), WidgetClass, Parameter); }
        public PalUserWidget CreateHUDWidget(Object WidgetClass, EPalHUDWidgetPriority Priority, PalHUDDispatchParameterBase Parameter) { return Invoke<PalUserWidget>(nameof(CreateHUDWidget), WidgetClass, Priority, Parameter); }
        public void CloseWorldHUDWidget(Guid WidgetId) { Invoke(nameof(CloseWorldHUDWidget), WidgetId); }
        public void CloseOverlayUI(Guid ID) { Invoke(nameof(CloseOverlayUI), ID); }
        public void CloseHUDWidget(PalUserWidget Widget) { Invoke(nameof(CloseHUDWidget), Widget); }
        public void BP_SetupPlayerUI() { Invoke(nameof(BP_SetupPlayerUI)); }
        public void BindGameOverUI() { Invoke(nameof(BindGameOverUI)); }
        public Guid AddWorldHUD(PalWorldHUDParameter Parameter) { return Invoke<Guid>(nameof(AddWorldHUD), Parameter); }
        public Guid AddHUD(Object WidgetClass, EPalHUDWidgetPriority Priority, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(AddHUD), WidgetClass, Priority, Parameter); }
    }
    public class PalHUDLayout : PalActivatableWidget
    {
        public PalHUDLayout(nint addr) : base(addr) { }
        public Object EscapeMenuClass { get { return this[nameof(EscapeMenuClass)]; } set { this[nameof(EscapeMenuClass)] = value; } }
    }
    public class PalHUDServiceProviderInterface : Interface
    {
        public PalHUDServiceProviderInterface(nint addr) : base(addr) { }
        public void PlayAkSound(AkAudioEvent AkEvent) { Invoke(nameof(PlayAkSound), AkEvent); }
        public PalSoundPlayer GetSoundPlayer() { return Invoke<PalSoundPlayer>(nameof(GetSoundPlayer)); }
    }
    public class PalHUDService : Object
    {
        public PalHUDService(nint addr) : base(addr) { }
        public Object OnPushedStackableUI { get { return this[nameof(OnPushedStackableUI)]; } set { this[nameof(OnPushedStackableUI)] = value; } }
        public Object OnSuccessedCapturePal { get { return this[nameof(OnSuccessedCapturePal)]; } set { this[nameof(OnSuccessedCapturePal)] = value; } }
        public Object OnApplicationActivationStateChanged { get { return this[nameof(OnApplicationActivationStateChanged)]; } set { this[nameof(OnApplicationActivationStateChanged)] = value; } }
        public Object OnInvalidatePlayerInputGuard { get { return this[nameof(OnInvalidatePlayerInputGuard)]; } set { this[nameof(OnInvalidatePlayerInputGuard)] = value; } }
        public UITransientData TransientData { get { return this[nameof(TransientData)].As<UITransientData>(); } set { this["TransientData"] = value; } }
        public Object ServiceProvider { get { return this[nameof(ServiceProvider)]; } set { this[nameof(ServiceProvider)] = value; } }
        public void StartFadeOut(EPalFadeWidgetLayerType LayerType) { Invoke(nameof(StartFadeOut), LayerType); }
        public void StartFadeIn(EPalFadeWidgetLayerType LayerType, PalHUDDispatchParameter_FadeWidget FadeParameter) { Invoke(nameof(StartFadeIn), LayerType, FadeParameter); }
        public Guid ShowCommonUI(EPalWidgetBlueprintType WBPType, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(ShowCommonUI), WBPType, Parameter); }
        public void ShowCommonReward(PalUICommonRewardDisplayData RewardDisplayData) { Invoke(nameof(ShowCommonReward), RewardDisplayData); }
        public void ShowCommonItemInfo(PalUICommonItemInfoDisplayData DisplayData) { Invoke(nameof(ShowCommonItemInfo), DisplayData); }
        public void SetHUDLayerHideFlag(GameplayTag LayerTagName, Object HideReasonName, bool IsHide) { Invoke(nameof(SetHUDLayerHideFlag), LayerTagName, HideReasonName, IsHide); }
        public void RemoveWorldHUDFromWidgetId(Guid ID) { Invoke(nameof(RemoveWorldHUDFromWidgetId), ID); }
        public void RemoveWorldHUD(Guid ID) { Invoke(nameof(RemoveWorldHUD), ID); }
        public void RemoveHUD(Guid ID) { Invoke(nameof(RemoveHUD), ID); }
        public Guid Push(Object WidgetClass, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(Push), WidgetClass, Parameter); }
        public void PlayAkSound(AkAudioEvent AkEvent) { Invoke(nameof(PlayAkSound), AkEvent); }
        public void OnSuccessedCapturePal__DelegateSignature(PalUIPalCaptureInfo CaptureInfo) { Invoke(nameof(OnSuccessedCapturePal__DelegateSignature), CaptureInfo); }
        public void OnPushedStackableUI__DelegateSignature(Guid pushedWidgetID) { Invoke(nameof(OnPushedStackableUI__DelegateSignature), pushedWidgetID); }
        public void OnApplicationActivationStateChangedDelegate__DelegateSignature(bool bIsFocused) { Invoke(nameof(OnApplicationActivationStateChangedDelegate__DelegateSignature), bIsFocused); }
        public void InvokeFunction_Int32(Object FunctionName, int Value) { Invoke(nameof(InvokeFunction_Int32), FunctionName, Value); }
        public void InvokeFunction_FName(Object FunctionName, Object Value) { Invoke(nameof(InvokeFunction_FName), FunctionName, Value); }
        public void InvokeFunction(Object FunctionName) { Invoke(nameof(InvokeFunction), FunctionName); }
        public void InvalidatePlayerInputGuard__DelegateSignature() { Invoke(nameof(InvalidatePlayerInputGuard__DelegateSignature)); }
        public void HideCommonItemInfo() { Invoke(nameof(HideCommonItemInfo)); }
        public PalSoundPlayer GetSoundPlayer() { return Invoke<PalSoundPlayer>(nameof(GetSoundPlayer)); }
        public PalUILiftSlotModel GetLiftSlotModel() { return Invoke<PalUILiftSlotModel>(nameof(GetLiftSlotModel)); }
        public void DeactivateFocusCursor() { Invoke(nameof(DeactivateFocusCursor)); }
        public PalHUDDispatchParameterBase CreateDispatchParameterForK2Node(Object WorldContextObject, Object ParameterClass) { return Invoke<PalHUDDispatchParameterBase>(nameof(CreateDispatchParameterForK2Node), WorldContextObject, ParameterClass); }
        public void CloseOwnerStackableUI(Object InObject) { Invoke(nameof(CloseOwnerStackableUI), InObject); }
        public void CloseOverlayUIAll() { Invoke(nameof(CloseOverlayUIAll)); }
        public void Close(Guid ID) { Invoke(nameof(Close), ID); }
        public Guid AddWorldHUD(PalWorldHUDParameter Parameter) { return Invoke<Guid>(nameof(AddWorldHUD), Parameter); }
        public Guid AddHUD(Object WidgetClass, EPalHUDWidgetPriority Priority, PalHUDDispatchParameterBase Parameter) { return Invoke<Guid>(nameof(AddHUD), WidgetClass, Priority, Parameter); }
        public void ActivatePlayerInputGuard() { Invoke(nameof(ActivatePlayerInputGuard)); }
        public void ActivateFocusCursor(Widget TargetWidget) { Invoke(nameof(ActivateFocusCursor), TargetWidget); }
    }
    public class PalImGui : Actor
    {
        public PalImGui(nint addr) : base(addr) { }
        public Object WeakCharacterForParameterDisplay { get { return this[nameof(WeakCharacterForParameterDisplay)]; } set { this[nameof(WeakCharacterForParameterDisplay)] = value; } }
    }
    public class PalDebugWindowSetting : DataAsset
    {
        public PalDebugWindowSetting(nint addr) : base(addr) { }
        public Array<Object> PriorityFunctions { get { return new Array<Object>(this[nameof(PriorityFunctions)].Address); } }
    }
    public class PalIncidentBase : Object
    {
        public PalIncidentBase(nint addr) : base(addr) { }
        public PalIncidentExecutionSettings ExecSettings { get { return this[nameof(ExecSettings)].As<PalIncidentExecutionSettings>(); } set { this["ExecSettings"] = value; } }
        public PalIncidentIdParameter IdParameter { get { return this[nameof(IdParameter)].As<PalIncidentIdParameter>(); } set { this["IdParameter"] = value; } }
        public PalIncidentBase ParentIncident { get { return this[nameof(ParentIncident)].As<PalIncidentBase>(); } set { this["ParentIncident"] = value; } }
        public PalIncidentDynamicParameter DynamicParameter { get { return this[nameof(DynamicParameter)].As<PalIncidentDynamicParameter>(); } set { this["DynamicParameter"] = value; } }
        public PalIncidentSystemFunctionAccessor FunctionAccessor { get { return this[nameof(FunctionAccessor)].As<PalIncidentSystemFunctionAccessor>(); } set { this["FunctionAccessor"] = value; } }
        public bool bForceStop { get { return this[nameof(bForceStop)].Flag; } set { this[nameof(bForceStop)].Flag = value; } }
        public Object OccuredObject { get { return this[nameof(OccuredObject)].As<Object>(); } set { this["OccuredObject"] = value; } }
        public Object OwnerObject { get { return this[nameof(OwnerObject)].As<Object>(); } set { this["OwnerObject"] = value; } }
        public EPalIncidentState ExecState { get { return (EPalIncidentState)this[nameof(ExecState)].GetValue<int>(); } set { this[nameof(ExecState)].SetValue<int>((int)value); } }
        public void Tick(float DeltaTime) { Invoke(nameof(Tick), DeltaTime); }
        public void SetDynamicParameter(PalIncidentDynamicParameter Parameter) { Invoke(nameof(SetDynamicParameter), Parameter); }
        public int RequestConsumeInventoryItem(PalPlayerInventoryData InventoryData, Object ItemId, int ConsumeNum) { return Invoke<int>(nameof(RequestConsumeInventoryItem), InventoryData, ItemId, ConsumeNum); }
        public void OnInitialized() { Invoke(nameof(OnInitialized)); }
        public void OnGenerated() { Invoke(nameof(OnGenerated)); }
        public void OnForceStop() { Invoke(nameof(OnForceStop)); }
        public void OnEnd() { Invoke(nameof(OnEnd)); }
        public void OnChildInitialized(PalIncidentBase Child) { Invoke(nameof(OnChildInitialized), Child); }
        public void OnCanceled() { Invoke(nameof(OnCanceled)); }
        public void OnBegin() { Invoke(nameof(OnBegin)); }
        public bool IsInitialized() { return Invoke<bool>(nameof(IsInitialized)); }
        public bool IsExecuting() { return Invoke<bool>(nameof(IsExecuting)); }
        public bool IsCompleted() { return Invoke<bool>(nameof(IsCompleted)); }
        public bool IsCanceled() { return Invoke<bool>(nameof(IsCanceled)); }
        public bool HasOption(Object Option) { return Invoke<bool>(nameof(HasOption), Option); }
        public PalIncidentBase GetRootIncident() { return Invoke<PalIncidentBase>(nameof(GetRootIncident)); }
        public PalIncidentBase GetParentIncident() { return Invoke<PalIncidentBase>(nameof(GetParentIncident)); }
        public Object GetOwner() { return Invoke<Object>(nameof(GetOwner)); }
        public Object GetOccuredObject() { return Invoke<Object>(nameof(GetOccuredObject)); }
        public Object GetIncidentType() { return Invoke<Object>(nameof(GetIncidentType)); }
        public Object GetIncidentId() { return Invoke<Object>(nameof(GetIncidentId)); }
        public PalIncidentDynamicParameter GetDynamicParameter() { return Invoke<PalIncidentDynamicParameter>(nameof(GetDynamicParameter)); }
        public Array<Object> GetArgs() { return Invoke<Array<Object>>(nameof(GetArgs)); }
        public Object GetArg(int Index) { return Invoke<Object>(nameof(GetArg), Index); }
        public void ForceStop() { Invoke(nameof(ForceStop)); }
        public void Finish() { Invoke(nameof(Finish)); }
        public void DropItem(Object ItemId, int DropNum, Vector SpawnLocation, Vector ReleaseDirection) { Invoke(nameof(DropItem), ItemId, DropNum, SpawnLocation, ReleaseDirection); }
    }
    public class PalIncidentList : PalIncidentBase
    {
        public PalIncidentList(nint addr) : base(addr) { }
        public Array<Object> FirstIncidentIds { get { return new Array<Object>(this[nameof(FirstIncidentIds)].Address); } }
        public Array<PalIncidentBase> WaitingIncidents { get { return new Array<PalIncidentBase>(this[nameof(WaitingIncidents)].Address); } }
        public PalIncidentBase CurrentIncident { get { return this[nameof(CurrentIncident)].As<PalIncidentBase>(); } set { this["CurrentIncident"] = value; } }
        public Array<PalIncidentBase> CompletedIncidents { get { return new Array<PalIncidentBase>(this[nameof(CompletedIncidents)].Address); } }
        public int ProgressCount { get { return this[nameof(ProgressCount)].GetValue<int>(); } set { this[nameof(ProgressCount)].SetValue<int>(value); } }
        public void OnIncidentProgressed(PalIncidentBase PrevIncident, PalIncidentBase NextIncident, int ProcessCount) { Invoke(nameof(OnIncidentProgressed), PrevIncident, NextIncident, ProcessCount); }
        public void OnAllIncidentsCompleted() { Invoke(nameof(OnAllIncidentsCompleted)); }
        public void InsertIncidentToTop(Object ID) { Invoke(nameof(InsertIncidentToTop), ID); }
        public void InsertIncidentsToTop(Array<Object> IDs) { Invoke(nameof(InsertIncidentsToTop), IDs); }
        public void AddIncidents(Array<Object> IDs) { Invoke(nameof(AddIncidents), IDs); }
        public void AddIncident(Object ID) { Invoke(nameof(AddIncident), ID); }
    }
    public class PalIncidentNotifyListener : Object
    {
        public PalIncidentNotifyListener(nint addr) : base(addr) { }
        public Object OnIncidentStateNotifyDelegate { get { return this[nameof(OnIncidentStateNotifyDelegate)]; } set { this[nameof(OnIncidentStateNotifyDelegate)] = value; } }
        public Object FilterOccuredObject { get { return this[nameof(FilterOccuredObject)].As<Object>(); } set { this["FilterOccuredObject"] = value; } }
        public Object FilterOwnerObject { get { return this[nameof(FilterOwnerObject)].As<Object>(); } set { this["FilterOwnerObject"] = value; } }
        public Array<Object> FilterIncidentIds { get { return new Array<Object>(this[nameof(FilterIncidentIds)].Address); } }
        public Array<Object> FilterIncidentTypes { get { return new Array<Object>(this[nameof(FilterIncidentTypes)].Address); } }
        public void UnregisterFromIncidentSystem() { Invoke(nameof(UnregisterFromIncidentSystem)); }
        public void RegisterToIncidentSystemWithFilterOwner(Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterOwner), FilterOwner); }
        public void RegisterToIncidentSystemWithFilterOccuredOwner(Object FilterOccured, Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterOccuredOwner), FilterOccured, FilterOwner); }
        public void RegisterToIncidentSystemWithFilterOccured(Object FilterOccured) { Invoke(nameof(RegisterToIncidentSystemWithFilterOccured), FilterOccured); }
        public void RegisterToIncidentSystemWithFilterIdsOwner(Array<Object> FilterIds, Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdsOwner), FilterIds, FilterOwner); }
        public void RegisterToIncidentSystemWithFilterIdsOccuredOwner(Array<Object> FilterIds, Object FilterOccured, Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdsOccuredOwner), FilterIds, FilterOccured, FilterOwner); }
        public void RegisterToIncidentSystemWithFilterIdsOccured(Array<Object> FilterIds, Object FilterOccured) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdsOccured), FilterIds, FilterOccured); }
        public void RegisterToIncidentSystemWithFilterIds(Array<Object> FilterIds) { Invoke(nameof(RegisterToIncidentSystemWithFilterIds), FilterIds); }
        public void RegisterToIncidentSystemWithFilterIdOwner(Object FilterId, Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdOwner), FilterId, FilterOwner); }
        public void RegisterToIncidentSystemWithFilterIdOccuredOwner(Object FilterId, Object FilterOccured, Object FilterOwner) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdOccuredOwner), FilterId, FilterOccured, FilterOwner); }
        public void RegisterToIncidentSystemWithFilterIdOccured(Object FilterId, Object FilterOccured) { Invoke(nameof(RegisterToIncidentSystemWithFilterIdOccured), FilterId, FilterOccured); }
        public void RegisterToIncidentSystemWithFilterId(Object FilterId) { Invoke(nameof(RegisterToIncidentSystemWithFilterId), FilterId); }
        public void RegisterToIncidentSystem() { Invoke(nameof(RegisterToIncidentSystem)); }
        public void OnIncidentStateNotify(PalIncidentNotifyListener Listener, EPalIncidentState IncidentState, PalIncidentNotifyParameter Parameter) { Invoke(nameof(OnIncidentStateNotify), Listener, IncidentState, Parameter); }
        public void IncidentStateNotifyDelegate__DelegateSignature(PalIncidentNotifyListener Listener, EPalIncidentState IncidentState, PalIncidentNotifyParameter Parameter) { Invoke(nameof(IncidentStateNotifyDelegate__DelegateSignature), Listener, IncidentState, Parameter); }
    }
    public class PalIncidentSystem : PalWorldSubsystem
    {
        public PalIncidentSystem(nint addr) : base(addr) { }
        public Array<Object> ResidentIncidentList { get { return new Array<Object>(this[nameof(ResidentIncidentList)].Address); } }
        public Object IncidentClassMap { get { return this[nameof(IncidentClassMap)]; } set { this[nameof(IncidentClassMap)] = value; } }
        public DataTable IncidentParameterDataTable { get { return this[nameof(IncidentParameterDataTable)].As<DataTable>(); } set { this["IncidentParameterDataTable"] = value; } }
        public Object OnIncidentStateNotifyDelegate { get { return this[nameof(OnIncidentStateNotifyDelegate)]; } set { this[nameof(OnIncidentStateNotifyDelegate)] = value; } }
        public Array<PalIncidentBase> WaitingIncidents { get { return new Array<PalIncidentBase>(this[nameof(WaitingIncidents)].Address); } }
        public Array<PalIncidentBase> ExecuteIncidents { get { return new Array<PalIncidentBase>(this[nameof(ExecuteIncidents)].Address); } }
        public Array<PalIncidentBase> ResidentIncidents { get { return new Array<PalIncidentBase>(this[nameof(ResidentIncidents)].Address); } }
        public Array<PalIncidentNotifyListener> Listeners { get { return new Array<PalIncidentNotifyListener>(this[nameof(Listeners)].Address); } }
        public PalIncidentList RequestIncidents(Array<Object> Incidents, Object OccuredObject, Object OwnerObject, PalIncidentDynamicParameter Parameter) { return Invoke<PalIncidentList>(nameof(RequestIncidents), Incidents, OccuredObject, OwnerObject, Parameter); }
        public PalIncidentBase RequestIncident(Object IncidentId, Object OccuredObject, Object OwnerObject, PalIncidentDynamicParameter Parameter) { return Invoke<PalIncidentBase>(nameof(RequestIncident), IncidentId, OccuredObject, OwnerObject, Parameter); }
        public void NotifyIncidentState(EPalIncidentState NotifyType, PalIncidentNotifyParameter Parameter) { Invoke(nameof(NotifyIncidentState), NotifyType, Parameter); }
        public bool IsIncidentBeginAllowed(PalIncidentBase Incident) { return Invoke<bool>(nameof(IsIncidentBeginAllowed), Incident); }
        public void IncidentStateNotify__DelegateSignature(EPalIncidentState IncidentState, PalIncidentNotifyParameter Parameter) { Invoke(nameof(IncidentStateNotify__DelegateSignature), IncidentState, Parameter); }
        public PalIncidentBase GenerateIncident(PalIncidentInitializeParameter InitializeParam) { return Invoke<PalIncidentBase>(nameof(GenerateIncident), InitializeParam); }
        public void ForceStopByOwner(Object OwnerObject) { Invoke(nameof(ForceStopByOwner), OwnerObject); }
        public void ForceStopByOccuredObject(Object OccuredObject) { Invoke(nameof(ForceStopByOccuredObject), OccuredObject); }
        public void ForceStopByIncidentType(Object IncidentType) { Invoke(nameof(ForceStopByIncidentType), IncidentType); }
        public void ForceStopByIncidentId(Object IncidentId) { Invoke(nameof(ForceStopByIncidentId), IncidentId); }
    }
    public class PalIncidentDynamicParameter : Object
    {
        public PalIncidentDynamicParameter(nint addr) : base(addr) { }
        public Actor Other { get { return this[nameof(Other)].As<Actor>(); } set { this["Other"] = value; } }
    }
    public class PalIncidentDynamicParameterTalk : PalIncidentDynamicParameter
    {
        public PalIncidentDynamicParameterTalk(nint addr) : base(addr) { }
        public EPalIncidentTalkType TalkType { get { return (EPalIncidentTalkType)this[nameof(TalkType)].GetValue<int>(); } set { this[nameof(TalkType)].SetValue<int>((int)value); } }
        public Object TalkId { get { return this[nameof(TalkId)]; } set { this[nameof(TalkId)] = value; } }
        public Object RequestItem { get { return this[nameof(RequestItem)]; } set { this[nameof(RequestItem)] = value; } }
        public int RequestItemNum { get { return this[nameof(RequestItemNum)].GetValue<int>(); } set { this[nameof(RequestItemNum)].SetValue<int>(value); } }
        public bool IsRequestSucceed { get { return this[nameof(IsRequestSucceed)].Flag; } set { this[nameof(IsRequestSucceed)].Flag = value; } }
    }
    public class PalIncidentDynamicParameterRandom : PalIncidentDynamicParameter
    {
        public PalIncidentDynamicParameterRandom(nint addr) : base(addr) { }
        public Object SettingName { get { return this[nameof(SettingName)]; } set { this[nameof(SettingName)] = value; } }
        public int PlayerId { get { return this[nameof(PlayerId)].GetValue<int>(); } set { this[nameof(PlayerId)].SetValue<int>(value); } }
    }
    public class PalIndividualCharacterContainer : PalContainerBase
    {
        public PalIndividualCharacterContainer(nint addr) : base(addr) { }
        public Object OnUpdateContentsDelegate { get { return this[nameof(OnUpdateContentsDelegate)]; } set { this[nameof(OnUpdateContentsDelegate)] = value; } }
        public Object OnUpdateSlotsDelegate { get { return this[nameof(OnUpdateSlotsDelegate)]; } set { this[nameof(OnUpdateSlotsDelegate)] = value; } }
        public Array<PalIndividualCharacterSlot> SlotArray { get { return new Array<PalIndividualCharacterSlot>(this[nameof(SlotArray)].Address); } }
        public void UpdateContentsDelegate__DelegateSignature(PalIndividualCharacterContainer Container) { Invoke(nameof(UpdateContentsDelegate__DelegateSignature), Container); }
        public void OnRep_Slots() { Invoke(nameof(OnRep_Slots)); }
        public int Num() { return Invoke<int>(nameof(Num)); }
        public Array<PalIndividualCharacterSlot> GetSlots() { return Invoke<Array<PalIndividualCharacterSlot>>(nameof(GetSlots)); }
        public PalIndividualCharacterSlot Get(int Index) { return Invoke<PalIndividualCharacterSlot>(nameof(Get), Index); }
        public PalIndividualCharacterSlot FindEmptySlot() { return Invoke<PalIndividualCharacterSlot>(nameof(FindEmptySlot)); }
        public PalIndividualCharacterSlot FindByHandle(PalIndividualCharacterHandle Handle) { return Invoke<PalIndividualCharacterSlot>(nameof(FindByHandle), Handle); }
    }
    public class PalIndividualCharacterHandle : Object
    {
        public PalIndividualCharacterHandle(nint addr) : base(addr) { }
        public Object OnUpdateIndividualActorDelegate { get { return this[nameof(OnUpdateIndividualActorDelegate)]; } set { this[nameof(OnUpdateIndividualActorDelegate)] = value; } }
        public PalInstanceID ID { get { return this[nameof(ID)].As<PalInstanceID>(); } set { this["ID"] = value; } }
        public void UpdateIndividualActorDelegate__DelegateSignature(PalIndividualCharacterHandle Handle) { Invoke(nameof(UpdateIndividualActorDelegate__DelegateSignature), Handle); }
        public PalCharacter TryGetPhantomActor(int PhantomId) { return Invoke<PalCharacter>(nameof(TryGetPhantomActor), PhantomId); }
        public PalIndividualCharacterParameter TryGetIndividualParameter() { return Invoke<PalIndividualCharacterParameter>(nameof(TryGetIndividualParameter)); }
        public PalCharacter TryGetIndividualActor() { return Invoke<PalCharacter>(nameof(TryGetIndividualActor)); }
        public int GetPhantomIDByActor(PalCharacter Character) { return Invoke<int>(nameof(GetPhantomIDByActor), Character); }
        public PalInstanceID GetIndividualID() { return Invoke<PalInstanceID>(nameof(GetIndividualID)); }
    }
    public class PalIndividualCharacterHandleReference : PalIndividualCharacterHandle
    {
        public PalIndividualCharacterHandleReference(nint addr) : base(addr) { }
    }
    public class PalStatusHungerTypeUtility : BlueprintFunctionLibrary
    {
        public PalStatusHungerTypeUtility(nint addr) : base(addr) { }
        public bool IsHunger(EPalStatusHungerType Type) { return Invoke<bool>(nameof(IsHunger), Type); }
    }
    public class PalEquipItemContainerUtility : BlueprintFunctionLibrary
    {
        public PalEquipItemContainerUtility(nint addr) : base(addr) { }
    }
    public class PalIndividualCharacterSaveParameterUtility : Object
    {
        public PalIndividualCharacterSaveParameterUtility(nint addr) : base(addr) { }
        public bool IsValid(PalIndividualCharacterSaveParameter SaveParameter) { return Invoke<bool>(nameof(IsValid), SaveParameter); }
    }
    public class PalIndividualCharacterParameter : Object
    {
        public PalIndividualCharacterParameter(nint addr) : base(addr) { }
        public Object OnUpdateLevelDelegate { get { return this[nameof(OnUpdateLevelDelegate)]; } set { this[nameof(OnUpdateLevelDelegate)] = value; } }
        public Object OnUpdateRankDelegate { get { return this[nameof(OnUpdateRankDelegate)]; } set { this[nameof(OnUpdateRankDelegate)] = value; } }
        public Object OnAddExpDelegate { get { return this[nameof(OnAddExpDelegate)]; } set { this[nameof(OnAddExpDelegate)] = value; } }
        public Object OnUpdateHPDelegate { get { return this[nameof(OnUpdateHPDelegate)]; } set { this[nameof(OnUpdateHPDelegate)] = value; } }
        public Object OnUpdateSPDelegate { get { return this[nameof(OnUpdateSPDelegate)]; } set { this[nameof(OnUpdateSPDelegate)] = value; } }
        public Object OnUpdateFullStomachDelegate { get { return this[nameof(OnUpdateFullStomachDelegate)]; } set { this[nameof(OnUpdateFullStomachDelegate)] = value; } }
        public Object OnUpdateHungerTypeDelegate { get { return this[nameof(OnUpdateHungerTypeDelegate)]; } set { this[nameof(OnUpdateHungerTypeDelegate)] = value; } }
        public Object OnUpdateNickNameDelegate { get { return this[nameof(OnUpdateNickNameDelegate)]; } set { this[nameof(OnUpdateNickNameDelegate)] = value; } }
        public Object OnUpdateNickNameWithParameterDelegate { get { return this[nameof(OnUpdateNickNameWithParameterDelegate)]; } set { this[nameof(OnUpdateNickNameWithParameterDelegate)] = value; } }
        public Object OnUpdateShieldMaxHPDelegate { get { return this[nameof(OnUpdateShieldMaxHPDelegate)]; } set { this[nameof(OnUpdateShieldMaxHPDelegate)] = value; } }
        public Object OnUpdateShieldHPDelegate { get { return this[nameof(OnUpdateShieldHPDelegate)]; } set { this[nameof(OnUpdateShieldHPDelegate)] = value; } }
        public Object OnShieldDamageDelegate { get { return this[nameof(OnShieldDamageDelegate)]; } set { this[nameof(OnShieldDamageDelegate)] = value; } }
        public Object OnUpdateSanityDelegate { get { return this[nameof(OnUpdateSanityDelegate)]; } set { this[nameof(OnUpdateSanityDelegate)] = value; } }
        public Object OnUpdateUnusedStatusPoint { get { return this[nameof(OnUpdateUnusedStatusPoint)]; } set { this[nameof(OnUpdateUnusedStatusPoint)] = value; } }
        public Object OnUpdateStatusPointDelegate { get { return this[nameof(OnUpdateStatusPointDelegate)]; } set { this[nameof(OnUpdateStatusPointDelegate)] = value; } }
        public Object OnChangeBuffDelegate { get { return this[nameof(OnChangeBuffDelegate)]; } set { this[nameof(OnChangeBuffDelegate)] = value; } }
        public Object OnConditionChangedDelegate { get { return this[nameof(OnConditionChangedDelegate)]; } set { this[nameof(OnConditionChangedDelegate)] = value; } }
        public Object OnWorkSuitabilityChangedDelegate { get { return this[nameof(OnWorkSuitabilityChangedDelegate)]; } set { this[nameof(OnWorkSuitabilityChangedDelegate)] = value; } }
        public Object OnGotStatusPointListChangedDelegate { get { return this[nameof(OnGotStatusPointListChangedDelegate)]; } set { this[nameof(OnGotStatusPointListChangedDelegate)] = value; } }
        public Object OnStatusRankChangedDelegate { get { return this[nameof(OnStatusRankChangedDelegate)]; } set { this[nameof(OnStatusRankChangedDelegate)] = value; } }
        public Object OnInvaderTargetChanged { get { return this[nameof(OnInvaderTargetChanged)]; } set { this[nameof(OnInvaderTargetChanged)] = value; } }
        public Object OnTriedConsumeFoodDelegate { get { return this[nameof(OnTriedConsumeFoodDelegate)]; } set { this[nameof(OnTriedConsumeFoodDelegate)] = value; } }
        public Object OnUpdateGroupIdDelegate { get { return this[nameof(OnUpdateGroupIdDelegate)]; } set { this[nameof(OnUpdateGroupIdDelegate)] = value; } }
        public Object OnUpdateReviveTimerDelegate { get { return this[nameof(OnUpdateReviveTimerDelegate)]; } set { this[nameof(OnUpdateReviveTimerDelegate)] = value; } }
        public Object OnEndMedicalBedDelegate { get { return this[nameof(OnEndMedicalBedDelegate)]; } set { this[nameof(OnEndMedicalBedDelegate)] = value; } }
        public Object OnRevivedDelegate { get { return this[nameof(OnRevivedDelegate)]; } set { this[nameof(OnRevivedDelegate)] = value; } }
        public Object OnDeadBodyDelegate { get { return this[nameof(OnDeadBodyDelegate)]; } set { this[nameof(OnDeadBodyDelegate)] = value; } }
        public PalCharacter IndividualActor { get { return this[nameof(IndividualActor)].As<PalCharacter>(); } set { this["IndividualActor"] = value; } }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public Object PhantomActorMap { get { return this[nameof(PhantomActorMap)]; } set { this[nameof(PhantomActorMap)] = value; } }
        public Array<PalPhantomReplicateInfo> PhantomActorReplicateArray { get { return new Array<PalPhantomReplicateInfo>(this[nameof(PhantomActorReplicateArray)].Address); } }
        public PalIndividualCharacterSaveParameter SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameter"] = value; } }
        public Object OnAddEquipWazaDelegate { get { return this[nameof(OnAddEquipWazaDelegate)]; } set { this[nameof(OnAddEquipWazaDelegate)] = value; } }
        public Object OnChangeEquipWazaDelegate { get { return this[nameof(OnChangeEquipWazaDelegate)]; } set { this[nameof(OnChangeEquipWazaDelegate)] = value; } }
        public Object OnChangeMasteredWazaDelegate { get { return this[nameof(OnChangeMasteredWazaDelegate)]; } set { this[nameof(OnChangeMasteredWazaDelegate)] = value; } }
        public FlagContainer DisableNaturalHealing { get { return this[nameof(DisableNaturalHealing)].As<FlagContainer>(); } set { this["DisableNaturalHealing"] = value; } }
        public FloatContainer AdditionalNatureHealingRate { get { return this[nameof(AdditionalNatureHealingRate)].As<FloatContainer>(); } set { this["AdditionalNatureHealingRate"] = value; } }
        public PalIndividualCharacterSaveParameter SaveParameterMirror { get { return this[nameof(SaveParameterMirror)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameterMirror"] = value; } }
        public PalItemContainer EquipItemContainer { get { return this[nameof(EquipItemContainer)].As<PalItemContainer>(); } set { this["EquipItemContainer"] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public Object Debug_CurrentAIActionName { get { return this[nameof(Debug_CurrentAIActionName)]; } set { this[nameof(Debug_CurrentAIActionName)] = value; } }
        public void WorkSuitabilityChangedDelegate__DelegateSignature() { Invoke(nameof(WorkSuitabilityChangedDelegate__DelegateSignature)); }
        public void UseItemInSlot(PalItemSlotIdAndNum SlotIdAndNum) { Invoke(nameof(UseItemInSlot), SlotIdAndNum); }
        public void UpdateUnusedStatusPointDelegate__DelegateSignature(int UnusedPoint) { Invoke(nameof(UpdateUnusedStatusPointDelegate__DelegateSignature), UnusedPoint); }
        public void UpdateStatusPointDelegate__DelegateSignature(Object StatusName, int prevPoint, int newPoint) { Invoke(nameof(UpdateStatusPointDelegate__DelegateSignature), StatusName, prevPoint, newPoint); }
        public void UpdateSPDelegate__DelegateSignature(FixedPoint64 nowSP, FixedPoint64 nowMaxSP, bool isOverHeated) { Invoke(nameof(UpdateSPDelegate__DelegateSignature), nowSP, nowMaxSP, isOverHeated); }
        public void UpdateShieldMaxHPDelegate__DelegateSignature(FixedPoint64 nowShieldMaxHP) { Invoke(nameof(UpdateShieldMaxHPDelegate__DelegateSignature), nowShieldMaxHP); }
        public void UpdateShieldHPDelegate__DelegateSignature(FixedPoint64 nowShieldMaxHP, FixedPoint64 nowShieldHP) { Invoke(nameof(UpdateShieldHPDelegate__DelegateSignature), nowShieldMaxHP, nowShieldHP); }
        public void UpdateSanityDelegate__DelegateSignature(float nowSanity, float oldSanity) { Invoke(nameof(UpdateSanityDelegate__DelegateSignature), nowSanity, oldSanity); }
        public void UpdateReviveTimerDelegate__DelegateSignature(float NowReviveTimer) { Invoke(nameof(UpdateReviveTimerDelegate__DelegateSignature), NowReviveTimer); }
        public void UpdateRankDelegate__DelegateSignature(int nowRank, int oldRank) { Invoke(nameof(UpdateRankDelegate__DelegateSignature), nowRank, oldRank); }
        public void UpdateNickNameWithParameterDelegate__DelegateSignature(PalIndividualCharacterParameter IndividualParameter, Object newNickName) { Invoke(nameof(UpdateNickNameWithParameterDelegate__DelegateSignature), IndividualParameter, newNickName); }
        public void UpdateNickNameDelegate__DelegateSignature(Object newNickName) { Invoke(nameof(UpdateNickNameDelegate__DelegateSignature), newNickName); }
        public void UpdateLevelDelegate__DelegateSignature(int addLevel, int nowLevel) { Invoke(nameof(UpdateLevelDelegate__DelegateSignature), addLevel, nowLevel); }
        public void UpdateHungerTypeDelegate__DelegateSignature(EPalStatusHungerType Current, EPalStatusHungerType Last) { Invoke(nameof(UpdateHungerTypeDelegate__DelegateSignature), Current, Last); }
        public void UpdateHPDelegate__DelegateSignature(FixedPoint64 nowHP, FixedPoint64 nowMaxHP) { Invoke(nameof(UpdateHPDelegate__DelegateSignature), nowHP, nowMaxHP); }
        public void UpdateGroupIdDelegate__DelegateSignature(Guid NewGroupId) { Invoke(nameof(UpdateGroupIdDelegate__DelegateSignature), NewGroupId); }
        public void UpdateFullStomachDelegate__DelegateSignature(float Current, float Last) { Invoke(nameof(UpdateFullStomachDelegate__DelegateSignature), Current, Last); }
        public bool TryFindEatItem(PalContainerId ContainerId, int SlotIndex) { return Invoke<bool>(nameof(TryFindEatItem), ContainerId, SlotIndex); }
        public void TriedConsumeFoodDelegate__DelegateSignature() { Invoke(nameof(TriedConsumeFoodDelegate__DelegateSignature)); }
        public void StoreIndividualActorInfoToSaveParameter() { Invoke(nameof(StoreIndividualActorInfoToSaveParameter)); }
        public void StatusRankChangedDelegate__DelegateSignature() { Invoke(nameof(StatusRankChangedDelegate__DelegateSignature)); }
        public void StartRemainderOfLifeTimer() { Invoke(nameof(StartRemainderOfLifeTimer)); }
        public void StartRecuperatingInMedicalBed() { Invoke(nameof(StartRecuperatingInMedicalBed)); }
        public void ShieldDamageDelegate__DelegateSignature(int Damage, bool IsShieldBroken) { Invoke(nameof(ShieldDamageDelegate__DelegateSignature), Damage, IsShieldBroken); }
        public void SetStatusPoint(Object StatusName, int Point) { Invoke(nameof(SetStatusPoint), StatusName, Point); }
        public void SetShieldMaxHP(FixedPoint64 NextSheildMaxHP) { Invoke(nameof(SetShieldMaxHP), NextSheildMaxHP); }
        public void SetShieldHP(FixedPoint64 NextSheildHP) { Invoke(nameof(SetShieldHP), NextSheildHP); }
        public void SetPhysicalHealth(EPalStatusPhysicalHealthType PhysicalHealth) { Invoke(nameof(SetPhysicalHealth), PhysicalHealth); }
        public void SetNoFallDamageHeightLastJumpedLocation() { Invoke(nameof(SetNoFallDamageHeightLastJumpedLocation)); }
        public void SetLastJumpedLocation(Vector Location) { Invoke(nameof(SetLastJumpedLocation), Location); }
        public void SetInvaderData(EPalInvaderType InvaderType, Guid InBaseCampId) { Invoke(nameof(SetInvaderData), InvaderType, InBaseCampId); }
        public void SetDisableNaturalHealing(Object Key, bool Disable) { Invoke(nameof(SetDisableNaturalHealing), Key, Disable); }
        public void SetDecreaseFullStomachRates(Object Name, float Rate) { Invoke(nameof(SetDecreaseFullStomachRates), Name, Rate); }
        public void ResetLastJumpedLocation() { Invoke(nameof(ResetLastJumpedLocation)); }
        public void RemoveDecreaseFullStomachRates(Object Name) { Invoke(nameof(RemoveDecreaseFullStomachRates), Name); }
        public void PartyPalMealInventoryFood() { Invoke(nameof(PartyPalMealInventoryFood)); }
        public void OnRevivedDelegate__DelegateSignature(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(OnRevivedDelegate__DelegateSignature), IndividualParameter); }
        public void OnRep_SaveParameter() { Invoke(nameof(OnRep_SaveParameter)); }
        public void OnRep_PhantomActorReplicateArray() { Invoke(nameof(OnRep_PhantomActorReplicateArray)); }
        public void OnRep_IndividualActor() { Invoke(nameof(OnRep_IndividualActor)); }
        public void NaturalUpdateSaveParameter(EPalCharacterNaturalUpdateType Type) { Invoke(nameof(NaturalUpdateSaveParameter), Type); }
        public bool IsSleeping() { return Invoke<bool>(nameof(IsSleeping)); }
        public bool IsRarePal() { return Invoke<bool>(nameof(IsRarePal)); }
        public bool IsNoFallDamageLastJumpedLocation() { return Invoke<bool>(nameof(IsNoFallDamageLastJumpedLocation)); }
        public bool IsNocturnal() { return Invoke<bool>(nameof(IsNocturnal)); }
        public bool IsLevelMax() { return Invoke<bool>(nameof(IsLevelMax)); }
        public bool IsHPFullRecovered() { return Invoke<bool>(nameof(IsHPFullRecovered)); }
        public void InvaderTargetChangedDelegate__DelegateSignature() { Invoke(nameof(InvaderTargetChangedDelegate__DelegateSignature)); }
        public float HungerParameterRate() { return Invoke<float>(nameof(HungerParameterRate)); }
        public bool HasWorkSuitabilityRank(EPalWorkSuitability InWorkSuitability, int SuitabilityRank) { return Invoke<bool>(nameof(HasWorkSuitabilityRank), InWorkSuitability, SuitabilityRank); }
        public bool HasWorkSuitability(EPalWorkSuitability InWorkSuitability) { return Invoke<bool>(nameof(HasWorkSuitability), InWorkSuitability); }
        public bool HasMasteredWaza(EPalWazaID WazaID) { return Invoke<bool>(nameof(HasMasteredWaza), WazaID); }
        public bool HasGenusCategory(EPalGenusCategoryType Category) { return Invoke<bool>(nameof(HasGenusCategory), Category); }
        public void GotStatusPointListChangedDelegate__DelegateSignature() { Invoke(nameof(GotStatusPointListChangedDelegate__DelegateSignature)); }
        public int GetWorkSuitabilityRankWithCharacterRank(EPalWorkSuitability WorkSuitability) { return Invoke<int>(nameof(GetWorkSuitabilityRankWithCharacterRank), WorkSuitability); }
        public Object GetWorkSuitabilityRanksWithCharacterRank() { return Invoke<Object>(nameof(GetWorkSuitabilityRanksWithCharacterRank)); }
        public int GetWorkSuitabilityRank(EPalWorkSuitability InWorkSuitability) { return Invoke<int>(nameof(GetWorkSuitabilityRank), InWorkSuitability); }
        public int GetWorkSpeedRank() { return Invoke<int>(nameof(GetWorkSpeedRank)); }
        public EPalBaseCampWorkerSickType GetWorkerSick() { return Invoke<EPalBaseCampWorkerSickType>(nameof(GetWorkerSick)); }
        public int GetUnusedStatusPoint() { return Invoke<int>(nameof(GetUnusedStatusPoint)); }
        public EPalTribeID GetTribeID() { return Invoke<EPalTribeID>(nameof(GetTribeID)); }
        public void GetStatusPointList(Array<PalGotStatusPoint> OutPointList) { Invoke(nameof(GetStatusPointList), OutPointList); }
        public int GetStatusPoint(Object StatusName) { return Invoke<int>(nameof(GetStatusPoint), StatusName); }
        public int GetShotAttack_withBuff() { return Invoke<int>(nameof(GetShotAttack_withBuff)); }
        public int GetShotAttack() { return Invoke<int>(nameof(GetShotAttack)); }
        public FixedPoint64 GetShieldMaxHP() { return Invoke<FixedPoint64>(nameof(GetShieldMaxHP)); }
        public FixedPoint64 GetShieldHP() { return Invoke<FixedPoint64>(nameof(GetShieldHP)); }
        public PalIndividualCharacterSaveParameter GetSaveParameter() { return Invoke<PalIndividualCharacterSaveParameter>(nameof(GetSaveParameter)); }
        public float GetSanityValue() { return Invoke<float>(nameof(GetSanityValue)); }
        public float GetSanityRate() { return Invoke<float>(nameof(GetSanityRate)); }
        public float GetRatePassiveSkill(EPalPassiveSkillEffectType EffectType) { return Invoke<float>(nameof(GetRatePassiveSkill), EffectType); }
        public float GetRatePartnerSkill(EPalPassiveSkillEffectType EffectType) { return Invoke<float>(nameof(GetRatePartnerSkill), EffectType); }
        public int GetRank() { return Invoke<int>(nameof(GetRank)); }
        public EPalStatusPhysicalHealthType GetPhysicalHealth() { return Invoke<EPalStatusPhysicalHealthType>(nameof(GetPhysicalHealth)); }
        public Array<Object> GetPassiveSkillList() { return Invoke<Array<Object>>(nameof(GetPassiveSkillList)); }
        public int GetPalSoulRank() { return Invoke<int>(nameof(GetPalSoulRank)); }
        public void GetNickname(Object outName) { Invoke(nameof(GetNickname), outName); }
        public int GetMeleeAttack_withBuff() { return Invoke<int>(nameof(GetMeleeAttack_withBuff)); }
        public int GetMeleeAttack() { return Invoke<int>(nameof(GetMeleeAttack)); }
        public float GetMaxSanityValue() { return Invoke<float>(nameof(GetMaxSanityValue)); }
        public FixedPoint64 GetMaxHP_withBuff() { return Invoke<FixedPoint64>(nameof(GetMaxHP_withBuff)); }
        public int GetMaxHP() { return Invoke<int>(nameof(GetMaxHP)); }
        public float GetMaxFullStomach() { return Invoke<float>(nameof(GetMaxFullStomach)); }
        public Array<EPalWazaID> GetMasteredWaza() { return Invoke<Array<EPalWazaID>>(nameof(GetMasteredWaza)); }
        public int GetLevel() { return Invoke<int>(nameof(GetLevel)); }
        public Vector GetLastJumpedLocation() { return Invoke<Vector>(nameof(GetLastJumpedLocation)); }
        public EPalStatusHungerType GetHungerType() { return Invoke<EPalStatusHungerType>(nameof(GetHungerType)); }
        public int GetHPRank() { return Invoke<int>(nameof(GetHPRank)); }
        public FixedPoint64 GetHP() { return Invoke<FixedPoint64>(nameof(GetHP)); }
        public Guid GetGroupId() { return Invoke<Guid>(nameof(GetGroupId)); }
        public EPalGenderType GetGenderType() { return Invoke<EPalGenderType>(nameof(GetGenderType)); }
        public float GetFullStomachRate() { return Invoke<float>(nameof(GetFullStomachRate)); }
        public float GetFullStomachDecreasingRate() { return Invoke<float>(nameof(GetFullStomachDecreasingRate)); }
        public float GetFullStomach() { return Invoke<float>(nameof(GetFullStomach)); }
        public float GetFoodStatusRate(EPalFoodStatusEffectType EffectType) { return Invoke<float>(nameof(GetFoodStatusRate), EffectType); }
        public int GetExp() { return Invoke<int>(nameof(GetExp)); }
        public Array<EPalWazaID> GetEquipWaza() { return Invoke<Array<EPalWazaID>>(nameof(GetEquipWaza)); }
        public PalContainerId GetEquipItemContainerId() { return Invoke<PalContainerId>(nameof(GetEquipItemContainerId)); }
        public PalIndividualCharacterEquipItemContainerHandler GetEquipItemContainerHandler() { return Invoke<PalIndividualCharacterEquipItemContainerHandler>(nameof(GetEquipItemContainerHandler)); }
        public float GetEffectFoodTimeRate() { return Invoke<float>(nameof(GetEffectFoodTimeRate)); }
        public Object GetEffectFoodName() { return Invoke<Object>(nameof(GetEffectFoodName)); }
        public int GetDefense_withBuff() { return Invoke<int>(nameof(GetDefense_withBuff)); }
        public int GetDefense() { return Invoke<int>(nameof(GetDefense)); }
        public int GetDefenceRank() { return Invoke<int>(nameof(GetDefenceRank)); }
        public EPalWorkSuitability GetCurrentWorkSuitability() { return Invoke<EPalWorkSuitability>(nameof(GetCurrentWorkSuitability)); }
        public float GetCraftSpeedSickRate() { return Invoke<float>(nameof(GetCraftSpeedSickRate)); }
        public int GetCraftSpeedByWorkSuitability(EPalWorkSuitability WorkSuitability) { return Invoke<int>(nameof(GetCraftSpeedByWorkSuitability), WorkSuitability); }
        public float GetCraftSpeedBuffRate() { return Invoke<float>(nameof(GetCraftSpeedBuffRate)); }
        public int GetCraftSpeed_withBuff_WorkSuitability(EPalWorkSuitability Suitability) { return Invoke<int>(nameof(GetCraftSpeed_withBuff_WorkSuitability), Suitability); }
        public int GetCraftSpeed_withBuff() { return Invoke<int>(nameof(GetCraftSpeed_withBuff)); }
        public int GetCraftSpeed() { return Invoke<int>(nameof(GetCraftSpeed)); }
        public Object GetCharacterID() { return Invoke<Object>(nameof(GetCharacterID)); }
        public Object GetCharacterClass() { return Invoke<Object>(nameof(GetCharacterClass)); }
        public EPalBaseCampWorkerEventType GetBaseCampWorkerEventType() { return Invoke<EPalBaseCampWorkerEventType>(nameof(GetBaseCampWorkerEventType)); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
        public int GetAttackRank() { return Invoke<int>(nameof(GetAttackRank)); }
        public float GetAffectSanityValue() { return Invoke<float>(nameof(GetAffectSanityValue)); }
        public void FullRecoveryHP() { Invoke(nameof(FullRecoveryHP)); }
        public void EndRecuperatingInMedicalBed() { Invoke(nameof(EndRecuperatingInMedicalBed)); }
        public void EndMedicalBedDelegate__DelegateSignature() { Invoke(nameof(EndMedicalBedDelegate__DelegateSignature)); }
        public void DecrementUnusedStatusPoint() { Invoke(nameof(DecrementUnusedStatusPoint)); }
        public void DecreaseShieldHPByDamage(int Damage) { Invoke(nameof(DecreaseShieldHPByDamage), Damage); }
        public void DeadBodyDelegate__DelegateSignature(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(DeadBodyDelegate__DelegateSignature), IndividualHandle); }
        public void ConditionChangedDelegate__DelegateSignature() { Invoke(nameof(ConditionChangedDelegate__DelegateSignature)); }
        public void ClearEquipWaza() { Invoke(nameof(ClearEquipWaza)); }
        public void ChangeMasteredWazaDelegate__DelegateSignature(PalIndividualCharacterParameter IndividualParameter, EPalWazaID WazaID) { Invoke(nameof(ChangeMasteredWazaDelegate__DelegateSignature), IndividualParameter, WazaID); }
        public void ChangeEquipWazaDelegate__DelegateSignature(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(ChangeEquipWazaDelegate__DelegateSignature), IndividualParameter); }
        public void ChangeBuffStatusDelegate__DelegateSignature() { Invoke(nameof(ChangeBuffStatusDelegate__DelegateSignature)); }
        public void AddPassiveSkill(Object AddSkill, Object OverrideSkill) { Invoke(nameof(AddPassiveSkill), AddSkill, OverrideSkill); }
        public void AddHP(FixedPoint64 PlusHP) { Invoke(nameof(AddHP), PlusHP); }
        public void AddExpDelegate__DelegateSignature(int addExp, int nowExp) { Invoke(nameof(AddExpDelegate__DelegateSignature), addExp, nowExp); }
        public void AddEquipWazaDelegate__DelegateSignature(EPalWazaID WazaID) { Invoke(nameof(AddEquipWazaDelegate__DelegateSignature), WazaID); }
        public void AddEquipWaza(EPalWazaID WazaID) { Invoke(nameof(AddEquipWaza), WazaID); }
    }
    public class PalIndividualCharacterSaveParameterObject : Object
    {
        public PalIndividualCharacterSaveParameterObject(nint addr) : base(addr) { }
        public PalIndividualCharacterSaveParameter SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameter"] = value; } }
    }
    public class PalIndividualCharacterParameterUtility : BlueprintFunctionLibrary
    {
        public PalIndividualCharacterParameterUtility(nint addr) : base(addr) { }
        public int CraftSpeedWorkSuitability(EPalWorkSuitability WorkSuitability, PalIndividualCharacterParameter Parameter) { return Invoke<int>(nameof(CraftSpeedWorkSuitability), WorkSuitability, Parameter); }
        public int CraftSpeed(PalIndividualCharacterParameter Parameter) { return Invoke<int>(nameof(CraftSpeed), Parameter); }
    }
    public class PalIndividualCharacterSlot : Object
    {
        public PalIndividualCharacterSlot(nint addr) : base(addr) { }
        public Object OnUpdateSlotHandleDelegate { get { return this[nameof(OnUpdateSlotHandleDelegate)]; } set { this[nameof(OnUpdateSlotHandleDelegate)] = value; } }
        public Object OnUpdateSlotLockDelegate { get { return this[nameof(OnUpdateSlotLockDelegate)]; } set { this[nameof(OnUpdateSlotLockDelegate)] = value; } }
        public PalIndividualCharacterHandle Handle { get { return this[nameof(Handle)].As<PalIndividualCharacterHandle>(); } set { this["Handle"] = value; } }
        public PalInstanceID ReplicateHandleID { get { return this[nameof(ReplicateHandleID)].As<PalInstanceID>(); } set { this["ReplicateHandleID"] = value; } }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
        public Guid LockPlayerUId { get { return this[nameof(LockPlayerUId)].As<Guid>(); } set { this["LockPlayerUId"] = value; } }
        public EPalTribeID PermissionTribeID { get { return (EPalTribeID)this[nameof(PermissionTribeID)].GetValue<int>(); } set { this[nameof(PermissionTribeID)].SetValue<int>((int)value); } }
        public bool bIsReplicateCharacterParameter { get { return this[nameof(bIsReplicateCharacterParameter)].Flag; } set { this[nameof(bIsReplicateCharacterParameter)].Flag = value; } }
        public void UpdateSlotLockDelegate__DelegateSignature(PalIndividualCharacterSlot Slot) { Invoke(nameof(UpdateSlotLockDelegate__DelegateSignature), Slot); }
        public void UpdateSlotHandleDelegate__DelegateSignature(PalIndividualCharacterSlot Slot, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(UpdateSlotHandleDelegate__DelegateSignature), Slot, LastHandle); }
        public void Setup(int InSlotIndex, PalContainerId InContainerId) { Invoke(nameof(Setup), InSlotIndex, InContainerId); }
        public void OnRep_LockPlayerUId() { Invoke(nameof(OnRep_LockPlayerUId)); }
        public void OnRep_HandleID() { Invoke(nameof(OnRep_HandleID)); }
        public bool IsLocked() { return Invoke<bool>(nameof(IsLocked)); }
        public bool IsEmpty() { return Invoke<bool>(nameof(IsEmpty)); }
        public int GetSlotIndex() { return Invoke<int>(nameof(GetSlotIndex)); }
        public PalCharacterSlotId GetSlotId() { return Invoke<PalCharacterSlotId>(nameof(GetSlotId)); }
        public Guid GetLockPlayerUId() { return Invoke<Guid>(nameof(GetLockPlayerUId)); }
        public PalIndividualCharacterHandle GetHandle() { return Invoke<PalIndividualCharacterHandle>(nameof(GetHandle)); }
        public bool CanSetHandle(PalIndividualCharacterHandle InHandle) { return Invoke<bool>(nameof(CanSetHandle), InHandle); }
    }
    public class PalIndividualCharacterReferenceSlot : PalIndividualCharacterSlot
    {
        public PalIndividualCharacterReferenceSlot(nint addr) : base(addr) { }
        public Object OnUpdateSlotReferenceHandleDelegate { get { return this[nameof(OnUpdateSlotReferenceHandleDelegate)]; } set { this[nameof(OnUpdateSlotReferenceHandleDelegate)] = value; } }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
    }
    public class PalIndividualCharacterSlotsObserver : Object
    {
        public PalIndividualCharacterSlotsObserver(nint addr) : base(addr) { }
        public Object OnUpdateContainerDelegate { get { return this[nameof(OnUpdateContainerDelegate)]; } set { this[nameof(OnUpdateContainerDelegate)] = value; } }
        public void UpdateContainerDelegate__DelegateSignature() { Invoke(nameof(UpdateContainerDelegate__DelegateSignature)); }
        public void OnUpdateSlot(PalIndividualCharacterSlot Slot, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(OnUpdateSlot), Slot, LastHandle); }
        public void OnUpdateContainerSlots(PalIndividualCharacterContainer Container) { Invoke(nameof(OnUpdateContainerSlots), Container); }
        public void OnUpdateContainerSize(PalIndividualCharacterContainer Container) { Invoke(nameof(OnUpdateContainerSize), Container); }
        public void OnUpdateContainer(PalIndividualCharacterContainer Container) { Invoke(nameof(OnUpdateContainer), Container); }
    }
    public class PalInflictDamageNotifyInterface : Interface
    {
        public PalInflictDamageNotifyInterface(nint addr) : base(addr) { }
        public void OnInflictDamage(PalDamageResult DamageResult) { Invoke(nameof(OnInflictDamage), DamageResult); }
        public void OnDefeatCharacter(PalDeadInfo DeadInfo) { Invoke(nameof(OnDefeatCharacter), DeadInfo); }
    }
    public class PalInsideBaseCampCheckComponent : ActorComponent
    {
        public PalInsideBaseCampCheckComponent(nint addr) : base(addr) { }
        public Object OnEnterBaseCampDelegate { get { return this[nameof(OnEnterBaseCampDelegate)]; } set { this[nameof(OnEnterBaseCampDelegate)] = value; } }
        public Object OnLeaveBaseCampDelegate { get { return this[nameof(OnLeaveBaseCampDelegate)]; } set { this[nameof(OnLeaveBaseCampDelegate)] = value; } }
        public Guid NowInsideBaseCampID { get { return this[nameof(NowInsideBaseCampID)].As<Guid>(); } set { this["NowInsideBaseCampID"] = value; } }
        public void OnLeaveBaseCampDelegate__DelegateSignature() { Invoke(nameof(OnLeaveBaseCampDelegate__DelegateSignature)); }
        public void OnEnterBaseCampDelegate__DelegateSignature(PalBaseCampModel Model) { Invoke(nameof(OnEnterBaseCampDelegate__DelegateSignature), Model); }
        public bool IsInsideBaseCamp() { return Invoke<bool>(nameof(IsInsideBaseCamp)); }
        public PalBaseCampModel GetInsideBaseCampModel() { return Invoke<PalBaseCampModel>(nameof(GetInsideBaseCampModel)); }
        public Guid GetInsideBaseCampID() { return Invoke<Guid>(nameof(GetInsideBaseCampID)); }
    }
    public class PalInteractiveObjectSphereComponent : SphereComponent
    {
        public PalInteractiveObjectSphereComponent(nint addr) : base(addr) { }
        public PalInteractDelegates InteractDelegates { get { return this[nameof(InteractDelegates)].As<PalInteractDelegates>(); } set { this["InteractDelegates"] = value; } }
        public bool bIsEnableTriggerInteract { get { return this[nameof(bIsEnableTriggerInteract)].Flag; } set { this[nameof(bIsEnableTriggerInteract)].Flag = value; } }
        public bool bIsImplementedTriggerInteract { get { return this[nameof(bIsImplementedTriggerInteract)].Flag; } set { this[nameof(bIsImplementedTriggerInteract)].Flag = value; } }
        public bool bIsEnableInteractingTick { get { return this[nameof(bIsEnableInteractingTick)].Flag; } set { this[nameof(bIsEnableInteractingTick)].Flag = value; } }
        public bool bIsEnableInteractingTickInClientOnly { get { return this[nameof(bIsEnableInteractingTickInClientOnly)].Flag; } set { this[nameof(bIsEnableInteractingTickInClientOnly)].Flag = value; } }
        public ComponentReference IndicatorOriginRef { get { return this[nameof(IndicatorOriginRef)].As<ComponentReference>(); } set { this["IndicatorOriginRef"] = value; } }
        public Object IndicatorInterface { get { return this[nameof(IndicatorInterface)]; } set { this[nameof(IndicatorInterface)] = value; } }
        public Object OnCreateInteractDelegatesDelegate { get { return this[nameof(OnCreateInteractDelegatesDelegate)]; } set { this[nameof(OnCreateInteractDelegatesDelegate)] = value; } }
        public void SetIndicatorInterface(Object InIndicatorInterface) { Invoke(nameof(SetIndicatorInterface), InIndicatorInterface); }
        public void OnOverlapEnd(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnOverlapEnd), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex); }
        public void OnOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
        public void OnCreateInteractsDelegates__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractsDelegates__DelegateSignature), InteractDelegates); }
        public void OnCreateInteractDelegatesMultiCast__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractDelegatesMultiCast__DelegateSignature), InteractDelegates); }
        public Vector GetIndicatorLocation() { return Invoke<Vector>(nameof(GetIndicatorLocation)); }
        public void EnableTriggerInteract() { Invoke(nameof(EnableTriggerInteract)); }
        public PalInteractDelegates Delegates() { return Invoke<PalInteractDelegates>(nameof(Delegates)); }
        public void CallOrRegisterOnCreateInteractDelegates(Object Delegate) { Invoke(nameof(CallOrRegisterOnCreateInteractDelegates), Delegate); }
    }
    public class PalInteractableSphereComponentNative : PalInteractiveObjectSphereComponent
    {
        public PalInteractableSphereComponentNative(nint addr) : base(addr) { }
    }
    public class PalInteractComponent : ActorComponent
    {
        public PalInteractComponent(nint addr) : base(addr) { }
        public Object OnStartInteractiveObjectDelegate { get { return this[nameof(OnStartInteractiveObjectDelegate)]; } set { this[nameof(OnStartInteractiveObjectDelegate)] = value; } }
        public Object OnEndInteractiveObjectDelegate { get { return this[nameof(OnEndInteractiveObjectDelegate)]; } set { this[nameof(OnEndInteractiveObjectDelegate)] = value; } }
        public Object OnUpdateInteractiveObjectDelegate { get { return this[nameof(OnUpdateInteractiveObjectDelegate)]; } set { this[nameof(OnUpdateInteractiveObjectDelegate)] = value; } }
        public Array<Object> InteractiveObjects { get { return new Array<Object>(this[nameof(InteractiveObjects)].Address); } }
        public Object TargetInteractiveObject { get { return this[nameof(TargetInteractiveObject)]; } set { this[nameof(TargetInteractiveObject)] = value; } }
        public Object LastInteractingObject { get { return this[nameof(LastInteractingObject)]; } set { this[nameof(LastInteractingObject)] = value; } }
        public FlagContainer InteractDisableFlags { get { return this[nameof(InteractDisableFlags)].As<FlagContainer>(); } set { this["InteractDisableFlags"] = value; } }
        public void UpdateInteractiveObjectDelegate__DelegateSignature(Object InteractiveObject) { Invoke(nameof(UpdateInteractiveObjectDelegate__DelegateSignature), InteractiveObject); }
        public void TerminateInteract() { Invoke(nameof(TerminateInteract)); }
        public void StartTriggerInteract(EPalInteractiveObjectActionType ActionType) { Invoke(nameof(StartTriggerInteract), ActionType); }
        public void StartInteractiveObjectDelegate__DelegateSignature(Object InteractiveObject) { Invoke(nameof(StartInteractiveObjectDelegate__DelegateSignature), InteractiveObject); }
        public void SetEnableInteractByFlagName(Object flagName, bool bEnable, bool bTerminateInteractIfDisable) { Invoke(nameof(SetEnableInteractByFlagName), flagName, bEnable, bTerminateInteractIfDisable); }
        public void SetEnableInteract(bool bEnable, bool bTerminateInteractIfDisable) { Invoke(nameof(SetEnableInteract), bEnable, bTerminateInteractIfDisable); }
        public void OnEnableInteract(Object Component) { Invoke(nameof(OnEnableInteract), Component); }
        public bool IsInteracting() { return Invoke<bool>(nameof(IsInteracting)); }
        public bool IsEnableInteract() { return Invoke<bool>(nameof(IsEnableInteract)); }
        public void EndTriggerInteract(EPalInteractiveObjectActionType ActionType) { Invoke(nameof(EndTriggerInteract), ActionType); }
        public void EndInteractiveObjectDelegate__DelegateSignature() { Invoke(nameof(EndInteractiveObjectDelegate__DelegateSignature)); }
    }
    public class PalInteractiveObjectBoxComponent : BoxComponent
    {
        public PalInteractiveObjectBoxComponent(nint addr) : base(addr) { }
        public PalInteractDelegates InteractDelegates { get { return this[nameof(InteractDelegates)].As<PalInteractDelegates>(); } set { this["InteractDelegates"] = value; } }
        public bool bIsEnableTriggerInteract { get { return this[nameof(bIsEnableTriggerInteract)].Flag; } set { this[nameof(bIsEnableTriggerInteract)].Flag = value; } }
        public bool bIsImplementedTriggerInteract { get { return this[nameof(bIsImplementedTriggerInteract)].Flag; } set { this[nameof(bIsImplementedTriggerInteract)].Flag = value; } }
        public bool bIsEnableInteractingTick { get { return this[nameof(bIsEnableInteractingTick)].Flag; } set { this[nameof(bIsEnableInteractingTick)].Flag = value; } }
        public bool bIsEnableInteractingTickInClientOnly { get { return this[nameof(bIsEnableInteractingTickInClientOnly)].Flag; } set { this[nameof(bIsEnableInteractingTickInClientOnly)].Flag = value; } }
        public ComponentReference IndicatorOriginRef { get { return this[nameof(IndicatorOriginRef)].As<ComponentReference>(); } set { this["IndicatorOriginRef"] = value; } }
        public bool bIsAdjustIndicatorLocationZForPlayer { get { return this[nameof(bIsAdjustIndicatorLocationZForPlayer)].Flag; } set { this[nameof(bIsAdjustIndicatorLocationZForPlayer)].Flag = value; } }
        public Object IndicatorInterface { get { return this[nameof(IndicatorInterface)]; } set { this[nameof(IndicatorInterface)] = value; } }
        public Object OnCreateInteractDelegatesDelegate { get { return this[nameof(OnCreateInteractDelegatesDelegate)]; } set { this[nameof(OnCreateInteractDelegatesDelegate)] = value; } }
        public void SetIndicatorInterface(Object InIndicatorInterface) { Invoke(nameof(SetIndicatorInterface), InIndicatorInterface); }
        public void SetForceDisableInteract() { Invoke(nameof(SetForceDisableInteract)); }
        public void OnOverlapEnd(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnOverlapEnd), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex); }
        public void OnOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
        public void OnCreateInteractsDelegates__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractsDelegates__DelegateSignature), InteractDelegates); }
        public void OnCreateInteractDelegatesMultiCast__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractDelegatesMultiCast__DelegateSignature), InteractDelegates); }
        public Vector GetIndicatorLocation() { return Invoke<Vector>(nameof(GetIndicatorLocation)); }
        public void EnableTriggerInteract() { Invoke(nameof(EnableTriggerInteract)); }
        public PalInteractDelegates Delegates() { return Invoke<PalInteractDelegates>(nameof(Delegates)); }
        public void CallOrRegisterOnCreateInteractDelegates(Object Delegate) { Invoke(nameof(CallOrRegisterOnCreateInteractDelegates), Delegate); }
    }
    public class PalInteractiveObjectCapsuleComponent : CapsuleComponent
    {
        public PalInteractiveObjectCapsuleComponent(nint addr) : base(addr) { }
        public PalInteractDelegates InteractDelegates { get { return this[nameof(InteractDelegates)].As<PalInteractDelegates>(); } set { this["InteractDelegates"] = value; } }
        public bool bIsEnableTriggerInteract { get { return this[nameof(bIsEnableTriggerInteract)].Flag; } set { this[nameof(bIsEnableTriggerInteract)].Flag = value; } }
        public bool bIsImplementedTriggerInteract { get { return this[nameof(bIsImplementedTriggerInteract)].Flag; } set { this[nameof(bIsImplementedTriggerInteract)].Flag = value; } }
        public bool bIsEnableInteractingTick { get { return this[nameof(bIsEnableInteractingTick)].Flag; } set { this[nameof(bIsEnableInteractingTick)].Flag = value; } }
        public bool bIsEnableInteractingTickInClientOnly { get { return this[nameof(bIsEnableInteractingTickInClientOnly)].Flag; } set { this[nameof(bIsEnableInteractingTickInClientOnly)].Flag = value; } }
        public ComponentReference IndicatorOriginRef { get { return this[nameof(IndicatorOriginRef)].As<ComponentReference>(); } set { this["IndicatorOriginRef"] = value; } }
        public bool bIsAdjustIndicatorLocationZForPlayer { get { return this[nameof(bIsAdjustIndicatorLocationZForPlayer)].Flag; } set { this[nameof(bIsAdjustIndicatorLocationZForPlayer)].Flag = value; } }
        public Object IndicatorInterface { get { return this[nameof(IndicatorInterface)]; } set { this[nameof(IndicatorInterface)] = value; } }
        public Object OnCreateInteractDelegatesDelegate { get { return this[nameof(OnCreateInteractDelegatesDelegate)]; } set { this[nameof(OnCreateInteractDelegatesDelegate)] = value; } }
        public void SetIndicatorInterface(Object InIndicatorInterface) { Invoke(nameof(SetIndicatorInterface), InIndicatorInterface); }
        public void OnOverlapEnd(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(OnOverlapEnd), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex); }
        public void OnOverlapBegin(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(OnOverlapBegin), OverlappedComp, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
        public void OnCreateInteractsDelegates__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractsDelegates__DelegateSignature), InteractDelegates); }
        public void OnCreateInteractDelegatesMultiCast__DelegateSignature(PalInteractDelegates InteractDelegates) { Invoke(nameof(OnCreateInteractDelegatesMultiCast__DelegateSignature), InteractDelegates); }
        public Vector GetIndicatorLocation() { return Invoke<Vector>(nameof(GetIndicatorLocation)); }
        public void EnableTriggerInteract() { Invoke(nameof(EnableTriggerInteract)); }
        public PalInteractDelegates Delegates() { return Invoke<PalInteractDelegates>(nameof(Delegates)); }
        public void CallOrRegisterOnCreateInteractDelegates(Object Delegate) { Invoke(nameof(CallOrRegisterOnCreateInteractDelegates), Delegate); }
    }
    public class PalInteractiveObjectActionInfoUtility : Object
    {
        public PalInteractiveObjectActionInfoUtility(nint addr) : base(addr) { }
        public EPalInteractiveObjectIndicatorType GetIndicatorType(PalInteractiveObjectActionInfoSet ActionInfo, EPalInteractiveObjectActionType ActionType) { return Invoke<EPalInteractiveObjectIndicatorType>(nameof(GetIndicatorType), ActionInfo, ActionType); }
        public PalInteractiveObjectActionBy CreateSituationInfo(Object WorldContextObject) { return Invoke<PalInteractiveObjectActionBy>(nameof(CreateSituationInfo), WorldContextObject); }
    }
    public class PalInteractiveObjectIndicatorTypeUtility : Object
    {
        public PalInteractiveObjectIndicatorTypeUtility(nint addr) : base(addr) { }
        public Object ToText(Object WorldObjectContext, EPalInteractiveObjectIndicatorType Type) { return Invoke<Object>(nameof(ToText), WorldObjectContext, Type); }
    }
    public class PalInteractiveObjectIndicatorInterface : Interface
    {
        public PalInteractiveObjectIndicatorInterface(nint addr) : base(addr) { }
    }
    public class PalInteractDelegates : Object
    {
        public PalInteractDelegates(nint addr) : base(addr) { }
        public Object OnEnableTriggerInteract { get { return this[nameof(OnEnableTriggerInteract)]; } set { this[nameof(OnEnableTriggerInteract)] = value; } }
        public Object OnInteractBegin { get { return this[nameof(OnInteractBegin)]; } set { this[nameof(OnInteractBegin)] = value; } }
        public Object OnInteractEnd { get { return this[nameof(OnInteractEnd)]; } set { this[nameof(OnInteractEnd)] = value; } }
        public Object OnInteracting { get { return this[nameof(OnInteracting)]; } set { this[nameof(OnInteracting)] = value; } }
        public Object OnTriggerInteract { get { return this[nameof(OnTriggerInteract)]; } set { this[nameof(OnTriggerInteract)] = value; } }
        public Object OnStartTriggerInteract { get { return this[nameof(OnStartTriggerInteract)]; } set { this[nameof(OnStartTriggerInteract)] = value; } }
        public Object OnEndTriggerInteract { get { return this[nameof(OnEndTriggerInteract)]; } set { this[nameof(OnEndTriggerInteract)] = value; } }
        public Object OnTriggeringInteract { get { return this[nameof(OnTriggeringInteract)]; } set { this[nameof(OnTriggeringInteract)] = value; } }
    }
    public class PalInteractiveInterface : Interface
    {
        public PalInteractiveInterface(nint addr) : base(addr) { }
        public bool IsEnableTriggerInteract() { return Invoke<bool>(nameof(IsEnableTriggerInteract)); }
    }
    public class PalInteractiveObjectComponentInterface : PalInteractiveInterface
    {
        public PalInteractiveObjectComponentInterface(nint addr) : base(addr) { }
        public void SetIndicatorInterface(Object InIndicatorInterface) { Invoke(nameof(SetIndicatorInterface), InIndicatorInterface); }
        public Object Self() { return Invoke<Object>(nameof(Self)); }
        public Object GetIndicatorText(Object WorldContextObject, EPalInteractiveObjectIndicatorType IndicatorType) { return Invoke<Object>(nameof(GetIndicatorText), WorldContextObject, IndicatorType); }
        public Vector GetIndicatorLocation() { return Invoke<Vector>(nameof(GetIndicatorLocation)); }
        public void GetIndicatorInfo(PalInteractiveObjectActionInfoSet ActionInfo, PalInteractiveObjectActionBy SituationInfo) { Invoke(nameof(GetIndicatorInfo), ActionInfo, SituationInfo); }
        public void EnableTriggerInteract() { Invoke(nameof(EnableTriggerInteract)); }
        public PalInteractDelegates Delegates() { return Invoke<PalInteractDelegates>(nameof(Delegates)); }
    }
    public class PalInteractiveObjectComponentUtility : Object
    {
        public PalInteractiveObjectComponentUtility(nint addr) : base(addr) { }
    }
    public class PalInvaderBaseCampObserver : Object
    {
        public PalInvaderBaseCampObserver(nint addr) : base(addr) { }
        public PalBaseCampModel TargetBaseCamp { get { return this[nameof(TargetBaseCamp)].As<PalBaseCampModel>(); } set { this["TargetBaseCamp"] = value; } }
        public Guid TargetBaseCampId { get { return this[nameof(TargetBaseCampId)].As<Guid>(); } set { this["TargetBaseCampId"] = value; } }
        public bool bIsInvading { get { return this[nameof(bIsInvading)].Flag; } set { this[nameof(bIsInvading)].Flag = value; } }
        public bool bIsCoolTime { get { return this[nameof(bIsCoolTime)].Flag; } set { this[nameof(bIsCoolTime)].Flag = value; } }
        public float CoolTimeFinish { get { return this[nameof(CoolTimeFinish)].GetValue<float>(); } set { this[nameof(CoolTimeFinish)].SetValue<float>(value); } }
        public float CoolTimeElapsed { get { return this[nameof(CoolTimeElapsed)].GetValue<float>(); } set { this[nameof(CoolTimeElapsed)].SetValue<float>(value); } }
        public float PlayerInBaseCampTimer { get { return this[nameof(PlayerInBaseCampTimer)].GetValue<float>(); } set { this[nameof(PlayerInBaseCampTimer)].SetValue<float>(value); } }
    }
    public class PalInvaderIncidentBase : PalIncidentBase
    {
        public PalInvaderIncidentBase(nint addr) : base(addr) { }
        public EPalInvaderType InvaderType { get { return (EPalInvaderType)this[nameof(InvaderType)].GetValue<int>(); } set { this[nameof(InvaderType)].SetValue<int>((int)value); } }
        public DataTable InvaderDataTable { get { return this[nameof(InvaderDataTable)].As<DataTable>(); } set { this["InvaderDataTable"] = value; } }
        public Object MonsterAIControllerClass { get { return this[nameof(MonsterAIControllerClass)]; } set { this[nameof(MonsterAIControllerClass)] = value; } }
        public Object EnemyAIControllerClass { get { return this[nameof(EnemyAIControllerClass)]; } set { this[nameof(EnemyAIControllerClass)] = value; } }
        public Array<PalInvaderSpawnCharacterParameter> InvaderMember { get { return new Array<PalInvaderSpawnCharacterParameter>(this[nameof(InvaderMember)].Address); } }
        public Array<PalAIController> MemberController { get { return new Array<PalAIController>(this[nameof(MemberController)].Address); } }
        public Object ChosenInvaderDataRowName { get { return this[nameof(ChosenInvaderDataRowName)]; } set { this[nameof(ChosenInvaderDataRowName)] = value; } }
        public Guid GroupGuid { get { return this[nameof(GroupGuid)].As<Guid>(); } set { this["GroupGuid"] = value; } }
        public bool bCanExecute { get { return this[nameof(bCanExecute)].Flag; } set { this[nameof(bCanExecute)].Flag = value; } }
        public PalSquad Squad { get { return this[nameof(Squad)].As<PalSquad>(); } set { this["Squad"] = value; } }
        public Object LocationMap { get { return this[nameof(LocationMap)]; } set { this[nameof(LocationMap)] = value; } }
        public void StartInvader() { Invoke(nameof(StartInvader)); }
        public void SpawnMemberCharacters(Vector StartLocation) { Invoke(nameof(SpawnMemberCharacters), StartLocation); }
        public bool SelectInvaders(int Grade, EPalBiomeType Biome, Array<PalInvaderSpawnCharacterParameter> OutInvaderMember) { return Invoke<bool>(nameof(SelectInvaders), Grade, Biome, OutInvaderMember); }
        public void RemoveGroupCharacter(PalIndividualCharacterHandle RemoveIndividualHandle) { Invoke(nameof(RemoveGroupCharacter), RemoveIndividualHandle); }
        public void OnStartInvade() { Invoke(nameof(OnStartInvade)); }
        public void OnInvaderArrived() { Invoke(nameof(OnInvaderArrived)); }
        public void OnEndInvade() { Invoke(nameof(OnEndInvade)); }
        public bool IsGroupCharacter(PalIndividualCharacterHandle IndividualHandle) { return Invoke<bool>(nameof(IsGroupCharacter), IndividualHandle); }
        public int GetVisitorNPCReturnTimeMinutes() { return Invoke<int>(nameof(GetVisitorNPCReturnTimeMinutes)); }
        public PalBaseCampModel GetTargetCampModel() { return Invoke<PalBaseCampModel>(nameof(GetTargetCampModel)); }
        public bool GetInvaderStartPoint(Vector Result) { return Invoke<bool>(nameof(GetInvaderStartPoint), Result); }
        public int GetInvadeReturnTimeMinutes() { return Invoke<int>(nameof(GetInvadeReturnTimeMinutes)); }
        public void GetChosenInvaderGroupName(Object OutText) { Invoke(nameof(GetChosenInvaderGroupName), OutText); }
        public int GetCandidateStartLocations(Array<Vector> Result) { return Invoke<int>(nameof(GetCandidateStartLocations), Result); }
        public void GetBroadcastParameter(PalIncidentBroadcastParameter outParameter) { Invoke(nameof(GetBroadcastParameter), outParameter); }
        public int GetAliveInvaderNum() { return Invoke<int>(nameof(GetAliveInvaderNum)); }
        public void EndInvadeByTimelimit() { Invoke(nameof(EndInvadeByTimelimit)); }
        public void AddGroupCharacter(PalIndividualCharacterHandle AddIndividualHandle, EPalCharacterLocationType LocationType) { Invoke(nameof(AddGroupCharacter), AddIndividualHandle, LocationType); }
    }
    public class PalInvaderManager : PalWorldSubsystem
    {
        public PalInvaderManager(nint addr) : base(addr) { }
        public Object SpawnDummyNavInvokerDelegate { get { return this[nameof(SpawnDummyNavInvokerDelegate)]; } set { this[nameof(SpawnDummyNavInvokerDelegate)] = value; } }
        public Object OnInvaderStartDelegate { get { return this[nameof(OnInvaderStartDelegate)]; } set { this[nameof(OnInvaderStartDelegate)] = value; } }
        public Object OnInvaderEndDelegate { get { return this[nameof(OnInvaderEndDelegate)]; } set { this[nameof(OnInvaderEndDelegate)] = value; } }
        public Object OnInvaderArrivedDelegate { get { return this[nameof(OnInvaderArrivedDelegate)]; } set { this[nameof(OnInvaderArrivedDelegate)] = value; } }
        public Object InvadeStartLocationList { get { return this[nameof(InvadeStartLocationList)]; } set { this[nameof(InvadeStartLocationList)] = value; } }
        public Object Observers { get { return this[nameof(Observers)]; } set { this[nameof(Observers)] = value; } }
        public Object Incidents { get { return this[nameof(Incidents)]; } set { this[nameof(Incidents)] = value; } }
        public Guid StartInvaderLogId { get { return this[nameof(StartInvaderLogId)].As<Guid>(); } set { this["StartInvaderLogId"] = value; } }
        public void VisitorTravelTest() { Invoke(nameof(VisitorTravelTest)); }
        public void VisitorTravelLog(EPalLogType logType) { Invoke(nameof(VisitorTravelLog), logType); }
        public void StartInvaderMarchRandom() { Invoke(nameof(StartInvaderMarchRandom)); }
        public void StartInvaderMarchAll() { Invoke(nameof(StartInvaderMarchAll)); }
        public Actor SpawnDummyNavInvokerDelegate__DelegateSignature(Transform Transform) { return Invoke<Actor>(nameof(SpawnDummyNavInvokerDelegate__DelegateSignature), Transform); }
        public Actor SpawnDummyNavInvoker(Transform Transform) { return Invoke<Actor>(nameof(SpawnDummyNavInvoker), Transform); }
        public PalInvaderIncidentBase RequestIncidentVisitorNPC_BP(Object OccuredBaseCamp, PalIncidentDynamicParameterInvader Parameter) { return Invoke<PalInvaderIncidentBase>(nameof(RequestIncidentVisitorNPC_BP), OccuredBaseCamp, Parameter); }
        public bool RequestIncidentVisitorNPC(Guid Guid, PalInvaderBaseCampObserver Observer) { return Invoke<bool>(nameof(RequestIncidentVisitorNPC), Guid, Observer); }
        public PalInvaderIncidentBase RequestIncidentInvaderEnemy_BP(Object OccuredBaseCamp, PalIncidentDynamicParameterInvader Parameter) { return Invoke<PalInvaderIncidentBase>(nameof(RequestIncidentInvaderEnemy_BP), OccuredBaseCamp, Parameter); }
        public bool RequestIncidentInvaderEnemy(Guid Guid, PalInvaderBaseCampObserver Observer) { return Invoke<bool>(nameof(RequestIncidentInvaderEnemy), Guid, Observer); }
        public void RemoveInvaderIncident(PalIncidentBase Incident) { Invoke(nameof(RemoveInvaderIncident), Incident); }
        public void InvaderStartDelegate__DelegateSignature(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(InvaderStartDelegate__DelegateSignature), Parameter); }
        public void InvaderOnArrivedDelegate__DelegateSignature(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(InvaderOnArrivedDelegate__DelegateSignature), Parameter); }
        public void InvaderEndDelegate__DelegateSignature(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(InvaderEndDelegate__DelegateSignature), Parameter); }
    }
    public class PalInvaderStartPoint : Actor
    {
        public PalInvaderStartPoint(nint addr) : base(addr) { }
        public EPalBiomeType BiomeType { get { return (EPalBiomeType)this[nameof(BiomeType)].GetValue<int>(); } set { this[nameof(BiomeType)].SetValue<int>((int)value); } }
    }
    public class PalIncidentDynamicParameterInvader : PalIncidentDynamicParameter
    {
        public PalIncidentDynamicParameterInvader(nint addr) : base(addr) { }
        public Guid TargetBaseCampId { get { return this[nameof(TargetBaseCampId)].As<Guid>(); } set { this["TargetBaseCampId"] = value; } }
    }
    public class PalItemContainer : PalContainerBase
    {
        public PalItemContainer(nint addr) : base(addr) { }
        public Object OnUpdateContentsDelegate { get { return this[nameof(OnUpdateContentsDelegate)]; } set { this[nameof(OnUpdateContentsDelegate)] = value; } }
        public Array<PalItemSlot> ItemSlotArray { get { return new Array<PalItemSlot>(this[nameof(ItemSlotArray)].Address); } }
        public PalItemPermission Permission { get { return this[nameof(Permission)].As<PalItemPermission>(); } set { this["Permission"] = value; } }
        public float CorruptionMultiplier { get { return this[nameof(CorruptionMultiplier)].GetValue<float>(); } set { this[nameof(CorruptionMultiplier)].SetValue<float>(value); } }
        public void UpdateContentsDelegate__DelegateSignature(PalItemContainer Container) { Invoke(nameof(UpdateContentsDelegate__DelegateSignature), Container); }
        public void OnUpdateSlotContent(PalItemSlot Slot) { Invoke(nameof(OnUpdateSlotContent), Slot); }
        public void OnRep_Permission() { Invoke(nameof(OnRep_Permission)); }
        public void OnRep_ItemSlotArray() { Invoke(nameof(OnRep_ItemSlotArray)); }
        public int Num() { return Invoke<int>(nameof(Num)); }
        public PalItemPermission GetPermission() { return Invoke<PalItemPermission>(nameof(GetPermission)); }
        public int GetItemStackCount(Object StaticItemId) { return Invoke<int>(nameof(GetItemStackCount), StaticItemId); }
        public PalItemSlot Get(int Index) { return Invoke<PalItemSlot>(nameof(Get), Index); }
    }
    public class PalItemContainerManager : PalWorldSubsystem
    {
        public PalItemContainerManager(nint addr) : base(addr) { }
        public Object OnItemOperationMoveDelegate { get { return this[nameof(OnItemOperationMoveDelegate)]; } set { this[nameof(OnItemOperationMoveDelegate)] = value; } }
        public Object ItemContainerMap_InServer { get { return this[nameof(ItemContainerMap_InServer)]; } set { this[nameof(ItemContainerMap_InServer)] = value; } }
        public Object ItemContainerBelongInfo { get { return this[nameof(ItemContainerBelongInfo)]; } set { this[nameof(ItemContainerBelongInfo)] = value; } }
        public bool TryGetSlot(PalItemSlotId SlotID, PalItemSlot Slot) { return Invoke<bool>(nameof(TryGetSlot), SlotID, Slot); }
        public bool TryGetContainer(PalContainerId ContainerId, PalItemContainer Container) { return Invoke<bool>(nameof(TryGetContainer), ContainerId, Container); }
        public void ItemOperationMoveDelegate__DelegateSignature(Array<PalItemOperationInfo_Move> OperationInfoSet) { Invoke(nameof(ItemOperationMoveDelegate__DelegateSignature), OperationInfoSet); }
        public Guid GetGroupIdByItemSlotId(Object WorldContextObject, PalItemSlotId SlotID) { return Invoke<Guid>(nameof(GetGroupIdByItemSlotId), WorldContextObject, SlotID); }
        public Guid GetGroupIdByItemContainerId(Object WorldContextObject, PalContainerId ContainerId) { return Invoke<Guid>(nameof(GetGroupIdByItemContainerId), WorldContextObject, ContainerId); }
        public PalItemContainer GetContainer(PalContainerId ContainerId) { return Invoke<PalItemContainer>(nameof(GetContainer), ContainerId); }
    }
    public class PalItemContainerMultiHelper : Object
    {
        public PalItemContainerMultiHelper(nint addr) : base(addr) { }
        public Object OnUpdateContentDelegate { get { return this[nameof(OnUpdateContentDelegate)]; } set { this[nameof(OnUpdateContentDelegate)] = value; } }
        public Array<PalItemContainer> Containers { get { return new Array<PalItemContainer>(this[nameof(Containers)].Address); } }
        public void UpdateContentDelegate__DelegateSignature(PalItemContainerMultiHelper Self) { Invoke(nameof(UpdateContentDelegate__DelegateSignature), Self); }
        public void OnUpdateContainerContent(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContent), Container); }
        public void OnRep_Containers() { Invoke(nameof(OnRep_Containers)); }
        public bool IsExistItems(Array<PalStaticItemIdAndNum> StaticItemInfos) { return Invoke<bool>(nameof(IsExistItems), StaticItemInfos); }
        public void FindByStaticItemIds(Array<Object> StaticItemIds, Array<PalStaticItemIdAndNum> StaticItemInfos) { Invoke(nameof(FindByStaticItemIds), StaticItemIds, StaticItemInfos); }
        public void FindByStaticItemId(Object StaticItemId, PalStaticItemIdAndNum StaticItemInfo) { Invoke(nameof(FindByStaticItemId), StaticItemId, StaticItemInfo); }
    }
    public class PalItemFlowSplineComponent : SplineComponent
    {
        public PalItemFlowSplineComponent(nint addr) : base(addr) { }
        public float ItemSpawnInterval { get { return this[nameof(ItemSpawnInterval)].GetValue<float>(); } set { this[nameof(ItemSpawnInterval)].SetValue<float>(value); } }
        public float FlowSpeedRate { get { return this[nameof(FlowSpeedRate)].GetValue<float>(); } set { this[nameof(FlowSpeedRate)].SetValue<float>(value); } }
        public FloatCounter FlowingItemSpawnTimer { get { return this[nameof(FlowingItemSpawnTimer)].As<FloatCounter>(); } set { this["FlowingItemSpawnTimer"] = value; } }
        public Object ItemVisualBlueprintClass { get { return this[nameof(ItemVisualBlueprintClass)]; } set { this[nameof(ItemVisualBlueprintClass)] = value; } }
        public Array<PalItemFlowInSplineInfo> FlowingItemInfos { get { return new Array<PalItemFlowInSplineInfo>(this[nameof(FlowingItemInfos)].Address); } }
        public void UpdateTargetItem(Object InStaticItemId) { Invoke(nameof(UpdateTargetItem), InStaticItemId); }
        public void UpdateIsFlowing(bool bOn) { Invoke(nameof(UpdateIsFlowing), bOn); }
    }
    public class PalItemIDManager : Object
    {
        public PalItemIDManager(nint addr) : base(addr) { }
        public PalStaticItemDataAsset StaticItemDataAsset { get { return this[nameof(StaticItemDataAsset)].As<PalStaticItemDataAsset>(); } set { this["StaticItemDataAsset"] = value; } }
        public PalDataTableRowName_ItemData WoodItemRowName { get { return this[nameof(WoodItemRowName)].As<PalDataTableRowName_ItemData>(); } set { this["WoodItemRowName"] = value; } }
        public PalDataTableRowName_ItemData EggItemRowName { get { return this[nameof(EggItemRowName)].As<PalDataTableRowName_ItemData>(); } set { this["EggItemRowName"] = value; } }
        public PalDataTableRowName_ItemData PalUpgradeStoneItemRowName { get { return this[nameof(PalUpgradeStoneItemRowName)].As<PalDataTableRowName_ItemData>(); } set { this["PalUpgradeStoneItemRowName"] = value; } }
        public PalDataTableRowName_ItemData MoneyItemRowName { get { return this[nameof(MoneyItemRowName)].As<PalDataTableRowName_ItemData>(); } set { this["MoneyItemRowName"] = value; } }
        public PalStaticItemDataTable StaticItemDataTable { get { return this[nameof(StaticItemDataTable)].As<PalStaticItemDataTable>(); } set { this["StaticItemDataTable"] = value; } }
        public Object GetStaticItemIdPalEgg(Object WorldContextObject, Object CharacterID) { return Invoke<Object>(nameof(GetStaticItemIdPalEgg), WorldContextObject, CharacterID); }
        public PalStaticItemDataBase GetStaticItemData(Object StaticItemId) { return Invoke<PalStaticItemDataBase>(nameof(GetStaticItemData), StaticItemId); }
        public PalItemData GetItemData(PalItemId ItemId) { return Invoke<PalItemData>(nameof(GetItemData), ItemId); }
    }
    public class PalItemInventoryBase : Object
    {
        public PalItemInventoryBase(nint addr) : base(addr) { }
    }
    public class PalItemSelectorComponent : ActorComponent
    {
        public PalItemSelectorComponent(nint addr) : base(addr) { }
        public Object OnChangeSelectedIndex { get { return this[nameof(OnChangeSelectedIndex)]; } set { this[nameof(OnChangeSelectedIndex)] = value; } }
        public Object itemSelectDataMap { get { return this[nameof(itemSelectDataMap)]; } set { this[nameof(itemSelectDataMap)] = value; } }
        public void SelectPrevItem(EPalPlayerInventoryType targetInventory) { Invoke(nameof(SelectPrevItem), targetInventory); }
        public void SelectNextItem(EPalPlayerInventoryType targetInventory) { Invoke(nameof(SelectNextItem), targetInventory); }
        public void SelectItem(EPalPlayerInventoryType targetInventory, int Index) { Invoke(nameof(SelectItem), targetInventory, Index); }
        public bool RemoveTargetInventoryType(EPalPlayerInventoryType targetInventoryType) { return Invoke<bool>(nameof(RemoveTargetInventoryType), targetInventoryType); }
        public PalItemSlot GetNowSelectedItemSlot(EPalPlayerInventoryType targetInventory) { return Invoke<PalItemSlot>(nameof(GetNowSelectedItemSlot), targetInventory); }
        public int GetNowSelectedIndex(EPalPlayerInventoryType targetInventory) { return Invoke<int>(nameof(GetNowSelectedIndex), targetInventory); }
        public PalItemContainer GetContainer(EPalPlayerInventoryType targetInventory) { return Invoke<PalItemContainer>(nameof(GetContainer), targetInventory); }
        public void ChangeSelectedIndexDelegate__DelegateSignature(EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(ChangeSelectedIndexDelegate__DelegateSignature), inventoryType, Index); }
        public bool AddTargetInventoryType(EPalPlayerInventoryType targetInventoryType) { return Invoke<bool>(nameof(AddTargetInventoryType), targetInventoryType); }
    }
    public class PalItemSlot : Object
    {
        public PalItemSlot(nint addr) : base(addr) { }
        public Object OnUpdateSlotContentDelegate { get { return this[nameof(OnUpdateSlotContentDelegate)]; } set { this[nameof(OnUpdateSlotContentDelegate)] = value; } }
        public Object OnLiftedSlotContentDelegate { get { return this[nameof(OnLiftedSlotContentDelegate)]; } set { this[nameof(OnLiftedSlotContentDelegate)] = value; } }
        public Object OnFinishLiftedContentDelegate { get { return this[nameof(OnFinishLiftedContentDelegate)]; } set { this[nameof(OnFinishLiftedContentDelegate)] = value; } }
        public Object OnUpdateSlotContentDurabilityDelegate { get { return this[nameof(OnUpdateSlotContentDurabilityDelegate)]; } set { this[nameof(OnUpdateSlotContentDurabilityDelegate)] = value; } }
        public Object OnUpdateSlotCorruptionDelegate { get { return this[nameof(OnUpdateSlotCorruptionDelegate)]; } set { this[nameof(OnUpdateSlotCorruptionDelegate)] = value; } }
        public Object DirtyMap { get { return this[nameof(DirtyMap)]; } set { this[nameof(DirtyMap)] = value; } }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
        public int StackCount { get { return this[nameof(StackCount)].GetValue<int>(); } set { this[nameof(StackCount)].SetValue<int>(value); } }
        public float CorruptionProgressValue { get { return this[nameof(CorruptionProgressValue)].GetValue<float>(); } set { this[nameof(CorruptionProgressValue)].SetValue<float>(value); } }
        public PalItemPermission Permission { get { return this[nameof(Permission)].As<PalItemPermission>(); } set { this["Permission"] = value; } }
        public PalDynamicItemDataBase DynamicItemData { get { return this[nameof(DynamicItemData)].As<PalDynamicItemDataBase>(); } set { this["DynamicItemData"] = value; } }
        public PalItemId LastItemId_Client { get { return this[nameof(LastItemId_Client)].As<PalItemId>(); } set { this["LastItemId_Client"] = value; } }
        public void UpdateSlotContentDurabilityDelegate__DelegateSignature(float OldDurability, float NewDurability) { Invoke(nameof(UpdateSlotContentDurabilityDelegate__DelegateSignature), OldDurability, NewDurability); }
        public void UpdateSlotContentDelegate__DelegateSignature(PalItemSlot Slot) { Invoke(nameof(UpdateSlotContentDelegate__DelegateSignature), Slot); }
        public bool TryGetStaticItemData(PalStaticItemDataBase OutStaticItemData) { return Invoke<bool>(nameof(TryGetStaticItemData), OutStaticItemData); }
        public bool TryGetDynamicItemData(PalDynamicItemDataBase OutDynamicItemData) { return Invoke<bool>(nameof(TryGetDynamicItemData), OutDynamicItemData); }
        public void OnUpdateSlotContentDurability(float OldDurability, float NewDurability) { Invoke(nameof(OnUpdateSlotContentDurability), OldDurability, NewDurability); }
        public void OnRep_StackCount() { Invoke(nameof(OnRep_StackCount)); }
        public void OnRep_Permission() { Invoke(nameof(OnRep_Permission)); }
        public void OnRep_ItemId() { Invoke(nameof(OnRep_ItemId)); }
        public void OnRep_DynamicItemData() { Invoke(nameof(OnRep_DynamicItemData)); }
        public void OnRep_CorruptionProgressValue() { Invoke(nameof(OnRep_CorruptionProgressValue)); }
        public void LiftedSlotContentDelegate__DelegateSignature(int LiftItemNum) { Invoke(nameof(LiftedSlotContentDelegate__DelegateSignature), LiftItemNum); }
        public bool IsMaxStack() { return Invoke<bool>(nameof(IsMaxStack)); }
        public bool IsEmpty() { return Invoke<bool>(nameof(IsEmpty)); }
        public int GetStackCount() { return Invoke<int>(nameof(GetStackCount)); }
        public PalItemSlotId GetSlotId() { return Invoke<PalItemSlotId>(nameof(GetSlotId)); }
        public PalItemPermission GetPermission() { return Invoke<PalItemPermission>(nameof(GetPermission)); }
        public PalItemId GetItemId() { return Invoke<PalItemId>(nameof(GetItemId)); }
        public Object GetCorruptionRemainTimeText() { return Invoke<Object>(nameof(GetCorruptionRemainTimeText)); }
        public float GetCorruptionProgressRate() { return Invoke<float>(nameof(GetCorruptionProgressRate)); }
        public void FinishLiftedContentDelegate__DelegateSignature() { Invoke(nameof(FinishLiftedContentDelegate__DelegateSignature)); }
    }
    public class PalItemOperationResultUtility : Object
    {
        public PalItemOperationResultUtility(nint addr) : base(addr) { }
    }
    public class PalItemUtility : BlueprintFunctionLibrary
    {
        public PalItemUtility(nint addr) : base(addr) { }
        public bool TryGetItemVisualBlueprintClass(Object WorldContextObject, Object StaticItemId, Object VisualBlueprintClass) { return Invoke<bool>(nameof(TryGetItemVisualBlueprintClass), WorldContextObject, StaticItemId, VisualBlueprintClass); }
        public void RestoreWithItem(Object WorldContextObject, Object staticItemName, PalIndividualCharacterParameter targetParameter) { Invoke(nameof(RestoreWithItem), WorldContextObject, staticItemName, targetParameter); }
        public void MaterialInfos(PalItemRecipe Recipe, Array<PalStaticItemIdAndNum> MaterialInfos) { Invoke(nameof(MaterialInfos), Recipe, MaterialInfos); }
        public bool IsValid(PalItemRecipe Recipe) { return Invoke<bool>(nameof(IsValid), Recipe); }
        public bool IsStatusPointResetItem(PalStaticItemDataBase ItemData) { return Invoke<bool>(nameof(IsStatusPointResetItem), ItemData); }
        public bool IsRepairableItem(Object WorldContextObject, PalItemId TargetItemId) { return Invoke<bool>(nameof(IsRepairableItem), WorldContextObject, TargetItemId); }
        public bool IsEmpty(PalItemAndNum ItemInfo) { return Invoke<bool>(nameof(IsEmpty), ItemInfo); }
        public int GetRecipeMaterialKindCount(PalItemRecipe Recipe) { return Invoke<int>(nameof(GetRecipeMaterialKindCount), Recipe); }
        public PalItemSlot CreateLocalItemSlot(Object WorldContextObject, Object StaticItemId, int Stack) { return Invoke<PalItemSlot>(nameof(CreateLocalItemSlot), WorldContextObject, StaticItemId, Stack); }
        public void CollectLocalPlayerControllableItemInfos(Object WorldContextObject, Array<Object> StaticItemIds, Array<PalStaticItemIdAndNum> OutItemInfos, bool bIncludeInRangeBaseCamp) { Invoke(nameof(CollectLocalPlayerControllableItemInfos), WorldContextObject, StaticItemIds, OutItemInfos, bIncludeInRangeBaseCamp); }
        public bool CanUseHealItem(Object WorldContextObject, Object staticItemName, PalIndividualCharacterParameter targetParameter) { return Invoke<bool>(nameof(CanUseHealItem), WorldContextObject, staticItemName, targetParameter); }
    }
    public class PalLavaBoxComponent : BoxComponent
    {
        public PalLavaBoxComponent(nint addr) : base(addr) { }
        public void EndOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex) { Invoke(nameof(EndOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex); }
        public void BeginOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(BeginOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalLevelInstance : LevelInstance
    {
        public PalLevelInstance(nint addr) : base(addr) { }
    }
    public class PalLevelObjectInterface : Interface
    {
        public PalLevelObjectInterface(nint addr) : base(addr) { }
    }
    public class PalLevelObjectInterfaceUtility : Object
    {
        public PalLevelObjectInterfaceUtility(nint addr) : base(addr) { }
        public Guid BP_GetLevelObjectInstanceId(Object Target) { return Invoke<Guid>(nameof(BP_GetLevelObjectInstanceId), Target); }
    }
    public class PalLevelObjectCharacterStatusOperator : PalLevelObjectActor
    {
        public PalLevelObjectCharacterStatusOperator(nint addr) : base(addr) { }
        public Object InteractComp { get { return this[nameof(InteractComp)]; } set { this[nameof(InteractComp)] = value; } }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
    }
    public class PalLevelObjectObtainable : PalLevelObjectActor
    {
        public PalLevelObjectObtainable(nint addr) : base(addr) { }
        public Object OnUpdatePickupStatusInClient { get { return this[nameof(OnUpdatePickupStatusInClient)]; } set { this[nameof(OnUpdatePickupStatusInClient)] = value; } }
        public Object ObtainFXSoftObj { get { return this[nameof(ObtainFXSoftObj)]; } set { this[nameof(ObtainFXSoftObj)] = value; } }
        public Object InteractComp { get { return this[nameof(InteractComp)]; } set { this[nameof(InteractComp)] = value; } }
        public bool bPickedInClient { get { return this[nameof(bPickedInClient)].Flag; } set { this[nameof(bPickedInClient)].Flag = value; } }
        public void ReturnSelfDelegate__DelegateSignature(PalLevelObjectObtainable Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public void OnUpdateFlagMapRecord(Object Key, bool bFlag) { Invoke(nameof(OnUpdateFlagMapRecord), Key, bFlag); }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnCompleteSyncPlayer(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteSyncPlayer), PlayerState); }
        public Vector GetObtainFXLocation() { return Invoke<Vector>(nameof(GetObtainFXLocation)); }
    }
    public class PalLevelObjectNote : PalLevelObjectObtainable
    {
        public PalLevelObjectNote(nint addr) : base(addr) { }
        public PalDataTableRowName_NoteData NoteRowName { get { return this[nameof(NoteRowName)].As<PalDataTableRowName_NoteData>(); } set { this["NoteRowName"] = value; } }
    }
    public class PalLevelObjectRelic : PalLevelObjectObtainable
    {
        public PalLevelObjectRelic(nint addr) : base(addr) { }
    }
    public class PalLevelObjectRespawnPoint : PalLevelObjectActor
    {
        public PalLevelObjectRespawnPoint(nint addr) : base(addr) { }
        public Object RespawnPointID { get { return this[nameof(RespawnPointID)]; } set { this[nameof(RespawnPointID)] = value; } }
    }
    public class PalLevelObjectUnlockableFastTravelPoint : PalLevelObjectActor
    {
        public PalLevelObjectUnlockableFastTravelPoint(nint addr) : base(addr) { }
        public Object OnUpdateUnlockStateDelegate { get { return this[nameof(OnUpdateUnlockStateDelegate)]; } set { this[nameof(OnUpdateUnlockStateDelegate)] = value; } }
        public Object InteractComp { get { return this[nameof(InteractComp)]; } set { this[nameof(InteractComp)] = value; } }
        public bool bUnlocked { get { return this[nameof(bUnlocked)].Flag; } set { this[nameof(bUnlocked)].Flag = value; } }
        public bool EnableRequestUnlock { get { return this[nameof(EnableRequestUnlock)].Flag; } set { this[nameof(EnableRequestUnlock)].Flag = value; } }
        public Object FastTravelPointID { get { return this[nameof(FastTravelPointID)]; } set { this[nameof(FastTravelPointID)] = value; } }
        public void ReturnSelfDelegate__DelegateSignature(PalLevelObjectUnlockableFastTravelPoint Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public void OnUpdateFlagMapRecord(Object Key, bool bFlag) { Invoke(nameof(OnUpdateFlagMapRecord), Key, bFlag); }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnCompleteSyncPlayer(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteSyncPlayer), PlayerState); }
        public bool IsUnlocked() { return Invoke<bool>(nameof(IsUnlocked)); }
        public AkAudioEvent GetUnlockAkAudioEvent() { return Invoke<AkAudioEvent>(nameof(GetUnlockAkAudioEvent)); }
    }
    public class PalLimitVolumeInterface : Interface
    {
        public PalLimitVolumeInterface(nint addr) : base(addr) { }
    }
    public class PalLimitVolumeBoxComponent : BoxComponent
    {
        public PalLimitVolumeBoxComponent(nint addr) : base(addr) { }
        public int LimitFlags { get { return this[nameof(LimitFlags)].GetValue<int>(); } set { this[nameof(LimitFlags)].SetValue<int>(value); } }
    }
    public class PalLimitVolumeSphereComponent : SphereComponent
    {
        public PalLimitVolumeSphereComponent(nint addr) : base(addr) { }
        public int LimitFlags { get { return this[nameof(LimitFlags)].GetValue<int>(); } set { this[nameof(LimitFlags)].SetValue<int>(value); } }
    }
    public class PalLoadingScreenWidgetBase : PalUserWidget
    {
        public PalLoadingScreenWidgetBase(nint addr) : base(addr) { }
    }
    public class PalLoadoutSelectorComponent : PalItemSelectorComponent
    {
        public PalLoadoutSelectorComponent(nint addr) : base(addr) { }
        public Object ThrowOtomoPalWeaponClass { get { return this[nameof(ThrowOtomoPalWeaponClass)]; } set { this[nameof(ThrowOtomoPalWeaponClass)] = value; } }
        public Object DummyBallWeaponClass { get { return this[nameof(DummyBallWeaponClass)]; } set { this[nameof(DummyBallWeaponClass)] = value; } }
        public Object OnEquipmentItemDelegate { get { return this[nameof(OnEquipmentItemDelegate)]; } set { this[nameof(OnEquipmentItemDelegate)] = value; } }
        public Object OnRemoveItemDelegate { get { return this[nameof(OnRemoveItemDelegate)]; } set { this[nameof(OnRemoveItemDelegate)] = value; } }
        public EPalPlayerInventoryType primaryTargetInventoryType { get { return (EPalPlayerInventoryType)this[nameof(primaryTargetInventoryType)].GetValue<int>(); } set { this[nameof(primaryTargetInventoryType)].SetValue<int>((int)value); } }
        public int currentItemSlotIndex { get { return this[nameof(currentItemSlotIndex)].GetValue<int>(); } set { this[nameof(currentItemSlotIndex)].SetValue<int>(value); } }
        public Object NowEquipBallItemID { get { return this[nameof(NowEquipBallItemID)]; } set { this[nameof(NowEquipBallItemID)] = value; } }
        public PalWeaponBase ThrowOtomoPalWeapon { get { return this[nameof(ThrowOtomoPalWeapon)].As<PalWeaponBase>(); } set { this["ThrowOtomoPalWeapon"] = value; } }
        public Array<PalWeaponBase> spawnedWeaponsArray { get { return new Array<PalWeaponBase>(this[nameof(spawnedWeaponsArray)].Address); } }
        public Object spawnedBallMap { get { return this[nameof(spawnedBallMap)]; } set { this[nameof(spawnedBallMap)] = value; } }
        public PalWeaponBase DummyBall { get { return this[nameof(DummyBall)].As<PalWeaponBase>(); } set { this["DummyBall"] = value; } }
        public EPalPlayerInventoryType replicatedPrimaryTargetInventoryType { get { return (EPalPlayerInventoryType)this[nameof(replicatedPrimaryTargetInventoryType)].GetValue<int>(); } set { this[nameof(replicatedPrimaryTargetInventoryType)].SetValue<int>((int)value); } }
        public int replicatedCurrentItemSlotIndex { get { return this[nameof(replicatedCurrentItemSlotIndex)].GetValue<int>(); } set { this[nameof(replicatedCurrentItemSlotIndex)].SetValue<int>(value); } }
        public void TryEquipNowSelectedWeapon_ToAll() { Invoke(nameof(TryEquipNowSelectedWeapon_ToAll)); }
        public bool TryEquipNowSelectedWeapon() { return Invoke<bool>(nameof(TryEquipNowSelectedWeapon)); }
        public void SetWeaponLoadoutIndex_Internal(int Index) { Invoke(nameof(SetWeaponLoadoutIndex_Internal), Index); }
        public void SetWeaponLoadoutIndex(int Index) { Invoke(nameof(SetWeaponLoadoutIndex), Index); }
        public void SetupItemContainer() { Invoke(nameof(SetupItemContainer)); }
        public void SetBallLoadoutIndex_Internal(int Index) { Invoke(nameof(SetBallLoadoutIndex_Internal), Index); }
        public void SetBallLoadoutIndex(int Index) { Invoke(nameof(SetBallLoadoutIndex), Index); }
        public void RequestChangeNowEquipBallItemID_ToServer(Object NextBallID) { Invoke(nameof(RequestChangeNowEquipBallItemID_ToServer), NextBallID); }
        public void RemoveItem__DelegateSignature(EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(RemoveItem__DelegateSignature), inventoryType, Index); }
        public void OnUpdateWeaponLoadoutSlot(PalItemSlot itemSlot) { Invoke(nameof(OnUpdateWeaponLoadoutSlot), itemSlot); }
        public void OnUpdateInventorySlot(PalItemSlot itemSlot) { Invoke(nameof(OnUpdateInventorySlot), itemSlot); }
        public void OnRep_PrimaryTargetInventoryType() { Invoke(nameof(OnRep_PrimaryTargetInventoryType)); }
        public void OnRep_CurrentItemSlotIndex() { Invoke(nameof(OnRep_CurrentItemSlotIndex)); }
        public void OnRemoveEquipItem(EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(OnRemoveEquipItem), inventoryType, Index); }
        public void OnEquipItem(EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(OnEquipItem), inventoryType, Index); }
        public EPalPlayerInventoryType GetPrimaryInventoryType() { return Invoke<EPalPlayerInventoryType>(nameof(GetPrimaryInventoryType)); }
        public void GetNowEquipedBallItemID(Object OutBallItemID) { Invoke(nameof(GetNowEquipedBallItemID), OutBallItemID); }
        public void EquipmentItem__DelegateSignature(EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(EquipmentItem__DelegateSignature), inventoryType, Index); }
        public void CheckRespawnWeaponActor(Array<PalLoadoutSynchronalizedData> synchroData, Array<PalWeaponBase> WeaponActorList, EPalPlayerInventoryType inventoryType) { Invoke(nameof(CheckRespawnWeaponActor), synchroData, WeaponActorList, inventoryType); }
        public void ChangeWeaponByReplicated() { Invoke(nameof(ChangeWeaponByReplicated)); }
        public void ChangePrimiryInventoryType(EPalPlayerInventoryType targetInventory) { Invoke(nameof(ChangePrimiryInventoryType), targetInventory); }
        public void ChangePrevWeaponLoadout_Internal() { Invoke(nameof(ChangePrevWeaponLoadout_Internal)); }
        public void ChangePrevWeaponLoadout() { Invoke(nameof(ChangePrevWeaponLoadout)); }
        public void ChangePrevBallLoadout_Internal() { Invoke(nameof(ChangePrevBallLoadout_Internal)); }
        public void ChangePrevBallLoadout() { Invoke(nameof(ChangePrevBallLoadout)); }
        public void ChangeNextWeaponLoadout_Internal() { Invoke(nameof(ChangeNextWeaponLoadout_Internal)); }
        public void ChangeNextWeaponLoadout() { Invoke(nameof(ChangeNextWeaponLoadout)); }
        public void ChangeNextBallLoadout_Internal() { Invoke(nameof(ChangeNextBallLoadout_Internal)); }
        public void ChangeNextBallLoadout() { Invoke(nameof(ChangeNextBallLoadout)); }
        public void AttachSpawnOtomoPalThrowWeapon_ToServer(int issuerID, bool IsAttach, bool ShouldEquipDummyWeapon) { Invoke(nameof(AttachSpawnOtomoPalThrowWeapon_ToServer), issuerID, IsAttach, ShouldEquipDummyWeapon); }
        public void AttachSpawnOtomoPalThrowWeapon_ToAll(int issuerID, bool IsAttach, bool ShouldEquipDummyWeapon) { Invoke(nameof(AttachSpawnOtomoPalThrowWeapon_ToAll), issuerID, IsAttach, ShouldEquipDummyWeapon); }
    }
    public class PalLocalPlayer : CommonLocalPlayer
    {
        public PalLocalPlayer(nint addr) : base(addr) { }
    }
    public class PalLocationCreateParameter : Object
    {
        public PalLocationCreateParameter(nint addr) : base(addr) { }
    }
    public class PalLocationBase : Object
    {
        public PalLocationBase(nint addr) : base(addr) { }
        public Guid CalledPlayerUId { get { return this[nameof(CalledPlayerUId)].As<Guid>(); } set { this["CalledPlayerUId"] = value; } }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public bool bShouldDisplay { get { return this[nameof(bShouldDisplay)].Flag; } set { this[nameof(bShouldDisplay)].Flag = value; } }
        public bool bShowInMap { get { return this[nameof(bShowInMap)].Flag; } set { this[nameof(bShowInMap)].Flag = value; } }
        public bool bShowInCompass { get { return this[nameof(bShowInCompass)].Flag; } set { this[nameof(bShowInCompass)].Flag = value; } }
        public bool ShouldDisplay() { return Invoke<bool>(nameof(ShouldDisplay)); }
        public PalLocationPoint LocationPoint() { return Invoke<PalLocationPoint>(nameof(LocationPoint)); }
        public bool IsShowInMap() { return Invoke<bool>(nameof(IsShowInMap)); }
        public bool IsShowInCompass() { return Invoke<bool>(nameof(IsShowInCompass)); }
        public bool IsRequestedPlayer(Guid LocalPlayerUId) { return Invoke<bool>(nameof(IsRequestedPlayer), LocalPlayerUId); }
        public EPalLocationType GetType() { return Invoke<EPalLocationType>(nameof(GetType)); }
    }
    public class PalLocationManager : PalWorldSubsystem
    {
        public PalLocationManager(nint addr) : base(addr) { }
        public Object OnAddedLocation { get { return this[nameof(OnAddedLocation)]; } set { this[nameof(OnAddedLocation)] = value; } }
        public Object OnRemoveLocation { get { return this[nameof(OnRemoveLocation)]; } set { this[nameof(OnRemoveLocation)] = value; } }
        public Object OnAddedLocationForCompass { get { return this[nameof(OnAddedLocationForCompass)]; } set { this[nameof(OnAddedLocationForCompass)] = value; } }
        public Object OnRemoveLocationForCompass { get { return this[nameof(OnRemoveLocationForCompass)]; } set { this[nameof(OnRemoveLocationForCompass)] = value; } }
        public Object LocationMap { get { return this[nameof(LocationMap)]; } set { this[nameof(LocationMap)] = value; } }
        public Array<PalLocationPoint_Custom> CustomLocations { get { return new Array<PalLocationPoint_Custom>(this[nameof(CustomLocations)].Address); } }
        public void RemoveLocalCustomLocation(Guid LocationId) { Invoke(nameof(RemoveLocalCustomLocation), LocationId); }
        public void LocationDelegate__DelegateSignature(Guid LocationId, PalLocationBase Location) { Invoke(nameof(LocationDelegate__DelegateSignature), LocationId, Location); }
        public PalLocationPoint GetLocationPoint(Guid ID) { return Invoke<PalLocationPoint>(nameof(GetLocationPoint), ID); }
        public Object GetLocationMap() { return Invoke<Object>(nameof(GetLocationMap)); }
        public PalLocationBase GetLocation(Guid ID) { return Invoke<PalLocationBase>(nameof(GetLocation), ID); }
        public int GetLocalCustomLocationCount() { return Invoke<int>(nameof(GetLocalCustomLocationCount)); }
        public Guid AddLocalCustomLocation(Vector IconLocation, int IconType) { return Invoke<Guid>(nameof(AddLocalCustomLocation), IconLocation, IconType); }
    }
    public class PalLocationPoint : PalLocationBase
    {
        public PalLocationPoint(nint addr) : base(addr) { }
        public bool IsEnableFastTravel() { return Invoke<bool>(nameof(IsEnableFastTravel)); }
        public void InvokeFastTravel() { Invoke(nameof(InvokeFastTravel)); }
        public float GetRotationZ() { return Invoke<float>(nameof(GetRotationZ)); }
        public Quat GetRotation() { return Invoke<Quat>(nameof(GetRotation)); }
        public void GetLocationAndRotationZ(Vector OutLocation, float OutRotationZ) { Invoke(nameof(GetLocationAndRotationZ), OutLocation, OutRotationZ); }
        public Vector GetLocation() { return Invoke<Vector>(nameof(GetLocation)); }
    }
    public class PalLocationPointStaticCreateParameter : PalLocationCreateParameter
    {
        public PalLocationPointStaticCreateParameter(nint addr) : base(addr) { }
    }
    public class PalLocationPointStatic : PalLocationPoint
    {
        public PalLocationPointStatic(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public float RotationZ { get { return this[nameof(RotationZ)].GetValue<float>(); } set { this[nameof(RotationZ)].SetValue<float>(value); } }
    }
    public class PalLocationPointCreateParameter_BaseCamp : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_BaseCamp(nint addr) : base(addr) { }
    }
    public class PalLocationPointBaseCamp : PalLocationPointStatic
    {
        public PalLocationPointBaseCamp(nint addr) : base(addr) { }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public bool bIsAvailable { get { return this[nameof(bIsAvailable)].Flag; } set { this[nameof(bIsAvailable)].Flag = value; } }
        public void SetAvailable() { Invoke(nameof(SetAvailable)); }
        public void OnDisposeTarget(PalBaseCampModel Model) { Invoke(nameof(OnDisposeTarget), Model); }
        public bool IsSameGuildWithPlayer(Guid PlayerUId) { return Invoke<bool>(nameof(IsSameGuildWithPlayer), PlayerUId); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
    }
    public class PalLocationPointCreateParameter_BossTower : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_BossTower(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_BossTower : PalLocationPointStatic
    {
        public PalLocationPoint_BossTower(nint addr) : base(addr) { }
        public PalBossTower BossTower { get { return this[nameof(BossTower)].As<PalBossTower>(); } set { this["BossTower"] = value; } }
        public PalBossTower GetBossTower() { return Invoke<PalBossTower>(nameof(GetBossTower)); }
    }
    public class PalLocationPointCreateParameter_Character : PalLocationCreateParameter
    {
        public PalLocationPointCreateParameter_Character(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_Character : PalLocationPoint
    {
        public PalLocationPoint_Character(nint addr) : base(addr) { }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public EPalCharacterLocationType CharacterLocationType { get { return (EPalCharacterLocationType)this[nameof(CharacterLocationType)].GetValue<int>(); } set { this[nameof(CharacterLocationType)].SetValue<int>((int)value); } }
        public Guid TargetBaseCampId { get { return this[nameof(TargetBaseCampId)].As<Guid>(); } set { this["TargetBaseCampId"] = value; } }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public void OnDestroyedTarget(Actor Target) { Invoke(nameof(OnDestroyedTarget), Target); }
        public void OnDeadTarget(PalDeadInfo Info) { Invoke(nameof(OnDeadTarget), Info); }
        public EPalCharacterLocationType GetCharacterLocationType() { return Invoke<EPalCharacterLocationType>(nameof(GetCharacterLocationType)); }
        public Object GetCharacterID() { return Invoke<Object>(nameof(GetCharacterID)); }
    }
    public class PalLocationPointCreateParameter_CustomMarker : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_CustomMarker(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_Custom : PalLocationPointStatic
    {
        public PalLocationPoint_Custom(nint addr) : base(addr) { }
        public Object OnIconTypeChanged { get { return this[nameof(OnIconTypeChanged)]; } set { this[nameof(OnIconTypeChanged)] = value; } }
        public void SetIconType(int Index) { Invoke(nameof(SetIconType), Index); }
        public void OnIconTypeChangedDelegate__DelegateSignature(int NewType) { Invoke(nameof(OnIconTypeChangedDelegate__DelegateSignature), NewType); }
        public Guid GetOwnerPlayerId() { return Invoke<Guid>(nameof(GetOwnerPlayerId)); }
        public int GetIconType() { return Invoke<int>(nameof(GetIconType)); }
    }
    public class PalLocationPointCreateParameter_DroppedCharacter : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_DroppedCharacter(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_DroppedCharacter : PalLocationPointStatic
    {
        public PalLocationPoint_DroppedCharacter(nint addr) : base(addr) { }
        public Guid MapObjectConcreteModelId { get { return this[nameof(MapObjectConcreteModelId)].As<Guid>(); } set { this["MapObjectConcreteModelId"] = value; } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public Guid GetOwnerPlayerUId() { return Invoke<Guid>(nameof(GetOwnerPlayerUId)); }
        public PalMapObjectPickableCharacterModelBase GetMapObjectConcreteModel() { return Invoke<PalMapObjectPickableCharacterModelBase>(nameof(GetMapObjectConcreteModel)); }
    }
    public class PalLocationPointCreateParameter_DroppedChest : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_DroppedChest(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_DroppedChest : PalLocationPointStatic
    {
        public PalLocationPoint_DroppedChest(nint addr) : base(addr) { }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public Guid GetOwnerPlayerUId() { return Invoke<Guid>(nameof(GetOwnerPlayerUId)); }
    }
    public class PalLocationPointCreateParameter_DungeonPortal : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_DungeonPortal(nint addr) : base(addr) { }
    }
    public class PalLocationPointDungeonPortal : PalLocationPointStatic
    {
        public PalLocationPointDungeonPortal(nint addr) : base(addr) { }
    }
    public class PalLocationPointCreateParameter_FastTravel : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_FastTravel(nint addr) : base(addr) { }
    }
    public class PalLocationPointFastTravel : PalLocationPointStatic
    {
        public PalLocationPointFastTravel(nint addr) : base(addr) { }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
        public bool ShouldUnlockFlag { get { return this[nameof(ShouldUnlockFlag)].Flag; } set { this[nameof(ShouldUnlockFlag)].Flag = value; } }
        public Object FastTravelPointID { get { return this[nameof(FastTravelPointID)]; } set { this[nameof(FastTravelPointID)] = value; } }
    }
    public class PalLocationPointCreateParameter_MapObject : PalLocationCreateParameter
    {
        public PalLocationPointCreateParameter_MapObject(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_MapObject : PalLocationPoint
    {
        public PalLocationPoint_MapObject(nint addr) : base(addr) { }
        public Guid MapObjectModelId { get { return this[nameof(MapObjectModelId)].As<Guid>(); } set { this["MapObjectModelId"] = value; } }
        public Vector InitialLocationCache { get { return this[nameof(InitialLocationCache)].As<Vector>(); } set { this["InitialLocationCache"] = value; } }
        public void OnDisposeTarget(PalMapObjectModel Model, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDisposeTarget), Model, Options); }
        public bool GetMapObjectName(Object MapObjectName) { return Invoke<bool>(nameof(GetMapObjectName), MapObjectName); }
    }
    public class PalLocationPointCreateParameter_Respawn : PalLocationPointStaticCreateParameter
    {
        public PalLocationPointCreateParameter_Respawn(nint addr) : base(addr) { }
    }
    public class PalLocationPoint_Respawn : PalLocationPointStatic
    {
        public PalLocationPoint_Respawn(nint addr) : base(addr) { }
        public Object RespawnPointID { get { return this[nameof(RespawnPointID)]; } set { this[nameof(RespawnPointID)] = value; } }
    }
    public class PalLocationReplicator : PalGameStateReplicatorBase
    {
        public PalLocationReplicator(nint addr) : base(addr) { }
        public FastPalLocationRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<FastPalLocationRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
    }
    public class PalLoginPlayer : Object
    {
        public PalLoginPlayer(nint addr) : base(addr) { }
        public Object OnNotifyObtainNewInServerDelegate { get { return this[nameof(OnNotifyObtainNewInServerDelegate)]; } set { this[nameof(OnNotifyObtainNewInServerDelegate)] = value; } }
        public Object OnNotifyRemovedFromPalBoxInServerDelegate { get { return this[nameof(OnNotifyRemovedFromPalBoxInServerDelegate)]; } set { this[nameof(OnNotifyRemovedFromPalBoxInServerDelegate)] = value; } }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public Vector RegisteredRespawnLocation { get { return this[nameof(RegisteredRespawnLocation)].As<Vector>(); } set { this["RegisteredRespawnLocation"] = value; } }
    }
    public class PalLogManager : PalWorldSubsystem
    {
        public PalLogManager(nint addr) : base(addr) { }
        public float normalLogDisplayTime { get { return this[nameof(normalLogDisplayTime)].GetValue<float>(); } set { this[nameof(normalLogDisplayTime)].SetValue<float>(value); } }
        public float importantLogDisplayTime { get { return this[nameof(importantLogDisplayTime)].GetValue<float>(); } set { this[nameof(importantLogDisplayTime)].SetValue<float>(value); } }
        public float veryImportantLogDisplayTime { get { return this[nameof(veryImportantLogDisplayTime)].GetValue<float>(); } set { this[nameof(veryImportantLogDisplayTime)].SetValue<float>(value); } }
        public Object veryImportantLogMap { get { return this[nameof(veryImportantLogMap)]; } set { this[nameof(veryImportantLogMap)] = value; } }
        public Object staticLogCollectorClass { get { return this[nameof(staticLogCollectorClass)]; } set { this[nameof(staticLogCollectorClass)] = value; } }
        public PalStaticLogCollector staticLogCollector { get { return this[nameof(staticLogCollector)].As<PalStaticLogCollector>(); } set { this["staticLogCollector"] = value; } }
        public Object OnAddedNormalLogDelegate { get { return this[nameof(OnAddedNormalLogDelegate)]; } set { this[nameof(OnAddedNormalLogDelegate)] = value; } }
        public Object OnAddedImportantLogDelegate { get { return this[nameof(OnAddedImportantLogDelegate)]; } set { this[nameof(OnAddedImportantLogDelegate)] = value; } }
        public Object OnAddedVeryImportantLogDelegate { get { return this[nameof(OnAddedVeryImportantLogDelegate)]; } set { this[nameof(OnAddedVeryImportantLogDelegate)] = value; } }
        public Object OnRemovedVeryImportantLogDelegate { get { return this[nameof(OnRemovedVeryImportantLogDelegate)]; } set { this[nameof(OnRemovedVeryImportantLogDelegate)] = value; } }
        public bool RemoveVeryImportantLog(Guid targetLogId) { return Invoke<bool>(nameof(RemoveVeryImportantLog), targetLogId); }
        public void RemovedVeryImportantLogDelegate__DelegateSignature(Guid logId) { Invoke(nameof(RemovedVeryImportantLogDelegate__DelegateSignature), logId); }
        public Guid AddLog(EPalLogPriority logPriority, Object LogText, PalLogAdditionalData logAdditionalData) { return Invoke<Guid>(nameof(AddLog), logPriority, LogText, logAdditionalData); }
        public void AddedVeryImportantLogDelegate__DelegateSignature(Guid logId, Object LogText, PalLogAdditionalData logAdditionalData) { Invoke(nameof(AddedVeryImportantLogDelegate__DelegateSignature), logId, LogText, logAdditionalData); }
        public void AddedNormalLogDelegate__DelegateSignature(Object LogText, PalLogAdditionalData logAdditionalData) { Invoke(nameof(AddedNormalLogDelegate__DelegateSignature), LogText, logAdditionalData); }
        public void AddedImportantLogDelegate__DelegateSignature(Object LogText, PalLogAdditionalData logAdditionalData) { Invoke(nameof(AddedImportantLogDelegate__DelegateSignature), LogText, logAdditionalData); }
    }
    public class PalLogUtility : BlueprintFunctionLibrary
    {
        public PalLogUtility(nint addr) : base(addr) { }
        public void SetTextureToAdditionalDataFromStaticItemIDs(Object WorldContextObject, PalLogAdditionalData targetData, Array<Object> StaticItemIds) { Invoke(nameof(SetTextureToAdditionalDataFromStaticItemIDs), WorldContextObject, targetData, StaticItemIds); }
        public void SetTextureToAdditionalDataFromStaticItemID(Object WorldContextObject, PalLogAdditionalData targetData, Object StaticItemId) { Invoke(nameof(SetTextureToAdditionalDataFromStaticItemID), WorldContextObject, targetData, StaticItemId); }
        public void SetTextureToAdditionalDataFromHandles(Object WorldContextObject, PalLogAdditionalData targetData, Array<PalIndividualCharacterHandle> targetHandles) { Invoke(nameof(SetTextureToAdditionalDataFromHandles), WorldContextObject, targetData, targetHandles); }
        public void SetTextureToAdditionalDataFromHandle(Object WorldContextObject, PalLogAdditionalData targetData, PalIndividualCharacterHandle targetHandle) { Invoke(nameof(SetTextureToAdditionalDataFromHandle), WorldContextObject, targetData, targetHandle); }
        public void SetTextureToAdditionalDataFromCharacterID(Object WorldContextObject, PalLogAdditionalData targetData, Object CharacterID) { Invoke(nameof(SetTextureToAdditionalDataFromCharacterID), WorldContextObject, targetData, CharacterID); }
        public void CreateLogText(Object WorldContextObject, EPalLogType logType, Object OutText) { Invoke(nameof(CreateLogText), WorldContextObject, logType, OutText); }
        public Object CreateItemGetLogText(Object WorldContextObject, PalStaticItemIdAndNum ItemIDAndNum) { return Invoke<Object>(nameof(CreateItemGetLogText), WorldContextObject, ItemIDAndNum); }
        public void AddWorkerStartWorking_ProductResource_Mining(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, Object MapObjectId) { Invoke(nameof(AddWorkerStartWorking_ProductResource_Mining), WorldContextObject, workerHandle, MapObjectId); }
        public void AddWorkerStartWorking_ProductResource_Deforest(Object WorldContextObject, PalIndividualCharacterHandle workerHandle) { Invoke(nameof(AddWorkerStartWorking_ProductResource_Deforest), WorldContextObject, workerHandle); }
        public void AddWorkerStartWorking_CollectResource(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, Object StaticItemId) { Invoke(nameof(AddWorkerStartWorking_CollectResource), WorldContextObject, workerHandle, StaticItemId); }
        public void AddWorkerStartWorking(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, EPalWorkType WorkType) { Invoke(nameof(AddWorkerStartWorking), WorldContextObject, workerHandle, WorkType); }
        public void AddWorkerStartRepairing(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, Object buildedMapObjectName) { Invoke(nameof(AddWorkerStartRepairing), WorldContextObject, workerHandle, buildedMapObjectName); }
        public void AddWorkerStartBuilding(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, Object buildedMapObjectName) { Invoke(nameof(AddWorkerStartBuilding), WorldContextObject, workerHandle, buildedMapObjectName); }
        public void AddWorkerCompleteItemConvertLog(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, PalItemId ItemId, int Num) { Invoke(nameof(AddWorkerCompleteItemConvertLog), WorldContextObject, workerHandle, ItemId, Num); }
        public void AddWorkerCompleteBuildLog(Object WorldContextObject, PalIndividualCharacterHandle workerHandle, Object buildedMapObjectName) { Invoke(nameof(AddWorkerCompleteBuildLog), WorldContextObject, workerHandle, buildedMapObjectName); }
        public void AddSkillLog(Object WorldContextObject, EPalLogType logType, PalLogInfo_Skill Info) { Invoke(nameof(AddSkillLog), WorldContextObject, logType, Info); }
        public void AddItemGetLog(Object WorldContextObject, PalStaticItemIdAndNum ItemIDAndNum) { Invoke(nameof(AddItemGetLog), WorldContextObject, ItemIDAndNum); }
        public void AddDropPalLog(Object WorldContextObject, PalLogInfo_DropPal LogInfo) { Invoke(nameof(AddDropPalLog), WorldContextObject, LogInfo); }
    }
    public class PalLogWidget : PalUserWidget
    {
        public PalLogWidget(nint addr) : base(addr) { }
    }
    public class PalLogWidgetBase : PalUserWidget
    {
        public PalLogWidgetBase(nint addr) : base(addr) { }
        public float destroyTime { get { return this[nameof(destroyTime)].GetValue<float>(); } set { this[nameof(destroyTime)].SetValue<float>(value); } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
        public EPalLogWidgetState logState { get { return (EPalLogWidgetState)this[nameof(logState)].GetValue<int>(); } set { this[nameof(logState)].SetValue<int>((int)value); } }
        public PalStaticItemIdAndNum ItemIDAndNum { get { return this[nameof(ItemIDAndNum)].As<PalStaticItemIdAndNum>(); } set { this["ItemIDAndNum"] = value; } }
        public void StartDisplayLog(float inDestroyTime) { Invoke(nameof(StartDisplayLog), inDestroyTime); }
        public void SetState(EPalLogWidgetState ChangeState) { Invoke(nameof(SetState), ChangeState); }
        public void SetLogText(Object InText) { Invoke(nameof(SetLogText), InText); }
        public void SetAdditionalData(PalLogAdditionalData inAdditionalData) { Invoke(nameof(SetAdditionalData), inAdditionalData); }
        public void RequestOutAnime() { Invoke(nameof(RequestOutAnime)); }
        public void RequestInAnime() { Invoke(nameof(RequestInAnime)); }
    }
    public class PalLongPressObject : Object
    {
        public PalLongPressObject(nint addr) : base(addr) { }
        public void ReleaseCallback() { Invoke(nameof(ReleaseCallback)); }
        public void PressCallback() { Invoke(nameof(PressCallback)); }
        public void LongPressCallback() { Invoke(nameof(LongPressCallback)); }
    }
    public class PalLookAtComponent : ActorComponent
    {
        public PalLookAtComponent(nint addr) : base(addr) { }
        public Vector LookAtTargetLocation { get { return this[nameof(LookAtTargetLocation)].As<Vector>(); } set { this["LookAtTargetLocation"] = value; } }
        public Vector LookAtTargetLocation_forActor { get { return this[nameof(LookAtTargetLocation_forActor)].As<Vector>(); } set { this["LookAtTargetLocation_forActor"] = value; } }
        public Actor LookAtTargetActor { get { return this[nameof(LookAtTargetActor)].As<Actor>(); } set { this["LookAtTargetActor"] = value; } }
        public Vector LookAtTargetLocation_Interpolated { get { return this[nameof(LookAtTargetLocation_Interpolated)].As<Vector>(); } set { this["LookAtTargetLocation_Interpolated"] = value; } }
        public Object LookAtTargetBoneName { get { return this[nameof(LookAtTargetBoneName)]; } set { this[nameof(LookAtTargetBoneName)] = value; } }
        public float LookAtInInterpTime { get { return this[nameof(LookAtInInterpTime)].GetValue<float>(); } set { this[nameof(LookAtInInterpTime)].SetValue<float>(value); } }
        public float LookAtOutInterpTime { get { return this[nameof(LookAtOutInterpTime)].GetValue<float>(); } set { this[nameof(LookAtOutInterpTime)].SetValue<float>(value); } }
        public bool bIsEnableLookAt { get { return this[nameof(bIsEnableLookAt)].Flag; } set { this[nameof(bIsEnableLookAt)].Flag = value; } }
        public FlagContainer LookAtDisableFlag { get { return this[nameof(LookAtDisableFlag)].As<FlagContainer>(); } set { this["LookAtDisableFlag"] = value; } }
        public float InterpolatedSpeed { get { return this[nameof(InterpolatedSpeed)].GetValue<float>(); } set { this[nameof(InterpolatedSpeed)].SetValue<float>(value); } }
        public bool bIsShowDebugImage { get { return this[nameof(bIsShowDebugImage)].Flag; } set { this[nameof(bIsShowDebugImage)].Flag = value; } }
        public void StopLookAt(float interpTime) { Invoke(nameof(StopLookAt), interpTime); }
        public void StartLookAtForActor(Actor Actor, Object BoneName, float interpTime) { Invoke(nameof(StartLookAtForActor), Actor, BoneName, interpTime); }
        public void StartLookAt(Vector LookAtTarget, float interpTime) { Invoke(nameof(StartLookAt), LookAtTarget, interpTime); }
        public void SetLookAtDisable(Object flagName, bool bIsDisable) { Invoke(nameof(SetLookAtDisable), flagName, bIsDisable); }
        public void OnChangeShootState(bool IsAim, bool IsShooting) { Invoke(nameof(OnChangeShootState), IsAim, IsShooting); }
        public bool IsEnableLookAt() { return Invoke<bool>(nameof(IsEnableLookAt)); }
        public Vector GetLookAtTarget() { return Invoke<Vector>(nameof(GetLookAtTarget)); }
        public float GetLookAtOutInterpTime() { return Invoke<float>(nameof(GetLookAtOutInterpTime)); }
        public float GetLookAtInInterpTime() { return Invoke<float>(nameof(GetLookAtInInterpTime)); }
    }
    public class PalMapLevelObject : PalMapObject
    {
        public PalMapLevelObject(nint addr) : base(addr) { }
        public Guid LevelObjectInstanceId { get { return this[nameof(LevelObjectInstanceId)].As<Guid>(); } set { this["LevelObjectInstanceId"] = value; } }
        public Guid GetLevelObjectInstanceId() { return Invoke<Guid>(nameof(GetLevelObjectInstanceId)); }
    }
    public class PalMapObjectConcreteModelBase : Object
    {
        public PalMapObjectConcreteModelBase(nint addr) : base(addr) { }
        public Object OnAvailableDelegate { get { return this[nameof(OnAvailableDelegate)]; } set { this[nameof(OnAvailableDelegate)] = value; } }
        public Object OnNotAvailableDelegate { get { return this[nameof(OnNotAvailableDelegate)]; } set { this[nameof(OnNotAvailableDelegate)] = value; } }
        public Object OnSpawnedReadyModuleDelegateMap { get { return this[nameof(OnSpawnedReadyModuleDelegateMap)]; } set { this[nameof(OnSpawnedReadyModuleDelegateMap)] = value; } }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public Guid ModelInstanceId { get { return this[nameof(ModelInstanceId)].As<Guid>(); } set { this["ModelInstanceId"] = value; } }
        public bool bDisposed { get { return this[nameof(bDisposed)].Flag; } set { this[nameof(bDisposed)].Flag = value; } }
        public PalFastMapObjectModuleRepInfoArray ModuleRepInfoArray { get { return this[nameof(ModuleRepInfoArray)].As<PalFastMapObjectModuleRepInfoArray>(); } set { this["ModuleRepInfoArray"] = value; } }
        public PalMapObjectWorkeeModule WorkeeModuleCache { get { return this[nameof(WorkeeModuleCache)].As<PalMapObjectWorkeeModule>(); } set { this["WorkeeModuleCache"] = value; } }
        public Object TryGetMapObjectId() { return Invoke<Object>(nameof(TryGetMapObjectId)); }
        public void SimpleDelegate__DelegateSignature(PalMapObjectConcreteModelBase Model) { Invoke(nameof(SimpleDelegate__DelegateSignature), Model); }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnTriggeringInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType, float DeltaTime) { Invoke(nameof(OnTriggeringInteract), Other, IndicatorType, DeltaTime); }
        public void OnStartTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnStartTriggerInteract), Other, IndicatorType); }
        public void OnRep_ModuleArray() { Invoke(nameof(OnRep_ModuleArray)); }
        public void OnEndTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnEndTriggerInteract), Other, IndicatorType); }
        public PalMapObjectWorkeeModule GetWorkeeModule() { return Invoke<PalMapObjectWorkeeModule>(nameof(GetWorkeeModule)); }
        public Transform GetTransform() { return Invoke<Transform>(nameof(GetTransform)); }
        public PalMapObjectSwitchModule GetSwitchModule() { return Invoke<PalMapObjectSwitchModule>(nameof(GetSwitchModule)); }
        public PalMapObjectPasswordLockModule GetPasswordLockModule() { return Invoke<PalMapObjectPasswordLockModule>(nameof(GetPasswordLockModule)); }
        public void GetMapObjectLocation(Vector outVector) { Invoke(nameof(GetMapObjectLocation), outVector); }
        public PalMapObjectItemContainerModule GetItemContainerModule() { return Invoke<PalMapObjectItemContainerModule>(nameof(GetItemContainerModule)); }
        public Guid GetInstanceId() { return Invoke<Guid>(nameof(GetInstanceId)); }
        public PalMapObjectEnergyModule GetEnergyModule() { return Invoke<PalMapObjectEnergyModule>(nameof(GetEnergyModule)); }
        public PalMapObjectCharacterContainerModule GetCharacterContainerModule() { return Invoke<PalMapObjectCharacterContainerModule>(nameof(GetCharacterContainerModule)); }
        public PalBaseCampModel GetBaseCampModelBelongTo() { return Invoke<PalBaseCampModel>(nameof(GetBaseCampModelBelongTo)); }
        public Guid GetBaseCampIdBelongTo() { return Invoke<Guid>(nameof(GetBaseCampIdBelongTo)); }
        public void CallOrRegisterOnReadyModule(EPalMapObjectConcreteModelModuleType ModuleType, Object Delegate) { Invoke(nameof(CallOrRegisterOnReadyModule), ModuleType, Delegate); }
    }
    public class PalMapObjectAmusementModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectAmusementModel(nint addr) : base(addr) { }
        public Object OnUpdateCharacterDelegate { get { return this[nameof(OnUpdateCharacterDelegate)]; } set { this[nameof(OnUpdateCharacterDelegate)] = value; } }
        public PalIndividualCharacterHandle HealingCharacterHandle { get { return this[nameof(HealingCharacterHandle)].As<PalIndividualCharacterHandle>(); } set { this["HealingCharacterHandle"] = value; } }
        public Vector HealingLocationOffset { get { return this[nameof(HealingLocationOffset)].As<Vector>(); } set { this["HealingLocationOffset"] = value; } }
        public float AffectSanityRate { get { return this[nameof(AffectSanityRate)].GetValue<float>(); } set { this[nameof(AffectSanityRate)].SetValue<float>(value); } }
        public Object AIActionClass { get { return this[nameof(AIActionClass)]; } set { this[nameof(AIActionClass)] = value; } }
        public void SimpleDelegate__DelegateSignature(PalMapObjectAmusementModel Model) { Invoke(nameof(SimpleDelegate__DelegateSignature), Model); }
        public void OnInteractBegin(Actor Other, Object Component) { Invoke(nameof(OnInteractBegin), Other, Component); }
        public void OnFinishHealingAction(PalAIActionBase action) { Invoke(nameof(OnFinishHealingAction), action); }
        public PalIndividualCharacterHandle GetHealingHandle() { return Invoke<PalIndividualCharacterHandle>(nameof(GetHealingHandle)); }
        public void ClearCharacterHandle() { Invoke(nameof(ClearCharacterHandle)); }
    }
    public class PalMapObjectAmusementParameterComponent : ActorComponent
    {
        public PalMapObjectAmusementParameterComponent(nint addr) : base(addr) { }
        public float AffectSanityRate { get { return this[nameof(AffectSanityRate)].GetValue<float>(); } set { this[nameof(AffectSanityRate)].SetValue<float>(value); } }
        public Object AIActionClass { get { return this[nameof(AIActionClass)]; } set { this[nameof(AIActionClass)] = value; } }
    }
    public class PalMapObjectBaseCampPassiveEffectModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectBaseCampPassiveEffectModel(nint addr) : base(addr) { }
    }
    public class PalMapObjectBaseCampPassiveEffectParameterComponentBase : ActorComponent
    {
        public PalMapObjectBaseCampPassiveEffectParameterComponentBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectBaseCampPassiveEffectWorkSpeedParameterComponent : PalMapObjectBaseCampPassiveEffectParameterComponentBase
    {
        public PalMapObjectBaseCampPassiveEffectWorkSpeedParameterComponent(nint addr) : base(addr) { }
        public int AffectMaxNum { get { return this[nameof(AffectMaxNum)].GetValue<int>(); } set { this[nameof(AffectMaxNum)].SetValue<int>(value); } }
        public EPalWorkSuitability TargetWorkSuitability { get { return (EPalWorkSuitability)this[nameof(TargetWorkSuitability)].GetValue<int>(); } set { this[nameof(TargetWorkSuitability)].SetValue<int>((int)value); } }
        public float WorkSpeedAdditionalRate { get { return this[nameof(WorkSpeedAdditionalRate)].GetValue<float>(); } set { this[nameof(WorkSpeedAdditionalRate)].SetValue<float>(value); } }
    }
    public class PalMapObjectBaseCampPassiveEffectWorkHardParameterComponent : PalMapObjectBaseCampPassiveEffectParameterComponentBase
    {
        public PalMapObjectBaseCampPassiveEffectWorkHardParameterComponent(nint addr) : base(addr) { }
    }
    public class PalMapObjectBaseCampPassiveWorkHardModel : PalMapObjectBaseCampPassiveEffectModel
    {
        public PalMapObjectBaseCampPassiveWorkHardModel(nint addr) : base(addr) { }
        public void RequestUpdateWorkHardType_ServerInternal(int RequestPlayerId, int TypeInt) { Invoke(nameof(RequestUpdateWorkHardType_ServerInternal), RequestPlayerId, TypeInt); }
        public void RequestUpdateWorkHardType(EPalBaseCampPassiveEffectWorkHardType Type) { Invoke(nameof(RequestUpdateWorkHardType), Type); }
        public PalBaseCampPassiveEffect_WorkHard GetPassiveEffectWorkHard() { return Invoke<PalBaseCampPassiveEffect_WorkHard>(nameof(GetPassiveEffectWorkHard)); }
    }
    public class PalMapObjectBaseCampPoint : PalMapObjectConcreteModelBase
    {
        public PalMapObjectBaseCampPoint(nint addr) : base(addr) { }
        public Object PalBoxWiget { get { return this[nameof(PalBoxWiget)]; } set { this[nameof(PalBoxWiget)] = value; } }
        public Object CampTaskWiget { get { return this[nameof(CampTaskWiget)]; } set { this[nameof(CampTaskWiget)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
    }
    public class PalMapObjectBaseCampWorkerDirectorModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectBaseCampWorkerDirectorModel(nint addr) : base(addr) { }
        public Object OnNotifiedChangeBaseCampBattleTypeDelegate { get { return this[nameof(OnNotifiedChangeBaseCampBattleTypeDelegate)]; } set { this[nameof(OnNotifiedChangeBaseCampBattleTypeDelegate)] = value; } }
        public EPalBaseCampWorkerDirectionBattleType BaseCampBattleTypeForClientRead { get { return (EPalBaseCampWorkerDirectionBattleType)this[nameof(BaseCampBattleTypeForClientRead)].GetValue<int>(); } set { this[nameof(BaseCampBattleTypeForClientRead)].SetValue<int>((int)value); } }
        public void ReturnSelfDelegate__DelegateSignature(PalMapObjectBaseCampWorkerDirectorModel Model) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Model); }
        public void RequestUpdateBaseCampBattleType_ServerInternal(int RequestPlayerId, int BattleTypeInt) { Invoke(nameof(RequestUpdateBaseCampBattleType_ServerInternal), RequestPlayerId, BattleTypeInt); }
        public void OnRep_BaseCampBattleTypeForClientRead() { Invoke(nameof(OnRep_BaseCampBattleTypeForClientRead)); }
        public void NotifyChangeBaseCampBattleType_ClientInternal() { Invoke(nameof(NotifyChangeBaseCampBattleType_ClientInternal)); }
    }
    public class PalMapObjectBreedFarmModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectBreedFarmModel(nint addr) : base(addr) { }
        public Object OnUpdateBreedProgress { get { return this[nameof(OnUpdateBreedProgress)]; } set { this[nameof(OnUpdateBreedProgress)] = value; } }
        public Array<Guid> SpawnedEggInstanceIds { get { return new Array<Guid>(this[nameof(SpawnedEggInstanceIds)].Address); } }
        public int ExistPalEggMaxNum { get { return this[nameof(ExistPalEggMaxNum)].GetValue<int>(); } set { this[nameof(ExistPalEggMaxNum)].SetValue<int>(value); } }
        public float BreedRequiredRealTime { get { return this[nameof(BreedRequiredRealTime)].GetValue<float>(); } set { this[nameof(BreedRequiredRealTime)].SetValue<float>(value); } }
        public float BreedProgressTime { get { return this[nameof(BreedProgressTime)].GetValue<float>(); } set { this[nameof(BreedProgressTime)].SetValue<float>(value); } }
        public Array<PalInstanceID> LastProceedWorkerIndividualIds { get { return new Array<PalInstanceID>(this[nameof(LastProceedWorkerIndividualIds)].Address); } }
        public Array<Object> TargetBreedItemIds { get { return new Array<Object>(this[nameof(TargetBreedItemIds)].Address); } }
        public void OnUpdateAssignedCharacter(PalWorkBase Work) { Invoke(nameof(OnUpdateAssignedCharacter), Work); }
        public void OnRep_UpdateBreedProgress() { Invoke(nameof(OnRep_UpdateBreedProgress)); }
        public void OnBreedProgressChangedDelegate__DelegateSignature(float CurrentProgress, float MaxProgress) { Invoke(nameof(OnBreedProgressChangedDelegate__DelegateSignature), CurrentProgress, MaxProgress); }
        public void GetBreedProgress(float NowProgress, float MaxProgress) { Invoke(nameof(GetBreedProgress), NowProgress, MaxProgress); }
        public bool CanProceedBreeding() { return Invoke<bool>(nameof(CanProceedBreeding)); }
        public EPalItemOperationResult CanConsumeBreedItem(PalItemSlotIdAndNum ConsumableItem) { return Invoke<EPalItemOperationResult>(nameof(CanConsumeBreedItem), ConsumableItem); }
    }
    public class PalMapObjectBreedFarmParameterComponent : ActorComponent
    {
        public PalMapObjectBreedFarmParameterComponent(nint addr) : base(addr) { }
        public float BreedRequiredRealTime { get { return this[nameof(BreedRequiredRealTime)].GetValue<float>(); } set { this[nameof(BreedRequiredRealTime)].SetValue<float>(value); } }
        public int ExistPalEggMaxNum { get { return this[nameof(ExistPalEggMaxNum)].GetValue<int>(); } set { this[nameof(ExistPalEggMaxNum)].SetValue<int>(value); } }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public Array<PalDataTableRowName_ItemData> TargetItemIds { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(TargetItemIds)].Address); } }
    }
    public class PalMapObjectConcreteModelModuleBase : Object
    {
        public PalMapObjectConcreteModelModuleBase(nint addr) : base(addr) { }
        public bool bTriggeredOnSpawnedReady { get { return this[nameof(bTriggeredOnSpawnedReady)].Flag; } set { this[nameof(bTriggeredOnSpawnedReady)].Flag = value; } }
    }
    public class PalMapObjectCharacterContainerModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectCharacterContainerModule(nint addr) : base(addr) { }
        public PalIndividualCharacterContainer TargetContainer { get { return this[nameof(TargetContainer)].As<PalIndividualCharacterContainer>(); } set { this["TargetContainer"] = value; } }
        public bool TryGetContainer(PalIndividualCharacterContainer OutContainer) { return Invoke<bool>(nameof(TryGetContainer), OutContainer); }
        public void OnRep_TargetContainer() { Invoke(nameof(OnRep_TargetContainer)); }
        public bool IsCompleteSetup() { return Invoke<bool>(nameof(IsCompleteSetup)); }
        public PalContainerId GetContainerId() { return Invoke<PalContainerId>(nameof(GetContainerId)); }
        public PalIndividualCharacterContainer GetContainer() { return Invoke<PalIndividualCharacterContainer>(nameof(GetContainer)); }
    }
    public class PalMapObjectCharacterStatusOperatorModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectCharacterStatusOperatorModel(nint addr) : base(addr) { }
    }
    public class PalMapObjectCollectResourceParameterComponent : ActorComponent
    {
        public PalMapObjectCollectResourceParameterComponent(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public Array<PalDataTableRowName_ItemData> TargetItemIds { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(TargetItemIds)].Address); } }
        public float AdditionalRangeOutOfBaseCamp { get { return this[nameof(AdditionalRangeOutOfBaseCamp)].GetValue<float>(); } set { this[nameof(AdditionalRangeOutOfBaseCamp)].SetValue<float>(value); } }
    }
    public class PalMapObjectConcreteModelModuleItemHolderInterface : Interface
    {
        public PalMapObjectConcreteModelModuleItemHolderInterface(nint addr) : base(addr) { }
    }
    public class PalMapObjectConvertItemModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectConvertItemModel(nint addr) : base(addr) { }
        public Object OnUpdateRecipeDelegate { get { return this[nameof(OnUpdateRecipeDelegate)]; } set { this[nameof(OnUpdateRecipeDelegate)] = value; } }
        public Object OnFinishConvertDelegate { get { return this[nameof(OnFinishConvertDelegate)]; } set { this[nameof(OnFinishConvertDelegate)] = value; } }
        public Object OnRecieveUpdateRecipeRequestResultDelegate { get { return this[nameof(OnRecieveUpdateRecipeRequestResultDelegate)]; } set { this[nameof(OnRecieveUpdateRecipeRequestResultDelegate)] = value; } }
        public Object OnUpdateSettingDelegate { get { return this[nameof(OnUpdateSettingDelegate)]; } set { this[nameof(OnUpdateSettingDelegate)] = value; } }
        public Object CurrentRecipeId { get { return this[nameof(CurrentRecipeId)]; } set { this[nameof(CurrentRecipeId)] = value; } }
        public int RequestedProductNum { get { return this[nameof(RequestedProductNum)].GetValue<int>(); } set { this[nameof(RequestedProductNum)].SetValue<int>(value); } }
        public int RemainProductNum { get { return this[nameof(RemainProductNum)].GetValue<int>(); } set { this[nameof(RemainProductNum)].SetValue<int>(value); } }
        public bool bIsWorkable { get { return this[nameof(bIsWorkable)].Flag; } set { this[nameof(bIsWorkable)].Flag = value; } }
        public Array<Object> RecipeIds { get { return new Array<Object>(this[nameof(RecipeIds)].Address); } }
        public float WorkSpeedAdditionalRate { get { return this[nameof(WorkSpeedAdditionalRate)].GetValue<float>(); } set { this[nameof(WorkSpeedAdditionalRate)].SetValue<float>(value); } }
        public int CurrentRecipeRequestPlayerId { get { return this[nameof(CurrentRecipeRequestPlayerId)].GetValue<int>(); } set { this[nameof(CurrentRecipeRequestPlayerId)].SetValue<int>(value); } }
        public Array<EPalItemTypeA> TargetTypesA { get { return new Array<EPalItemTypeA>(this[nameof(TargetTypesA)].Address); } }
        public Array<EPalItemTypeB> TargetTypesB { get { return new Array<EPalItemTypeB>(this[nameof(TargetTypesB)].Address); } }
        public int TargetRankMax { get { return this[nameof(TargetRankMax)].GetValue<int>(); } set { this[nameof(TargetRankMax)].SetValue<int>(value); } }
        public bool IsPickUpInteractable { get { return this[nameof(IsPickUpInteractable)].Flag; } set { this[nameof(IsPickUpInteractable)].Flag = value; } }
        public void UpdateSettingDelegate__DelegateSignature(PalMapObjectConvertItemModel Model) { Invoke(nameof(UpdateSettingDelegate__DelegateSignature), Model); }
        public void UpdateRecipeDelegate__DelegateSignature(PalMapObjectConvertItemModel Model) { Invoke(nameof(UpdateRecipeDelegate__DelegateSignature), Model); }
        public void RequestUpdateRecipe(Object RecipeID, int ProductNum) { Invoke(nameof(RequestUpdateRecipe), RecipeID, ProductNum); }
        public void RequestChangeRecipe_ServerInternal(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RequestChangeRecipe_ServerInternal), RequestPlayerId, Archive); }
        public void RequestCancel() { Invoke(nameof(RequestCancel)); }
        public void RecieveUpdateRecipeRequestResultDelegate__DelegateSignature(EPalMapObjectConvertItemModelRequestResult Result) { Invoke(nameof(RecieveUpdateRecipeRequestResultDelegate__DelegateSignature), Result); }
        public void ReceivedPickProductResult(PalItemSlot Slot) { Invoke(nameof(ReceivedPickProductResult), Slot); }
        public void OnUpdateEnergyModuleState(PalMapObjectEnergyModule EnergyModule) { Invoke(nameof(OnUpdateEnergyModuleState), EnergyModule); }
        public void OnUpdateContainerContentInServer(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContentInServer), Container); }
        public void OnStartWorkAnyone_ServerInternal(PalWorkBase Work, PalInstanceID WorkerIndividualId) { Invoke(nameof(OnStartWorkAnyone_ServerInternal), Work, WorkerIndividualId); }
        public void OnRep_RequestedProductNum() { Invoke(nameof(OnRep_RequestedProductNum)); }
        public void OnRep_RemainProductNum() { Invoke(nameof(OnRep_RemainProductNum)); }
        public void OnRep_IsWorkable() { Invoke(nameof(OnRep_IsWorkable)); }
        public void OnRep_CurrentRecipeId() { Invoke(nameof(OnRep_CurrentRecipeId)); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
        public void OnEndWorkAnyone_ServerInternal(PalWorkBase Work, PalInstanceID WorkerIndividualId) { Invoke(nameof(OnEndWorkAnyone_ServerInternal), Work, WorkerIndividualId); }
        public bool IsTransportToStorage() { return Invoke<bool>(nameof(IsTransportToStorage)); }
        public bool IsProductNumInfinite(int ProductNum) { return Invoke<bool>(nameof(IsProductNumInfinite), ProductNum); }
        public PalItemSlot GetSlotInjectableMaterial(Object StaticItemId) { return Invoke<PalItemSlot>(nameof(GetSlotInjectableMaterial), StaticItemId); }
        public int GetSlotIndexProductOut() { return Invoke<int>(nameof(GetSlotIndexProductOut)); }
        public Array<int> GetSlotIndexesMaterialInput() { return Invoke<Array<int>>(nameof(GetSlotIndexesMaterialInput)); }
        public int GetRemainCreateNum() { return Invoke<int>(nameof(GetRemainCreateNum)); }
        public Array<Object> GetRecipes() { return Invoke<Array<Object>>(nameof(GetRecipes)); }
        public PalItemSlot GetProductSlot() { return Invoke<PalItemSlot>(nameof(GetProductSlot)); }
        public Object GetCurrentRecipeId() { return Invoke<Object>(nameof(GetCurrentRecipeId)); }
        public PalItemRecipe GetCurrentRecipe() { return Invoke<PalItemRecipe>(nameof(GetCurrentRecipe)); }
        public void FinishConvertDelegate__DelegateSignature(PalMapObjectConvertItemModel Model) { Invoke(nameof(FinishConvertDelegate__DelegateSignature), Model); }
        public float CalcRequiredAmount(float BaseRequiredAmount) { return Invoke<float>(nameof(CalcRequiredAmount), BaseRequiredAmount); }
        public void AddConvertItemResultLog(PalNetArchive Archive) { Invoke(nameof(AddConvertItemResultLog), Archive); }
    }
    public class PalMapObjectDamagedScarecrowModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectDamagedScarecrowModel(nint addr) : base(addr) { }
        public float ProgressTimeStartAtDamaged { get { return this[nameof(ProgressTimeStartAtDamaged)].GetValue<float>(); } set { this[nameof(ProgressTimeStartAtDamaged)].SetValue<float>(value); } }
        public void OnDamage_ServerInternal(PalMapObjectModel Model, PalDamageInfo DamageInfo, int LastHp) { Invoke(nameof(OnDamage_ServerInternal), Model, DamageInfo, LastHp); }
    }
    public class PalMapObjectDamageReactionComponent : ActorComponent
    {
        public PalMapObjectDamageReactionComponent(nint addr) : base(addr) { }
        public PalHitEffectSlot EffectSlot { get { return this[nameof(EffectSlot)].As<PalHitEffectSlot>(); } set { this["EffectSlot"] = value; } }
    }
    public class PalMapObjectPickableCharacterModelBase : PalMapObjectConcreteModelBase
    {
        public PalMapObjectPickableCharacterModelBase(nint addr) : base(addr) { }
        public PalCharacterStoredParameterId StoredParameterId { get { return this[nameof(StoredParameterId)].As<PalCharacterStoredParameterId>(); } set { this["StoredParameterId"] = value; } }
        public PalIndividualCharacterSaveParameter ForRead_CharacterSaveParameter { get { return this[nameof(ForRead_CharacterSaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["ForRead_CharacterSaveParameter"] = value; } }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
        public void RequestPickup_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestPickup_ServerInternal), RequestPlayerId); }
        public void RequestPickup() { Invoke(nameof(RequestPickup)); }
        public void OnRemovedStoredCharacter_ServerInternal(PalCharacterStoredParameterId RemovedID) { Invoke(nameof(OnRemovedStoredCharacter_ServerInternal), RemovedID); }
        public void OnDisappearTimeAt() { Invoke(nameof(OnDisappearTimeAt)); }
        public PalIndividualCharacterSaveParameter GetCharacterSaveParameter() { return Invoke<PalIndividualCharacterSaveParameter>(nameof(GetCharacterSaveParameter)); }
    }
    public class PalMapObjectDeathDroppedCharacterModel : PalMapObjectPickableCharacterModelBase
    {
        public PalMapObjectDeathDroppedCharacterModel(nint addr) : base(addr) { }
        public Object OnNotifiedGuildUpdateInClientDelegate { get { return this[nameof(OnNotifiedGuildUpdateInClientDelegate)]; } set { this[nameof(OnNotifiedGuildUpdateInClientDelegate)] = value; } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public void ReturnSelfDelegate__DelegateSignature(PalMapObjectDeathDroppedCharacterModel Model) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Model); }
        public void OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal(PalPlayerState LocalPlayerState) { Invoke(nameof(OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal), LocalPlayerState); }
        public bool IsSameGuildInLocalPlayer() { return Invoke<bool>(nameof(IsSameGuildInLocalPlayer)); }
    }
    public class PalMapObjectItemStorageModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectItemStorageModel(nint addr) : base(addr) { }
        public bool bAutoDestroyIfEmpty { get { return this[nameof(bAutoDestroyIfEmpty)].Flag; } set { this[nameof(bAutoDestroyIfEmpty)].Flag = value; } }
        public void RequestSortContainer() { Invoke(nameof(RequestSortContainer)); }
        public void OnUpdateContainerContentInServer(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContentInServer), Container); }
    }
    public class PalMapObjectDeathPenaltyStorageModel : PalMapObjectItemStorageModel
    {
        public PalMapObjectDeathPenaltyStorageModel(nint addr) : base(addr) { }
        public Object OnNotifiedGuildUpdateInClientDelegate { get { return this[nameof(OnNotifiedGuildUpdateInClientDelegate)]; } set { this[nameof(OnNotifiedGuildUpdateInClientDelegate)] = value; } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
        public void ReturnSelfDelegate__DelegateSignature(PalMapObjectDeathPenaltyStorageModel Model) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Model); }
        public void OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal(PalPlayerState LocalPlayerState) { Invoke(nameof(OnChangedPlayerInfoInLocalPlayerGuild_ClientInternal), LocalPlayerState); }
        public bool IsSameGuildInLocalPlayer() { return Invoke<bool>(nameof(IsSameGuildInLocalPlayer)); }
    }
    public class PalMapObjectDefenseModelBase : PalMapObjectConcreteModelBase
    {
        public PalMapObjectDefenseModelBase(nint addr) : base(addr) { }
        public bool TryGetLauncherControlMapObject(PalMapObject OutMapObject) { return Invoke<bool>(nameof(TryGetLauncherControlMapObject), OutMapObject); }
        public Vector GetLocation() { return Invoke<Vector>(nameof(GetLocation)); }
        public EPalMapObjectDefenseType GetDefenseType() { return Invoke<EPalMapObjectDefenseType>(nameof(GetDefenseType)); }
    }
    public class PalMapObjectDefenseBulletLauncherModel : PalMapObjectDefenseModelBase
    {
        public PalMapObjectDefenseBulletLauncherModel(nint addr) : base(addr) { }
        public Object WeakLauncherControlMapObject { get { return this[nameof(WeakLauncherControlMapObject)]; } set { this[nameof(WeakLauncherControlMapObject)] = value; } }
        public Object WeakWeapon { get { return this[nameof(WeakWeapon)]; } set { this[nameof(WeakWeapon)] = value; } }
        public int remainingBulletsNum { get { return this[nameof(remainingBulletsNum)].GetValue<int>(); } set { this[nameof(remainingBulletsNum)].SetValue<int>(value); } }
        public int MagazineSize { get { return this[nameof(MagazineSize)].GetValue<int>(); } set { this[nameof(MagazineSize)].SetValue<int>(value); } }
        public Object BulletItemName { get { return this[nameof(BulletItemName)]; } set { this[nameof(BulletItemName)] = value; } }
        public void UseBullet() { Invoke(nameof(UseBullet)); }
        public void TurnToTarget(Actor TargetActor, float DeltaTime) { Invoke(nameof(TurnToTarget), TargetActor, DeltaTime); }
        public bool TryGetWeapon(PalStationaryWeaponBase OutWeapon) { return Invoke<bool>(nameof(TryGetWeapon), OutWeapon); }
        public void SetOwnerCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(SetOwnerCharacter), OwnerCharacter); }
        public void SetEnableTrigger(bool EnableTrigger) { Invoke(nameof(SetEnableTrigger), EnableTrigger); }
        public void ReloadBullets(int ReloadBulletsNum) { Invoke(nameof(ReloadBullets), ReloadBulletsNum); }
        public void OnUpdateEnergyModuleState(PalMapObjectEnergyModule EnergyModule) { Invoke(nameof(OnUpdateEnergyModuleState), EnergyModule); }
        public int GetRemainingBulletsNum() { return Invoke<int>(nameof(GetRemainingBulletsNum)); }
        public int GetMagazineSize() { return Invoke<int>(nameof(GetMagazineSize)); }
        public Object GetBulletName() { return Invoke<Object>(nameof(GetBulletName)); }
        public float GetAttackableDistance() { return Invoke<float>(nameof(GetAttackableDistance)); }
        public float GetAttackableAngle() { return Invoke<float>(nameof(GetAttackableAngle)); }
        public bool CanAvailable() { return Invoke<bool>(nameof(CanAvailable)); }
    }
    public class PalMapObjectDefenseWaitModel : PalMapObjectDefenseModelBase
    {
        public PalMapObjectDefenseWaitModel(nint addr) : base(addr) { }
        public Object WeakLauncherControlMapObject { get { return this[nameof(WeakLauncherControlMapObject)]; } set { this[nameof(WeakLauncherControlMapObject)] = value; } }
    }
    public class PalMapObjectOperationResultUtility : Object
    {
        public PalMapObjectOperationResultUtility(nint addr) : base(addr) { }
    }
    public class PalMapObjectInteractRestrictTypeUtility : BlueprintFunctionLibrary
    {
        public PalMapObjectInteractRestrictTypeUtility(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelInterface : Interface
    {
        public PalMapObjectModelInterface(nint addr) : base(addr) { }
        public Guid GetModelId() { return Invoke<Guid>(nameof(GetModelId)); }
    }
    public class PalMapObjectItemCollectableInterface : Interface
    {
        public PalMapObjectItemCollectableInterface(nint addr) : base(addr) { }
        public EPalMapObjectItemCollectableType GetItemCollectableType() { return Invoke<EPalMapObjectItemCollectableType>(nameof(GetItemCollectableType)); }
        public void GetCollectableStaticItemIds(Array<Object> OutStaticItemIds) { Invoke(nameof(GetCollectableStaticItemIds), OutStaticItemIds); }
    }
    public class PalMapObjectWorkerAvailableFacilityInterface : Interface
    {
        public PalMapObjectWorkerAvailableFacilityInterface(nint addr) : base(addr) { }
    }
    public class PalMapObjectDisplayCharacterModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectDisplayCharacterModel(nint addr) : base(addr) { }
        public float RecoverAmountBySec { get { return this[nameof(RecoverAmountBySec)].GetValue<float>(); } set { this[nameof(RecoverAmountBySec)].SetValue<float>(value); } }
        public Transform CharacterSpawnLocalTransform { get { return this[nameof(CharacterSpawnLocalTransform)].As<Transform>(); } set { this["CharacterSpawnLocalTransform"] = value; } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public PalIndividualCharacterSlotsObserver CharacterSlotsObserver { get { return this[nameof(CharacterSlotsObserver)].As<PalIndividualCharacterSlotsObserver>(); } set { this["CharacterSlotsObserver"] = value; } }
        public void TryMoveToDisplayCage(PalIndividualCharacterSlot fromSlot) { Invoke(nameof(TryMoveToDisplayCage), fromSlot); }
        public void OnUpdateCharacterContainer_ServerInternal() { Invoke(nameof(OnUpdateCharacterContainer_ServerInternal)); }
        public void OnSpawnedPhantomCharacter_ServerInternal(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(OnSpawnedPhantomCharacter_ServerInternal), IndividualId, PhantomId); }
        public bool GetDisplaySlots(Array<PalIndividualCharacterSlot> Slots) { return Invoke<bool>(nameof(GetDisplaySlots), Slots); }
    }
    public class PalMapObjectDisplayCharacterParameterComponent : ActorComponent
    {
        public PalMapObjectDisplayCharacterParameterComponent(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public float RecoverAmountBySec { get { return this[nameof(RecoverAmountBySec)].GetValue<float>(); } set { this[nameof(RecoverAmountBySec)].SetValue<float>(value); } }
        public Transform CharacterSpawnLocalTransform { get { return this[nameof(CharacterSpawnLocalTransform)].As<Transform>(); } set { this["CharacterSpawnLocalTransform"] = value; } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
    }
    public class PalMapObjectDoorModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectDoorModel(nint addr) : base(addr) { }
        public void RequestTrigger_ServerInternal(int RequestPlayerId, int ToStateInt) { Invoke(nameof(RequestTrigger_ServerInternal), RequestPlayerId, ToStateInt); }
    }
    public class PalMapObjectDropItem : PalMapObject
    {
        public PalMapObjectDropItem(nint addr) : base(addr) { }
    }
    public class PalMapObjectPickableItemModelBase : PalMapObjectConcreteModelBase
    {
        public PalMapObjectPickableItemModelBase(nint addr) : base(addr) { }
        public bool bAutoPickedUp { get { return this[nameof(bAutoPickedUp)].Flag; } set { this[nameof(bAutoPickedUp)].Flag = value; } }
        public TimerHandle RemovePickupGuardTimerHandle { get { return this[nameof(RemovePickupGuardTimerHandle)].As<TimerHandle>(); } set { this["RemovePickupGuardTimerHandle"] = value; } }
        public void RequestPickup_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestPickup_ServerInternal), RequestPlayerId); }
        public void RequestPickup() { Invoke(nameof(RequestPickup)); }
        public void OnTimer_RemovePickupGuard() { Invoke(nameof(OnTimer_RemovePickupGuard)); }
        public Array<PalItemAndNum> CreatePickupItemInfo() { return Invoke<Array<PalItemAndNum>>(nameof(CreatePickupItemInfo)); }
    }
    public class PalMapObjectDropItemModel : PalMapObjectPickableItemModelBase
    {
        public PalMapObjectDropItemModel(nint addr) : base(addr) { }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
        public Vector ReleaseDirection { get { return this[nameof(ReleaseDirection)].As<Vector>(); } set { this["ReleaseDirection"] = value; } }
        public bool bEnableInteract { get { return this[nameof(bEnableInteract)].Flag; } set { this[nameof(bEnableInteract)].Flag = value; } }
        public void OnUpdateItemContainerContentInServer(PalItemContainer Container) { Invoke(nameof(OnUpdateItemContainerContentInServer), Container); }
        public void OnInteracting(float DeltaTime) { Invoke(nameof(OnInteracting), DeltaTime); }
        public void OnInteractEnd(Actor Other, Object Component) { Invoke(nameof(OnInteractEnd), Other, Component); }
        public void OnInteractBegin(Actor Other, Object Component) { Invoke(nameof(OnInteractBegin), Other, Component); }
        public void OnEnableTriggerInteract(Object Component) { Invoke(nameof(OnEnableTriggerInteract), Component); }
    }
    public class PalMapObjectDropItemParameterComponent : ActorComponent
    {
        public PalMapObjectDropItemParameterComponent(nint addr) : base(addr) { }
        public Array<PalMapObjectDropItemData> DropItems { get { return new Array<PalMapObjectDropItemData>(this[nameof(DropItems)].Address); } }
    }
    public class PalMapObjectEnergyModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectEnergyModule(nint addr) : base(addr) { }
        public Object OnUpdateCurrentStateDelegate { get { return this[nameof(OnUpdateCurrentStateDelegate)]; } set { this[nameof(OnUpdateCurrentStateDelegate)] = value; } }
        public EPalEnergyType EnergyType { get { return (EPalEnergyType)this[nameof(EnergyType)].GetValue<int>(); } set { this[nameof(EnergyType)].SetValue<int>((int)value); } }
        public float ConsumeEnergySpeed { get { return this[nameof(ConsumeEnergySpeed)].GetValue<float>(); } set { this[nameof(ConsumeEnergySpeed)].SetValue<float>(value); } }
        public float CurrentConsumeEnergySpeed { get { return this[nameof(CurrentConsumeEnergySpeed)].GetValue<float>(); } set { this[nameof(CurrentConsumeEnergySpeed)].SetValue<float>(value); } }
        public EPalMapObjectEnergyModuleStatusType CurrentState { get { return (EPalMapObjectEnergyModuleStatusType)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public bool bRequiredConsumeEnergy { get { return this[nameof(bRequiredConsumeEnergy)].Flag; } set { this[nameof(bRequiredConsumeEnergy)].Flag = value; } }
        public Guid StatusHUDId { get { return this[nameof(StatusHUDId)].As<Guid>(); } set { this["StatusHUDId"] = value; } }
        public void ReturnSelfMulticastDelegate__DelegateSignature(PalMapObjectEnergyModule Module) { Invoke(nameof(ReturnSelfMulticastDelegate__DelegateSignature), Module); }
        public void RemoveHUD() { Invoke(nameof(RemoveHUD)); }
        public void OnRep_CurrentState() { Invoke(nameof(OnRep_CurrentState)); }
        public bool IsRequiredEnergy() { return Invoke<bool>(nameof(IsRequiredEnergy)); }
        public EPalEnergyType GetEnergyType() { return Invoke<EPalEnergyType>(nameof(GetEnergyType)); }
        public EPalMapObjectEnergyModuleStatusType GetCurrentState() { return Invoke<EPalMapObjectEnergyModuleStatusType>(nameof(GetCurrentState)); }
        public float GetCurrentConsumeEnergySpeed() { return Invoke<float>(nameof(GetCurrentConsumeEnergySpeed)); }
        public float GetConsumeEnergySpeed() { return Invoke<float>(nameof(GetConsumeEnergySpeed)); }
        public bool CanConsumeEnergy() { return Invoke<bool>(nameof(CanConsumeEnergy)); }
    }
    public class PalMapObjectFarmBlockV2Model : PalMapObjectConcreteModelBase
    {
        public PalMapObjectFarmBlockV2Model(nint addr) : base(addr) { }
        public Object OnUpdateStateDelegate { get { return this[nameof(OnUpdateStateDelegate)]; } set { this[nameof(OnUpdateStateDelegate)] = value; } }
        public ReactivePropertyFloat CropProgressRate { get { return this[nameof(CropProgressRate)].As<ReactivePropertyFloat>(); } set { this["CropProgressRate"] = value; } }
        public ReactivePropertyFloat WaterStackRate { get { return this[nameof(WaterStackRate)].As<ReactivePropertyFloat>(); } set { this["WaterStackRate"] = value; } }
        public PalMapObjectFarmBlockV2ModelStateBehaviourMachine StateBehaviourMachine { get { return this[nameof(StateBehaviourMachine)].As<PalMapObjectFarmBlockV2ModelStateBehaviourMachine>(); } set { this["StateBehaviourMachine"] = value; } }
        public Object CurrentCropDataId { get { return this[nameof(CurrentCropDataId)]; } set { this[nameof(CurrentCropDataId)] = value; } }
        public EPalFarmCropState CurrentState { get { return (EPalFarmCropState)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public float CropProgressRateValue { get { return this[nameof(CropProgressRateValue)].GetValue<float>(); } set { this[nameof(CropProgressRateValue)].SetValue<float>(value); } }
        public float WaterStackRateValue { get { return this[nameof(WaterStackRateValue)].GetValue<float>(); } set { this[nameof(WaterStackRateValue)].SetValue<float>(value); } }
        public void UpdateStateDelegate__DelegateSignature(EPalFarmCropState LastState, EPalFarmCropState NextState) { Invoke(nameof(UpdateStateDelegate__DelegateSignature), LastState, NextState); }
        public void OnUpdateWaterStackRate(float UpdatedRate) { Invoke(nameof(OnUpdateWaterStackRate), UpdatedRate); }
        public void OnUpdateCropProgressRate(float ProgressRate) { Invoke(nameof(OnUpdateCropProgressRate), ProgressRate); }
        public void OnRep_WaterStackRateValue() { Invoke(nameof(OnRep_WaterStackRateValue)); }
        public void OnRep_CurrentState() { Invoke(nameof(OnRep_CurrentState)); }
        public void OnRep_CropProgressRateValue() { Invoke(nameof(OnRep_CropProgressRateValue)); }
        public void NotifySimpleDelegate__DelegateSignature() { Invoke(nameof(NotifySimpleDelegate__DelegateSignature)); }
        public EPalFarmCropState GetCurrentState() { return Invoke<EPalFarmCropState>(nameof(GetCurrentState)); }
        public Object GetCurrentCropDataId() { return Invoke<Object>(nameof(GetCurrentCropDataId)); }
    }
    public class PalStateMachine : Object
    {
        public PalStateMachine(nint addr) : base(addr) { }
        public Object StateMap { get { return this[nameof(StateMap)]; } set { this[nameof(StateMap)] = value; } }
        public PalStateMachineStateBase CurrentState { get { return this[nameof(CurrentState)].As<PalStateMachineStateBase>(); } set { this["CurrentState"] = value; } }
        public void Tick(float DeltaTime) { Invoke(nameof(Tick), DeltaTime); }
        public void Start(Object StartClass) { Invoke(nameof(Start), StartClass); }
        public PalStateMachineStateBase GetCurrentState() { return Invoke<PalStateMachineStateBase>(nameof(GetCurrentState)); }
        public void Dispose() { Invoke(nameof(Dispose)); }
        public void ChangeState(Object ToStateClass) { Invoke(nameof(ChangeState), ToStateClass); }
        public void AddState(PalStateMachineStateBase State) { Invoke(nameof(AddState), State); }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourMachine : PalStateMachine
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourMachine(nint addr) : base(addr) { }
        public PalMapObjectFarmBlockV2ModelStateBehaviourBase CurrentStateBehaviourCache { get { return this[nameof(CurrentStateBehaviourCache)].As<PalMapObjectFarmBlockV2ModelStateBehaviourBase>(); } set { this["CurrentStateBehaviourCache"] = value; } }
    }
    public class PalStateMachineStateBase : Object
    {
        public PalStateMachineStateBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourBase : PalStateMachineStateBase
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourSeeding : PalMapObjectFarmBlockV2ModelStateBehaviourBase
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourSeeding(nint addr) : base(addr) { }
        public void UpdateProgressRateDelegate__DelegateSignature(float ProgressRate) { Invoke(nameof(UpdateProgressRateDelegate__DelegateSignature), ProgressRate); }
        public void OnProgressWork(PalWorkProgress WorkProgress) { Invoke(nameof(OnProgressWork), WorkProgress); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourWatering : PalMapObjectFarmBlockV2ModelStateBehaviourBase
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourWatering(nint addr) : base(addr) { }
        public void UpdateWaterStackRateDelegate__DelegateSignature(float WaterStackRate) { Invoke(nameof(UpdateWaterStackRateDelegate__DelegateSignature), WaterStackRate); }
        public void OnProgressWorkInServer(PalWorkProgress WorkProgress) { Invoke(nameof(OnProgressWorkInServer), WorkProgress); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourGrowup : PalMapObjectFarmBlockV2ModelStateBehaviourBase
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourGrowup(nint addr) : base(addr) { }
    }
    public class PalMapObjectFarmBlockV2ModelStateBehaviourHarvestable : PalMapObjectFarmBlockV2ModelStateBehaviourBase
    {
        public PalMapObjectFarmBlockV2ModelStateBehaviourHarvestable(nint addr) : base(addr) { }
        public void UpdateHarvestProgressRateDelegate__DelegateSignature(float ProgressRate) { Invoke(nameof(UpdateHarvestProgressRateDelegate__DelegateSignature), ProgressRate); }
        public void OnWorkStarted(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnWorkStarted), Work, IndividualId); }
        public void OnProgressWork(PalWorkProgress WorkProgress) { Invoke(nameof(OnProgressWork), WorkProgress); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
    }
    public class PalMapObjectFarmCrop : Actor
    {
        public PalMapObjectFarmCrop(nint addr) : base(addr) { }
        public Array<PalFarmCropGrowupProcessSet> GrowupProcessSets { get { return new Array<PalFarmCropGrowupProcessSet>(this[nameof(GrowupProcessSets)].Address); } }
    }
    public class PalMapObjectFarmCropDataUtility : BlueprintFunctionLibrary
    {
        public PalMapObjectFarmCropDataUtility(nint addr) : base(addr) { }
        public void MaterialInfos(PalMapObjectFarmCropData Data, Array<PalStaticItemIdAndNum> MaterialInfos) { Invoke(nameof(MaterialInfos), Data, MaterialInfos); }
        public bool IsValid(PalMapObjectFarmCropData Data) { return Invoke<bool>(nameof(IsValid), Data); }
    }
    public class PalMapObjectFastTravelPointModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectFastTravelPointModel(nint addr) : base(addr) { }
        public Guid LocationInstanceId { get { return this[nameof(LocationInstanceId)].As<Guid>(); } set { this["LocationInstanceId"] = value; } }
    }
    public class PalMapObjectFoliage : Object
    {
        public PalMapObjectFoliage(nint addr) : base(addr) { }
        public PalFoliagePresetDataSet PresetDataSet { get { return this[nameof(PresetDataSet)].As<PalFoliagePresetDataSet>(); } set { this["PresetDataSet"] = value; } }
        public Object UsedPalFoliageTypeMap { get { return this[nameof(UsedPalFoliageTypeMap)]; } set { this[nameof(UsedPalFoliageTypeMap)] = value; } }
        public Object LoadedPresetTypeSet { get { return this[nameof(LoadedPresetTypeSet)]; } set { this[nameof(LoadedPresetTypeSet)] = value; } }
        public int GridSize { get { return this[nameof(GridSize)].GetValue<int>(); } set { this[nameof(GridSize)].SetValue<int>(value); } }
        public Object GridModelMap { get { return this[nameof(GridModelMap)]; } set { this[nameof(GridModelMap)] = value; } }
    }
    public class PalMapObjectFoliageModel : Object
    {
        public PalMapObjectFoliageModel(nint addr) : base(addr) { }
        public Object OnRespawn { get { return this[nameof(OnRespawn)]; } set { this[nameof(OnRespawn)] = value; } }
        public Object OnDamage { get { return this[nameof(OnDamage)]; } set { this[nameof(OnDamage)] = value; } }
        public Object OnDestroy { get { return this[nameof(OnDestroy)]; } set { this[nameof(OnDestroy)] = value; } }
        public Object OnUpdatedRequiredTickInServer { get { return this[nameof(OnUpdatedRequiredTickInServer)]; } set { this[nameof(OnUpdatedRequiredTickInServer)] = value; } }
        public Object OnDisposeModelDelegate { get { return this[nameof(OnDisposeModelDelegate)]; } set { this[nameof(OnDisposeModelDelegate)] = value; } }
        public Object ModelId { get { return this[nameof(ModelId)]; } set { this[nameof(ModelId)] = value; } }
        public Object InstanceMap { get { return this[nameof(InstanceMap)]; } set { this[nameof(InstanceMap)] = value; } }
        public PalCellCoord CellCoord { get { return this[nameof(CellCoord)].As<PalCellCoord>(); } set { this["CellCoord"] = value; } }
        public EPalFoliagePresetType FoliagePresetType { get { return (EPalFoliagePresetType)this[nameof(FoliagePresetType)].GetValue<int>(); } set { this[nameof(FoliagePresetType)].SetValue<int>((int)value); } }
        public void ReturnSelfDelegate__DelegateSignature(PalMapObjectFoliageModel Self) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), Self); }
        public void RespawnInstance(PalFoliageInstance Instance) { Invoke(nameof(RespawnInstance), Instance); }
        public void OnDestroyInstance(PalFoliageInstance Instance) { Invoke(nameof(OnDestroyInstance), Instance); }
        public void InstanceDelegate__DelegateSignature(PalFoliageInstance Instance) { Invoke(nameof(InstanceDelegate__DelegateSignature), Instance); }
        public void InstanceDamageDelegate__DelegateSignature(PalFoliageInstance Instance, int DamageValue) { Invoke(nameof(InstanceDamageDelegate__DelegateSignature), Instance, DamageValue); }
    }
    public class PalMapObjectFoodBoxParameterComponent : ActorComponent
    {
        public PalMapObjectFoodBoxParameterComponent(nint addr) : base(addr) { }
        public float CorruptionMultiplier { get { return this[nameof(CorruptionMultiplier)].GetValue<float>(); } set { this[nameof(CorruptionMultiplier)].SetValue<float>(value); } }
    }
    public class PalMapObjectGateModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectGateModel(nint addr) : base(addr) { }
        public GameDateTime UnlockDateTime { get { return this[nameof(UnlockDateTime)].As<GameDateTime>(); } set { this["UnlockDateTime"] = value; } }
        public Object WeakInteractingCharacterParameters { get { return this[nameof(WeakInteractingCharacterParameters)]; } set { this[nameof(WeakInteractingCharacterParameters)] = value; } }
        public void RequestTrigger_ServerInternal(int RequestPlayerId, int ToStateInt) { Invoke(nameof(RequestTrigger_ServerInternal), RequestPlayerId, ToStateInt); }
        public void OnInteractEnd(Actor Other, Object Component) { Invoke(nameof(OnInteractEnd), Other, Component); }
        public void OnInteractBegin(Actor Other, Object Component) { Invoke(nameof(OnInteractBegin), Other, Component); }
    }
    public class PalMapObjectGenerateEnergyModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectGenerateEnergyModel(nint addr) : base(addr) { }
        public Object OnUpdateStoredEnergyAmountDelegate { get { return this[nameof(OnUpdateStoredEnergyAmountDelegate)]; } set { this[nameof(OnUpdateStoredEnergyAmountDelegate)] = value; } }
        public EPalEnergyType EnergyType { get { return (EPalEnergyType)this[nameof(EnergyType)].GetValue<int>(); } set { this[nameof(EnergyType)].SetValue<int>((int)value); } }
        public float GenerateEnergyRateByWorker { get { return this[nameof(GenerateEnergyRateByWorker)].GetValue<float>(); } set { this[nameof(GenerateEnergyRateByWorker)].SetValue<float>(value); } }
        public float MaxEnergyStorage { get { return this[nameof(MaxEnergyStorage)].GetValue<float>(); } set { this[nameof(MaxEnergyStorage)].SetValue<float>(value); } }
        public float StoredEnergyAmount { get { return this[nameof(StoredEnergyAmount)].GetValue<float>(); } set { this[nameof(StoredEnergyAmount)].SetValue<float>(value); } }
        public float ConsumeEnergySpeed { get { return this[nameof(ConsumeEnergySpeed)].GetValue<float>(); } set { this[nameof(ConsumeEnergySpeed)].SetValue<float>(value); } }
        public void UpdateEnergyAmountDelegate__DelegateSignature(PalMapObjectGenerateEnergyModel Model) { Invoke(nameof(UpdateEnergyAmountDelegate__DelegateSignature), Model); }
        public void OnUpdateAssignedCharacter_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUpdateAssignedCharacter_ServerInternal), Work); }
        public void OnRep_StoredEnergyAmount() { Invoke(nameof(OnRep_StoredEnergyAmount)); }
        public float GetStoredEnergyAmount() { return Invoke<float>(nameof(GetStoredEnergyAmount)); }
        public float GetMaxEnergyStorage() { return Invoke<float>(nameof(GetMaxEnergyStorage)); }
        public EPalEnergyType GetEnergyType() { return Invoke<EPalEnergyType>(nameof(GetEnergyType)); }
    }
    public class PalMapObjectGenerateEnergyParameterComponent : ActorComponent
    {
        public PalMapObjectGenerateEnergyParameterComponent(nint addr) : base(addr) { }
        public EPalEnergyType GenerateEnergyType { get { return (EPalEnergyType)this[nameof(GenerateEnergyType)].GetValue<int>(); } set { this[nameof(GenerateEnergyType)].SetValue<int>((int)value); } }
        public float GenerateEnergyRateByWorker { get { return this[nameof(GenerateEnergyRateByWorker)].GetValue<float>(); } set { this[nameof(GenerateEnergyRateByWorker)].SetValue<float>(value); } }
        public float MaxEnergyStorage { get { return this[nameof(MaxEnergyStorage)].GetValue<float>(); } set { this[nameof(MaxEnergyStorage)].SetValue<float>(value); } }
    }
    public class PalMapObjectHatchingEggModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectHatchingEggModel(nint addr) : base(addr) { }
        public Object OnUpdateHatchedCharacterDelegate { get { return this[nameof(OnUpdateHatchedCharacterDelegate)]; } set { this[nameof(OnUpdateHatchedCharacterDelegate)] = value; } }
        public Object OnUpdateHatchTemperaturDelegate { get { return this[nameof(OnUpdateHatchTemperaturDelegate)]; } set { this[nameof(OnUpdateHatchTemperaturDelegate)] = value; } }
        public PalIndividualCharacterSaveParameter HatchedCharacterSaveParameter { get { return this[nameof(HatchedCharacterSaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["HatchedCharacterSaveParameter"] = value; } }
        public bool bWorkable { get { return this[nameof(bWorkable)].Flag; } set { this[nameof(bWorkable)].Flag = value; } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public int CurrentPalEggTemperatureDiff { get { return this[nameof(CurrentPalEggTemperatureDiff)].GetValue<int>(); } set { this[nameof(CurrentPalEggTemperatureDiff)].SetValue<int>(value); } }
        public void UpdateWorkAmountBySec(float NewWorkAmountBySec) { Invoke(nameof(UpdateWorkAmountBySec), NewWorkAmountBySec); }
        public void UpdateHatchTemperatureDelegate__DelegateSignature(int Temperature) { Invoke(nameof(UpdateHatchTemperatureDelegate__DelegateSignature), Temperature); }
        public void UpdateHatchedCharacterDelegate__DelegateSignature(PalMapObjectHatchingEggModel Model) { Invoke(nameof(UpdateHatchedCharacterDelegate__DelegateSignature), Model); }
        public void SetTemperatureDiff(int TemperatureDiff) { Invoke(nameof(SetTemperatureDiff), TemperatureDiff); }
        public void OnUpdateContainerContentInServer(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContentInServer), Container); }
        public void OnRep_HatchTemperatureDiff() { Invoke(nameof(OnRep_HatchTemperatureDiff)); }
        public void OnRep_HatchedCharacterSaveParameter() { Invoke(nameof(OnRep_HatchedCharacterSaveParameter)); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
        public void ObtainHatchedCharacter_ServerInternal(int RequestPlayerId) { Invoke(nameof(ObtainHatchedCharacter_ServerInternal), RequestPlayerId); }
        public int GetTemperatureDiff() { return Invoke<int>(nameof(GetTemperatureDiff)); }
        public bool GetPalEggRankInfo(PalEggRankInfo OutPalEggRankInfo) { return Invoke<bool>(nameof(GetPalEggRankInfo), OutPalEggRankInfo); }
    }
    public class PalHUDDispatchParameter_HatchingEgg : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_HatchingEgg(nint addr) : base(addr) { }
        public PalMapObjectHatchingEggModel HatchingEggModel { get { return this[nameof(HatchingEggModel)].As<PalMapObjectHatchingEggModel>(); } set { this["HatchingEggModel"] = value; } }
    }
    public class PalMapObjectHatchingEggParameterComponent : ActorComponent
    {
        public PalMapObjectHatchingEggParameterComponent(nint addr) : base(addr) { }
        public float AutoWorkAmountBySec { get { return this[nameof(AutoWorkAmountBySec)].GetValue<float>(); } set { this[nameof(AutoWorkAmountBySec)].SetValue<float>(value); } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public float GetDefaultAutoWorkAmountBySec() { return Invoke<float>(nameof(GetDefaultAutoWorkAmountBySec)); }
    }
    public class PalMapObjectHeatSourceModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectHeatSourceModel(nint addr) : base(addr) { }
        public void OnUpdateEnergyModuleState_ServerInternal(PalMapObjectEnergyModule EnergyModule) { Invoke(nameof(OnUpdateEnergyModuleState_ServerInternal), EnergyModule); }
        public void OnUpdateAssignedCharacter_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUpdateAssignedCharacter_ServerInternal), Work); }
    }
    public class PalMapObjectItemChestModel : PalMapObjectItemStorageModel
    {
        public PalMapObjectItemChestModel(nint addr) : base(addr) { }
        public void OnUpdateLocalPlayerPasswordLockInfo(PalMapObjectPasswordLockPlayerInfo OldLocalPlayerInfo, PalMapObjectPasswordLockPlayerInfo NewLocalPlayerInfo) { Invoke(nameof(OnUpdateLocalPlayerPasswordLockInfo), OldLocalPlayerInfo, NewLocalPlayerInfo); }
    }
    public class PalMapObjectItemChestParameterComponent : ActorComponent
    {
        public PalMapObjectItemChestParameterComponent(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public Array<EPalItemTypeA> TargetTypesA { get { return new Array<EPalItemTypeA>(this[nameof(TargetTypesA)].Address); } }
        public Array<EPalItemTypeB> TargetTypesB { get { return new Array<EPalItemTypeB>(this[nameof(TargetTypesB)].Address); } }
        public EPalContainerOperationRestrictType OperationRestrictType { get { return (EPalContainerOperationRestrictType)this[nameof(OperationRestrictType)].GetValue<int>(); } set { this[nameof(OperationRestrictType)].SetValue<int>((int)value); } }
        public bool bAutoDestroyIfEmpty { get { return this[nameof(bAutoDestroyIfEmpty)].Flag; } set { this[nameof(bAutoDestroyIfEmpty)].Flag = value; } }
        public float CorruptionMultiplier { get { return this[nameof(CorruptionMultiplier)].GetValue<float>(); } set { this[nameof(CorruptionMultiplier)].SetValue<float>(value); } }
    }
    public class PalMapObjectItemChest_AffectCorruption : PalMapObjectItemChestModel
    {
        public PalMapObjectItemChest_AffectCorruption(nint addr) : base(addr) { }
    }
    public class PalMapObjectItemContainerModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectItemContainerModule(nint addr) : base(addr) { }
        public PalItemContainer TargetContainer { get { return this[nameof(TargetContainer)].As<PalItemContainer>(); } set { this["TargetContainer"] = value; } }
        public bool bDropItemAtDisposed { get { return this[nameof(bDropItemAtDisposed)].Flag; } set { this[nameof(bDropItemAtDisposed)].Flag = value; } }
        public Array<PalMapObjectItemContainerModuleSlotIndexes> SlotAttributeIndexes { get { return new Array<PalMapObjectItemContainerModuleSlotIndexes>(this[nameof(SlotAttributeIndexes)].Address); } }
        public Array<EPalMapObjectItemContainerSlotAttribute> AllSlotAttribute { get { return new Array<EPalMapObjectItemContainerSlotAttribute>(this[nameof(AllSlotAttribute)].Address); } }
        public EPalContainerUsageType UsageType { get { return (EPalContainerUsageType)this[nameof(UsageType)].GetValue<int>(); } set { this[nameof(UsageType)].SetValue<int>((int)value); } }
        public void UpdateContentsMulticastDelegate__DelegateSignature(PalMapObjectItemContainerModule Module) { Invoke(nameof(UpdateContentsMulticastDelegate__DelegateSignature), Module); }
        public void UpdateContentsDelegate__DelegateSignature(PalMapObjectItemContainerModule Module) { Invoke(nameof(UpdateContentsDelegate__DelegateSignature), Module); }
        public void UnbindUpdateContents(Object Delegate) { Invoke(nameof(UnbindUpdateContents), Delegate); }
        public bool TryGetContainer(PalItemContainer OutContainer) { return Invoke<bool>(nameof(TryGetContainer), OutContainer); }
        public void RequestSortContainer_ServerInternal() { Invoke(nameof(RequestSortContainer_ServerInternal)); }
        public void RequestSortContainer() { Invoke(nameof(RequestSortContainer)); }
        public void OnUpdateContents(PalItemContainer Container) { Invoke(nameof(OnUpdateContents), Container); }
        public void OnRep_TargetContainer() { Invoke(nameof(OnRep_TargetContainer)); }
        public PalContainerId GetContainerId() { return Invoke<PalContainerId>(nameof(GetContainerId)); }
        public PalItemContainer GetContainer() { return Invoke<PalItemContainer>(nameof(GetContainer)); }
        public void BindUpdateContents(Object Delegate) { Invoke(nameof(BindUpdateContents), Delegate); }
    }
    public class PalMapObjectItemConverterParameterComponent : ActorComponent
    {
        public PalMapObjectItemConverterParameterComponent(nint addr) : base(addr) { }
        public Array<EPalItemTypeA> TargetTypesA { get { return new Array<EPalItemTypeA>(this[nameof(TargetTypesA)].Address); } }
        public Array<EPalItemTypeB> TargetTypesB { get { return new Array<EPalItemTypeB>(this[nameof(TargetTypesB)].Address); } }
        public int TargetRankMax { get { return this[nameof(TargetRankMax)].GetValue<int>(); } set { this[nameof(TargetRankMax)].SetValue<int>(value); } }
        public float AutoWorkAmountBySec { get { return this[nameof(AutoWorkAmountBySec)].GetValue<float>(); } set { this[nameof(AutoWorkAmountBySec)].SetValue<float>(value); } }
        public float WorkSpeedAdditionalRate { get { return this[nameof(WorkSpeedAdditionalRate)].GetValue<float>(); } set { this[nameof(WorkSpeedAdditionalRate)].SetValue<float>(value); } }
    }
    public class PalMapObjectItemDropOnDamagModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectItemDropOnDamagModel(nint addr) : base(addr) { }
        public Array<PalItemAndNum> DropItemInfos { get { return new Array<PalItemAndNum>(this[nameof(DropItemInfos)].Address); } }
        public void OnDamage_ServerInternal(PalMapObjectModel Model, PalDamageInfo DamageInfo, int LastHp) { Invoke(nameof(OnDamage_ServerInternal), Model, DamageInfo, LastHp); }
    }
    public class PalMapObjectItemSimpleProductParameterComponent : ActorComponent
    {
        public PalMapObjectItemSimpleProductParameterComponent(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemProductData ItemProductId { get { return this[nameof(ItemProductId)].As<PalDataTableRowName_ItemProductData>(); } set { this["ItemProductId"] = value; } }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public float WorkSpeedAdditionalRate { get { return this[nameof(WorkSpeedAdditionalRate)].GetValue<float>(); } set { this[nameof(WorkSpeedAdditionalRate)].SetValue<float>(value); } }
        public bool bIsGainExp { get { return this[nameof(bIsGainExp)].Flag; } set { this[nameof(bIsGainExp)].Flag = value; } }
    }
    public class PalMapObjectLampModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectLampModel(nint addr) : base(addr) { }
        public void OnUpdateEnergyModuleState(PalMapObjectEnergyModule EnergyModule) { Invoke(nameof(OnUpdateEnergyModuleState), EnergyModule); }
    }
    public class PalMapObjectLauncherControlInterface : Interface
    {
        public PalMapObjectLauncherControlInterface(nint addr) : base(addr) { }
        public void TurnToTarget(Actor TargetActor, float DeltaTime) { Invoke(nameof(TurnToTarget), TargetActor, DeltaTime); }
        public void SetOwnerCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(SetOwnerCharacter), OwnerCharacter); }
        public void SetEnableTrigger(bool EnableTrigger) { Invoke(nameof(SetEnableTrigger), EnableTrigger); }
        public Rotator GetCharacterRotation() { return Invoke<Rotator>(nameof(GetCharacterRotation)); }
        public Vector GetCharacterLocation() { return Invoke<Vector>(nameof(GetCharacterLocation)); }
    }
    public class PalMapObjectLocationComponent : ActorComponent
    {
        public PalMapObjectLocationComponent(nint addr) : base(addr) { }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
        public void SetLocationId() { Invoke(nameof(SetLocationId)); }
    }
    public class PalMapObjectSpawnRequestHandler : Object
    {
        public PalMapObjectSpawnRequestHandler(nint addr) : base(addr) { }
        public PalMapObjectModelInitializeExtraParameters ExtraParameters { get { return this[nameof(ExtraParameters)].As<PalMapObjectModelInitializeExtraParameters>(); } set { this["ExtraParameters"] = value; } }
    }
    public class PalMapObjectManager : PalWorldSubsystem
    {
        public PalMapObjectManager(nint addr) : base(addr) { }
        public Object OnCreateMapObjectModelInServerDelegate { get { return this[nameof(OnCreateMapObjectModelInServerDelegate)]; } set { this[nameof(OnCreateMapObjectModelInServerDelegate)] = value; } }
        public Object OnRepMapObjectModelDelegate { get { return this[nameof(OnRepMapObjectModelDelegate)]; } set { this[nameof(OnRepMapObjectModelDelegate)] = value; } }
        public Object OnSpawnedMapObjectModelByInServerDelegate { get { return this[nameof(OnSpawnedMapObjectModelByInServerDelegate)]; } set { this[nameof(OnSpawnedMapObjectModelByInServerDelegate)] = value; } }
        public Array<Object> BuildSpawnValidationCheckers { get { return new Array<Object>(this[nameof(BuildSpawnValidationCheckers)].Address); } }
        public DataTable BuildObjectDataTable { get { return this[nameof(BuildObjectDataTable)].As<DataTable>(); } set { this["BuildObjectDataTable"] = value; } }
        public DataTable BuildObjectNameTable { get { return this[nameof(BuildObjectNameTable)].As<DataTable>(); } set { this["BuildObjectNameTable"] = value; } }
        public DataTable BuildObjectDescTable { get { return this[nameof(BuildObjectDescTable)].As<DataTable>(); } set { this["BuildObjectDescTable"] = value; } }
        public DataTable MapObjectAssignTable { get { return this[nameof(MapObjectAssignTable)].As<DataTable>(); } set { this["MapObjectAssignTable"] = value; } }
        public BuildingSurfaceMaterialSet BuildingSurfaceMaterialSet { get { return this[nameof(BuildingSurfaceMaterialSet)].As<BuildingSurfaceMaterialSet>(); } set { this["BuildingSurfaceMaterialSet"] = value; } }
        public PalFoliagePresetDataSet FoliagePresetDataSet { get { return this[nameof(FoliagePresetDataSet)].As<PalFoliagePresetDataSet>(); } set { this["FoliagePresetDataSet"] = value; } }
        public Object FoliageModelChunkClass { get { return this[nameof(FoliageModelChunkClass)]; } set { this[nameof(FoliageModelChunkClass)] = value; } }
        public int FoliageGridSize { get { return this[nameof(FoliageGridSize)].GetValue<int>(); } set { this[nameof(FoliageGridSize)].SetValue<int>(value); } }
        public PalMapObjectFoliage Foliage { get { return this[nameof(Foliage)].As<PalMapObjectFoliage>(); } set { this["Foliage"] = value; } }
        public PalBuildOperator BuildOperator { get { return this[nameof(BuildOperator)].As<PalBuildOperator>(); } set { this["BuildOperator"] = value; } }
        public PalMapObjectWorldDisposer WorldDisposerForServer { get { return this[nameof(WorldDisposerForServer)].As<PalMapObjectWorldDisposer>(); } set { this["WorldDisposerForServer"] = value; } }
        public Object MapObjectModelMapForServer { get { return this[nameof(MapObjectModelMapForServer)]; } set { this[nameof(MapObjectModelMapForServer)] = value; } }
        public Object MapObjectConcreteModelMapForServer { get { return this[nameof(MapObjectConcreteModelMapForServer)]; } set { this[nameof(MapObjectConcreteModelMapForServer)] = value; } }
        public Object MapObjectModelStaticDataCacheMap { get { return this[nameof(MapObjectModelStaticDataCacheMap)]; } set { this[nameof(MapObjectModelStaticDataCacheMap)] = value; } }
        public PalMapObjectStaticData StaticData { get { return this[nameof(StaticData)].As<PalMapObjectStaticData>(); } set { this["StaticData"] = value; } }
        public Object DropItemMapObjectId { get { return this[nameof(DropItemMapObjectId)]; } set { this[nameof(DropItemMapObjectId)] = value; } }
        public Object BuildObjectId_PalStorage { get { return this[nameof(BuildObjectId_PalStorage)]; } set { this[nameof(BuildObjectId_PalStorage)] = value; } }
        public Array<byte> SearchObjectTypes { get { return new Array<byte>(this[nameof(SearchObjectTypes)].Address); } }
        public Object DestroyEffectMap { get { return this[nameof(DestroyEffectMap)]; } set { this[nameof(DestroyEffectMap)] = value; } }
        public Object MapObjectDestroyFXUserParamName_BoxSize { get { return this[nameof(MapObjectDestroyFXUserParamName_BoxSize)]; } set { this[nameof(MapObjectDestroyFXUserParamName_BoxSize)] = value; } }
        public Object MapObjectDestroyFXUserParamName_BoxSurfaceArea { get { return this[nameof(MapObjectDestroyFXUserParamName_BoxSurfaceArea)]; } set { this[nameof(MapObjectDestroyFXUserParamName_BoxSurfaceArea)] = value; } }
        public NiagaraSystem BuildStartEffect { get { return this[nameof(BuildStartEffect)].As<NiagaraSystem>(); } set { this["BuildStartEffect"] = value; } }
        public NiagaraSystem BuildCompleteEffect { get { return this[nameof(BuildCompleteEffect)].As<NiagaraSystem>(); } set { this["BuildCompleteEffect"] = value; } }
        public Object BuildFXUserParamName_BoxCenter { get { return this[nameof(BuildFXUserParamName_BoxCenter)]; } set { this[nameof(BuildFXUserParamName_BoxCenter)] = value; } }
        public Object BuildFXUserParamName_BoxSize { get { return this[nameof(BuildFXUserParamName_BoxSize)]; } set { this[nameof(BuildFXUserParamName_BoxSize)] = value; } }
        public Object BuildFXUserParamName_BoxSurfaceArea { get { return this[nameof(BuildFXUserParamName_BoxSurfaceArea)]; } set { this[nameof(BuildFXUserParamName_BoxSurfaceArea)] = value; } }
        public AkAudioEvent BuildCompleteSE { get { return this[nameof(BuildCompleteSE)].As<AkAudioEvent>(); } set { this["BuildCompleteSE"] = value; } }
        public NiagaraSystem RepairEffect { get { return this[nameof(RepairEffect)].As<NiagaraSystem>(); } set { this["RepairEffect"] = value; } }
        public NiagaraSystem DamageEffect { get { return this[nameof(DamageEffect)].As<NiagaraSystem>(); } set { this["DamageEffect"] = value; } }
        public Object DamageFXUserParamName_Alpha { get { return this[nameof(DamageFXUserParamName_Alpha)]; } set { this[nameof(DamageFXUserParamName_Alpha)] = value; } }
        public Object DamageFXUserParamName_Rate { get { return this[nameof(DamageFXUserParamName_Rate)]; } set { this[nameof(DamageFXUserParamName_Rate)] = value; } }
        public Object DamageFXUserParamName_Scale { get { return this[nameof(DamageFXUserParamName_Scale)]; } set { this[nameof(DamageFXUserParamName_Scale)] = value; } }
        public Object DamageFXUserParamName_RadiusScale { get { return this[nameof(DamageFXUserParamName_RadiusScale)]; } set { this[nameof(DamageFXUserParamName_RadiusScale)] = value; } }
        public Object DamageFXUserParamName_AddRate { get { return this[nameof(DamageFXUserParamName_AddRate)]; } set { this[nameof(DamageFXUserParamName_AddRate)] = value; } }
        public Object DamageFXUserParamName_EndAlpha { get { return this[nameof(DamageFXUserParamName_EndAlpha)]; } set { this[nameof(DamageFXUserParamName_EndAlpha)] = value; } }
        public float DamageParam_MaxRate { get { return this[nameof(DamageParam_MaxRate)].GetValue<float>(); } set { this[nameof(DamageParam_MaxRate)].SetValue<float>(value); } }
        public float DamageParam_MaxAddRate { get { return this[nameof(DamageParam_MaxAddRate)].GetValue<float>(); } set { this[nameof(DamageParam_MaxAddRate)].SetValue<float>(value); } }
        public float DamageParam_MaxScale { get { return this[nameof(DamageParam_MaxScale)].GetValue<float>(); } set { this[nameof(DamageParam_MaxScale)].SetValue<float>(value); } }
        public float DamageParam_MaxRadiusScale { get { return this[nameof(DamageParam_MaxRadiusScale)].GetValue<float>(); } set { this[nameof(DamageParam_MaxRadiusScale)].SetValue<float>(value); } }
        public float DamageParam_RadiusScaleMultiplier { get { return this[nameof(DamageParam_RadiusScaleMultiplier)].GetValue<float>(); } set { this[nameof(DamageParam_RadiusScaleMultiplier)].SetValue<float>(value); } }
        public float DamageFX_StartHPRate { get { return this[nameof(DamageFX_StartHPRate)].GetValue<float>(); } set { this[nameof(DamageFX_StartHPRate)].SetValue<float>(value); } }
        public float DamageFX_DefaultBoundsSphereRadius { get { return this[nameof(DamageFX_DefaultBoundsSphereRadius)].GetValue<float>(); } set { this[nameof(DamageFX_DefaultBoundsSphereRadius)].SetValue<float>(value); } }
        public Vector DamageFX_SpanwLocationOffset { get { return this[nameof(DamageFX_SpanwLocationOffset)].As<Vector>(); } set { this["DamageFX_SpanwLocationOffset"] = value; } }
        public float DamageFX_EndFadeTime { get { return this[nameof(DamageFX_EndFadeTime)].GetValue<float>(); } set { this[nameof(DamageFX_EndFadeTime)].SetValue<float>(value); } }
        public float DropItemSpawnLocationFromActorBounds { get { return this[nameof(DropItemSpawnLocationFromActorBounds)].GetValue<float>(); } set { this[nameof(DropItemSpawnLocationFromActorBounds)].SetValue<float>(value); } }
        public float DropItemSpawnDirectionZ { get { return this[nameof(DropItemSpawnDirectionZ)].GetValue<float>(); } set { this[nameof(DropItemSpawnDirectionZ)].SetValue<float>(value); } }
        public Vector FoliageDropItemSpawnOffset { get { return this[nameof(FoliageDropItemSpawnOffset)].As<Vector>(); } set { this["FoliageDropItemSpawnOffset"] = value; } }
        public Vector DropItemReleaseDirectionRelative { get { return this[nameof(DropItemReleaseDirectionRelative)].As<Vector>(); } set { this["DropItemReleaseDirectionRelative"] = value; } }
        public Vector FoliageDestroyFXExtentsDefault { get { return this[nameof(FoliageDestroyFXExtentsDefault)].As<Vector>(); } set { this["FoliageDestroyFXExtentsDefault"] = value; } }
        public Object HitEffectSlotClass { get { return this[nameof(HitEffectSlotClass)]; } set { this[nameof(HitEffectSlotClass)] = value; } }
        public Object ChangeMeshEffectMap { get { return this[nameof(ChangeMeshEffectMap)]; } set { this[nameof(ChangeMeshEffectMap)] = value; } }
        public PalMapObjectVisualEffectAssets VisualEffectAssets { get { return this[nameof(VisualEffectAssets)].As<PalMapObjectVisualEffectAssets>(); } set { this["VisualEffectAssets"] = value; } }
        public Object TreasureBoxOpenRequiredItemMap { get { return this[nameof(TreasureBoxOpenRequiredItemMap)]; } set { this[nameof(TreasureBoxOpenRequiredItemMap)] = value; } }
        public Object MapObjectModelHandlingMap { get { return this[nameof(MapObjectModelHandlingMap)]; } set { this[nameof(MapObjectModelHandlingMap)] = value; } }
        public Array<PalMapObject> LevelMapObjectsToRegister { get { return new Array<PalMapObject>(this[nameof(LevelMapObjectsToRegister)].Address); } }
        public PalTestMapObjectRegistrationToManager Registrator { get { return this[nameof(Registrator)].As<PalTestMapObjectRegistrationToManager>(); } set { this["Registrator"] = value; } }
        public Object SpawnRequestHandlerMap { get { return this[nameof(SpawnRequestHandlerMap)]; } set { this[nameof(SpawnRequestHandlerMap)] = value; } }
        public int InDoorCheckProcessIndex_AnyThread { get { return this[nameof(InDoorCheckProcessIndex_AnyThread)].GetValue<int>(); } set { this[nameof(InDoorCheckProcessIndex_AnyThread)].SetValue<int>(value); } }
        public int InDoorCheckMaxNumPerFrame_AnyThread { get { return this[nameof(InDoorCheckMaxNumPerFrame_AnyThread)].GetValue<int>(); } set { this[nameof(InDoorCheckMaxNumPerFrame_AnyThread)].SetValue<int>(value); } }
        public Array<PalMapObjectSpawnerBase> SpawnedSpawners { get { return new Array<PalMapObjectSpawnerBase>(this[nameof(SpawnedSpawners)].Address); } }
        public Array<Object> SkeletalLODComponentArrayExec { get { return new Array<Object>(this[nameof(SkeletalLODComponentArrayExec)].Address); } }
        public Array<Object> SkeletalLODComponentArrayWait { get { return new Array<Object>(this[nameof(SkeletalLODComponentArrayWait)].Address); } }
        public Array<Object> PointLightComponents { get { return new Array<Object>(this[nameof(PointLightComponents)].Address); } }
        public void UpdateSkeletalMeshComponentForLOD(int InExecuteCount) { Invoke(nameof(UpdateSkeletalMeshComponentForLOD), InExecuteCount); }
        public void UpdatePointLightComponentForCulling() { Invoke(nameof(UpdatePointLightComponentForCulling)); }
        public void UnResisterSkeletalMeshComponentForLOD(Object InComponent) { Invoke(nameof(UnResisterSkeletalMeshComponentForLOD), InComponent); }
        public void UnResisterPointLightComponent(Object InComponent) { Invoke(nameof(UnResisterPointLightComponent), InComponent); }
        public void ResisterSkeletalMeshComponentForLOD(Object InComponent) { Invoke(nameof(ResisterSkeletalMeshComponentForLOD), InComponent); }
        public void ResisterPointLightComponent(Object InComponent) { Invoke(nameof(ResisterPointLightComponent), InComponent); }
        public void RequestDismantleObject_OnResponseDialog(bool bResult, PalDialogParameterBase DialogParameter) { Invoke(nameof(RequestDismantleObject_OnResponseDialog), bResult, DialogParameter); }
        public void RecalcPointLightOverlap() { Invoke(nameof(RecalcPointLightOverlap)); }
        public void MapObjectModelWithVectorDelegate__DelegateSignature(PalMapObjectModel MapObjectModel, Vector Vector) { Invoke(nameof(MapObjectModelWithVectorDelegate__DelegateSignature), MapObjectModel, Vector); }
        public void MapObjectModelSpawnedByDelegate__DelegateSignature(PalMapObjectModel MapObjectModel, PalMapObjectModelInitializeExtraParameterSpawnedBy SpawnedBy) { Invoke(nameof(MapObjectModelSpawnedByDelegate__DelegateSignature), MapObjectModel, SpawnedBy); }
        public void MapObjectModelInterfaceDelegate__DelegateSignature(Object MapObjectModel) { Invoke(nameof(MapObjectModelInterfaceDelegate__DelegateSignature), MapObjectModel); }
        public void MapObjectModelDynamicDelegate__DelegateSignature(PalMapObjectModel MapObjectModel) { Invoke(nameof(MapObjectModelDynamicDelegate__DelegateSignature), MapObjectModel); }
        public PalMapObjectFoliage GetFoliage() { return Invoke<PalMapObjectFoliage>(nameof(GetFoliage)); }
        public PalBuildOperator GetBuildOperator() { return Invoke<PalBuildOperator>(nameof(GetBuildOperator)); }
        public PalMapObjectModel FindModel(Guid InstanceId) { return Invoke<PalMapObjectModel>(nameof(FindModel), InstanceId); }
        public PalMapObjectConcreteModelBase FindConcreteModel(Guid InstanceId) { return Invoke<PalMapObjectConcreteModelBase>(nameof(FindConcreteModel), InstanceId); }
    }
    public class PalMapObjectMedicalPalBedModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectMedicalPalBedModel(nint addr) : base(addr) { }
        public Object OnUpdateSleepingCharacterDelegate { get { return this[nameof(OnUpdateSleepingCharacterDelegate)]; } set { this[nameof(OnUpdateSleepingCharacterDelegate)] = value; } }
        public PalIndividualCharacterHandle SleepingCharacterHandle { get { return this[nameof(SleepingCharacterHandle)].As<PalIndividualCharacterHandle>(); } set { this["SleepingCharacterHandle"] = value; } }
        public Vector SleepLocationOffset { get { return this[nameof(SleepLocationOffset)].As<Vector>(); } set { this["SleepLocationOffset"] = value; } }
        public Vector RemovedSleepLocationOffset { get { return this[nameof(RemovedSleepLocationOffset)].As<Vector>(); } set { this["RemovedSleepLocationOffset"] = value; } }
        public float AdditionalHealingRate { get { return this[nameof(AdditionalHealingRate)].GetValue<float>(); } set { this[nameof(AdditionalHealingRate)].SetValue<float>(value); } }
        public float AffectSanityRate { get { return this[nameof(AffectSanityRate)].GetValue<float>(); } set { this[nameof(AffectSanityRate)].SetValue<float>(value); } }
        public void SimpleDelegate__DelegateSignature(PalMapObjectMedicalPalBedModel Model) { Invoke(nameof(SimpleDelegate__DelegateSignature), Model); }
        public void OnInteractBegin(Actor Other, Object Component) { Invoke(nameof(OnInteractBegin), Other, Component); }
        public void OnFinishSleepAction(PalAIActionBase action) { Invoke(nameof(OnFinishSleepAction), action); }
        public PalIndividualCharacterHandle GetSleepingHandle() { return Invoke<PalIndividualCharacterHandle>(nameof(GetSleepingHandle)); }
        public void ClearSleepingCharacterHandle() { Invoke(nameof(ClearSleepingCharacterHandle)); }
    }
    public class PalMapObjectMedicalPalBedParameterComponent : ActorComponent
    {
        public PalMapObjectMedicalPalBedParameterComponent(nint addr) : base(addr) { }
        public float AdditionalHealingRate { get { return this[nameof(AdditionalHealingRate)].GetValue<float>(); } set { this[nameof(AdditionalHealingRate)].SetValue<float>(value); } }
        public float AffectSanityRate { get { return this[nameof(AffectSanityRate)].GetValue<float>(); } set { this[nameof(AffectSanityRate)].SetValue<float>(value); } }
    }
    public class PalMapObjectModel : Object
    {
        public PalMapObjectModel(nint addr) : base(addr) { }
        public Object OnDamageInServerDelegate { get { return this[nameof(OnDamageInServerDelegate)]; } set { this[nameof(OnDamageInServerDelegate)] = value; } }
        public Object OnDamageDelegate { get { return this[nameof(OnDamageDelegate)]; } set { this[nameof(OnDamageDelegate)] = value; } }
        public Object OnUpdateHp { get { return this[nameof(OnUpdateHp)]; } set { this[nameof(OnUpdateHp)] = value; } }
        public Object OnDestroyDelegate { get { return this[nameof(OnDestroyDelegate)]; } set { this[nameof(OnDestroyDelegate)] = value; } }
        public Object OnDisposeDelegateInServer { get { return this[nameof(OnDisposeDelegateInServer)]; } set { this[nameof(OnDisposeDelegateInServer)] = value; } }
        public Object OnUpdatedEnableTickDelegate { get { return this[nameof(OnUpdatedEnableTickDelegate)]; } set { this[nameof(OnUpdatedEnableTickDelegate)] = value; } }
        public Object OnUpdateBaseCampIdBelongToInServerDelegate { get { return this[nameof(OnUpdateBaseCampIdBelongToInServerDelegate)]; } set { this[nameof(OnUpdateBaseCampIdBelongToInServerDelegate)] = value; } }
        public Object OnUpdateGroupIdBelongToInServerDelegate { get { return this[nameof(OnUpdateGroupIdBelongToInServerDelegate)]; } set { this[nameof(OnUpdateGroupIdBelongToInServerDelegate)] = value; } }
        public Object OnRepBuildPlayerUIdDelegate_Client { get { return this[nameof(OnRepBuildPlayerUIdDelegate_Client)]; } set { this[nameof(OnRepBuildPlayerUIdDelegate_Client)] = value; } }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public Object MapObjectMasterDataId { get { return this[nameof(MapObjectMasterDataId)]; } set { this[nameof(MapObjectMasterDataId)] = value; } }
        public PalBoundsTransform WorkableBounds { get { return this[nameof(WorkableBounds)].As<PalBoundsTransform>(); } set { this["WorkableBounds"] = value; } }
        public Box MeshBoxBounds { get { return this[nameof(MeshBoxBounds)].As<Box>(); } set { this["MeshBoxBounds"] = value; } }
        public Guid ConcreteModelInstanceId { get { return this[nameof(ConcreteModelInstanceId)].As<Guid>(); } set { this["ConcreteModelInstanceId"] = value; } }
        public PalMapObjectConcreteModelBase ConcreteModel { get { return this[nameof(ConcreteModel)].As<PalMapObjectConcreteModelBase>(); } set { this["ConcreteModel"] = value; } }
        public Guid BaseCampIdBelongTo { get { return this[nameof(BaseCampIdBelongTo)].As<Guid>(); } set { this["BaseCampIdBelongTo"] = value; } }
        public Guid GroupIdBelongTo { get { return this[nameof(GroupIdBelongTo)].As<Guid>(); } set { this["GroupIdBelongTo"] = value; } }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
        public PalBuildProcess BuildProcess { get { return this[nameof(BuildProcess)].As<PalBuildProcess>(); } set { this["BuildProcess"] = value; } }
        public EPalMapObjectDamagableType DamagableType { get { return (EPalMapObjectDamagableType)this[nameof(DamagableType)].GetValue<int>(); } set { this[nameof(DamagableType)].SetValue<int>((int)value); } }
        public PalMapObjectStatusValue HP { get { return this[nameof(HP)].As<PalMapObjectStatusValue>(); } set { this["HP"] = value; } }
        public Transform InitialTransformCache { get { return this[nameof(InitialTransformCache)].As<Transform>(); } set { this["InitialTransformCache"] = value; } }
        public PalMapObjectModelConnectorBase Connector { get { return this[nameof(Connector)].As<PalMapObjectModelConnectorBase>(); } set { this["Connector"] = value; } }
        public PalMapObjectModelEffect Effect { get { return this[nameof(Effect)].As<PalMapObjectModelEffect>(); } set { this["Effect"] = value; } }
        public Guid RepairWorkId { get { return this[nameof(RepairWorkId)].As<Guid>(); } set { this["RepairWorkId"] = value; } }
        public Guid OwnerSpawnerLevelObjectInstanceId { get { return this[nameof(OwnerSpawnerLevelObjectInstanceId)].As<Guid>(); } set { this["OwnerSpawnerLevelObjectInstanceId"] = value; } }
        public Guid OwnerInstanceId { get { return this[nameof(OwnerInstanceId)].As<Guid>(); } set { this["OwnerInstanceId"] = value; } }
        public Guid BuildPlayerUId { get { return this[nameof(BuildPlayerUId)].As<Guid>(); } set { this["BuildPlayerUId"] = value; } }
        public bool bInDoor { get { return this[nameof(bInDoor)].Flag; } set { this[nameof(bInDoor)].Flag = value; } }
        public EPalMapObjectInteractRestrictType InteractRestrictType { get { return (EPalMapObjectInteractRestrictType)this[nameof(InteractRestrictType)].GetValue<int>(); } set { this[nameof(InteractRestrictType)].SetValue<int>((int)value); } }
        public GameDateTime CreatedAt { get { return this[nameof(CreatedAt)].As<GameDateTime>(); } set { this["CreatedAt"] = value; } }
        public float DeteriorationDamage { get { return this[nameof(DeteriorationDamage)].GetValue<float>(); } set { this[nameof(DeteriorationDamage)].SetValue<float>(value); } }
        public float DeteriorationTotalDamage { get { return this[nameof(DeteriorationTotalDamage)].GetValue<float>(); } set { this[nameof(DeteriorationTotalDamage)].SetValue<float>(value); } }
        public bool bIgnoredSave { get { return this[nameof(bIgnoredSave)].Flag; } set { this[nameof(bIgnoredSave)].Flag = value; } }
        public Guid DungeonInstanceIdBelongTo { get { return this[nameof(DungeonInstanceIdBelongTo)].As<Guid>(); } set { this["DungeonInstanceIdBelongTo"] = value; } }
        public PalStageInstanceId StageInstanceIdBelongTo { get { return this[nameof(StageInstanceIdBelongTo)].As<PalStageInstanceId>(); } set { this["StageInstanceIdBelongTo"] = value; } }
        public FlagContainer TickFlagContainer { get { return this[nameof(TickFlagContainer)].As<FlagContainer>(); } set { this["TickFlagContainer"] = value; } }
        public void RequestRepairByPlayer_ToServer_ServerInternal(Guid RequestPlayerUId) { Invoke(nameof(RequestRepairByPlayer_ToServer_ServerInternal), RequestPlayerUId); }
        public void OnUpdateBuildProcess_ServerInternal(PalBuildProcess TargetBuildProcess) { Invoke(nameof(OnUpdateBuildProcess_ServerInternal), TargetBuildProcess); }
        public void OnUnassignWorkRepairBuildObject(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnUnassignWorkRepairBuildObject), Work, IndividualId); }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void OnTriggeringInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType, float DeltaTime) { Invoke(nameof(OnTriggeringInteract), Other, IndicatorType, DeltaTime); }
        public void OnStartTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnStartTriggerInteract), Other, IndicatorType); }
        public void OnRep_Effect() { Invoke(nameof(OnRep_Effect)); }
        public void OnRep_ConcreteModel() { Invoke(nameof(OnRep_ConcreteModel)); }
        public void OnRep_BuildPlayerUId() { Invoke(nameof(OnRep_BuildPlayerUId)); }
        public void OnEndTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnEndTriggerInteract), Other, IndicatorType); }
        public void OnAssignWorkRepairBuildObject(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnAssignWorkRepairBuildObject), Work, IndividualId); }
        public bool IsDamaged() { return Invoke<bool>(nameof(IsDamaged)); }
        public PalMapObjectStatusValue GetHP() { return Invoke<PalMapObjectStatusValue>(nameof(GetHP)); }
    }
    public class PalMapObjectModelEffectBase : Object
    {
        public PalMapObjectModelEffectBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelEffectGrantParameterBase : Object
    {
        public PalMapObjectModelEffectGrantParameterBase(nint addr) : base(addr) { }
        public PalMapObjectModel OwnerModel { get { return this[nameof(OwnerModel)].As<PalMapObjectModel>(); } set { this["OwnerModel"] = value; } }
    }
    public class PalMapObjectModelEffect : Object
    {
        public PalMapObjectModelEffect(nint addr) : base(addr) { }
        public PalFastMapObjectModelEffectRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<PalFastMapObjectModelEffectRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
    }
    public class PalMapObjectModelEffect_AccumulateTrigger : PalMapObjectModelEffectBase
    {
        public PalMapObjectModelEffect_AccumulateTrigger(nint addr) : base(addr) { }
        public float AccumulateValue { get { return this[nameof(AccumulateValue)].GetValue<float>(); } set { this[nameof(AccumulateValue)].SetValue<float>(value); } }
    }
    public class PalMapObjectModelEffectGrantParameter_AccumulateTrigger : PalMapObjectModelEffectGrantParameterBase
    {
        public PalMapObjectModelEffectGrantParameter_AccumulateTrigger(nint addr) : base(addr) { }
        public float Value { get { return this[nameof(Value)].GetValue<float>(); } set { this[nameof(Value)].SetValue<float>(value); } }
    }
    public class PalMapObjectModelEffect_Burn : PalMapObjectModelEffect_AccumulateTrigger
    {
        public PalMapObjectModelEffect_Burn(nint addr) : base(addr) { }
        public bool bBurning { get { return this[nameof(bBurning)].Flag; } set { this[nameof(bBurning)].Flag = value; } }
        public float PersistenceValue { get { return this[nameof(PersistenceValue)].GetValue<float>(); } set { this[nameof(PersistenceValue)].SetValue<float>(value); } }
        public PalHitCollisionBox HitCollisionBox { get { return this[nameof(HitCollisionBox)].As<PalHitCollisionBox>(); } set { this["HitCollisionBox"] = value; } }
        public void OnRep_Burning(bool bLastValue) { Invoke(nameof(OnRep_Burning), bLastValue); }
        public void OnHitCollisionBox(PrimitiveComponent MyHitComponent, Actor OtherHitActor, PrimitiveComponent OtherHitComponent, Array<int> FoliageIndex, Vector HitLocation, int HitCount) { Invoke(nameof(OnHitCollisionBox), MyHitComponent, OtherHitActor, OtherHitComponent, FoliageIndex, HitLocation, HitCount); }
    }
    public class PalMapObjectModelEffectGrantParameter_Burn : PalMapObjectModelEffectGrantParameter_AccumulateTrigger
    {
        public PalMapObjectModelEffectGrantParameter_Burn(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelInitializeExtraParameterBase : Object
    {
        public PalMapObjectModelInitializeExtraParameterBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelInitializeExtraParameterBuild : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterBuild(nint addr) : base(addr) { }
        public float BuildWorkAmount { get { return this[nameof(BuildWorkAmount)].GetValue<float>(); } set { this[nameof(BuildWorkAmount)].SetValue<float>(value); } }
    }
    public class PalMapObjectModelInitializeExtraParameterSpawnedBy : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterSpawnedBy(nint addr) : base(addr) { }
        public Guid ByMapObjectModelInstanceId { get { return this[nameof(ByMapObjectModelInstanceId)].As<Guid>(); } set { this["ByMapObjectModelInstanceId"] = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterSpawner : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterSpawner(nint addr) : base(addr) { }
        public Guid OwnerSpawnerLevelObjectInstanceId { get { return this[nameof(OwnerSpawnerLevelObjectInstanceId)].As<Guid>(); } set { this["OwnerSpawnerLevelObjectInstanceId"] = value; } }
        public PalStageInstanceId OwnerSpawnerStageInstanceId { get { return this[nameof(OwnerSpawnerStageInstanceId)].As<PalStageInstanceId>(); } set { this["OwnerSpawnerStageInstanceId"] = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterItem : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterItem(nint addr) : base(addr) { }
        public Array<PalItemAndNum> ItemInfos { get { return new Array<PalItemAndNum>(this[nameof(ItemInfos)].Address); } }
    }
    public class PalMapObjectModelInitializeExtraParameterTreasureBox : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterTreasureBox(nint addr) : base(addr) { }
        public EPalMapObjectTreasureGradeType GradeType { get { return (EPalMapObjectTreasureGradeType)this[nameof(GradeType)].GetValue<int>(); } set { this[nameof(GradeType)].SetValue<int>((int)value); } }
    }
    public class PalMapObjectModelInitializeExtraParameterDropItem : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterDropItem(nint addr) : base(addr) { }
        public PalContainerId TempContainerID { get { return this[nameof(TempContainerID)].As<PalContainerId>(); } set { this["TempContainerID"] = value; } }
        public Vector ReleaseDirection { get { return this[nameof(ReleaseDirection)].As<Vector>(); } set { this["ReleaseDirection"] = value; } }
        public bool bAutoPickup { get { return this[nameof(bAutoPickup)].Flag; } set { this[nameof(bAutoPickup)].Flag = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterItemDropObject : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterItemDropObject(nint addr) : base(addr) { }
        public Array<PalItemAndNum> ItemInfos { get { return new Array<PalItemAndNum>(this[nameof(ItemInfos)].Address); } }
    }
    public class PalMapObjectModelInitializeExtraParameterInitialItem : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterInitialItem(nint addr) : base(addr) { }
        public Array<PalItemAndNum> ItemInfos { get { return new Array<PalItemAndNum>(this[nameof(ItemInfos)].Address); } }
    }
    public class PalMapObjectModelInitializeExtraParameterInitialCharacter : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterInitialCharacter(nint addr) : base(addr) { }
        public PalIndividualCharacterSaveParameter CharacterSaveParameter { get { return this[nameof(CharacterSaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["CharacterSaveParameter"] = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterPalEgg : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterPalEgg(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterNote : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterNote(nint addr) : base(addr) { }
        public Object NoteRowName { get { return this[nameof(NoteRowName)]; } set { this[nameof(NoteRowName)] = value; } }
    }
    public class PalMapObjectModelInitializeExtraParameterInteract : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterInteract(nint addr) : base(addr) { }
        public EPalMapObjectInteractRestrictType RestrictType { get { return (EPalMapObjectInteractRestrictType)this[nameof(RestrictType)].GetValue<int>(); } set { this[nameof(RestrictType)].SetValue<int>((int)value); } }
    }
    public class PalMapObjectModelInitializeExtraParameterItemContainerAttribute : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterItemContainerAttribute(nint addr) : base(addr) { }
        public Array<EPalMapObjectItemContainerSlotAttribute> AllSlotAttribute { get { return new Array<EPalMapObjectItemContainerSlotAttribute>(this[nameof(AllSlotAttribute)].Address); } }
    }
    public class PalMapObjectModelInitializeExtraParameterByPlayerUId : PalMapObjectModelInitializeExtraParameterBase
    {
        public PalMapObjectModelInitializeExtraParameterByPlayerUId(nint addr) : base(addr) { }
        public Guid ByPlayerUId { get { return this[nameof(ByPlayerUId)].As<Guid>(); } set { this["ByPlayerUId"] = value; } }
    }
    public class PalMapObjectMonsterFarmModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectMonsterFarmModel(nint addr) : base(addr) { }
    }
    public class PalMapObjectMonsterFarmParameterComponent : ActorComponent
    {
        public PalMapObjectMonsterFarmParameterComponent(nint addr) : base(addr) { }
        public FloatInterval ActionIntervalSeconds { get { return this[nameof(ActionIntervalSeconds)].As<FloatInterval>(); } set { this["ActionIntervalSeconds"] = value; } }
    }
    public class PalMapObjectNoteObjectParameterComponent : ActorComponent
    {
        public PalMapObjectNoteObjectParameterComponent(nint addr) : base(addr) { }
        public PalDataTableRowName_NoteData NoteRowName { get { return this[nameof(NoteRowName)].As<PalDataTableRowName_NoteData>(); } set { this["NoteRowName"] = value; } }
    }
    public class PalMapObjectPalEgg : PalMapObject
    {
        public PalMapObjectPalEgg(nint addr) : base(addr) { }
        public PalMapObjectPickupItemPalEggParameterComponent ParameterComponent { get { return this[nameof(ParameterComponent)].As<PalMapObjectPickupItemPalEggParameterComponent>(); } set { this["ParameterComponent"] = value; } }
        public Object GetCharacterID() { return Invoke<Object>(nameof(GetCharacterID)); }
    }
    public class PalMapObjectPickupItemOnLevelModel : PalMapObjectPickableItemModelBase
    {
        public PalMapObjectPickupItemOnLevelModel(nint addr) : base(addr) { }
        public Object VisualStaticItemId { get { return this[nameof(VisualStaticItemId)]; } set { this[nameof(VisualStaticItemId)] = value; } }
        public void OnUpdateItemContainerContents(PalItemContainer Container) { Invoke(nameof(OnUpdateItemContainerContents), Container); }
        public Object GetVisualStaticItemId() { return Invoke<Object>(nameof(GetVisualStaticItemId)); }
    }
    public class PalMapObjectPalEggModel : PalMapObjectPickupItemOnLevelModel
    {
        public PalMapObjectPalEggModel(nint addr) : base(addr) { }
    }
    public class PalMapObjectPalFoodBoxModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectPalFoodBoxModel(nint addr) : base(addr) { }
    }
    public class PalMapObjectPalStorageModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectPalStorageModel(nint addr) : base(addr) { }
        public Object OnSpawnedCharacterDelegate { get { return this[nameof(OnSpawnedCharacterDelegate)]; } set { this[nameof(OnSpawnedCharacterDelegate)] = value; } }
        public Array<PalInstanceID> SpawnedIndividualIds { get { return new Array<PalInstanceID>(this[nameof(SpawnedIndividualIds)].Address); } }
        public void SpawnedCharacterDelegate__DelegateSignature(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(SpawnedCharacterDelegate__DelegateSignature), IndividualId, PhantomId); }
        public void OnUpdateGuildPalStorage_ServerInternal(PalBaseCampModel BaseCampModel, PalGuildPalStorage GuildPalStorage) { Invoke(nameof(OnUpdateGuildPalStorage_ServerInternal), BaseCampModel, GuildPalStorage); }
        public void OnTriggerInteract_BP(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract_BP), Other, IndicatorType); }
        public void OnSpawnedPhantomCharacter(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(OnSpawnedPhantomCharacter), IndividualId, PhantomId); }
        public void OnOverlapEndCageWalls(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp) { Invoke(nameof(OnOverlapEndCageWalls), OverlappedComp, OtherActor, OtherComp); }
        public void OnOverlapBeginCageWalls(PrimitiveComponent OverlappedComp, Actor OtherActor, PrimitiveComponent OtherComp) { Invoke(nameof(OnOverlapBeginCageWalls), OverlappedComp, OtherActor, OtherComp); }
        public void OnDroppedCharacterToPhantom(PalInstanceID IndividualId, int PhantomId) { Invoke(nameof(OnDroppedCharacterToPhantom), IndividualId, PhantomId); }
        public void OnAddGuildPalStorage_ServerInternal(PalIndividualCharacterHandle NewCharacter) { Invoke(nameof(OnAddGuildPalStorage_ServerInternal), NewCharacter); }
    }
    public class PalHUDDispatchParameter_Authentication : PalHUDDispatchParameter_MapObject
    {
        public PalHUDDispatchParameter_Authentication(nint addr) : base(addr) { }
        public bool IsAuthentication { get { return this[nameof(IsAuthentication)].Flag; } set { this[nameof(IsAuthentication)].Flag = value; } }
    }
    public class PalMapObjectPasswordLockModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectPasswordLockModule(nint addr) : base(addr) { }
        public Object OnUpdateLockStateDelegate { get { return this[nameof(OnUpdateLockStateDelegate)]; } set { this[nameof(OnUpdateLockStateDelegate)] = value; } }
        public Object OnAuthenticationResultNotifyDelegate { get { return this[nameof(OnAuthenticationResultNotifyDelegate)]; } set { this[nameof(OnAuthenticationResultNotifyDelegate)] = value; } }
        public EPalMapObjectPasswordLockState LockState { get { return (EPalMapObjectPasswordLockState)this[nameof(LockState)].GetValue<int>(); } set { this[nameof(LockState)].SetValue<int>((int)value); } }
        public Object Password { get { return this[nameof(Password)]; } set { this[nameof(Password)] = value; } }
        public Array<PalMapObjectPasswordLockPlayerInfo> PlayerInfos { get { return new Array<PalMapObjectPasswordLockPlayerInfo>(this[nameof(PlayerInfos)].Address); } }
        public int TryAuthenticateMaxNum { get { return this[nameof(TryAuthenticateMaxNum)].GetValue<int>(); } set { this[nameof(TryAuthenticateMaxNum)].SetValue<int>(value); } }
        public void ReturnSelfMulticastDelegate__DelegateSignature(PalMapObjectPasswordLockModule Module) { Invoke(nameof(ReturnSelfMulticastDelegate__DelegateSignature), Module); }
        public void ReturnSelfAndPasswordMulticastDelegate__DelegateSignature(PalMapObjectPasswordLockModule Module, Object Password) { Invoke(nameof(ReturnSelfAndPasswordMulticastDelegate__DelegateSignature), Module, Password); }
        public void ReturnPlayerInfoDelegate__DelegateSignature(PalMapObjectPasswordLockPlayerInfo OldLocalPlayerInfo, PalMapObjectPasswordLockPlayerInfo NewLocalPlayerInfo) { Invoke(nameof(ReturnPlayerInfoDelegate__DelegateSignature), OldLocalPlayerInfo, NewLocalPlayerInfo); }
        public void RequestUpdateUnlock_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestUpdateUnlock_ServerInternal), RequestPlayerId); }
        public void RequestUpdatePassword_ServerInternal(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RequestUpdatePassword_ServerInternal), RequestPlayerId, Archive); }
        public void RequestUpdatePassword(Object NewPassword) { Invoke(nameof(RequestUpdatePassword), NewPassword); }
        public void RequestUpdateLock(EPalMapObjectPasswordLockState NewLockState) { Invoke(nameof(RequestUpdateLock), NewLockState); }
        public void RequestOpenUIPasswordSetting() { Invoke(nameof(RequestOpenUIPasswordSetting)); }
        public void RequestAuthenticate_ServerInternal(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RequestAuthenticate_ServerInternal), RequestPlayerId, Archive); }
        public void RequestAuthenticate(Object InputPassword) { Invoke(nameof(RequestAuthenticate), InputPassword); }
        public void OpenMenuSecuritySetting() { Invoke(nameof(OpenMenuSecuritySetting)); }
        public void OnRep_PlayerInfos(Array<PalMapObjectPasswordLockPlayerInfo> OldValue) { Invoke(nameof(OnRep_PlayerInfos), OldValue); }
        public void NotifyAuthenticationResultDelegate__DelegateSignature(bool passed) { Invoke(nameof(NotifyAuthenticationResultDelegate__DelegateSignature), passed); }
        public void NotifyAuthenticationResult(bool passed) { Invoke(nameof(NotifyAuthenticationResult), passed); }
        public EPalMapObjectPasswordLockState GetLockState() { return Invoke<EPalMapObjectPasswordLockState>(nameof(GetLockState)); }
        public bool CanTryAuthenticateByPlayer(Guid RequestPlayerUId) { return Invoke<bool>(nameof(CanTryAuthenticateByPlayer), RequestPlayerUId); }
    }
    public class PalMapObjectPickupItemParameterComponentBase : ActorComponent
    {
        public PalMapObjectPickupItemParameterComponentBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectPickupItemParameterComponent : PalMapObjectPickupItemParameterComponentBase
    {
        public PalMapObjectPickupItemParameterComponent(nint addr) : base(addr) { }
        public Array<PalMapObjectPickupItemData> DropItems { get { return new Array<PalMapObjectPickupItemData>(this[nameof(DropItems)].Address); } }
    }
    public class PalMapObjectPickupItemPalEggParameterComponent : PalMapObjectPickupItemParameterComponent
    {
        public PalMapObjectPickupItemPalEggParameterComponent(nint addr) : base(addr) { }
        public PalMapObjectPickupItemPalEggData PalEggData { get { return this[nameof(PalEggData)].As<PalMapObjectPickupItemPalEggData>(); } set { this["PalEggData"] = value; } }
    }
    public class PalMapObjectPlayerBedModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectPlayerBedModel(nint addr) : base(addr) { }
        public Vector RespawnLocationOffset { get { return this[nameof(RespawnLocationOffset)].As<Vector>(); } set { this["RespawnLocationOffset"] = value; } }
        public bool bHasAuthority { get { return this[nameof(bHasAuthority)].Flag; } set { this[nameof(bHasAuthority)].Flag = value; } }
        public Character SleepingCharacter { get { return this[nameof(SleepingCharacter)].As<Character>(); } set { this["SleepingCharacter"] = value; } }
        public PalAction_SleepPlayerBed SleepPlayerBedAction { get { return this[nameof(SleepPlayerBedAction)].As<PalAction_SleepPlayerBed>(); } set { this["SleepPlayerBedAction"] = value; } }
        public void RequestTriggerSleepPlayerBed_ToServer(int RequestPlayerId) { Invoke(nameof(RequestTriggerSleepPlayerBed_ToServer), RequestPlayerId); }
        public void RequestTriggerGetupPlayerBed_ToServer(int RequestPlayerId) { Invoke(nameof(RequestTriggerGetupPlayerBed_ToServer), RequestPlayerId); }
        public void ReceiveTriggerSleepPlayerBedSuccess(int RequestPlayerId) { Invoke(nameof(ReceiveTriggerSleepPlayerBedSuccess), RequestPlayerId); }
        public void ReceiveTriggerGetupPlayerBedSuccess(int RequestPlayerId) { Invoke(nameof(ReceiveTriggerGetupPlayerBedSuccess), RequestPlayerId); }
        public void PutPlayerToSleep(PalIndividualCharacterHandle CharacterHandle) { Invoke(nameof(PutPlayerToSleep), CharacterHandle); }
        public void OnPlayerActionBegin(PalActionBase ActionBase) { Invoke(nameof(OnPlayerActionBegin), ActionBase); }
        public void OnGetupTrigger() { Invoke(nameof(OnGetupTrigger)); }
        public void OnEndSleep() { Invoke(nameof(OnEndSleep)); }
        public void OnDispose(PalMapObjectModel MapObjectModel, PalMapObjectDisposeOptions Options) { Invoke(nameof(OnDispose), MapObjectModel, Options); }
        public void OnDamagePlayer(PalDamageResult DamageResult) { Invoke(nameof(OnDamagePlayer), DamageResult); }
        public void BP_OnTriggerInteract_SleepPlayerBed(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(BP_OnTriggerInteract_SleepPlayerBed), Other, IndicatorType); }
    }
    public class PalMapObjectPlayerRecordModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectPlayerRecordModule(nint addr) : base(addr) { }
        public Object OnUpdatePlayerRecordBoolValDelegate { get { return this[nameof(OnUpdatePlayerRecordBoolValDelegate)]; } set { this[nameof(OnUpdatePlayerRecordBoolValDelegate)] = value; } }
        public Object OnUpdatePlayerRecordIntValDelegate { get { return this[nameof(OnUpdatePlayerRecordIntValDelegate)]; } set { this[nameof(OnUpdatePlayerRecordIntValDelegate)] = value; } }
        public Object TargetKey { get { return this[nameof(TargetKey)]; } set { this[nameof(TargetKey)] = value; } }
        public void OnUpdatePlayerRecordIntVal(Object Key, int Value) { Invoke(nameof(OnUpdatePlayerRecordIntVal), Key, Value); }
        public void OnUpdatePlayerRecordBoolVal(Object Key, bool Value) { Invoke(nameof(OnUpdatePlayerRecordBoolVal), Key, Value); }
        public void OnCompleteSyncPlayerFromServer_InClient(PalPlayerState LocalPlayerState) { Invoke(nameof(OnCompleteSyncPlayerFromServer_InClient), LocalPlayerState); }
        public void MulticastIntValDelegate__DelegateSignature(PalMapObjectPlayerRecordModule Module, Object Key, int Value) { Invoke(nameof(MulticastIntValDelegate__DelegateSignature), Module, Key, Value); }
        public void MulticastBoolValDelegate__DelegateSignature(PalMapObjectPlayerRecordModule Module, Object Key, bool Value) { Invoke(nameof(MulticastBoolValDelegate__DelegateSignature), Module, Key, Value); }
    }
    public class PalMapObjectProductItemModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectProductItemModel(nint addr) : base(addr) { }
        public Object OnFinishProductOneLoopDelegate { get { return this[nameof(OnFinishProductOneLoopDelegate)]; } set { this[nameof(OnFinishProductOneLoopDelegate)] = value; } }
        public bool bIsWorkable { get { return this[nameof(bIsWorkable)].Flag; } set { this[nameof(bIsWorkable)].Flag = value; } }
        public Object ProductItemId { get { return this[nameof(ProductItemId)]; } set { this[nameof(ProductItemId)] = value; } }
        public float WorkSpeedAdditionalRate { get { return this[nameof(WorkSpeedAdditionalRate)].GetValue<float>(); } set { this[nameof(WorkSpeedAdditionalRate)].SetValue<float>(value); } }
        public void SimpleDelegate__DelegateSignature(PalMapObjectProductItemModel Model) { Invoke(nameof(SimpleDelegate__DelegateSignature), Model); }
        public void OnUpdateContainerContent(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContent), Container); }
        public void OnFinishWorkInServer(PalWorkBase Work) { Invoke(nameof(OnFinishWorkInServer), Work); }
        public Object GetProductItemId() { return Invoke<Object>(nameof(GetProductItemId)); }
        public PalItemContainer GetItemContainer() { return Invoke<PalItemContainer>(nameof(GetItemContainer)); }
        public float CalcRequiredAmount(float BaseRequiredAmount) { return Invoke<float>(nameof(CalcRequiredAmount), BaseRequiredAmount); }
    }
    public class PalMapObjectRankUpCharacterModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectRankUpCharacterModel(nint addr) : base(addr) { }
        public Object OnReceiveRequestResultDelegate { get { return this[nameof(OnReceiveRequestResultDelegate)]; } set { this[nameof(OnReceiveRequestResultDelegate)] = value; } }
        public Guid BaseCampIdBelongTo { get { return this[nameof(BaseCampIdBelongTo)].As<Guid>(); } set { this["BaseCampIdBelongTo"] = value; } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public void RequestRankup_ServerInternal(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RequestRankup_ServerInternal), RequestPlayerId, Archive); }
        public void ReceiveOperationResult(int ResultInt) { Invoke(nameof(ReceiveOperationResult), ResultInt); }
    }
    public class PalMapObjectRecoverOtomoModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectRecoverOtomoModel(nint addr) : base(addr) { }
        public float RecoverAmountBySec { get { return this[nameof(RecoverAmountBySec)].GetValue<float>(); } set { this[nameof(RecoverAmountBySec)].SetValue<float>(value); } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public void StoreAllOtomo_ServerInternal(int RequestPlayerId) { Invoke(nameof(StoreAllOtomo_ServerInternal), RequestPlayerId); }
        public void RequestRecoverAllOtomo_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestRecoverAllOtomo_ServerInternal), RequestPlayerId); }
        public void OnUpdateCharacterContainer(PalIndividualCharacterContainer Container) { Invoke(nameof(OnUpdateCharacterContainer), Container); }
        public void ObtainAll_ServerInternal(int RequestPlayerId) { Invoke(nameof(ObtainAll_ServerInternal), RequestPlayerId); }
    }
    public class PalMapObjectRecoverOtomoParameterComponent : ActorComponent
    {
        public PalMapObjectRecoverOtomoParameterComponent(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public float RecoverAmountBySec { get { return this[nameof(RecoverAmountBySec)].GetValue<float>(); } set { this[nameof(RecoverAmountBySec)].SetValue<float>(value); } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
    }
    public class PalMapObjectRepairItemModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectRepairItemModel(nint addr) : base(addr) { }
        public float RequiredRepairItemRate { get { return this[nameof(RequiredRepairItemRate)].GetValue<float>(); } set { this[nameof(RequiredRepairItemRate)].SetValue<float>(value); } }
        public Object WidgetClass { get { return this[nameof(WidgetClass)]; } set { this[nameof(WidgetClass)] = value; } }
        public void RequestRepairItem(Array<PalItemSlotId> TargetItemSlotIdArray) { Invoke(nameof(RequestRepairItem), TargetItemSlotIdArray); }
        public void RepairItem_ServerInternal(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RepairItem_ServerInternal), RequestPlayerId, Archive); }
        public void OnNotifyRepairResult__DelegateSignature(bool IsSuccess) { Invoke(nameof(OnNotifyRepairResult__DelegateSignature), IsSuccess); }
        public void NotifyRepairResult(bool IsSuccess) { Invoke(nameof(NotifyRepairResult), IsSuccess); }
        public void GetRequiredMaterials(Array<PalItemId> TargetRepairItemIdArray, Array<PalStaticItemIdAndNum> OutRequiredMaterials) { Invoke(nameof(GetRequiredMaterials), TargetRepairItemIdArray, OutRequiredMaterials); }
    }
    public class PalMapObjectRepairItemParameterComponent : ActorComponent
    {
        public PalMapObjectRepairItemParameterComponent(nint addr) : base(addr) { }
        public float RequiredRepairItemPercent { get { return this[nameof(RequiredRepairItemPercent)].GetValue<float>(); } set { this[nameof(RequiredRepairItemPercent)].SetValue<float>(value); } }
    }
    public class PalMapObjectRespawnPointModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectRespawnPointModel(nint addr) : base(addr) { }
        public Guid LocationId { get { return this[nameof(LocationId)].As<Guid>(); } set { this["LocationId"] = value; } }
    }
    public class PalMapObjectShippingItemModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectShippingItemModel(nint addr) : base(addr) { }
        public Array<int> ShippingHours { get { return new Array<int>(this[nameof(ShippingHours)].Address); } }
        public void OnChangeTimeHoursInServer() { Invoke(nameof(OnChangeTimeHoursInServer)); }
    }
    public class PalMapObjectShippingItemParameterComponent : ActorComponent
    {
        public PalMapObjectShippingItemParameterComponent(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public Array<int> ShippingHours { get { return new Array<int>(this[nameof(ShippingHours)].Address); } }
    }
    public class PalMapObjectSignboardModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectSignboardModel(nint addr) : base(addr) { }
        public Object OnUpdateSignboardTextDelegate { get { return this[nameof(OnUpdateSignboardTextDelegate)]; } set { this[nameof(OnUpdateSignboardTextDelegate)] = value; } }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
        public Object SignboardText { get { return this[nameof(SignboardText)]; } set { this[nameof(SignboardText)] = value; } }
        public bool bIsEditing { get { return this[nameof(bIsEditing)].Flag; } set { this[nameof(bIsEditing)].Flag = value; } }
        public void UpdateSignboardTextDelegate__DelegateSignature(Object TextValue) { Invoke(nameof(UpdateSignboardTextDelegate__DelegateSignature), TextValue); }
        public void RequestUpdateText(int RequestPlayerId, PalNetArchive Archive) { Invoke(nameof(RequestUpdateText), RequestPlayerId, Archive); }
        public void RequestEditText(int RequestPlayerId, bool IsEditing) { Invoke(nameof(RequestEditText), RequestPlayerId, IsEditing); }
        public void OnUpdateText(Object Text) { Invoke(nameof(OnUpdateText), Text); }
        public void OnRep_Text() { Invoke(nameof(OnRep_Text)); }
        public void OnOpenEdit() { Invoke(nameof(OnOpenEdit)); }
        public Object GetSignboardText() { return Invoke<Object>(nameof(GetSignboardText)); }
    }
    public class PalHUDDispatchParameter_Signboard : PalHUDDispatchParameter_MapObject
    {
        public PalHUDDispatchParameter_Signboard(nint addr) : base(addr) { }
        public Object InText { get { return this[nameof(InText)]; } set { this[nameof(InText)] = value; } }
        public Object OutText { get { return this[nameof(OutText)]; } set { this[nameof(OutText)] = value; } }
        public Object OnUpdateTextDelegate { get { return this[nameof(OnUpdateTextDelegate)]; } set { this[nameof(OnUpdateTextDelegate)] = value; } }
    }
    public class PalMapObjectSignboardParameterComponent : ActorComponent
    {
        public PalMapObjectSignboardParameterComponent(nint addr) : base(addr) { }
        public Object MenuUIWidgetClass { get { return this[nameof(MenuUIWidgetClass)]; } set { this[nameof(MenuUIWidgetClass)] = value; } }
    }
    public class PalMapObjectSpawnerBase : PalLevelObjectActor
    {
        public PalMapObjectSpawnerBase(nint addr) : base(addr) { }
        public int ProbabilityRespawn { get { return this[nameof(ProbabilityRespawn)].GetValue<int>(); } set { this[nameof(ProbabilityRespawn)].SetValue<int>(value); } }
        public float LotteryCoolTimeMinutes { get { return this[nameof(LotteryCoolTimeMinutes)].GetValue<float>(); } set { this[nameof(LotteryCoolTimeMinutes)].SetValue<float>(value); } }
        public PalStageInstanceId StageInstanceIdBelongTo { get { return this[nameof(StageInstanceIdBelongTo)].As<PalStageInstanceId>(); } set { this["StageInstanceIdBelongTo"] = value; } }
        public SphereComponent LocateSphere { get { return this[nameof(LocateSphere)].As<SphereComponent>(); } set { this["LocateSphere"] = value; } }
        public void OnWorldMapObjectSpawnableInServer() { Invoke(nameof(OnWorldMapObjectSpawnableInServer)); }
    }
    public class PalMapObjectSpawnerSingleBase : PalMapObjectSpawnerBase
    {
        public PalMapObjectSpawnerSingleBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectSpawnerDamageReactionComponent : ActorComponent
    {
        public PalMapObjectSpawnerDamageReactionComponent(nint addr) : base(addr) { }
        public bool bDropItemOnDamaged { get { return this[nameof(bDropItemOnDamaged)].Flag; } set { this[nameof(bDropItemOnDamaged)].Flag = value; } }
        public PalHitEffectSlot EffectSlot { get { return this[nameof(EffectSlot)].As<PalHitEffectSlot>(); } set { this["EffectSlot"] = value; } }
    }
    public class PalMapObjectSpawnerMultiItem : PalMapObjectSpawnerBase
    {
        public PalMapObjectSpawnerMultiItem(nint addr) : base(addr) { }
        public PalDataTableRowName_FieldLotteryNameData FieldLotteryName { get { return this[nameof(FieldLotteryName)].As<PalDataTableRowName_FieldLotteryNameData>(); } set { this["FieldLotteryName"] = value; } }
        public float RespawnTimeMinutesObtained { get { return this[nameof(RespawnTimeMinutesObtained)].GetValue<float>(); } set { this[nameof(RespawnTimeMinutesObtained)].SetValue<float>(value); } }
    }
    public class PalMapObjectSpawnerMultiItemLocationComponent : StaticMeshComponent
    {
        public PalMapObjectSpawnerMultiItemLocationComponent(nint addr) : base(addr) { }
    }
    public class PalMapObjectSpawnerPalEgg : PalMapObjectSpawnerSingleBase
    {
        public PalMapObjectSpawnerPalEgg(nint addr) : base(addr) { }
        public Array<PalMapObjectPickupItemPalEggLotteryData> SpawnPalEggLotteryDataArray { get { return new Array<PalMapObjectPickupItemPalEggLotteryData>(this[nameof(SpawnPalEggLotteryDataArray)].Address); } }
        public float RespawnTimeMinutesObtained { get { return this[nameof(RespawnTimeMinutesObtained)].GetValue<float>(); } set { this[nameof(RespawnTimeMinutesObtained)].SetValue<float>(value); } }
        public bool bRespawnableMulti { get { return this[nameof(bRespawnableMulti)].Flag; } set { this[nameof(bRespawnableMulti)].Flag = value; } }
        public void OnFinishedSpawningMapObjectModel(Guid InstanceId, EPalMapObjectOperationResult Result) { Invoke(nameof(OnFinishedSpawningMapObjectModel), InstanceId, Result); }
    }
    public class PalMapObjectSpawnerSimple : PalMapObjectSpawnerSingleBase
    {
        public PalMapObjectSpawnerSimple(nint addr) : base(addr) { }
        public PalDataTableRowName_MapObjectData MapObjectId { get { return this[nameof(MapObjectId)].As<PalDataTableRowName_MapObjectData>(); } set { this["MapObjectId"] = value; } }
        public void OnFinishedSpawningMapObjectModel(Guid InstanceId, EPalMapObjectOperationResult Result) { Invoke(nameof(OnFinishedSpawningMapObjectModel), InstanceId, Result); }
    }
    public class PalMapObjectSpawnerTreasureBox : PalMapObjectSpawnerSingleBase
    {
        public PalMapObjectSpawnerTreasureBox(nint addr) : base(addr) { }
        public PalDataTableRowName_MapObjectData SpawnMapObjectId { get { return this[nameof(SpawnMapObjectId)].As<PalDataTableRowName_MapObjectData>(); } set { this["SpawnMapObjectId"] = value; } }
        public PalDataTableRowName_FieldLotteryNameData FieldLotteryName { get { return this[nameof(FieldLotteryName)].As<PalDataTableRowName_FieldLotteryNameData>(); } set { this["FieldLotteryName"] = value; } }
        public float RespawnTimeMinutesObtained { get { return this[nameof(RespawnTimeMinutesObtained)].GetValue<float>(); } set { this[nameof(RespawnTimeMinutesObtained)].SetValue<float>(value); } }
        public bool bRespawnableMulti { get { return this[nameof(bRespawnableMulti)].Flag; } set { this[nameof(bRespawnableMulti)].Flag = value; } }
        public void OnFinishedSpawningMapObjectModel(Guid InstanceId, EPalMapObjectOperationResult Result) { Invoke(nameof(OnFinishedSpawningMapObjectModel), InstanceId, Result); }
    }
    public class PalBuildObjectSpawnValidationCheckInterface : Interface
    {
        public PalBuildObjectSpawnValidationCheckInterface(nint addr) : base(addr) { }
    }
    public class PalMapObjectStatusObserverModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectStatusObserverModule(nint addr) : base(addr) { }
        public Object OnDamageInServerDelegate { get { return this[nameof(OnDamageInServerDelegate)]; } set { this[nameof(OnDamageInServerDelegate)] = value; } }
        public void OnDamage_ServerInternal(PalMapObjectModel Model, PalDamageInfo DamageInfo, int LastHp) { Invoke(nameof(OnDamage_ServerInternal), Model, DamageInfo, LastHp); }
    }
    public class PalMapObjectSwitchModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectSwitchModule(nint addr) : base(addr) { }
        public Object OnUpdateSwitchStateDelegate { get { return this[nameof(OnUpdateSwitchStateDelegate)]; } set { this[nameof(OnUpdateSwitchStateDelegate)] = value; } }
        public EPalMapObjectSwitchState SwitchState { get { return (EPalMapObjectSwitchState)this[nameof(SwitchState)].GetValue<int>(); } set { this[nameof(SwitchState)].SetValue<int>((int)value); } }
        public void ReturnSelfMulticastDelegate__DelegateSignature(PalMapObjectSwitchModule Module) { Invoke(nameof(ReturnSelfMulticastDelegate__DelegateSignature), Module); }
        public void OnRep_SwitchState() { Invoke(nameof(OnRep_SwitchState)); }
        public EPalMapObjectSwitchState GetSwitchState() { return Invoke<EPalMapObjectSwitchState>(nameof(GetSwitchState)); }
    }
    public class PalMapObjectSwitchOnInWorking : PalMapObjectConcreteModelBase
    {
        public PalMapObjectSwitchOnInWorking(nint addr) : base(addr) { }
        public void OnUpdateAssignedCharacter_ServerInternal(PalWorkBase Work) { Invoke(nameof(OnUpdateAssignedCharacter_ServerInternal), Work); }
    }
    public class PalMapObjectTestFunctionModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectTestFunctionModel(nint addr) : base(addr) { }
        public void RequestCountUpSIngle_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestCountUpSIngle_ServerInternal), RequestPlayerId); }
        public void RequestCountUp_ServerInternal(int RequestPlayerId, int IncrementNum) { Invoke(nameof(RequestCountUp_ServerInternal), RequestPlayerId, IncrementNum); }
        public void RequestCountUp(int IncrementNum) { Invoke(nameof(RequestCountUp), IncrementNum); }
        public void OnRecieveCountUp(int ReflectedCounter) { Invoke(nameof(OnRecieveCountUp), ReflectedCounter); }
    }
    public class PalMapObjectTestGlobalContainerModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectTestGlobalContainerModel(nint addr) : base(addr) { }
        public void WatchContainer() { Invoke(nameof(WatchContainer)); }
        public void Swap(int ASlotIndex, int BSlotIndex) { Invoke(nameof(Swap), ASlotIndex, BSlotIndex); }
        public void ProduceWithSlotWithConsume(Object StaticItemId, int Num, int SlotIndex, int ConsumeSlotIndex, int ConsumeNum) { Invoke(nameof(ProduceWithSlotWithConsume), StaticItemId, Num, SlotIndex, ConsumeSlotIndex, ConsumeNum); }
        public void ProduceWithSlot(Object StaticItemId, int Num, int SlotIndex) { Invoke(nameof(ProduceWithSlot), StaticItemId, Num, SlotIndex); }
        public void Produce(Object StaticItemId, int Num) { Invoke(nameof(Produce), StaticItemId, Num); }
        public void OpenContainerUI() { Invoke(nameof(OpenContainerUI)); }
        public void Move(int Num, int ToSlotIndex, int FromSlotIndex) { Invoke(nameof(Move), Num, ToSlotIndex, FromSlotIndex); }
        public void Dispose(int SlotIndex, int Num) { Invoke(nameof(Dispose), SlotIndex, Num); }
        public void CloseContainerUI() { Invoke(nameof(CloseContainerUI)); }
    }
    public class PalMapObjectTestItemDestroyedDropModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectTestItemDestroyedDropModel(nint addr) : base(addr) { }
        public Array<PalItemAndNum> DropItemInfos { get { return new Array<PalItemAndNum>(this[nameof(DropItemInfos)].Address); } }
        public void OnDestroy_ServerInternal(PalMapObjectModel Model) { Invoke(nameof(OnDestroy_ServerInternal), Model); }
    }
    public class PalMapObjectTorchModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectTorchModel(nint addr) : base(addr) { }
        public int IgnitionMinutes { get { return this[nameof(IgnitionMinutes)].GetValue<int>(); } set { this[nameof(IgnitionMinutes)].SetValue<int>(value); } }
        public GameDateTime ExtinctionDateTime { get { return this[nameof(ExtinctionDateTime)].As<GameDateTime>(); } set { this["ExtinctionDateTime"] = value; } }
        public void RequestTriggerIgnition_ToServer(int RequestPlayerId) { Invoke(nameof(RequestTriggerIgnition_ToServer), RequestPlayerId); }
        public void OnWorkBootUp_ServerInternal(PalWorkBootUp Work) { Invoke(nameof(OnWorkBootUp_ServerInternal), Work); }
    }
    public class PalMapObjectTorchParameterComponent : ActorComponent
    {
        public PalMapObjectTorchParameterComponent(nint addr) : base(addr) { }
        public int IgnitionMinutes { get { return this[nameof(IgnitionMinutes)].GetValue<int>(); } set { this[nameof(IgnitionMinutes)].SetValue<int>(value); } }
    }
    public class PalMapObjectTreasureBox : PalMapObject
    {
        public PalMapObjectTreasureBox(nint addr) : base(addr) { }
        public Vector DropItemLocalLocation { get { return this[nameof(DropItemLocalLocation)].As<Vector>(); } set { this["DropItemLocalLocation"] = value; } }
        public void TriggerOpen() { Invoke(nameof(TriggerOpen)); }
        public void OnReceiveOpenInServer(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnReceiveOpenInServer), ConcreteModel); }
        public void NotifyStartOpenInAnimation() { Invoke(nameof(NotifyStartOpenInAnimation)); }
        public void BroadcastTriggerOpen() { Invoke(nameof(BroadcastTriggerOpen)); }
    }
    public class PalMapObjectTreasureBoxModel : PalMapObjectConcreteModelBase
    {
        public PalMapObjectTreasureBoxModel(nint addr) : base(addr) { }
        public EPalMapObjectTreasureGradeType TreasureGradeType { get { return (EPalMapObjectTreasureGradeType)this[nameof(TreasureGradeType)].GetValue<int>(); } set { this[nameof(TreasureGradeType)].SetValue<int>((int)value); } }
        public Vector DropItemLocalLocation { get { return this[nameof(DropItemLocalLocation)].As<Vector>(); } set { this["DropItemLocalLocation"] = value; } }
        public bool bOpened { get { return this[nameof(bOpened)].Flag; } set { this[nameof(bOpened)].Flag = value; } }
        public void RequestOpen_ServerInternal(int RequestPlayerId) { Invoke(nameof(RequestOpen_ServerInternal), RequestPlayerId); }
        public void ReceiveOpenSuccess_ClientInternal(PalNetArchive Archive) { Invoke(nameof(ReceiveOpenSuccess_ClientInternal), Archive); }
        public void ReceiveOpenFailed_ClientInternal(PalNetArchive Archive) { Invoke(nameof(ReceiveOpenFailed_ClientInternal), Archive); }
        public EPalMapObjectTreasureGradeType GetTreasureGradeType() { return Invoke<EPalMapObjectTreasureGradeType>(nameof(GetTreasureGradeType)); }
        public void Debug_ReceiveObtainInfo_ClientInternal(PalNetArchive Archive) { Invoke(nameof(Debug_ReceiveObtainInfo_ClientInternal), Archive); }
        public Array<PalItemAndNum> CreateItemInfo() { return Invoke<Array<PalItemAndNum>>(nameof(CreateItemInfo)); }
    }
    public class PalMapObjectUtility : BlueprintFunctionLibrary
    {
        public PalMapObjectUtility(nint addr) : base(addr) { }
        public bool TryGetItemVisualModelStaticMesh(Object actorClass, StaticMesh OutStaticMesh, Transform OutComponentTransform, Vector OutCenterOfMass, MaterialInterface OutMaterialInterface) { return Invoke<bool>(nameof(TryGetItemVisualModelStaticMesh), actorClass, OutStaticMesh, OutComponentTransform, OutCenterOfMass, OutMaterialInterface); }
        public EPalMapObjectOperationResult ToMapObjectOperationResult(int ResultIntValue) { return Invoke<EPalMapObjectOperationResult>(nameof(ToMapObjectOperationResult), ResultIntValue); }
        public EPalMapObjectOperationResult SelectPriorityResult(EPalMapObjectOperationResult Result1, EPalMapObjectOperationResult Result2) { return Invoke<EPalMapObjectOperationResult>(nameof(SelectPriorityResult), Result1, Result2); }
        public Object MapObjectOperationResultToString(EPalMapObjectOperationResult Result) { return Invoke<Object>(nameof(MapObjectOperationResultToString), Result); }
        public bool IsContainsCollisionProfiles(PrimitiveComponent Component, Array<Object> CollisionProfiles) { return Invoke<bool>(nameof(IsContainsCollisionProfiles), Component, CollisionProfiles); }
    }
    public class PalMapObjectVisualEffectComponent : ActorComponent
    {
        public PalMapObjectVisualEffectComponent(nint addr) : base(addr) { }
        public Object SpawnedEffectMap { get { return this[nameof(SpawnedEffectMap)]; } set { this[nameof(SpawnedEffectMap)] = value; } }
        public void UpdateVisualByEffect(PalMapObjectModelEffectBase Effect) { Invoke(nameof(UpdateVisualByEffect), Effect); }
        public void OnRemoveEffect(PalMapObjectModel Model, PalMapObjectModelEffectBase Effect) { Invoke(nameof(OnRemoveEffect), Model, Effect); }
        public void OnGrantedEffect(PalMapObjectModel Model, PalMapObjectModelEffectBase Effect) { Invoke(nameof(OnGrantedEffect), Model, Effect); }
    }
    public class PalMapObjectWaterRecievableInterface : Interface
    {
        public PalMapObjectWaterRecievableInterface(nint addr) : base(addr) { }
        public void OnWaterOneshot(Actor Waterer) { Invoke(nameof(OnWaterOneshot), Waterer); }
        public void OnWateringEnd(Actor Waterer) { Invoke(nameof(OnWateringEnd), Waterer); }
        public void OnWateringBegin(Actor Waterer) { Invoke(nameof(OnWateringBegin), Waterer); }
    }
    public class PalMapObjectWorkeeModule : PalMapObjectConcreteModelModuleBase
    {
        public PalMapObjectWorkeeModule(nint addr) : base(addr) { }
        public PalWorkBase TargetWork { get { return this[nameof(TargetWork)].As<PalWorkBase>(); } set { this["TargetWork"] = value; } }
        public void OnRep_TargetWork() { Invoke(nameof(OnRep_TargetWork)); }
        public PalWorkProgress GetWorkProgress() { return Invoke<PalWorkProgress>(nameof(GetWorkProgress)); }
        public PalWorkBase GetWork() { return Invoke<PalWorkBase>(nameof(GetWork)); }
    }
    public class PalMapObjectWorldDisposer : Object
    {
        public PalMapObjectWorldDisposer(nint addr) : base(addr) { }
        public Array<PalMapObjectWorldDisposerBase> WorldDisposers { get { return new Array<PalMapObjectWorldDisposerBase>(this[nameof(WorldDisposers)].Address); } }
    }
    public class PalMapObjectWorldDisposerBase : Object
    {
        public PalMapObjectWorldDisposerBase(nint addr) : base(addr) { }
    }
    public class PalMapObjectWorldDisposer_DropItem : PalMapObjectWorldDisposerBase
    {
        public PalMapObjectWorldDisposer_DropItem(nint addr) : base(addr) { }
        public Object DropItemInfoSetMap { get { return this[nameof(DropItemInfoSetMap)]; } set { this[nameof(DropItemInfoSetMap)] = value; } }
        public void OnRestoreMapObject_ServerInternal(PalMapObjectModel Model) { Invoke(nameof(OnRestoreMapObject_ServerInternal), Model); }
        public void OnCreateMapObject_ServerInternal(PalMapObjectModel SpawnedModel, Vector SpawnLocation) { Invoke(nameof(OnCreateMapObject_ServerInternal), SpawnedModel, SpawnLocation); }
    }
    public class PalMasterDataTableAccessBase : Object
    {
        public PalMasterDataTableAccessBase(nint addr) : base(addr) { }
        public DataTable DataTable { get { return this[nameof(DataTable)].As<DataTable>(); } set { this["DataTable"] = value; } }
        public Array<Object> GetRowNames() { return Invoke<Array<Object>>(nameof(GetRowNames)); }
    }
    public class PalMasterDataTableAccess_LocalizeText : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_LocalizeText(nint addr) : base(addr) { }
        public Object FindRow(Object RowName) { return Invoke<Object>(nameof(FindRow), RowName); }
    }
    public class PalMasterDataTableAccess_WildSpawnerData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_WildSpawnerData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_ItemRecipe : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_ItemRecipe(nint addr) : base(addr) { }
        public void BPExec_FindRow(Object RowName, EPalMasterDataExecPinType ExecType, PalItemRecipe OutData) { Invoke(nameof(BPExec_FindRow), RowName, ExecType, OutData); }
        public PalItemRecipe BP_FindRow(Object RowName, bool bResult) { return Invoke<PalItemRecipe>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_FarmCropData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_FarmCropData(nint addr) : base(addr) { }
        public void BPExec_FindRowByCropItemId(Object CropItemId, EPalMasterDataExecPinType ExecType, PalMapObjectFarmCropData OutData) { Invoke(nameof(BPExec_FindRowByCropItemId), CropItemId, ExecType, OutData); }
        public void BPExec_FindRow(Object RowName, EPalMasterDataExecPinType ExecType, PalMapObjectFarmCropData OutData) { Invoke(nameof(BPExec_FindRow), RowName, ExecType, OutData); }
        public PalMapObjectFarmCropData BP_FindRowByCropItemId(Object CropItemId, bool bResult) { return Invoke<PalMapObjectFarmCropData>(nameof(BP_FindRowByCropItemId), CropItemId, bResult); }
        public PalMapObjectFarmCropData BP_FindRow(Object RowName, bool bResult) { return Invoke<PalMapObjectFarmCropData>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_MapObjectMasterData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_MapObjectMasterData(nint addr) : base(addr) { }
        public void BPExec_FindRow(Object RowName, EPalMasterDataExecPinType ExecType, PalMapObjectMasterData OutData) { Invoke(nameof(BPExec_FindRow), RowName, ExecType, OutData); }
        public PalMapObjectMasterData BP_FindRow(Object RowName, bool bResult) { return Invoke<PalMapObjectMasterData>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_BuildObjectData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_BuildObjectData(nint addr) : base(addr) { }
        public void BPExec_FindRowByMapObjectId(Object MapObjectId, EPalMasterDataExecPinType ExecType, PalBuildObjectData OutData) { Invoke(nameof(BPExec_FindRowByMapObjectId), MapObjectId, ExecType, OutData); }
        public void BPExec_FindRow(Object RowName, EPalMasterDataExecPinType ExecType, PalBuildObjectData OutData) { Invoke(nameof(BPExec_FindRow), RowName, ExecType, OutData); }
        public PalBuildObjectData BP_FindRowByMapObjectId(Object MapObjectId, Object OutRowName, bool bResult) { return Invoke<PalBuildObjectData>(nameof(BP_FindRowByMapObjectId), MapObjectId, OutRowName, bResult); }
        public PalBuildObjectData BP_FindRow(Object RowName, bool bResult) { return Invoke<PalBuildObjectData>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_BuildObjectIconData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_BuildObjectIconData(nint addr) : base(addr) { }
        public void BPExec_FindRow(Object RowName, EPalMasterDataExecPinType ExecType, PalBuildObjectIconData OutData) { Invoke(nameof(BPExec_FindRow), RowName, ExecType, OutData); }
        public PalBuildObjectIconData BP_FindRow(Object RowName, bool bResult) { return Invoke<PalBuildObjectIconData>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_ItemProductData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_ItemProductData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_BaseCampLevelData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_BaseCampLevelData(nint addr) : base(addr) { }
        public int GetMaxLevel() { return Invoke<int>(nameof(GetMaxLevel)); }
        public PalBaseCampLevelMasterData GetLevelInfo(int Level) { return Invoke<PalBaseCampLevelMasterData>(nameof(GetLevelInfo), Level); }
    }
    public class PalMasterDataTableAccess_DungeonSpawnAreaData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_DungeonSpawnAreaData(nint addr) : base(addr) { }
        public PalDungeonSpawnAreaData BP_FindRow(Object RowName, bool bResult) { return Invoke<PalDungeonSpawnAreaData>(nameof(BP_FindRow), RowName, bResult); }
    }
    public class PalMasterDataTableAccess_DungeonLevelData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_DungeonLevelData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_DungeonEnemySpawnerData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_DungeonEnemySpawnerData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_DungeonItemLotteryData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_DungeonItemLotteryData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_FieldLotteryNameData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_FieldLotteryNameData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_ItemLotteryData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_ItemLotteryData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_PlayerStatusRankData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_PlayerStatusRankData(nint addr) : base(addr) { }
        public int GetMaxRank() { return Invoke<int>(nameof(GetMaxRank)); }
    }
    public class PalMasterDataTableAccess_CharacterUpgradeData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_CharacterUpgradeData(nint addr) : base(addr) { }
        public int GetMaxRank() { return Invoke<int>(nameof(GetMaxRank)); }
    }
    public class PalMasterDataTableAccess_UIInputActionData : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_UIInputActionData(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_ItemShopLottery : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_ItemShopLottery(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_ItemShop : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_ItemShop(nint addr) : base(addr) { }
    }
    public class PalMasterDataTableAccess_PalShop : PalMasterDataTableAccessBase
    {
        public PalMasterDataTableAccess_PalShop(nint addr) : base(addr) { }
    }
    public class PalMasterDataTables : Object
    {
        public PalMasterDataTables(nint addr) : base(addr) { }
        public DataTable WildSpawnerDataTable { get { return this[nameof(WildSpawnerDataTable)].As<DataTable>(); } set { this["WildSpawnerDataTable"] = value; } }
        public PalMasterDataTableAccess_WildSpawnerData Access_WildSpawnerDataTable { get { return this[nameof(Access_WildSpawnerDataTable)].As<PalMasterDataTableAccess_WildSpawnerData>(); } set { this["Access_WildSpawnerDataTable"] = value; } }
        public DataTable ItemRecipeDataTable { get { return this[nameof(ItemRecipeDataTable)].As<DataTable>(); } set { this["ItemRecipeDataTable"] = value; } }
        public PalMasterDataTableAccess_ItemRecipe Access_ItemRecipeDataTable { get { return this[nameof(Access_ItemRecipeDataTable)].As<PalMasterDataTableAccess_ItemRecipe>(); } set { this["Access_ItemRecipeDataTable"] = value; } }
        public DataTable FarmCropDataTable { get { return this[nameof(FarmCropDataTable)].As<DataTable>(); } set { this["FarmCropDataTable"] = value; } }
        public PalMasterDataTableAccess_FarmCropData Access_FarmCropDataTable { get { return this[nameof(Access_FarmCropDataTable)].As<PalMasterDataTableAccess_FarmCropData>(); } set { this["Access_FarmCropDataTable"] = value; } }
        public DataTable MapObjectDataTable { get { return this[nameof(MapObjectDataTable)].As<DataTable>(); } set { this["MapObjectDataTable"] = value; } }
        public PalMasterDataTableAccess_MapObjectMasterData Access_MapObjectDataTable { get { return this[nameof(Access_MapObjectDataTable)].As<PalMasterDataTableAccess_MapObjectMasterData>(); } set { this["Access_MapObjectDataTable"] = value; } }
        public DataTable BuildObjectDataTable { get { return this[nameof(BuildObjectDataTable)].As<DataTable>(); } set { this["BuildObjectDataTable"] = value; } }
        public PalMasterDataTableAccess_BuildObjectData Access_BuildObjectDataTable { get { return this[nameof(Access_BuildObjectDataTable)].As<PalMasterDataTableAccess_BuildObjectData>(); } set { this["Access_BuildObjectDataTable"] = value; } }
        public DataTable BuildObjectIconDataTable { get { return this[nameof(BuildObjectIconDataTable)].As<DataTable>(); } set { this["BuildObjectIconDataTable"] = value; } }
        public PalMasterDataTableAccess_BuildObjectIconData Access_BuildObjectIconDataTable { get { return this[nameof(Access_BuildObjectIconDataTable)].As<PalMasterDataTableAccess_BuildObjectIconData>(); } set { this["Access_BuildObjectIconDataTable"] = value; } }
        public DataTable ItemProductDataTable { get { return this[nameof(ItemProductDataTable)].As<DataTable>(); } set { this["ItemProductDataTable"] = value; } }
        public PalMasterDataTableAccess_ItemProductData Access_ItemProductDataTable { get { return this[nameof(Access_ItemProductDataTable)].As<PalMasterDataTableAccess_ItemProductData>(); } set { this["Access_ItemProductDataTable"] = value; } }
        public DataTable BaseCampLevelDataTable { get { return this[nameof(BaseCampLevelDataTable)].As<DataTable>(); } set { this["BaseCampLevelDataTable"] = value; } }
        public PalMasterDataTableAccess_BaseCampLevelData Access_BaseCampLevelDataTable { get { return this[nameof(Access_BaseCampLevelDataTable)].As<PalMasterDataTableAccess_BaseCampLevelData>(); } set { this["Access_BaseCampLevelDataTable"] = value; } }
        public DataTable DungeonSpawnAreaDataTable { get { return this[nameof(DungeonSpawnAreaDataTable)].As<DataTable>(); } set { this["DungeonSpawnAreaDataTable"] = value; } }
        public PalMasterDataTableAccess_DungeonSpawnAreaData Access_DungeonSpawnAreaDataTable { get { return this[nameof(Access_DungeonSpawnAreaDataTable)].As<PalMasterDataTableAccess_DungeonSpawnAreaData>(); } set { this["Access_DungeonSpawnAreaDataTable"] = value; } }
        public DataTable DungeonLevelDataTable { get { return this[nameof(DungeonLevelDataTable)].As<DataTable>(); } set { this["DungeonLevelDataTable"] = value; } }
        public PalMasterDataTableAccess_DungeonLevelData Access_DungeonLevelDataTable { get { return this[nameof(Access_DungeonLevelDataTable)].As<PalMasterDataTableAccess_DungeonLevelData>(); } set { this["Access_DungeonLevelDataTable"] = value; } }
        public DataTable DungeonEnemySpawnerDataTable { get { return this[nameof(DungeonEnemySpawnerDataTable)].As<DataTable>(); } set { this["DungeonEnemySpawnerDataTable"] = value; } }
        public PalMasterDataTableAccess_DungeonEnemySpawnerData Access_DungeonEnemySpawnerDataTable { get { return this[nameof(Access_DungeonEnemySpawnerDataTable)].As<PalMasterDataTableAccess_DungeonEnemySpawnerData>(); } set { this["Access_DungeonEnemySpawnerDataTable"] = value; } }
        public DataTable DungeonItemLotteryDataTable { get { return this[nameof(DungeonItemLotteryDataTable)].As<DataTable>(); } set { this["DungeonItemLotteryDataTable"] = value; } }
        public PalMasterDataTableAccess_DungeonItemLotteryData Access_DungeonItemLotteryDataTable { get { return this[nameof(Access_DungeonItemLotteryDataTable)].As<PalMasterDataTableAccess_DungeonItemLotteryData>(); } set { this["Access_DungeonItemLotteryDataTable"] = value; } }
        public DataTable FieldLotteryNameDataTable { get { return this[nameof(FieldLotteryNameDataTable)].As<DataTable>(); } set { this["FieldLotteryNameDataTable"] = value; } }
        public PalMasterDataTableAccess_FieldLotteryNameData Access_FieldLotteryNameDataTable { get { return this[nameof(Access_FieldLotteryNameDataTable)].As<PalMasterDataTableAccess_FieldLotteryNameData>(); } set { this["Access_FieldLotteryNameDataTable"] = value; } }
        public DataTable ItemLotteryDataTable { get { return this[nameof(ItemLotteryDataTable)].As<DataTable>(); } set { this["ItemLotteryDataTable"] = value; } }
        public PalMasterDataTableAccess_ItemLotteryData Access_ItemLotteryDataTable { get { return this[nameof(Access_ItemLotteryDataTable)].As<PalMasterDataTableAccess_ItemLotteryData>(); } set { this["Access_ItemLotteryDataTable"] = value; } }
        public DataTable PlayerStatusRankDataTable { get { return this[nameof(PlayerStatusRankDataTable)].As<DataTable>(); } set { this["PlayerStatusRankDataTable"] = value; } }
        public PalMasterDataTableAccess_PlayerStatusRankData Access_PlayerStatusRankDataTable { get { return this[nameof(Access_PlayerStatusRankDataTable)].As<PalMasterDataTableAccess_PlayerStatusRankData>(); } set { this["Access_PlayerStatusRankDataTable"] = value; } }
        public DataTable CharacterUpgradeDataTable { get { return this[nameof(CharacterUpgradeDataTable)].As<DataTable>(); } set { this["CharacterUpgradeDataTable"] = value; } }
        public PalMasterDataTableAccess_CharacterUpgradeData Access_CharacterUpgradeDataTable { get { return this[nameof(Access_CharacterUpgradeDataTable)].As<PalMasterDataTableAccess_CharacterUpgradeData>(); } set { this["Access_CharacterUpgradeDataTable"] = value; } }
        public PalNoteDataAsset NoteDataAsset { get { return this[nameof(NoteDataAsset)].As<PalNoteDataAsset>(); } set { this["NoteDataAsset"] = value; } }
        public PalNoteDataAsset HelpGuideDataAsset { get { return this[nameof(HelpGuideDataAsset)].As<PalNoteDataAsset>(); } set { this["HelpGuideDataAsset"] = value; } }
        public Object LocalizeTextDataTableMap { get { return this[nameof(LocalizeTextDataTableMap)]; } set { this[nameof(LocalizeTextDataTableMap)] = value; } }
        public Object Access_LocalizeTextDataTables { get { return this[nameof(Access_LocalizeTextDataTables)]; } set { this[nameof(Access_LocalizeTextDataTables)] = value; } }
        public DataTable UIInputActionDataTable { get { return this[nameof(UIInputActionDataTable)].As<DataTable>(); } set { this["UIInputActionDataTable"] = value; } }
        public PalMasterDataTableAccess_UIInputActionData Access_UIInputActionDataTable { get { return this[nameof(Access_UIInputActionDataTable)].As<PalMasterDataTableAccess_UIInputActionData>(); } set { this["Access_UIInputActionDataTable"] = value; } }
        public PalTechnologyDataSet technologyDataSet { get { return this[nameof(technologyDataSet)].As<PalTechnologyDataSet>(); } set { this["technologyDataSet"] = value; } }
        public DataTable worldMapDataTable { get { return this[nameof(worldMapDataTable)].As<DataTable>(); } set { this["worldMapDataTable"] = value; } }
        public DataTable ItemShopLotteryDataTable { get { return this[nameof(ItemShopLotteryDataTable)].As<DataTable>(); } set { this["ItemShopLotteryDataTable"] = value; } }
        public PalMasterDataTableAccess_ItemShopLottery Access_ItemShopLotteryDataTable { get { return this[nameof(Access_ItemShopLotteryDataTable)].As<PalMasterDataTableAccess_ItemShopLottery>(); } set { this["Access_ItemShopLotteryDataTable"] = value; } }
        public DataTable ItemShopDataTable { get { return this[nameof(ItemShopDataTable)].As<DataTable>(); } set { this["ItemShopDataTable"] = value; } }
        public PalMasterDataTableAccess_ItemShop Access_ItemShopDataTable { get { return this[nameof(Access_ItemShopDataTable)].As<PalMasterDataTableAccess_ItemShop>(); } set { this["Access_ItemShopDataTable"] = value; } }
        public DataTable PalShopDataTable { get { return this[nameof(PalShopDataTable)].As<DataTable>(); } set { this["PalShopDataTable"] = value; } }
        public PalMasterDataTableAccess_PalShop Access_PalShopDataTable { get { return this[nameof(Access_PalShopDataTable)].As<PalMasterDataTableAccess_PalShop>(); } set { this["Access_PalShopDataTable"] = value; } }
    }
    public class PalMasterDataTablesUtility : BlueprintFunctionLibrary
    {
        public PalMasterDataTablesUtility(nint addr) : base(addr) { }
        public PalMasterDataTableAccess_WildSpawnerData GetWildSpawnerDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_WildSpawnerData>(nameof(GetWildSpawnerDataTableAccess), WorldContextObject); }
        public DataTable GetWildSpawnerDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetWildSpawnerDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_UIInputActionData GetUIInputActionDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_UIInputActionData>(nameof(GetUIInputActionDataTableAccess), WorldContextObject); }
        public DataTable GetUIInputActionDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetUIInputActionDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_PlayerStatusRankData GetPlayerStatusRankDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_PlayerStatusRankData>(nameof(GetPlayerStatusRankDataTableAccess), WorldContextObject); }
        public DataTable GetPlayerStatusRankDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetPlayerStatusRankDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_PalShop GetPalShopDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_PalShop>(nameof(GetPalShopDataTableAccess), WorldContextObject); }
        public DataTable GetPalShopDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetPalShopDataTable), WorldContextObject); }
        public PalNoteDataAsset GetNoteDataAsset(Object WorldContextObject) { return Invoke<PalNoteDataAsset>(nameof(GetNoteDataAsset), WorldContextObject); }
        public PalMasterDataTableAccess_MapObjectMasterData GetMapObjectDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_MapObjectMasterData>(nameof(GetMapObjectDataTableAccess), WorldContextObject); }
        public DataTable GetMapObjectDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetMapObjectDataTable), WorldContextObject); }
        public Object GetLocalizedText(Object WorldContextObject, EPalLocalizeTextCategory TextCategory, Object TextId) { return Invoke<Object>(nameof(GetLocalizedText), WorldContextObject, TextCategory, TextId); }
        public PalMasterDataTableAccess_ItemShopLottery GetItemShopLotteryDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_ItemShopLottery>(nameof(GetItemShopLotteryDataTableAccess), WorldContextObject); }
        public DataTable GetItemShopLotteryDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetItemShopLotteryDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_ItemShop GetItemShopDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_ItemShop>(nameof(GetItemShopDataTableAccess), WorldContextObject); }
        public DataTable GetItemShopDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetItemShopDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_ItemRecipe GetItemRecipeDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_ItemRecipe>(nameof(GetItemRecipeDataTableAccess), WorldContextObject); }
        public DataTable GetItemRecipeDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetItemRecipeDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_ItemLotteryData GetItemLotteryDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_ItemLotteryData>(nameof(GetItemLotteryDataTableAccess), WorldContextObject); }
        public DataTable GetItemLotteryDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetItemLotteryDataTable), WorldContextObject); }
        public PalNoteDataAsset GetHelpGuideDataAsset(Object WorldContextObject) { return Invoke<PalNoteDataAsset>(nameof(GetHelpGuideDataAsset), WorldContextObject); }
        public PalMasterDataTableAccess_FieldLotteryNameData GetFieldLotteryNameDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_FieldLotteryNameData>(nameof(GetFieldLotteryNameDataTableAccess), WorldContextObject); }
        public DataTable GetFieldLotteryNameDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetFieldLotteryNameDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_FarmCropData GetFarmCropDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_FarmCropData>(nameof(GetFarmCropDataTableAccess), WorldContextObject); }
        public DataTable GetFarmCropDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetFarmCropDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_DungeonSpawnAreaData GetDungeonSpawnAreaDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_DungeonSpawnAreaData>(nameof(GetDungeonSpawnAreaDataTableAccess), WorldContextObject); }
        public DataTable GetDungeonSpawnAreaDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetDungeonSpawnAreaDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_DungeonLevelData GetDungeonLevelDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_DungeonLevelData>(nameof(GetDungeonLevelDataTableAccess), WorldContextObject); }
        public DataTable GetDungeonLevelDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetDungeonLevelDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_DungeonItemLotteryData GetDungeonItemLotteryDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_DungeonItemLotteryData>(nameof(GetDungeonItemLotteryDataTableAccess), WorldContextObject); }
        public DataTable GetDungeonItemLotteryDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetDungeonItemLotteryDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_DungeonEnemySpawnerData GetDungeonEnemySpawnerDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_DungeonEnemySpawnerData>(nameof(GetDungeonEnemySpawnerDataTableAccess), WorldContextObject); }
        public DataTable GetDungeonEnemySpawnerDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetDungeonEnemySpawnerDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_CharacterUpgradeData GetCharacterUpgradeDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_CharacterUpgradeData>(nameof(GetCharacterUpgradeDataTableAccess), WorldContextObject); }
        public DataTable GetCharacterUpgradeDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetCharacterUpgradeDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_BuildObjectIconData GetBuildObjectIconDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_BuildObjectIconData>(nameof(GetBuildObjectIconDataTableAccess), WorldContextObject); }
        public DataTable GetBuildObjectIconDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetBuildObjectIconDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_BuildObjectData GetBuildObjectDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_BuildObjectData>(nameof(GetBuildObjectDataTableAccess), WorldContextObject); }
        public DataTable GetBuildObjectDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetBuildObjectDataTable), WorldContextObject); }
        public PalMasterDataTableAccess_BaseCampLevelData GetBaseCampLevelDataTableAccess(Object WorldContextObject) { return Invoke<PalMasterDataTableAccess_BaseCampLevelData>(nameof(GetBaseCampLevelDataTableAccess), WorldContextObject); }
        public DataTable GetBaseCampLevelDataTable(Object WorldContextObject) { return Invoke<DataTable>(nameof(GetBaseCampLevelDataTable), WorldContextObject); }
    }
    public class PalMoneyData : Object
    {
        public PalMoneyData(nint addr) : base(addr) { }
        public Object OnUpdatedMoneyDelegate { get { return this[nameof(OnUpdatedMoneyDelegate)]; } set { this[nameof(OnUpdatedMoneyDelegate)] = value; } }
        public Object OnAddMoneyDelegate { get { return this[nameof(OnAddMoneyDelegate)]; } set { this[nameof(OnAddMoneyDelegate)] = value; } }
        public PalPlayerInventoryData parentInventoryData { get { return this[nameof(parentInventoryData)].As<PalPlayerInventoryData>(); } set { this["parentInventoryData"] = value; } }
        public void UpdatedMoneyDelegate__DelegateSignature(long NowMoney) { Invoke(nameof(UpdatedMoneyDelegate__DelegateSignature), NowMoney); }
        public void OnUpdateInventorylContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateInventorylContainer), Container); }
        public long GetNowMoney() { return Invoke<long>(nameof(GetNowMoney)); }
        public void AddMoneyDelegate__DelegateSignature(long OldMoney, long AddMoney) { Invoke(nameof(AddMoneyDelegate__DelegateSignature), OldMoney, AddMoney); }
    }
    public class PalNPC : PalCharacter
    {
        public PalNPC(nint addr) : base(addr) { }
        public PalNPCWeaponGenerator WeaponGenerator { get { return this[nameof(WeaponGenerator)].As<PalNPCWeaponGenerator>(); } set { this["WeaponGenerator"] = value; } }
        public bool IsEnableJumpEffect { get { return this[nameof(IsEnableJumpEffect)].Flag; } set { this[nameof(IsEnableJumpEffect)].Flag = value; } }
        public int DefaultVoiceID { get { return this[nameof(DefaultVoiceID)].GetValue<int>(); } set { this[nameof(DefaultVoiceID)].SetValue<int>(value); } }
        public void OnCompletedInitParam(PalCharacter InCharacter) { Invoke(nameof(OnCompletedInitParam), InCharacter); }
    }
    public class PalMonsterCharacter : PalNPC
    {
        public PalMonsterCharacter(nint addr) : base(addr) { }
        public Object InteractiveObj { get { return this[nameof(InteractiveObj)]; } set { this[nameof(InteractiveObj)] = value; } }
        public PalCharacterLiftupObjectComponent LiftupObjectComponent { get { return this[nameof(LiftupObjectComponent)].As<PalCharacterLiftupObjectComponent>(); } set { this["LiftupObjectComponent"] = value; } }
        public void SelectedFeedingItem(PalItemSlotId itemSlotId, int Num) { Invoke(nameof(SelectedFeedingItem), itemSlotId, Num); }
        public void OnTriggerInteract(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), OtherActor, IndicatorType); }
        public void OnSelectedOrderWorkerRadialMenu(PalHUDDispatchParameterBase Parameter) { Invoke(nameof(OnSelectedOrderWorkerRadialMenu), Parameter); }
        public void MasterWazaUpdateWhenLevelUp(int addLevel, int nowLevel) { Invoke(nameof(MasterWazaUpdateWhenLevelUp), addLevel, nowLevel); }
        public void MasterWazaSetup(PalCharacter InCharacter) { Invoke(nameof(MasterWazaSetup), InCharacter); }
        public bool IsLiftupObject() { return Invoke<bool>(nameof(IsLiftupObject)); }
    }
    public class PalMonsterControllerBaseCampLogTypeUtility : BlueprintFunctionLibrary
    {
        public PalMonsterControllerBaseCampLogTypeUtility(nint addr) : base(addr) { }
    }
    public class PalMonsterControllerBaseCampUtility : BlueprintFunctionLibrary
    {
        public PalMonsterControllerBaseCampUtility(nint addr) : base(addr) { }
        public PalMonsterControllerBaseCampHungryParameter SetHungryParameterToDefault(Object WorldObjectContext, PalMonsterControllerBaseCampHungryParameter Parameter) { return Invoke<PalMonsterControllerBaseCampHungryParameter>(nameof(SetHungryParameterToDefault), WorldObjectContext, Parameter); }
    }
    public class PalMonsterControllerBaseCampInterface : Interface
    {
        public PalMonsterControllerBaseCampInterface(nint addr) : base(addr) { }
        public void TerminateBaseCampActionByClass(Object actionClass) { Invoke(nameof(TerminateBaseCampActionByClass), actionClass); }
        public void SetDefaultPositionAction() { Invoke(nameof(SetDefaultPositionAction)); }
        public void SetCapturedStorageAction() { Invoke(nameof(SetCapturedStorageAction)); }
        public void SetBaseCampFighterGunnerAction() { Invoke(nameof(SetBaseCampFighterGunnerAction)); }
        public void SetBaseCampFighterAction() { Invoke(nameof(SetBaseCampFighterAction)); }
        public void SetBaseCampActionWithFixAssign(Guid TargetWorkProgressId, float DistanceFixAssignTargetting) { Invoke(nameof(SetBaseCampActionWithFixAssign), TargetWorkProgressId, DistanceFixAssignTargetting); }
        public void SetBaseCampActionSpawningForWork() { Invoke(nameof(SetBaseCampActionSpawningForWork)); }
        public void SetBaseCampActionSleepMedicalBed(Guid TargetBedConcreteModelId) { Invoke(nameof(SetBaseCampActionSleepMedicalBed), TargetBedConcreteModelId); }
        public PalAIActionBaseCampSleep SetBaseCampActionSleep() { return Invoke<PalAIActionBaseCampSleep>(nameof(SetBaseCampActionSleep)); }
        public void SetBaseCampActionLift() { Invoke(nameof(SetBaseCampActionLift)); }
        public PalAIActionBase SetBaseCampActionByClass(Object actionClass) { return Invoke<PalAIActionBase>(nameof(SetBaseCampActionByClass), actionClass); }
        public void SetBaseCampAction() { Invoke(nameof(SetBaseCampAction)); }
        public void NotifyOrderCommand(EPalMapBaseCampWorkerOrderType OrderType) { Invoke(nameof(NotifyOrderCommand), OrderType); }
        public void InterruptSleepActivelyAction(PalAIActionBaseCampSleepActivelyParameter Parameter) { Invoke(nameof(InterruptSleepActivelyAction), Parameter); }
        public void InterruptReturnBackToBaseCamp() { Invoke(nameof(InterruptReturnBackToBaseCamp)); }
        public void InterruptRecoverHungryAction(PalMonsterControllerBaseCampHungryParameter Parameter) { Invoke(nameof(InterruptRecoverHungryAction), Parameter); }
        public void InterruptPlayWorkerEventAction(PalAIActionBase action, byte Priority) { Invoke(nameof(InterruptPlayWorkerEventAction), action, Priority); }
    }
    public class PalMonsterControllerLogInterface : Interface
    {
        public PalMonsterControllerLogInterface(nint addr) : base(addr) { }
        public void ShowBaseCampLog(PalMonsterControllerBaseCampLogContent Content) { Invoke(nameof(ShowBaseCampLog), Content); }
    }
    public class PalWeaponBase : Actor
    {
        public PalWeaponBase(nint addr) : base(addr) { }
        public Object OnReloadDelegate { get { return this[nameof(OnReloadDelegate)]; } set { this[nameof(OnReloadDelegate)] = value; } }
        public Object OnUseBulletDelegate { get { return this[nameof(OnUseBulletDelegate)]; } set { this[nameof(OnUseBulletDelegate)] = value; } }
        public Object OnShootBulletDelegate { get { return this[nameof(OnShootBulletDelegate)]; } set { this[nameof(OnShootBulletDelegate)] = value; } }
        public Object OnChangeCoolDownStateDelegate { get { return this[nameof(OnChangeCoolDownStateDelegate)]; } set { this[nameof(OnChangeCoolDownStateDelegate)] = value; } }
        public Object OnCoolDownUpdateDelegate { get { return this[nameof(OnCoolDownUpdateDelegate)]; } set { this[nameof(OnCoolDownUpdateDelegate)] = value; } }
        public Object OnCreatedBulletDelegate { get { return this[nameof(OnCreatedBulletDelegate)]; } set { this[nameof(OnCreatedBulletDelegate)] = value; } }
        public Object OnGetWeaponDamageDelegate { get { return this[nameof(OnGetWeaponDamageDelegate)]; } set { this[nameof(OnGetWeaponDamageDelegate)] = value; } }
        public Object OnAttachWeaponDelegate { get { return this[nameof(OnAttachWeaponDelegate)]; } set { this[nameof(OnAttachWeaponDelegate)] = value; } }
        public Object OnDetachWeaponDelegate { get { return this[nameof(OnDetachWeaponDelegate)]; } set { this[nameof(OnDetachWeaponDelegate)] = value; } }
        public Object OnWeaponNotifyDelegate { get { return this[nameof(OnWeaponNotifyDelegate)]; } set { this[nameof(OnWeaponNotifyDelegate)] = value; } }
        public float BulletDeleteTime { get { return this[nameof(BulletDeleteTime)].GetValue<float>(); } set { this[nameof(BulletDeleteTime)].SetValue<float>(value); } }
        public float BulletDecayStartRate { get { return this[nameof(BulletDecayStartRate)].GetValue<float>(); } set { this[nameof(BulletDecayStartRate)].SetValue<float>(value); } }
        public CurveFloat RecoilCurve { get { return this[nameof(RecoilCurve)].As<CurveFloat>(); } set { this["RecoilCurve"] = value; } }
        public float RecoilYawRange { get { return this[nameof(RecoilYawRange)].GetValue<float>(); } set { this[nameof(RecoilYawRange)].SetValue<float>(value); } }
        public float RecoilPitchTotalMax { get { return this[nameof(RecoilPitchTotalMax)].GetValue<float>(); } set { this[nameof(RecoilPitchTotalMax)].SetValue<float>(value); } }
        public float RecoilDecaySpeed { get { return this[nameof(RecoilDecaySpeed)].GetValue<float>(); } set { this[nameof(RecoilDecaySpeed)].SetValue<float>(value); } }
        public Object ShotCameraShake { get { return this[nameof(ShotCameraShake)]; } set { this[nameof(ShotCameraShake)] = value; } }
        public EWeaponCoopType WeaponCoopType { get { return (EWeaponCoopType)this[nameof(WeaponCoopType)].GetValue<int>(); } set { this[nameof(WeaponCoopType)].SetValue<int>((int)value); } }
        public EPalWeaponType WeaponType { get { return (EPalWeaponType)this[nameof(WeaponType)].GetValue<int>(); } set { this[nameof(WeaponType)].SetValue<int>((int)value); } }
        public bool IsRequiredBullet { get { return this[nameof(IsRequiredBullet)].Flag; } set { this[nameof(IsRequiredBullet)].Flag = value; } }
        public Object BulletItemName { get { return this[nameof(BulletItemName)]; } set { this[nameof(BulletItemName)] = value; } }
        public MaterialInterface ShootBlurMaterial { get { return this[nameof(ShootBlurMaterial)].As<MaterialInterface>(); } set { this["ShootBlurMaterial"] = value; } }
        public CurveFloat ShootBlurAlphaCurve { get { return this[nameof(ShootBlurAlphaCurve)].As<CurveFloat>(); } set { this["ShootBlurAlphaCurve"] = value; } }
        public Array<PalSpecialAttackRateInfo> SpecialAttackRateInfos { get { return new Array<PalSpecialAttackRateInfo>(this[nameof(SpecialAttackRateInfos)].Address); } }
        public Object weaponIconTexture { get { return this[nameof(weaponIconTexture)]; } set { this[nameof(weaponIconTexture)] = value; } }
        public EPalDamageAnimationReactionType weaponBulletDamageReactionType { get { return (EPalDamageAnimationReactionType)this[nameof(weaponBulletDamageReactionType)].GetValue<int>(); } set { this[nameof(weaponBulletDamageReactionType)].SetValue<int>((int)value); } }
        public Object PalSoundSlotClass { get { return this[nameof(PalSoundSlotClass)]; } set { this[nameof(PalSoundSlotClass)] = value; } }
        public Object PlaySoundIds { get { return this[nameof(PlaySoundIds)]; } set { this[nameof(PlaySoundIds)] = value; } }
        public bool IsEmptyOtomoPal { get { return this[nameof(IsEmptyOtomoPal)].Flag; } set { this[nameof(IsEmptyOtomoPal)].Flag = value; } }
        public float CoolDownTime { get { return this[nameof(CoolDownTime)].GetValue<float>(); } set { this[nameof(CoolDownTime)].SetValue<float>(value); } }
        public MaterialInstanceDynamic ShootBlurMaterialDynamic { get { return this[nameof(ShootBlurMaterialDynamic)].As<MaterialInstanceDynamic>(); } set { this["ShootBlurMaterialDynamic"] = value; } }
        public PalItemId ownItemID { get { return this[nameof(ownItemID)].As<PalItemId>(); } set { this["ownItemID"] = value; } }
        public PalItemData ownItemData { get { return this[nameof(ownItemData)].As<PalItemData>(); } set { this["ownItemData"] = value; } }
        public PalStaticWeaponItemData ownWeaponStaticData { get { return this[nameof(ownWeaponStaticData)].As<PalStaticWeaponItemData>(); } set { this["ownWeaponStaticData"] = value; } }
        public PalDynamicWeaponItemDataBase ownWeaponDynamicData { get { return this[nameof(ownWeaponDynamicData)].As<PalDynamicWeaponItemDataBase>(); } set { this["ownWeaponDynamicData"] = value; } }
        public FlagContainer HiddenWeapon { get { return this[nameof(HiddenWeapon)].As<FlagContainer>(); } set { this["HiddenWeapon"] = value; } }
        public PalSoundSlot PalSoundSlotCache { get { return this[nameof(PalSoundSlotCache)].As<PalSoundSlot>(); } set { this["PalSoundSlotCache"] = value; } }
        public float RecoilPowerRate { get { return this[nameof(RecoilPowerRate)].GetValue<float>(); } set { this[nameof(RecoilPowerRate)].SetValue<float>(value); } }
        public bool IsScopeMode { get { return this[nameof(IsScopeMode)].Flag; } set { this[nameof(IsScopeMode)].Flag = value; } }
        public bool IsOneBulletReloadWeapon { get { return this[nameof(IsOneBulletReloadWeapon)].Flag; } set { this[nameof(IsOneBulletReloadWeapon)].Flag = value; } }
        public float DelayDestorySecond { get { return this[nameof(DelayDestorySecond)].GetValue<float>(); } set { this[nameof(DelayDestorySecond)].SetValue<float>(value); } }
        public bool IsUnnecessaryDynamicData { get { return this[nameof(IsUnnecessaryDynamicData)].Flag; } set { this[nameof(IsUnnecessaryDynamicData)].Flag = value; } }
        public EPalShooterFlagContainerPriority ShooterFlagPriority { get { return (EPalShooterFlagContainerPriority)this[nameof(ShooterFlagPriority)].GetValue<int>(); } set { this[nameof(ShooterFlagPriority)].SetValue<int>((int)value); } }
        public Object BackWeaponClass { get { return this[nameof(BackWeaponClass)]; } set { this[nameof(BackWeaponClass)] = value; } }
        public PalBackWeaponBase BackWeaponModel { get { return this[nameof(BackWeaponModel)].As<PalBackWeaponBase>(); } set { this["BackWeaponModel"] = value; } }
        public int LoadoutSelectorIndex { get { return this[nameof(LoadoutSelectorIndex)].GetValue<int>(); } set { this[nameof(LoadoutSelectorIndex)].SetValue<int>(value); } }
        public void WeaponNotifyDelegate__DelegateSignature(EWeaponNotifyType NotifyType) { Invoke(nameof(WeaponNotifyDelegate__DelegateSignature), NotifyType); }
        public void UseBulletDelegate__DelegateSignature(int remainingBulletsNum) { Invoke(nameof(UseBulletDelegate__DelegateSignature), remainingBulletsNum); }
        public void UnbindGetWeaponDamageDelegate() { Invoke(nameof(UnbindGetWeaponDamageDelegate)); }
        public PalDynamicWeaponItemDataBase TryGetDynamicWeaponData() { return Invoke<PalDynamicWeaponItemDataBase>(nameof(TryGetDynamicWeaponData)); }
        public void StartCoolDown() { Invoke(nameof(StartCoolDown)); }
        public void SetupWeaponSkill() { Invoke(nameof(SetupWeaponSkill)); }
        public void SetHiddenWeaponMyself(bool isHidden) { Invoke(nameof(SetHiddenWeaponMyself), isHidden); }
        public void SetHiddenWeaponDefault(bool isHidden) { Invoke(nameof(SetHiddenWeaponDefault), isHidden); }
        public void SetHiddenWeapon(Object flagName, bool isHidden) { Invoke(nameof(SetHiddenWeapon), flagName, isHidden); }
        public void SendWeaponNotify(EWeaponNotifyType Type) { Invoke(nameof(SendWeaponNotify), Type); }
        public bool SeekRightHandOpen() { return Invoke<bool>(nameof(SeekRightHandOpen)); }
        public bool SeekLeftHandOpen() { return Invoke<bool>(nameof(SeekLeftHandOpen)); }
        public void RPCDummy() { Invoke(nameof(RPCDummy)); }
        public void RequestConsumeItem_ForThrowWeapon(Object StaticItemId, int ConsumeNum) { Invoke(nameof(RequestConsumeItem_ForThrowWeapon), StaticItemId, ConsumeNum); }
        public void RequestConsumeItem(Object StaticItemId, int ConsumeNum) { Invoke(nameof(RequestConsumeItem), StaticItemId, ConsumeNum); }
        public void ReloadBulletsDelegate__DelegateSignature(int bulletsNum) { Invoke(nameof(ReloadBulletsDelegate__DelegateSignature), bulletsNum); }
        public bool ReloadBullets() { return Invoke<bool>(nameof(ReloadBullets)); }
        public void PlaySoundWithOption(PalDataTableRowName_SoundID ID, PalSoundOptions Arg) { Invoke(nameof(PlaySoundWithOption), ID, Arg); }
        public void PlaySound(PalDataTableRowName_SoundID ID) { Invoke(nameof(PlaySound), ID); }
        public void OnWeaponNotify(EWeaponNotifyType Type) { Invoke(nameof(OnWeaponNotify), Type); }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnShootBulletDelegate__DelegateSignature() { Invoke(nameof(OnShootBulletDelegate__DelegateSignature)); }
        public void OnRequestClosing() { Invoke(nameof(OnRequestClosing)); }
        public void OnReloadStart() { Invoke(nameof(OnReloadStart)); }
        public void OnReleaseTrigger() { Invoke(nameof(OnReleaseTrigger)); }
        public void OnPullTrigger() { Invoke(nameof(OnPullTrigger)); }
        public void OnPullCancel() { Invoke(nameof(OnPullCancel)); }
        public void OnEndAim() { Invoke(nameof(OnEndAim)); }
        public void OnDetachWeaponDelegate__DelegateSignature() { Invoke(nameof(OnDetachWeaponDelegate__DelegateSignature)); }
        public void OnDetachWeapon(Actor detachActor) { Invoke(nameof(OnDetachWeapon), detachActor); }
        public void OnCreatedBullet(PalBullet Bullet) { Invoke(nameof(OnCreatedBullet), Bullet); }
        public void OnCoolDownUpdateDelegate__DelegateSignature(float RemainingTime, float CoolDownTime) { Invoke(nameof(OnCoolDownUpdateDelegate__DelegateSignature), RemainingTime, CoolDownTime); }
        public void OnChangeTargetDirection(Vector Direction) { Invoke(nameof(OnChangeTargetDirection), Direction); }
        public void OnChangeCoolDownStateDelegate__DelegateSignature(bool IsStart) { Invoke(nameof(OnChangeCoolDownStateDelegate__DelegateSignature), IsStart); }
        public void OnAttachWeaponDelegate__DelegateSignature() { Invoke(nameof(OnAttachWeaponDelegate__DelegateSignature)); }
        public void OnAttachWeapon(Actor attachActor) { Invoke(nameof(OnAttachWeapon), attachActor); }
        public bool IsUseLeftHandAttach() { return Invoke<bool>(nameof(IsUseLeftHandAttach)); }
        public bool IsHiddenWeapon() { return Invoke<bool>(nameof(IsHiddenWeapon)); }
        public bool IsFullMagazine() { return Invoke<bool>(nameof(IsFullMagazine)); }
        public bool IsExistBulletInPlayerInventory() { return Invoke<bool>(nameof(IsExistBulletInPlayerInventory)); }
        public bool IsEnableAutoAim() { return Invoke<bool>(nameof(IsEnableAutoAim)); }
        public bool IsEmptyMagazine() { return Invoke<bool>(nameof(IsEmptyMagazine)); }
        public bool IsCoolDown() { return Invoke<bool>(nameof(IsCoolDown)); }
        public int GetWeaponEffectValue() { return Invoke<int>(nameof(GetWeaponEffectValue)); }
        public EPalAdditionalEffectType GetWeaponEffectType() { return Invoke<EPalAdditionalEffectType>(nameof(GetWeaponEffectType)); }
        public int GetWeaponDamageFromDelegate() { return Invoke<int>(nameof(GetWeaponDamageFromDelegate)); }
        public int GetWeaponDamageDelegate__DelegateSignature() { return Invoke<int>(nameof(GetWeaponDamageDelegate__DelegateSignature)); }
        public int GetWeaponDamage() { return Invoke<int>(nameof(GetWeaponDamage)); }
        public int GetWeaponBaseDamage() { return Invoke<int>(nameof(GetWeaponBaseDamage)); }
        public Actor GetWeaponAttacker() { return Invoke<Actor>(nameof(GetWeaponAttacker)); }
        public float GetSneakAttackRate() { return Invoke<float>(nameof(GetSneakAttackRate)); }
        public Array<PalPassiveSkillEffect> GetSkillEffectList() { return Invoke<Array<PalPassiveSkillEffect>>(nameof(GetSkillEffectList)); }
        public float GetShooterComponentBlurRate() { return Invoke<float>(nameof(GetShooterComponentBlurRate)); }
        public void GetRequiredBulletName(Object outName) { Invoke(nameof(GetRequiredBulletName), outName); }
        public float GetRemainingCoolDownTime() { return Invoke<float>(nameof(GetRemainingCoolDownTime)); }
        public int GetRemainBulletCount() { return Invoke<int>(nameof(GetRemainBulletCount)); }
        public float GetRandomFloat(float Min, float Max) { return Invoke<float>(nameof(GetRandomFloat), Min, Max); }
        public float GetParameterWithPassiveSkillEffect(float originalValue, EPalPassiveSkillEffectType EffectType) { return Invoke<float>(nameof(GetParameterWithPassiveSkillEffect), originalValue, EffectType); }
        public PalCharacter GetOwnerCharacter() { return Invoke<PalCharacter>(nameof(GetOwnerCharacter)); }
        public int GetNPCWeaponDamage() { return Invoke<int>(nameof(GetNPCWeaponDamage)); }
        public SceneComponent GetMainMesh() { return Invoke<SceneComponent>(nameof(GetMainMesh)); }
        public int GetMagazineSize() { return Invoke<int>(nameof(GetMagazineSize)); }
        public Transform GetLeftHandTransform() { return Invoke<Transform>(nameof(GetLeftHandTransform)); }
        public PalItemId GetItemId() { return Invoke<PalItemId>(nameof(GetItemId)); }
        public Object GetEquipSocketName() { return Invoke<Object>(nameof(GetEquipSocketName)); }
        public float GetDefaultBlurAngle() { return Invoke<float>(nameof(GetDefaultBlurAngle)); }
        public float GetBlurModifierValue() { return Invoke<float>(nameof(GetBlurModifierValue)); }
        public int DecrementCurrentSelectPalSphere(int RequestConsumeNum, Object UsedItemID) { return Invoke<int>(nameof(DecrementCurrentSelectPalSphere), RequestConsumeNum, UsedItemID); }
        public bool DecrementBullet() { return Invoke<bool>(nameof(DecrementBullet)); }
        public void CreatedBulletDelegate__DelegateSignature(PalBullet Bullet) { Invoke(nameof(CreatedBulletDelegate__DelegateSignature), Bullet); }
        public void ClearWeaponSkill() { Invoke(nameof(ClearWeaponSkill)); }
        public float CalcStability() { return Invoke<float>(nameof(CalcStability)); }
        public float CalcRange() { return Invoke<float>(nameof(CalcRange)); }
        public float CalcDPS() { return Invoke<float>(nameof(CalcDPS)); }
        public float CalcAccuracy() { return Invoke<float>(nameof(CalcAccuracy)); }
    }
    public class PalMonsterEquipWeaponBase : PalWeaponBase
    {
        public PalMonsterEquipWeaponBase(nint addr) : base(addr) { }
        public Vector BattleAimTargetLocation { get { return this[nameof(BattleAimTargetLocation)].As<Vector>(); } set { this["BattleAimTargetLocation"] = value; } }
        public PalBullet ShootOneBulletDefault() { return Invoke<PalBullet>(nameof(ShootOneBulletDefault)); }
        public PalBullet ShootOneBullet(Object bulletClass, NiagaraSystem MuzzleEffect, Vector MuzzleLocation, Rotator MuzzleRotate, float BulrAngle) { return Invoke<PalBullet>(nameof(ShootOneBullet), bulletClass, MuzzleEffect, MuzzleLocation, MuzzleRotate, BulrAngle); }
        public Rotator GetMuzzleRotation() { return Invoke<Rotator>(nameof(GetMuzzleRotation)); }
        public Vector GetMuzzleLocation() { return Invoke<Vector>(nameof(GetMuzzleLocation)); }
        public NiagaraSystem GetMuzzleEffect() { return Invoke<NiagaraSystem>(nameof(GetMuzzleEffect)); }
        public Vector GetCommonTargetLocation() { return Invoke<Vector>(nameof(GetCommonTargetLocation)); }
        public float GetBulrAngle() { return Invoke<float>(nameof(GetBulrAngle)); }
        public Object GetBulletClass() { return Invoke<Object>(nameof(GetBulletClass)); }
    }
    public class PalNavArea_HighObstacle : NavArea
    {
        public PalNavArea_HighObstacle(nint addr) : base(addr) { }
    }
    public class PalNavigationInvokerComponent : NavigationInvokerComponent
    {
        public PalNavigationInvokerComponent(nint addr) : base(addr) { }
        public bool bIsAutoActivateInvoker { get { return this[nameof(bIsAutoActivateInvoker)].Flag; } set { this[nameof(bIsAutoActivateInvoker)].Flag = value; } }
        public bool bIsWaitWorldPartition { get { return this[nameof(bIsWaitWorldPartition)].Flag; } set { this[nameof(bIsWaitWorldPartition)].Flag = value; } }
        public IntPoint AreaBelongTo { get { return this[nameof(AreaBelongTo)].As<IntPoint>(); } set { this["AreaBelongTo"] = value; } }
        public FlagContainer IsDisableInvorkerFlag { get { return this[nameof(IsDisableInvorkerFlag)].As<FlagContainer>(); } set { this["IsDisableInvorkerFlag"] = value; } }
        public void SetDisableInvorkerFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableInvorkerFlag), flagName, isDisable); }
        public bool IsDisableInvorker() { return Invoke<bool>(nameof(IsDisableInvorker)); }
        public void ActivateInvoker() { Invoke(nameof(ActivateInvoker)); }
    }
    public class PalNavigationSystemV1 : NavigationSystemV1
    {
        public PalNavigationSystemV1(nint addr) : base(addr) { }
        public int UpdateInvokerCounter { get { return this[nameof(UpdateInvokerCounter)].GetValue<int>(); } set { this[nameof(UpdateInvokerCounter)].SetValue<int>(value); } }
    }
    public class PalNetArchiveObject : Object
    {
        public PalNetArchiveObject(nint addr) : base(addr) { }
    }
    public class PalNetworkBaseCampComponent : ActorComponent
    {
        public PalNetworkBaseCampComponent(nint addr) : base(addr) { }
        public void RequestModule_Server_void(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName) { Invoke(nameof(RequestModule_Server_void), BaseCampId, ModuleType, FunctionName); }
        public void RequestModule_Server_int32(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(RequestModule_Server_int32), BaseCampId, ModuleType, FunctionName, Value); }
        public void RequestModule_Server_FVector(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(RequestModule_Server_FVector), BaseCampId, ModuleType, FunctionName, Value); }
        public void RequestModule_Server_FPalNetArchive(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(RequestModule_Server_FPalNetArchive), BaseCampId, ModuleType, FunctionName, Value); }
        public void RequestModule_Server_bool(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(RequestModule_Server_bool), BaseCampId, ModuleType, FunctionName, Value); }
        public void Request_Server_void(Guid BaseCampId, Object FunctionName) { Invoke(nameof(Request_Server_void), BaseCampId, FunctionName); }
        public void Request_Server_int32(Guid BaseCampId, Object FunctionName, int Value) { Invoke(nameof(Request_Server_int32), BaseCampId, FunctionName, Value); }
        public void Request_Server_FVector(Guid BaseCampId, Object FunctionName, Vector Value) { Invoke(nameof(Request_Server_FVector), BaseCampId, FunctionName, Value); }
        public void Request_Server_FPalNetArchive(Guid BaseCampId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(Request_Server_FPalNetArchive), BaseCampId, FunctionName, Value); }
        public void Request_Server_bool(Guid BaseCampId, Object FunctionName, bool Value) { Invoke(nameof(Request_Server_bool), BaseCampId, FunctionName, Value); }
        public void NotifyModule_RequestClient_void(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName) { Invoke(nameof(NotifyModule_RequestClient_void), BaseCampId, ModuleType, FunctionName); }
        public void NotifyModule_RequestClient_int32(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(NotifyModule_RequestClient_int32), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_RequestClient_FVector(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(NotifyModule_RequestClient_FVector), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_RequestClient_FPalNetArchive(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyModule_RequestClient_FPalNetArchive), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_RequestClient_bool(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(NotifyModule_RequestClient_bool), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_Multicast_void(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName) { Invoke(nameof(NotifyModule_Multicast_void), BaseCampId, ModuleType, FunctionName); }
        public void NotifyModule_Multicast_int32(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(NotifyModule_Multicast_int32), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_Multicast_FVector(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(NotifyModule_Multicast_FVector), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_Multicast_FPalNetArchive(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyModule_Multicast_FPalNetArchive), BaseCampId, ModuleType, FunctionName, Value); }
        public void NotifyModule_Multicast_bool(Guid BaseCampId, EPalBaseCampModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(NotifyModule_Multicast_bool), BaseCampId, ModuleType, FunctionName, Value); }
        public void Notify_RequestClient_void(Guid BaseCampId, Object FunctionName) { Invoke(nameof(Notify_RequestClient_void), BaseCampId, FunctionName); }
        public void Notify_RequestClient_int32(Guid BaseCampId, Object FunctionName, int Value) { Invoke(nameof(Notify_RequestClient_int32), BaseCampId, FunctionName, Value); }
        public void Notify_RequestClient_FVector(Guid BaseCampId, Object FunctionName, Vector Value) { Invoke(nameof(Notify_RequestClient_FVector), BaseCampId, FunctionName, Value); }
        public void Notify_RequestClient_FPalNetArchive(Guid BaseCampId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(Notify_RequestClient_FPalNetArchive), BaseCampId, FunctionName, Value); }
        public void Notify_RequestClient_bool(Guid BaseCampId, Object FunctionName, bool Value) { Invoke(nameof(Notify_RequestClient_bool), BaseCampId, FunctionName, Value); }
        public void Notify_Multicast_void(Guid BaseCampId, Object FunctionName) { Invoke(nameof(Notify_Multicast_void), BaseCampId, FunctionName); }
        public void Notify_Multicast_int32(Guid BaseCampId, Object FunctionName, int Value) { Invoke(nameof(Notify_Multicast_int32), BaseCampId, FunctionName, Value); }
        public void Notify_Multicast_FVector(Guid BaseCampId, Object FunctionName, Vector Value) { Invoke(nameof(Notify_Multicast_FVector), BaseCampId, FunctionName, Value); }
        public void Notify_Multicast_FPalNetArchive(Guid BaseCampId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(Notify_Multicast_FPalNetArchive), BaseCampId, FunctionName, Value); }
        public void Notify_Multicast_bool(Guid BaseCampId, Object FunctionName, bool Value) { Invoke(nameof(Notify_Multicast_bool), BaseCampId, FunctionName, Value); }
        public void BroadcastBaseCampWorkerLog_Server(EPalLogType DisplayLogType, PalInstanceID WorkerCharacterInstanceId, Object EventDataID) { Invoke(nameof(BroadcastBaseCampWorkerLog_Server), DisplayLogType, WorkerCharacterInstanceId, EventDataID); }
        public void BroadcastBaseCampLog_Server(PalMonsterControllerBaseCampLogContent LogContent) { Invoke(nameof(BroadcastBaseCampLog_Server), LogContent); }
        public void AddBaseCampWorkerLog_Client(EPalLogType DisplayLogType, PalInstanceID WorkerCharacterInstanceId, Object EventDataID) { Invoke(nameof(AddBaseCampWorkerLog_Client), DisplayLogType, WorkerCharacterInstanceId, EventDataID); }
        public void AddBaseCampLog_Client(PalMonsterControllerBaseCampLogContent LogContent) { Invoke(nameof(AddBaseCampLog_Client), LogContent); }
    }
    public class PalNetworkBossBattleComponent : ActorComponent
    {
        public PalNetworkBossBattleComponent(nint addr) : base(addr) { }
        public void UnlockAchievement_ToClient(EPalBossType BossType) { Invoke(nameof(UnlockAchievement_ToClient), BossType); }
        public void RequestBossBattleStart_ToServer(EPalBossType BossType, PalPlayerCharacter StartPlayer) { Invoke(nameof(RequestBossBattleStart_ToServer), BossType, StartPlayer); }
        public void RequestBossBattleStart_ToClient(bool IsSuccess, EPalBossType BossType, PalStageInstanceId StageInstanceId, Array<PalPlayerCharacter> JoinPlayers) { Invoke(nameof(RequestBossBattleStart_ToClient), IsSuccess, BossType, StageInstanceId, JoinPlayers); }
        public void RequestBossBattleEntry_ToServer(EPalBossType BossType, PalPlayerCharacter EntryPlayer) { Invoke(nameof(RequestBossBattleEntry_ToServer), BossType, EntryPlayer); }
        public void RemovePlayerFromRoom_ToClient(EPalBossType BossType, PalPlayerCharacter DeadPlayer) { Invoke(nameof(RemovePlayerFromRoom_ToClient), BossType, DeadPlayer); }
        public void NoticeSequenceEnd_ToServer(EPalBossType BossType, PalPlayerCharacter Player) { Invoke(nameof(NoticeSequenceEnd_ToServer), BossType, Player); }
        public void CombatResult_ToClient(EPalBossType BossType, EPalBossBattleCombatResult CombatResult) { Invoke(nameof(CombatResult_ToClient), BossType, CombatResult); }
        public void ChangeSequence_ToClient(EPalBossType BossType, EPalBossBattleSequenceType NextSequence) { Invoke(nameof(ChangeSequence_ToClient), BossType, NextSequence); }
    }
    public class PalNetworkCharacterComponent : ActorComponent
    {
        public PalNetworkCharacterComponent(nint addr) : base(addr) { }
        public void RequestReflectAction_ToServer(PalCharacter Character) { Invoke(nameof(RequestReflectAction_ToServer), Character); }
        public void ReflectAction_ToClient(PalCharacter Character, ActionDynamicParameter Param, Object actionClass) { Invoke(nameof(ReflectAction_ToClient), Character, Param, actionClass); }
        public void NotifyTalkStart_ToServer(PalPlayerCharacter TalkPlayer, PalCharacter TargetNPC) { Invoke(nameof(NotifyTalkStart_ToServer), TalkPlayer, TargetNPC); }
        public void NotifyTalkEnd_ToServer(PalPlayerCharacter TalkPlayer, PalCharacter TargetNPC) { Invoke(nameof(NotifyTalkEnd_ToServer), TalkPlayer, TargetNPC); }
    }
    public class PalNetworkCharacterContainerComponent : ActorComponent
    {
        public PalNetworkCharacterContainerComponent(nint addr) : base(addr) { }
        public Object ContainerParamMap { get { return this[nameof(ContainerParamMap)]; } set { this[nameof(ContainerParamMap)] = value; } }
        public void RequestUnlockSlot_ToServer(Guid RequestID, PalCharacterSlotId SlotID) { Invoke(nameof(RequestUnlockSlot_ToServer), RequestID, SlotID); }
        public void RequestSwap_ToServer_Rep(PalCharacterSlotId SlotIdA, PalCharacterSlotId SlotIdB) { Invoke(nameof(RequestSwap_ToServer_Rep), SlotIdA, SlotIdB); }
        public void RequestSortContainer_ToServer(PalContainerId ContainerId, EPalCharacterContainerSortType SortType) { Invoke(nameof(RequestSortContainer_ToServer), ContainerId, SortType); }
        public void RequestEmptySlot_ToServer_Rep(PalCharacterSlotId SlotID) { Invoke(nameof(RequestEmptySlot_ToServer_Rep), SlotID); }
        public void RequestAddToContainer_ToServer_Rep(PalContainerId ContainerId, PalInstanceID IndividualId) { Invoke(nameof(RequestAddToContainer_ToServer_Rep), ContainerId, IndividualId); }
        public void RecieveUnlockSlot_ToRequestClient(Guid RequestID, EPalCharacterContainerOperationResult Result) { Invoke(nameof(RecieveUnlockSlot_ToRequestClient), RequestID, Result); }
        public void RecieveUnlockSlot_ToClient(PalCharacterSlotId SlotID) { Invoke(nameof(RecieveUnlockSlot_ToClient), SlotID); }
    }
    public class PalNetworkCharacterStatusOperationComponent : ActorComponent
    {
        public PalNetworkCharacterStatusOperationComponent(nint addr) : base(addr) { }
        public Object OnReceiveRequestResultDelegate { get { return this[nameof(OnReceiveRequestResultDelegate)]; } set { this[nameof(OnReceiveRequestResultDelegate)] = value; } }
        public void RequestReviveCharacterFromDying_ToServer(PalCharacter Character) { Invoke(nameof(RequestReviveCharacterFromDying_ToServer), Character); }
        public void RequestReviveCharacterFromDying(PalCharacter Character) { Invoke(nameof(RequestReviveCharacterFromDying), Character); }
        public void RequestPlayerStatusUp_ToServer(int ToRank) { Invoke(nameof(RequestPlayerStatusUp_ToServer), ToRank); }
        public void RequestPlayerStatusClear_ToServer() { Invoke(nameof(RequestPlayerStatusClear_ToServer)); }
        public void RequestPlayerRankClear() { Invoke(nameof(RequestPlayerRankClear)); }
        public void RequestPlayerRankAdd(int ToRank) { Invoke(nameof(RequestPlayerRankAdd), ToRank); }
        public void RequestOtomoStatusPointClearAll_ToServer(PalInstanceID IndividualId) { Invoke(nameof(RequestOtomoStatusPointClearAll_ToServer), IndividualId); }
        public void RequestOtomoStatusPointClearAll(PalIndividualCharacterHandle IndividualHandle) { Invoke(nameof(RequestOtomoStatusPointClearAll), IndividualHandle); }
        public void RequestOtomoStatusPointClear_ToServer(PalInstanceID IndividualId, EPalCharacterStatusOperationName StatusName) { Invoke(nameof(RequestOtomoStatusPointClear_ToServer), IndividualId, StatusName); }
        public void RequestOtomoStatusPointClear(PalIndividualCharacterHandle IndividualHandle, EPalCharacterStatusOperationName StatusName) { Invoke(nameof(RequestOtomoStatusPointClear), IndividualHandle, StatusName); }
        public void RequestOtomoStatusPointAdd_ToServer(PalInstanceID IndividualId, EPalCharacterStatusOperationName StatusName, int ToRank) { Invoke(nameof(RequestOtomoStatusPointAdd_ToServer), IndividualId, StatusName, ToRank); }
        public void RequestOtomoStatusPointAdd(PalIndividualCharacterHandle IndividualHandle, EPalCharacterStatusOperationName StatusName, int ToRank) { Invoke(nameof(RequestOtomoStatusPointAdd), IndividualHandle, StatusName, ToRank); }
        public void ReceiveOperationResult_ToClient(EPalCharacterStatusOperationResult Result) { Invoke(nameof(ReceiveOperationResult_ToClient), Result); }
        public PalNetworkCharacterStatusOperationComponent NetCharacterStatusOperation(Object WorldContextObject) { return Invoke<PalNetworkCharacterStatusOperationComponent>(nameof(NetCharacterStatusOperation), WorldContextObject); }
    }
    public class PalNetworkComponentUtility : Object
    {
        public PalNetworkComponentUtility(nint addr) : base(addr) { }
    }
    public class PalNetworkGroupComponent : ActorComponent
    {
        public PalNetworkGroupComponent(nint addr) : base(addr) { }
        public void RequestJoinGuildRequestForPlayer_ToServer(Guid RequestPlayerUId, Guid TargetPlayerUId) { Invoke(nameof(RequestJoinGuildRequestForPlayer_ToServer), RequestPlayerUId, TargetPlayerUId); }
        public void RequestJoinGuildForPlayer_ToServer(Guid RequestPlayerUId, Guid TargetPlayerUId) { Invoke(nameof(RequestJoinGuildForPlayer_ToServer), RequestPlayerUId, TargetPlayerUId); }
        public void RequestExitGuild_ToServer(Guid TargetPlayerUId) { Invoke(nameof(RequestExitGuild_ToServer), TargetPlayerUId); }
        public void RequestChangeGuildName_ToServer(Guid GroupID, Object NewGuildName) { Invoke(nameof(RequestChangeGuildName_ToServer), GroupID, NewGuildName); }
        public void RequestChangeGuildAdmin_ToServer(Guid RequestPlayerUId, Guid TargetPlayerUId) { Invoke(nameof(RequestChangeGuildAdmin_ToServer), RequestPlayerUId, TargetPlayerUId); }
        public void NotifyJoinGuildRequestResult_ToServer(Guid RequestPlayerUId, Guid NotifyTargetPlayerUId, EPalGuildJoinRequestResult ResultType) { Invoke(nameof(NotifyJoinGuildRequestResult_ToServer), RequestPlayerUId, NotifyTargetPlayerUId, ResultType); }
    }
    public class PalNetworkIndividualComponent : ActorComponent
    {
        public PalNetworkIndividualComponent(nint addr) : base(addr) { }
        public void UpdateCharacterParameter_ToServer(PalInstanceID ID, PalNetArchive parameterArchive, Guid Guid) { Invoke(nameof(UpdateCharacterParameter_ToServer), ID, parameterArchive, Guid); }
        public void UpdateCharacterParameter_ToAll(PalInstanceID ID, PalNetArchive parameterArchive, Guid Guid) { Invoke(nameof(UpdateCharacterParameter_ToAll), ID, parameterArchive, Guid); }
        public void UpdateCharacterNickName_ToServer(PalInstanceID ID, Object newNickName) { Invoke(nameof(UpdateCharacterNickName_ToServer), ID, newNickName); }
        public void SpawnPhantomActor_ToServer(PalInstanceID ID, NetworkActorSpawnParameters SpawnParameter, Guid Guid) { Invoke(nameof(SpawnPhantomActor_ToServer), ID, SpawnParameter, Guid); }
        public void SpawnPhantomActor_ToALL(PalInstanceID ID, int PhantomId, Actor Actor, Guid Guid) { Invoke(nameof(SpawnPhantomActor_ToALL), ID, PhantomId, Actor, Guid); }
        public void SpawnPhantomActor_SyncCheck(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(SpawnPhantomActor_SyncCheck), ID, PhantomId, Guid); }
        public void SpawnIndividualActor_ToServer(PalInstanceID ID, NetworkActorSpawnParameters SpawnParameter, Guid Guid) { Invoke(nameof(SpawnIndividualActor_ToServer), ID, SpawnParameter, Guid); }
        public void SpawnIndividualActor_ToALL(PalInstanceID ID, Actor Actor, Guid Guid) { Invoke(nameof(SpawnIndividualActor_ToALL), ID, Actor, Guid); }
        public void SpawnIndividualActor_SyncCheck(PalInstanceID ID, Guid Guid) { Invoke(nameof(SpawnIndividualActor_SyncCheck), ID, Guid); }
        public void SetWorkerSick_ToServer(PalInstanceID ID, EPalBaseCampWorkerSickType SickType) { Invoke(nameof(SetWorkerSick_ToServer), ID, SickType); }
        public void ResetStatusPoint_ToServer(PalInstanceID ID) { Invoke(nameof(ResetStatusPoint_ToServer), ID); }
        public void ReplaceEquipWaza_ToServer(PalInstanceID ID, EPalWazaID OldWaza, EPalWazaID NewWaza) { Invoke(nameof(ReplaceEquipWaza_ToServer), ID, OldWaza, NewWaza); }
        public void RemoveHighPriorityList_ToServer(PalInstanceID ID, PalCharacter TargetPlayer) { Invoke(nameof(RemoveHighPriorityList_ToServer), ID, TargetPlayer); }
        public void RemoveEquipWaza_ToServer(PalInstanceID ID, EPalWazaID TargetWaza) { Invoke(nameof(RemoveEquipWaza_ToServer), ID, TargetWaza); }
        public void RaiseToMainActor_ToServer(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(RaiseToMainActor_ToServer), ID, PhantomId, Guid); }
        public void RaiseToMainActor_ToALL(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(RaiseToMainActor_ToALL), ID, PhantomId, Guid); }
        public void EatItem_ToServer(PalInstanceID ID, PalStaticConsumeItemData ItemData, int Num) { Invoke(nameof(EatItem_ToServer), ID, ItemData, Num); }
        public void DropToPhantomActor_ToServer(PalInstanceID ID, Guid Guid) { Invoke(nameof(DropToPhantomActor_ToServer), ID, Guid); }
        public void DropToPhantomActor_ToALL(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(DropToPhantomActor_ToALL), ID, PhantomId, Guid); }
        public void DespawnPhantomActor_ToServer(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(DespawnPhantomActor_ToServer), ID, PhantomId, Guid); }
        public void DespawnPhantomActor_ToALL(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(DespawnPhantomActor_ToALL), ID, PhantomId, Guid); }
        public void DespawnPhantomActor_SyncCheck(PalInstanceID ID, int PhantomId, Guid Guid) { Invoke(nameof(DespawnPhantomActor_SyncCheck), ID, PhantomId, Guid); }
        public void DespawnIndividualActor_ToServer(PalInstanceID ID, Guid Guid) { Invoke(nameof(DespawnIndividualActor_ToServer), ID, Guid); }
        public void DespawnIndividualActor_ToALL(PalInstanceID ID, Guid Guid) { Invoke(nameof(DespawnIndividualActor_ToALL), ID, Guid); }
        public void DespawnIndividualActor_SyncCheck(PalInstanceID ID, Guid Guid) { Invoke(nameof(DespawnIndividualActor_SyncCheck), ID, Guid); }
        public void CreateIndividualID_ToServer(PalIndividualCharacterSaveParameter initParameter, Guid Guid, int RequestPlayerId) { Invoke(nameof(CreateIndividualID_ToServer), initParameter, Guid, RequestPlayerId); }
        public void CreateIndividualID_ToALL(PalIndividualCharacterSaveParameter initParameter, PalInstanceID ID, Guid Guid) { Invoke(nameof(CreateIndividualID_ToALL), initParameter, ID, Guid); }
        public void CreateIndividualID_SyncCheck(PalInstanceID ID, Guid Guid) { Invoke(nameof(CreateIndividualID_SyncCheck), ID, Guid); }
        public void CreateFixedIndividualID_ToServer(PalInstanceID ID, PalIndividualCharacterSaveParameter initParameter, Guid Guid, int RequestPlayerId) { Invoke(nameof(CreateFixedIndividualID_ToServer), ID, initParameter, Guid, RequestPlayerId); }
        public void BroadcastChangeOwnerCharacter_ToAll(PalInstanceID ID, Guid PlayerUId, DateTime OwnedTime) { Invoke(nameof(BroadcastChangeOwnerCharacter_ToAll), ID, PlayerUId, OwnedTime); }
        public void AddPlayerCharacterStatusPoint_ToServer(PalInstanceID ID, Array<PalGotStatusPoint> AddStatusPointArray) { Invoke(nameof(AddPlayerCharacterStatusPoint_ToServer), ID, AddStatusPointArray); }
        public void AddMasteredWaza_ToServer(PalInstanceID ID, EPalWazaID WazaID) { Invoke(nameof(AddMasteredWaza_ToServer), ID, WazaID); }
        public void AddHighPriorityList_ToServer(PalInstanceID ID, PalCharacter TargetPlayer) { Invoke(nameof(AddHighPriorityList_ToServer), ID, TargetPlayer); }
        public void AddEquipWaza_ToServer(PalInstanceID ID, EPalWazaID NewWaza) { Invoke(nameof(AddEquipWaza_ToServer), ID, NewWaza); }
    }
    public class PalNetworkInvaderComponent : ActorComponent
    {
        public PalNetworkInvaderComponent(nint addr) : base(addr) { }
        public void OnInvaderStart(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(OnInvaderStart), Parameter); }
        public void OnInvaderEnd(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(OnInvaderEnd), Parameter); }
        public void OnInvaderArrived(PalIncidentBroadcastParameter Parameter) { Invoke(nameof(OnInvaderArrived), Parameter); }
    }
    public class PalNetworkItemComponent : ActorComponent
    {
        public PalNetworkItemComponent(nint addr) : base(addr) { }
        public Object DynamicItemParamMap { get { return this[nameof(DynamicItemParamMap)]; } set { this[nameof(DynamicItemParamMap)] = value; } }
        public Object ContainerParamMap { get { return this[nameof(ContainerParamMap)]; } set { this[nameof(ContainerParamMap)] = value; } }
        public Object ItemOperationParamMap { get { return this[nameof(ItemOperationParamMap)]; } set { this[nameof(ItemOperationParamMap)] = value; } }
        public Object OperationParamMap { get { return this[nameof(OperationParamMap)]; } set { this[nameof(OperationParamMap)] = value; } }
        public void RequestSwap_ToServer(Guid RequestID, PalItemAndSlot SlotA, PalItemPermission APermission, PalItemAndSlot SlotB, PalItemPermission BPermission) { Invoke(nameof(RequestSwap_ToServer), RequestID, SlotA, APermission, SlotB, BPermission); }
        public void RequestProduceWithSlot_ToServer(Guid RequestID, PalStaticItemIdAndNum ProductData, PalItemAndSlot To, PalNetArchive CreateParamArchive) { Invoke(nameof(RequestProduceWithSlot_ToServer), RequestID, ProductData, To, CreateParamArchive); }
        public void RequestProduce_ToServer(Guid RequestID, PalStaticItemIdAndNum ProductData, PalContainerId ContainerId, PalNetArchive CreateParamArchive) { Invoke(nameof(RequestProduce_ToServer), RequestID, ProductData, ContainerId, CreateParamArchive); }
        public void RequestMoveToContainer_ToServer(Guid RequestID, PalItemId ItemId, PalContainerId ToContainerId, PalItemPermission ToPermission, Array<PalSlotItemAndNum> Froms) { Invoke(nameof(RequestMoveToContainer_ToServer), RequestID, ItemId, ToContainerId, ToPermission, Froms); }
        public void RequestMove_ToServer(Guid RequestID, PalItemId ItemId, PalItemAndSlot To, PalItemPermission ToPermission, Array<PalSlotItemAndNum> Froms) { Invoke(nameof(RequestMove_ToServer), RequestID, ItemId, To, ToPermission, Froms); }
        public void RequestDrop_ToServer(Array<PalItemSlotIdAndNum> DropSlotAndNumArray, Vector DropLocation, bool IsAutoPickup) { Invoke(nameof(RequestDrop_ToServer), DropSlotAndNumArray, DropLocation, IsAutoPickup); }
        public void RequestDispose_ToServer(Guid RequestID, PalSlotItemAndNum SlotInfo) { Invoke(nameof(RequestDispose_ToServer), RequestID, SlotInfo); }
        public void ReceiveProduceWithSlotResult_ToRequestClient(Guid RequestID, EPalItemOperationResult Result) { Invoke(nameof(ReceiveProduceWithSlotResult_ToRequestClient), RequestID, Result); }
        public void ReceiveProduceResult_ToRequestClient(Guid RequestID, EPalItemOperationResult Result) { Invoke(nameof(ReceiveProduceResult_ToRequestClient), RequestID, Result); }
    }
    public class PalNetworkMapObjectComponent : ActorComponent
    {
        public PalNetworkMapObjectComponent(nint addr) : base(addr) { }
        public Object MapObjectSpawnRequestParameterMap { get { return this[nameof(MapObjectSpawnRequestParameterMap)]; } set { this[nameof(MapObjectSpawnRequestParameterMap)] = value; } }
        public Object SpawnRequestHandlerMap { get { return this[nameof(SpawnRequestHandlerMap)]; } set { this[nameof(SpawnRequestHandlerMap)] = value; } }
        public void RequestSpawnMapObject_ToServer(Guid RequestID, Object MapObjectId, Vector Location, Quat Rotation, Array<PalNetArchive> ExtraParameterArchives) { Invoke(nameof(RequestSpawnMapObject_ToServer), RequestID, MapObjectId, Location, Rotation, ExtraParameterArchives); }
        public void RequestRepair_ToServer(Guid InstanceId) { Invoke(nameof(RequestRepair_ToServer), InstanceId); }
        public void RequestDismantleObject_ToServer(Guid InstanceId) { Invoke(nameof(RequestDismantleObject_ToServer), InstanceId); }
        public void RequestDamageMapObjectSpawner_ToServer(PalMapObjectSpawnerBase TargetSpawnerActor, PalDamageInfo DamageInfo) { Invoke(nameof(RequestDamageMapObjectSpawner_ToServer), TargetSpawnerActor, DamageInfo); }
        public void RequestDamageMapObject_ToServer(Guid InstanceId, PalDamageInfo Info) { Invoke(nameof(RequestDamageMapObject_ToServer), InstanceId, Info); }
        public void RequestDamageFoliage_ToServer(PalCellCoord CellCoord, Object ModelId, Array<PalFoliageInstanceId> InstanceIds, PalDamageInfo DamageInfo) { Invoke(nameof(RequestDamageFoliage_ToServer), CellCoord, ModelId, InstanceIds, DamageInfo); }
        public void RequestConcreteModelModule_Server_void(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName) { Invoke(nameof(RequestConcreteModelModule_Server_void), ConcreteModelInstanceId, ModuleType, FunctionName); }
        public void RequestConcreteModelModule_Server_int32(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(RequestConcreteModelModule_Server_int32), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void RequestConcreteModelModule_Server_FVector(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(RequestConcreteModelModule_Server_FVector), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void RequestConcreteModelModule_Server_FPalNetArchive(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(RequestConcreteModelModule_Server_FPalNetArchive), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void RequestConcreteModelModule_Server_bool(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(RequestConcreteModelModule_Server_bool), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void RequestConcreteModel_void(Guid ConcreteModelInstanceId, Object FunctionName) { Invoke(nameof(RequestConcreteModel_void), ConcreteModelInstanceId, FunctionName); }
        public void RequestConcreteModel_Server_void(Guid ConcreteModelInstanceId, Object FunctionName) { Invoke(nameof(RequestConcreteModel_Server_void), ConcreteModelInstanceId, FunctionName); }
        public void RequestConcreteModel_Server_int32(Guid ConcreteModelInstanceId, Object FunctionName, int Value) { Invoke(nameof(RequestConcreteModel_Server_int32), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_Server_FVector(Guid ConcreteModelInstanceId, Object FunctionName, Vector Value) { Invoke(nameof(RequestConcreteModel_Server_FVector), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_Server_FPalNetArchive(Guid ConcreteModelInstanceId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(RequestConcreteModel_Server_FPalNetArchive), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_Server_bool(Guid ConcreteModelInstanceId, Object FunctionName, bool Value) { Invoke(nameof(RequestConcreteModel_Server_bool), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_int32(Guid ConcreteModelInstanceId, Object FunctionName, int Value) { Invoke(nameof(RequestConcreteModel_int32), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_FVector(Guid ConcreteModelInstanceId, Object FunctionName, Vector Value) { Invoke(nameof(RequestConcreteModel_FVector), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_FPalNetArchive(Guid ConcreteModelInstanceId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(RequestConcreteModel_FPalNetArchive), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestConcreteModel_bool(Guid ConcreteModelInstanceId, Object FunctionName, bool Value) { Invoke(nameof(RequestConcreteModel_bool), ConcreteModelInstanceId, FunctionName, Value); }
        public void RequestBuildCancel_ToServer(Guid InstanceId) { Invoke(nameof(RequestBuildCancel_ToServer), InstanceId); }
        public void RecieveDestroyMapObject_Multicast(Guid InstanceId) { Invoke(nameof(RecieveDestroyMapObject_Multicast), InstanceId); }
        public void RecieveDamageMapObject_ToClient(Guid InstanceId, PalDamageInfo Info, int DamagedHp) { Invoke(nameof(RecieveDamageMapObject_ToClient), InstanceId, Info, DamagedHp); }
        public void ReceiveUpdateHp_ToClient(Guid InstanceId, int UpdatedHp) { Invoke(nameof(ReceiveUpdateHp_ToClient), InstanceId, UpdatedHp); }
        public void ReceiveDismantleObjectResult_ToClient(EPalMapObjectOperationResult Result, Guid InstanceId) { Invoke(nameof(ReceiveDismantleObjectResult_ToClient), Result, InstanceId); }
        public void NotifyReceivePickupResultSuccess_ToClient(PalNetArchive PickupItemArchive, PalMapObjectPickableItemModelBase Model, bool IsAllPickup) { Invoke(nameof(NotifyReceivePickupResultSuccess_ToClient), PickupItemArchive, Model, IsAllPickup); }
        public void NotifyReceivePickupResultFailed_ToClient(PalMapObjectPickableItemModelBase Model) { Invoke(nameof(NotifyReceivePickupResultFailed_ToClient), Model); }
        public void NotifyConcreteModelModule_RequestClient_void(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName) { Invoke(nameof(NotifyConcreteModelModule_RequestClient_void), ConcreteModelInstanceId, ModuleType, FunctionName); }
        public void NotifyConcreteModelModule_RequestClient_int32(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModelModule_RequestClient_int32), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_RequestClient_FVector(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModelModule_RequestClient_FVector), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_RequestClient_FPalNetArchive(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModelModule_RequestClient_FPalNetArchive), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_RequestClient_bool(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModelModule_RequestClient_bool), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_Multicast_void(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName) { Invoke(nameof(NotifyConcreteModelModule_Multicast_void), ConcreteModelInstanceId, ModuleType, FunctionName); }
        public void NotifyConcreteModelModule_Multicast_int32(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModelModule_Multicast_int32), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_Multicast_FVector(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModelModule_Multicast_FVector), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_Multicast_FPalNetArchive(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModelModule_Multicast_FPalNetArchive), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModelModule_Multicast_bool(Guid ConcreteModelInstanceId, EPalMapObjectConcreteModelModuleType ModuleType, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModelModule_Multicast_bool), ConcreteModelInstanceId, ModuleType, FunctionName, Value); }
        public void NotifyConcreteModel_ToRequestClient_void(Guid ConcreteModelInstanceId, int RequestPlayerId, Object FunctionName) { Invoke(nameof(NotifyConcreteModel_ToRequestClient_void), ConcreteModelInstanceId, RequestPlayerId, FunctionName); }
        public void NotifyConcreteModel_ToRequestClient_int32(Guid ConcreteModelInstanceId, int RequestPlayerId, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModel_ToRequestClient_int32), ConcreteModelInstanceId, RequestPlayerId, FunctionName, Value); }
        public void NotifyConcreteModel_ToRequestClient_FVector(Guid ConcreteModelInstanceId, int RequestPlayerId, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModel_ToRequestClient_FVector), ConcreteModelInstanceId, RequestPlayerId, FunctionName, Value); }
        public void NotifyConcreteModel_ToRequestClient_FPalNetArchive(Guid ConcreteModelInstanceId, int RequestPlayerId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModel_ToRequestClient_FPalNetArchive), ConcreteModelInstanceId, RequestPlayerId, FunctionName, Value); }
        public void NotifyConcreteModel_ToRequestClient_bool(Guid ConcreteModelInstanceId, int RequestPlayerId, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModel_ToRequestClient_bool), ConcreteModelInstanceId, RequestPlayerId, FunctionName, Value); }
        public void NotifyConcreteModel_ToMulticast_void(Guid ConcreteModelInstanceId, Object FunctionName) { Invoke(nameof(NotifyConcreteModel_ToMulticast_void), ConcreteModelInstanceId, FunctionName); }
        public void NotifyConcreteModel_ToMulticast_int32(Guid ConcreteModelInstanceId, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModel_ToMulticast_int32), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_ToMulticast_FVector(Guid ConcreteModelInstanceId, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModel_ToMulticast_FVector), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_ToMulticast_FPalNetArchive(Guid ConcreteModelInstanceId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModel_ToMulticast_FPalNetArchive), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_ToMulticast_bool(Guid ConcreteModelInstanceId, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModel_ToMulticast_bool), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_RequestClient_void(Guid ConcreteModelInstanceId, Object FunctionName) { Invoke(nameof(NotifyConcreteModel_RequestClient_void), ConcreteModelInstanceId, FunctionName); }
        public void NotifyConcreteModel_RequestClient_int32(Guid ConcreteModelInstanceId, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModel_RequestClient_int32), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_RequestClient_FVector(Guid ConcreteModelInstanceId, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModel_RequestClient_FVector), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_RequestClient_FPalNetArchive(Guid ConcreteModelInstanceId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModel_RequestClient_FPalNetArchive), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_RequestClient_bool(Guid ConcreteModelInstanceId, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModel_RequestClient_bool), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_Multicast_void(Guid ConcreteModelInstanceId, Object FunctionName) { Invoke(nameof(NotifyConcreteModel_Multicast_void), ConcreteModelInstanceId, FunctionName); }
        public void NotifyConcreteModel_Multicast_int32(Guid ConcreteModelInstanceId, Object FunctionName, int Value) { Invoke(nameof(NotifyConcreteModel_Multicast_int32), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_Multicast_FVector(Guid ConcreteModelInstanceId, Object FunctionName, Vector Value) { Invoke(nameof(NotifyConcreteModel_Multicast_FVector), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_Multicast_FPalNetArchive(Guid ConcreteModelInstanceId, Object FunctionName, PalNetArchive Value) { Invoke(nameof(NotifyConcreteModel_Multicast_FPalNetArchive), ConcreteModelInstanceId, FunctionName, Value); }
        public void NotifyConcreteModel_Multicast_bool(Guid ConcreteModelInstanceId, Object FunctionName, bool Value) { Invoke(nameof(NotifyConcreteModel_Multicast_bool), ConcreteModelInstanceId, FunctionName, Value); }
    }
    public class PalNetworkMulticastGateComponent : ActorComponent
    {
        public PalNetworkMulticastGateComponent(nint addr) : base(addr) { }
        public void SendToServer_void(int ID, Object Instance, Object FunctionName) { Invoke(nameof(SendToServer_void), ID, Instance, FunctionName); }
        public void SendToServer_object(int ID, Object Instance, Object FunctionName, Object Value) { Invoke(nameof(SendToServer_object), ID, Instance, FunctionName, Value); }
        public void SendToServer_int32(int ID, Object Instance, Object FunctionName, int Value) { Invoke(nameof(SendToServer_int32), ID, Instance, FunctionName, Value); }
        public void SendToServer_FVector(int ID, Object Instance, Object FunctionName, Vector Value) { Invoke(nameof(SendToServer_FVector), ID, Instance, FunctionName, Value); }
        public void SendToServer_FPalNetArchive(int ID, Object Instance, Object FunctionName, PalNetArchive Value) { Invoke(nameof(SendToServer_FPalNetArchive), ID, Instance, FunctionName, Value); }
        public void SendToServer_FPalInstanceID(int ID, Object Instance, Object FunctionName, PalInstanceID Value) { Invoke(nameof(SendToServer_FPalInstanceID), ID, Instance, FunctionName, Value); }
        public void SendToServer_float(int ID, Object Instance, Object FunctionName, float Value) { Invoke(nameof(SendToServer_float), ID, Instance, FunctionName, Value); }
        public void SendToServer_FGuid(int ID, Object Instance, Object FunctionName, Guid Value) { Invoke(nameof(SendToServer_FGuid), ID, Instance, FunctionName, Value); }
        public void SendToServer_bool(int ID, Object Instance, Object FunctionName, bool Value) { Invoke(nameof(SendToServer_bool), ID, Instance, FunctionName, Value); }
        public void SendToALL_void(int ID, Object Instance, Object FunctionName) { Invoke(nameof(SendToALL_void), ID, Instance, FunctionName); }
        public void SendToALL_object(int ID, Object Instance, Object FunctionName, Object Value) { Invoke(nameof(SendToALL_object), ID, Instance, FunctionName, Value); }
        public void SendToALL_int32(int ID, Object Instance, Object FunctionName, int Value) { Invoke(nameof(SendToALL_int32), ID, Instance, FunctionName, Value); }
        public void SendToALL_FVector(int ID, Object Instance, Object FunctionName, Vector Value) { Invoke(nameof(SendToALL_FVector), ID, Instance, FunctionName, Value); }
        public void SendToALL_FPalNetArchive(int ID, Object Instance, Object FunctionName, PalNetArchive Value) { Invoke(nameof(SendToALL_FPalNetArchive), ID, Instance, FunctionName, Value); }
        public void SendToALL_FPalInstanceID(int ID, Object Instance, Object FunctionName, PalInstanceID Value) { Invoke(nameof(SendToALL_FPalInstanceID), ID, Instance, FunctionName, Value); }
        public void SendToALL_float(int ID, Object Instance, Object FunctionName, float Value) { Invoke(nameof(SendToALL_float), ID, Instance, FunctionName, Value); }
        public void SendToALL_FGuid(int ID, Object Instance, Object FunctionName, Guid Value) { Invoke(nameof(SendToALL_FGuid), ID, Instance, FunctionName, Value); }
        public void SendToALL_bool(int ID, Object Instance, Object FunctionName, bool Value) { Invoke(nameof(SendToALL_bool), ID, Instance, FunctionName, Value); }
        public void SendInternal_void(Object Instance, Object FunctionName) { Invoke(nameof(SendInternal_void), Instance, FunctionName); }
        public void SendInternal_object(Object Instance, Object FunctionName, Object Value) { Invoke(nameof(SendInternal_object), Instance, FunctionName, Value); }
        public void SendInternal_int32(Object Instance, Object FunctionName, int Value) { Invoke(nameof(SendInternal_int32), Instance, FunctionName, Value); }
        public void SendInternal_FVector(Object Instance, Object FunctionName, Vector Value) { Invoke(nameof(SendInternal_FVector), Instance, FunctionName, Value); }
        public void SendInternal_FPalNetArchive(Object Instance, Object FunctionName, PalNetArchive Value) { Invoke(nameof(SendInternal_FPalNetArchive), Instance, FunctionName, Value); }
        public void SendInternal_FPalInstanceID(Object Instance, Object FunctionName, PalInstanceID Value) { Invoke(nameof(SendInternal_FPalInstanceID), Instance, FunctionName, Value); }
        public void SendInternal_float(Object Instance, Object FunctionName, float Value) { Invoke(nameof(SendInternal_float), Instance, FunctionName, Value); }
        public void SendInternal_FGuid(Object Instance, Object FunctionName, Guid Value) { Invoke(nameof(SendInternal_FGuid), Instance, FunctionName, Value); }
        public void SendInternal_bool(Object Instance, Object FunctionName, bool Value) { Invoke(nameof(SendInternal_bool), Instance, FunctionName, Value); }
        public void Send_void(Object Instance, Object FunctionName) { Invoke(nameof(Send_void), Instance, FunctionName); }
        public void Send_object(Object Instance, Object FunctionName, Object Value) { Invoke(nameof(Send_object), Instance, FunctionName, Value); }
        public void Send_int32(Object Instance, Object FunctionName, int Value) { Invoke(nameof(Send_int32), Instance, FunctionName, Value); }
        public void Send_FVector(Object Instance, Object FunctionName, Vector Value) { Invoke(nameof(Send_FVector), Instance, FunctionName, Value); }
        public void Send_FPalNetArchive(Object Instance, Object FunctionName, PalNetArchive Value) { Invoke(nameof(Send_FPalNetArchive), Instance, FunctionName, Value); }
        public void Send_FPalInstanceID(Object Instance, Object FunctionName, PalInstanceID Value) { Invoke(nameof(Send_FPalInstanceID), Instance, FunctionName, Value); }
        public void Send_float(Object Instance, Object FunctionName, float Value) { Invoke(nameof(Send_float), Instance, FunctionName, Value); }
        public void Send_FGuid(Object Instance, Object FunctionName, Guid Value) { Invoke(nameof(Send_FGuid), Instance, FunctionName, Value); }
        public void Send_bool(Object Instance, Object FunctionName, bool Value) { Invoke(nameof(Send_bool), Instance, FunctionName, Value); }
    }
    public class PalNetworkPlayerComponent : ActorComponent
    {
        public PalNetworkPlayerComponent(nint addr) : base(addr) { }
        public void ShowBossDefeatRewardUI_ToClient(int TechPoint, bool AfterTeleport, int DelayTime) { Invoke(nameof(ShowBossDefeatRewardUI_ToClient), TechPoint, AfterTeleport, DelayTime); }
        public void SetCurrentSelectPalSphereIndex_ToServer(int NextIndex, PalLoadoutSelectorComponent LoadoutSelector) { Invoke(nameof(SetCurrentSelectPalSphereIndex_ToServer), NextIndex, LoadoutSelector); }
        public void RequestUnlockTechnology_ToServer(Object UnlockTechnologyName) { Invoke(nameof(RequestUnlockTechnology_ToServer), UnlockTechnologyName); }
        public void RequestTrashItemFromInventoryDropSlot_ToServer() { Invoke(nameof(RequestTrashItemFromInventoryDropSlot_ToServer)); }
        public void RequestSortInventory_ToServer() { Invoke(nameof(RequestSortInventory_ToServer)); }
        public void RequestMoveItemToInventoryFromSlot(PalItemSlot fromSlot, bool IsTryEquip) { Invoke(nameof(RequestMoveItemToInventoryFromSlot), fromSlot, IsTryEquip); }
        public void RequestMoveItemToInventoryFromContainer(PalItemContainer fromContainer, bool IsTryEquip) { Invoke(nameof(RequestMoveItemToInventoryFromContainer), fromContainer, IsTryEquip); }
        public void RequestExitStage_ToServer() { Invoke(nameof(RequestExitStage_ToServer)); }
        public void RequestEnterStage_ToServer(PalStageInstanceId StageInstanceId) { Invoke(nameof(RequestEnterStage_ToServer), StageInstanceId); }
        public void RequestDropOtomoPal_ToServer(int OtomoIndex) { Invoke(nameof(RequestDropOtomoPal_ToServer), OtomoIndex); }
        public void RequestDropItemFromInventoryDropSlot_ToServer() { Invoke(nameof(RequestDropItemFromInventoryDropSlot_ToServer)); }
        public void RequestChangeVoiceID_ToServer(int NewVoiceID) { Invoke(nameof(RequestChangeVoiceID_ToServer), NewVoiceID); }
        public void RequestAddTechnolgyPointByItem_ToServer(PalItemSlotId ConsumeItemSlotID) { Invoke(nameof(RequestAddTechnolgyPointByItem_ToServer), ConsumeItemSlotID); }
        public void RequestAddTechnolgyPoint_ToServer(int AddPoint) { Invoke(nameof(RequestAddTechnolgyPoint_ToServer), AddPoint); }
        public void RequestAddItem_ToServer(Object StaticItemId, int Count, bool isAssignPassive) { Invoke(nameof(RequestAddItem_ToServer), StaticItemId, Count, isAssignPassive); }
        public void RegisterRespawnLocation_ToServer(Guid PlayerUId, Vector Location) { Invoke(nameof(RegisterRespawnLocation_ToServer), PlayerUId, Location); }
        public void ReceiveExitStageRequestResult_ToRequestClient(EPalStageRequestResult Result) { Invoke(nameof(ReceiveExitStageRequestResult_ToRequestClient), Result); }
        public void ReceiveEnterStageRequestResult_ToRequestClient(PalStageInstanceId StageInstanceId, EPalStageRequestResult Result) { Invoke(nameof(ReceiveEnterStageRequestResult_ToRequestClient), StageInstanceId, Result); }
        public void NotifyStartCrime_ToClient(Guid CrimeInstanceId) { Invoke(nameof(NotifyStartCrime_ToClient), CrimeInstanceId); }
        public void NotifyReportCriminal_ToClient(PalIndividualCharacterHandle CriminalHandle, Array<Object> CrimeIds) { Invoke(nameof(NotifyReportCriminal_ToClient), CriminalHandle, CrimeIds); }
        public void NotifyReleaseWanted_ToClient(PalIndividualCharacterHandle CriminalHandle) { Invoke(nameof(NotifyReleaseWanted_ToClient), CriminalHandle); }
        public void NotifyEndCrime_ToClient(Guid CrimeInstanceId) { Invoke(nameof(NotifyEndCrime_ToClient), CrimeInstanceId); }
        public void LoadoutSelectorRemoveEquipItem(PalLoadoutSelectorComponent LoadoutSelector) { Invoke(nameof(LoadoutSelectorRemoveEquipItem), LoadoutSelector); }
        public void LoadoutSelectorEquipItem(PalLoadoutSelectorComponent LoadoutSelector, EPalPlayerInventoryType inventoryType, int Index) { Invoke(nameof(LoadoutSelectorEquipItem), LoadoutSelector, inventoryType, Index); }
        public void Dev_RequestTeleportToDungeonEntranceByIndex_ToServer(int Index) { Invoke(nameof(Dev_RequestTeleportToDungeonEntranceByIndex_ToServer), Index); }
        public void Dev_RequestTeleportToDungeonEntranceByDataLayer_ToServer(Object DataLayerName) { Invoke(nameof(Dev_RequestTeleportToDungeonEntranceByDataLayer_ToServer), DataLayerName); }
        public void Dev_RequestTeleportToCurrentDungeonTreasureBox_ToServer() { Invoke(nameof(Dev_RequestTeleportToCurrentDungeonTreasureBox_ToServer)); }
        public void Dev_RequestTeleportToCurrentDungeonGoal_ToServer() { Invoke(nameof(Dev_RequestTeleportToCurrentDungeonGoal_ToServer)); }
        public void Dev_RequestTeleportToBossTower_ToServer(EPalBossType BossType) { Invoke(nameof(Dev_RequestTeleportToBossTower_ToServer), BossType); }
    }
    public class PalNetworkPlayerStateComponent : ActorComponent
    {
        public PalNetworkPlayerStateComponent(nint addr) : base(addr) { }
        public Object ObtainClientParamMap { get { return this[nameof(ObtainClientParamMap)]; } set { this[nameof(ObtainClientParamMap)] = value; } }
    }
    public class PalNetworkShopComponent : ActorComponent
    {
        public PalNetworkShopComponent(nint addr) : base(addr) { }
        public void SetupShopDataForActor_ToServer(Actor VenderActor) { Invoke(nameof(SetupShopDataForActor_ToServer), VenderActor); }
        public void RequestSellPals_ToServer(Guid RequestPlayerUId, Guid ShopID, Array<PalCharacterSlotId> SellPalSlotIDArray) { Invoke(nameof(RequestSellPals_ToServer), RequestPlayerUId, ShopID, SellPalSlotIDArray); }
        public void RequestSellItems_ToServer(Guid RequestPlayerUId, Guid ShopID, Array<PalItemSlotIdAndNum> SellItemSlotIDArray) { Invoke(nameof(RequestSellItems_ToServer), RequestPlayerUId, ShopID, SellItemSlotIDArray); }
        public void RequestCollectDroppedPalProductData(Guid RequestPlayerUId, int MaxCollectNum) { Invoke(nameof(RequestCollectDroppedPalProductData), RequestPlayerUId, MaxCollectNum); }
        public void RequestBuyProduct_ToServer(PalInstanceID RequestPlayerInstanceId, Guid ShopID, Guid ProductId, int BuyNum) { Invoke(nameof(RequestBuyProduct_ToServer), RequestPlayerInstanceId, ShopID, ProductId, BuyNum); }
        public void RequestBuyLostPal_ToServer(Guid RequestPlayerUId, PalCharacterStoredParameterId StoredParameterId) { Invoke(nameof(RequestBuyLostPal_ToServer), RequestPlayerUId, StoredParameterId); }
        public void RemoveShopData_ToServer(Guid RemoveShopID) { Invoke(nameof(RemoveShopData_ToServer), RemoveShopID); }
        public void RecieveBuyResult_ToClient(EPalShopBuyResultType ResultType) { Invoke(nameof(RecieveBuyResult_ToClient), ResultType); }
        public void ReceiveDroppedPalProductData_ToClient(Array<PalDroppedPalProductDataForShop> CollectedData) { Invoke(nameof(ReceiveDroppedPalProductData_ToClient), CollectedData); }
    }
    public class PalNetworkTimeComponent : ActorComponent
    {
        public PalNetworkTimeComponent(nint addr) : base(addr) { }
        public void PreNightSkip_ToClient() { Invoke(nameof(PreNightSkip_ToClient)); }
        public void NightSkip_ToClient() { Invoke(nameof(NightSkip_ToClient)); }
    }
    public class PalNetworkTransmitter : Actor
    {
        public PalNetworkTransmitter(nint addr) : base(addr) { }
        public PalNetworkMapObjectComponent MapObject { get { return this[nameof(MapObject)].As<PalNetworkMapObjectComponent>(); } set { this["MapObject"] = value; } }
        public PalNetworkItemComponent Item { get { return this[nameof(Item)].As<PalNetworkItemComponent>(); } set { this["Item"] = value; } }
        public PalNetworkBaseCampComponent BaseCamp { get { return this[nameof(BaseCamp)].As<PalNetworkBaseCampComponent>(); } set { this["BaseCamp"] = value; } }
        public PalNetworkCharacterContainerComponent CharacterContainer { get { return this[nameof(CharacterContainer)].As<PalNetworkCharacterContainerComponent>(); } set { this["CharacterContainer"] = value; } }
        public PalNetworkGroupComponent Group { get { return this[nameof(Group)].As<PalNetworkGroupComponent>(); } set { this["Group"] = value; } }
        public PalNetworkPlayerComponent Player { get { return this[nameof(Player)].As<PalNetworkPlayerComponent>(); } set { this["Player"] = value; } }
        public PalNetworkCharacterComponent Character { get { return this[nameof(Character)].As<PalNetworkCharacterComponent>(); } set { this["Character"] = value; } }
        public PalNetworkWorkProgressComponent WorkProgress { get { return this[nameof(WorkProgress)].As<PalNetworkWorkProgressComponent>(); } set { this["WorkProgress"] = value; } }
        public PalNetworkWorldSecurityComponent WorldSecurity { get { return this[nameof(WorldSecurity)].As<PalNetworkWorldSecurityComponent>(); } set { this["WorldSecurity"] = value; } }
        public PalNetworkBossBattleComponent BossBattle { get { return this[nameof(BossBattle)].As<PalNetworkBossBattleComponent>(); } set { this["BossBattle"] = value; } }
        public PalNetworkTimeComponent Time { get { return this[nameof(Time)].As<PalNetworkTimeComponent>(); } set { this["Time"] = value; } }
        public PalNetworkShopComponent Shop { get { return this[nameof(Shop)].As<PalNetworkShopComponent>(); } set { this["Shop"] = value; } }
        public PalNetworkInvaderComponent Invader { get { return this[nameof(Invader)].As<PalNetworkInvaderComponent>(); } set { this["Invader"] = value; } }
        public PalNetworkCharacterStatusOperationComponent CharacterStatusOperation { get { return this[nameof(CharacterStatusOperation)].As<PalNetworkCharacterStatusOperationComponent>(); } set { this["CharacterStatusOperation"] = value; } }
        public PalNetworkIndividualComponent NetworkIndividualComponent { get { return this[nameof(NetworkIndividualComponent)].As<PalNetworkIndividualComponent>(); } set { this["NetworkIndividualComponent"] = value; } }
        public Array<PalNetworkTransmitterDelaySpawnInfo> DelayDelegateCallQueue { get { return new Array<PalNetworkTransmitterDelaySpawnInfo>(this[nameof(DelayDelegateCallQueue)].Address); } }
        public Guid SpawnReliableActorBroadcast(Object actorClass, NetworkActorSpawnParameters SpawnParameter, Object SpawnDelegate) { return Invoke<Guid>(nameof(SpawnReliableActorBroadcast), actorClass, SpawnParameter, SpawnDelegate); }
        public Guid SpawnNonReliableActorBroadcast(Object actorClass, NetworkActorSpawnParameters SpawnParameter, Object SpawnDelegate) { return Invoke<Guid>(nameof(SpawnNonReliableActorBroadcast), actorClass, SpawnParameter, SpawnDelegate); }
        public void SpawnNonReliableActor_ToServer(Object actorClass, NetworkActorSpawnParameters SpawnParameter, int issuerID) { Invoke(nameof(SpawnNonReliableActor_ToServer), actorClass, SpawnParameter, issuerID); }
        public void SpawnedNonReliableActor_ToALL(Object actorClass, NetworkActorSpawnParameters SpawnParameter, int issuerID) { Invoke(nameof(SpawnedNonReliableActor_ToALL), actorClass, SpawnParameter, issuerID); }
        public void SpawnedActor_ToALL(Actor SpawnedActor, Actor SpawnedController, NetworkActorSpawnParameters SpawnParameter, Guid Guid) { Invoke(nameof(SpawnedActor_ToALL), SpawnedActor, SpawnedController, SpawnParameter, Guid); }
        public Guid SpawnActorBroadcast(Object actorClass, NetworkActorSpawnParameters SpawnParameter, Object SpawnDelegate) { return Invoke<Guid>(nameof(SpawnActorBroadcast), actorClass, SpawnParameter, SpawnDelegate); }
        public void SpawnActor_ToServer(Object actorClass, NetworkActorSpawnParameters SpawnParameter, Guid Guid) { Invoke(nameof(SpawnActor_ToServer), actorClass, SpawnParameter, Guid); }
        public void SetupBroadcast_FromServer() { Invoke(nameof(SetupBroadcast_FromServer)); }
        public PalNetworkWorldSecurityComponent GetWorldSecurity() { return Invoke<PalNetworkWorldSecurityComponent>(nameof(GetWorldSecurity)); }
        public PalNetworkWorkProgressComponent GetWorkProgress() { return Invoke<PalNetworkWorkProgressComponent>(nameof(GetWorkProgress)); }
        public PalNetworkTimeComponent GetTime() { return Invoke<PalNetworkTimeComponent>(nameof(GetTime)); }
        public PalNetworkShopComponent GetShop() { return Invoke<PalNetworkShopComponent>(nameof(GetShop)); }
        public PalNetworkPlayerComponent GetPlayer() { return Invoke<PalNetworkPlayerComponent>(nameof(GetPlayer)); }
        public PalNetworkMapObjectComponent GetMapObject() { return Invoke<PalNetworkMapObjectComponent>(nameof(GetMapObject)); }
        public PalNetworkItemComponent GetItem() { return Invoke<PalNetworkItemComponent>(nameof(GetItem)); }
        public PalNetworkInvaderComponent GetInvader() { return Invoke<PalNetworkInvaderComponent>(nameof(GetInvader)); }
        public PalNetworkGroupComponent GetGroup() { return Invoke<PalNetworkGroupComponent>(nameof(GetGroup)); }
        public PalNetworkCharacterStatusOperationComponent GetCharacterStatusOperation() { return Invoke<PalNetworkCharacterStatusOperationComponent>(nameof(GetCharacterStatusOperation)); }
        public PalNetworkCharacterContainerComponent GetCharacterContainer() { return Invoke<PalNetworkCharacterContainerComponent>(nameof(GetCharacterContainer)); }
        public PalNetworkCharacterComponent GetCharacter() { return Invoke<PalNetworkCharacterComponent>(nameof(GetCharacter)); }
        public PalNetworkBossBattleComponent GetBossBattle() { return Invoke<PalNetworkBossBattleComponent>(nameof(GetBossBattle)); }
        public PalNetworkBaseCampComponent GetBaseCamp() { return Invoke<PalNetworkBaseCampComponent>(nameof(GetBaseCamp)); }
        public void DummyReliableFunction() { Invoke(nameof(DummyReliableFunction)); }
        public void Debug_RequestLogTreasureBoxLocalPlayerAround_ToServer() { Invoke(nameof(Debug_RequestLogTreasureBoxLocalPlayerAround_ToServer)); }
        public void Debug_ReceiveLogTreasureBoxLocalPlayerAround_ToRequestPlayer(Object Message) { Invoke(nameof(Debug_ReceiveLogTreasureBoxLocalPlayerAround_ToRequestPlayer), Message); }
    }
    public class PalNetworkWorkProgressComponent : ActorComponent
    {
        public PalNetworkWorkProgressComponent(nint addr) : base(addr) { }
        public void RequestStartPlayerWork_ToServer(Guid RequestID, Guid WorkProgressId) { Invoke(nameof(RequestStartPlayerWork_ToServer), RequestID, WorkProgressId); }
        public void RequestEndPlayerWork_ToServer(Guid WorkId) { Invoke(nameof(RequestEndPlayerWork_ToServer), WorkId); }
        public void ReceiveStartPlayerWork_ToRequestClient(Guid RequestID, EPalWorkRequestResult Result) { Invoke(nameof(ReceiveStartPlayerWork_ToRequestClient), RequestID, Result); }
        public void AddCompleteBuildWorkLog(PalNetArchive Archive) { Invoke(nameof(AddCompleteBuildWorkLog), Archive); }
    }
    public class PalNetworkWorldSecurityComponent : ActorComponent
    {
        public PalNetworkWorldSecurityComponent(nint addr) : base(addr) { }
    }
    public class PalNiagaraSoundStopInterface : Interface
    {
        public PalNiagaraSoundStopInterface(nint addr) : base(addr) { }
    }
    public class PalNiagaraDataInterfaceSoundPlayer : NiagaraDataInterface
    {
        public PalNiagaraDataInterfaceSoundPlayer(nint addr) : base(addr) { }
        public AkAudioEvent AkEvent { get { return this[nameof(AkEvent)].As<AkAudioEvent>(); } set { this["AkEvent"] = value; } }
        public float FadeOutDuration { get { return this[nameof(FadeOutDuration)].GetValue<float>(); } set { this[nameof(FadeOutDuration)].SetValue<float>(value); } }
    }
    public class PalNoteData : Object
    {
        public PalNoteData(nint addr) : base(addr) { }
        public Object TextId_Description { get { return this[nameof(TextId_Description)]; } set { this[nameof(TextId_Description)] = value; } }
        public Object Texture { get { return this[nameof(Texture)]; } set { this[nameof(Texture)] = value; } }
    }
    public class PalNoteDataAsset : DataAsset
    {
        public PalNoteDataAsset(nint addr) : base(addr) { }
        public Object NoteDataMap { get { return this[nameof(NoteDataMap)]; } set { this[nameof(NoteDataMap)] = value; } }
        public PalNoteData Find(Object ID) { return Invoke<PalNoteData>(nameof(Find), ID); }
    }
    public class PalNPCAIWeaponHandle : Object
    {
        public PalNPCAIWeaponHandle(nint addr) : base(addr) { }
        public Object OnInitializeEnd { get { return this[nameof(OnInitializeEnd)]; } set { this[nameof(OnInitializeEnd)] = value; } }
        public Object CombatAIParamMap { get { return this[nameof(CombatAIParamMap)]; } set { this[nameof(CombatAIParamMap)] = value; } }
        public Actor ShooterHuman { get { return this[nameof(ShooterHuman)].As<Actor>(); } set { this["ShooterHuman"] = value; } }
        public void UnequipWeapon() { Invoke(nameof(UnequipWeapon)); }
        public void TerminateNPCWeapon() { Invoke(nameof(TerminateNPCWeapon)); }
        public void ShootOneBullet() { Invoke(nameof(ShootOneBullet)); }
        public void ShootBurstBullet(float PullSecond) { Invoke(nameof(ShootBurstBullet), PullSecond); }
        public void ReleaseTrigger() { Invoke(nameof(ReleaseTrigger)); }
        public void OnInitializeEnd__DelegateSignature() { Invoke(nameof(OnInitializeEnd__DelegateSignature)); }
        public bool IsTargetInConeShap() { return Invoke<bool>(nameof(IsTargetInConeShap)); }
        public bool IsNear_NearRange(Actor TargetActor, float NearRangePlusOffset) { return Invoke<bool>(nameof(IsNear_NearRange), TargetActor, NearRangePlusOffset); }
        public bool IsNear_FarRange(Actor TargetActor, float FarRangePlusOffset) { return Invoke<bool>(nameof(IsNear_FarRange), TargetActor, FarRangePlusOffset); }
        public bool IsMagazineEmpty() { return Invoke<bool>(nameof(IsMagazineEmpty)); }
        public bool IsEndInitialize() { return Invoke<bool>(nameof(IsEndInitialize)); }
        public void InitializeNPCWeapon(PalWeaponBase WeaponActor) { Invoke(nameof(InitializeNPCWeapon), WeaponActor); }
        public bool GetUseSideDashMovement() { return Invoke<bool>(nameof(GetUseSideDashMovement)); }
        public float GetShootInterval() { return Invoke<float>(nameof(GetShootInterval)); }
        public int GetRemainingBullet() { return Invoke<int>(nameof(GetRemainingBullet)); }
        public float GetReloadTime() { return Invoke<float>(nameof(GetReloadTime)); }
        public float GetRandomMoveTimeMin() { return Invoke<float>(nameof(GetRandomMoveTimeMin)); }
        public int GetMaxShootCount() { return Invoke<int>(nameof(GetMaxShootCount)); }
        public bool GetIsMeleeAttackWithGun() { return Invoke<bool>(nameof(GetIsMeleeAttackWithGun)); }
        public Object GetFireStateClass() { return Invoke<Object>(nameof(GetFireStateClass)); }
        public Object GetCombatClass() { return Invoke<Object>(nameof(GetCombatClass)); }
        public void FullReload() { Invoke(nameof(FullReload)); }
        public void EquipWeapon() { Invoke(nameof(EquipWeapon)); }
        public void DecreaseBullet() { Invoke(nameof(DecreaseBullet)); }
        public void AimToTarget(Actor TargetActor, bool Aim, float DeltaTime) { Invoke(nameof(AimToTarget), TargetActor, Aim, DeltaTime); }
    }
    public class PalNPCCampSpawnerBase : Actor
    {
        public PalNPCCampSpawnerBase(nint addr) : base(addr) { }
        public Object CampSpawnerName { get { return this[nameof(CampSpawnerName)]; } set { this[nameof(CampSpawnerName)] = value; } }
        public float CalcRemainRespawnTime(PalEnemyCampStatus CampStatus) { return Invoke<float>(nameof(CalcRemainRespawnTime), CampStatus); }
        public float CalcRemainDespawnTime(PalEnemyCampStatus CampStatus) { return Invoke<float>(nameof(CalcRemainDespawnTime), CampStatus); }
    }
    public class PalNPCInteractCondition : Object
    {
        public PalNPCInteractCondition(nint addr) : base(addr) { }
        public void SetResult(bool bResult) { Invoke(nameof(SetResult), bResult); }
    }
    public class PalNPCInteractConditionFunctions : Object
    {
        public PalNPCInteractConditionFunctions(nint addr) : base(addr) { }
        public Object Owner { get { return this[nameof(Owner)].As<Object>(); } set { this["Owner"] = value; } }
        public void SetOwner(Object Owner) { Invoke(nameof(SetOwner), Owner); }
        public Object GetOwner() { return Invoke<Object>(nameof(GetOwner)); }
    }
    public class PalNPCInteractionComponent : ActorComponent
    {
        public PalNPCInteractionComponent(nint addr) : base(addr) { }
        public DataTable NPCInteractionDataTable { get { return this[nameof(NPCInteractionDataTable)].As<DataTable>(); } set { this["NPCInteractionDataTable"] = value; } }
        public DataTable NPCInteractConditionConstValDataTable { get { return this[nameof(NPCInteractConditionConstValDataTable)].As<DataTable>(); } set { this["NPCInteractConditionConstValDataTable"] = value; } }
        public Object ConditionFunctionClass { get { return this[nameof(ConditionFunctionClass)]; } set { this[nameof(ConditionFunctionClass)] = value; } }
        public Object TalkTypeMap { get { return this[nameof(TalkTypeMap)]; } set { this[nameof(TalkTypeMap)] = value; } }
        public Object InteractConditions { get { return this[nameof(InteractConditions)]; } set { this[nameof(InteractConditions)] = value; } }
        public PalNPCInteractConditionFunctions ConditionFunctions { get { return this[nameof(ConditionFunctions)].As<PalNPCInteractConditionFunctions>(); } set { this["ConditionFunctions"] = value; } }
        public void OnTriggerInteract(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), Other, IndicatorType); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public void EndTalk(PalPlayerCharacter TalkPlayer) { Invoke(nameof(EndTalk), TalkPlayer); }
        public void DebugInteractConditionString(Object testText) { Invoke(nameof(DebugInteractConditionString), testText); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
    }
    public class PalNPCInteractionDataTableUtility : BlueprintFunctionLibrary
    {
        public PalNPCInteractionDataTableUtility(nint addr) : base(addr) { }
        public void GetJSONStringByInteractionDataTable(Object OutString, Object DataRows) { Invoke(nameof(GetJSONStringByInteractionDataTable), OutString, DataRows); }
    }
    public class PalNPCManager : Object
    {
        public PalNPCManager(nint addr) : base(addr) { }
        public Object AIOnNavMeshFilterClass { get { return this[nameof(AIOnNavMeshFilterClass)]; } set { this[nameof(AIOnNavMeshFilterClass)] = value; } }
        public Object CallbackMap { get { return this[nameof(CallbackMap)]; } set { this[nameof(CallbackMap)] = value; } }
        public Object SpawnInfoMap { get { return this[nameof(SpawnInfoMap)]; } set { this[nameof(SpawnInfoMap)] = value; } }
        public PalWildPalDrinkWaterSpotProvider DrinkWaterSpotProvider { get { return this[nameof(DrinkWaterSpotProvider)].As<PalWildPalDrinkWaterSpotProvider>(); } set { this["DrinkWaterSpotProvider"] = value; } }
        public Object RespawnDisableFlag { get { return this[nameof(RespawnDisableFlag)]; } set { this[nameof(RespawnDisableFlag)] = value; } }
        public Object NPCAIControllerBaseClass { get { return this[nameof(NPCAIControllerBaseClass)]; } set { this[nameof(NPCAIControllerBaseClass)] = value; } }
        public DataTable UniqueNPCDataTable { get { return this[nameof(UniqueNPCDataTable)].As<DataTable>(); } set { this["UniqueNPCDataTable"] = value; } }
        public DataTable NPCOneTalkDataTable { get { return this[nameof(NPCOneTalkDataTable)].As<DataTable>(); } set { this["NPCOneTalkDataTable"] = value; } }
        public DataTable NPCMultiTalkDataTable { get { return this[nameof(NPCMultiTalkDataTable)].As<DataTable>(); } set { this["NPCMultiTalkDataTable"] = value; } }
        public Object TalkDataTableMap { get { return this[nameof(TalkDataTableMap)]; } set { this[nameof(TalkDataTableMap)] = value; } }
        public Object NPCNameTalkTypeMap { get { return this[nameof(NPCNameTalkTypeMap)]; } set { this[nameof(NPCNameTalkTypeMap)] = value; } }
        public void SpawNPCCallback(PalInstanceID ID) { Invoke(nameof(SpawNPCCallback), ID); }
        public PalIndividualCharacterHandle SpawnNPCForServer(PalNPCSpawnInfo SpawnInfo, Object spawnCallback) { return Invoke<PalIndividualCharacterHandle>(nameof(SpawnNPCForServer), SpawnInfo, spawnCallback); }
        public void SetEnemyCampStatus(Object KeyName, PalEnemyCampStatus EnemyCampStatus) { Invoke(nameof(SetEnemyCampStatus), KeyName, EnemyCampStatus); }
        public void RemoveGroupWhenDestoryActor(Actor DestoryActor) { Invoke(nameof(RemoveGroupWhenDestoryActor), DestoryActor); }
        public void NPCSpawnCallback__DelegateSignature(PalInstanceID ID) { Invoke(nameof(NPCSpawnCallback__DelegateSignature), ID); }
        public bool IsTalkable(PalCharacter Character) { return Invoke<bool>(nameof(IsTalkable), Character); }
        public EPalNPCTalkUIType GetTalkUIType(PalCharacter Character) { return Invoke<EPalNPCTalkUIType>(nameof(GetTalkUIType), Character); }
        public DataTable GetNPCTalkDTFromTalkUIType(EPalNPCTalkUIType TalkUIType) { return Invoke<DataTable>(nameof(GetNPCTalkDTFromTalkUIType), TalkUIType); }
        public DataTable GetNPCOneTalkDTFromTalkId(Object TalkId) { return Invoke<DataTable>(nameof(GetNPCOneTalkDTFromTalkId), TalkId); }
        public DataTable GetNPCOneTalkDTFromCharacter(PalCharacter Character) { return Invoke<DataTable>(nameof(GetNPCOneTalkDTFromCharacter), Character); }
        public Object GetNPCMultiTalkClassFromTalkId(Object TalkId) { return Invoke<Object>(nameof(GetNPCMultiTalkClassFromTalkId), TalkId); }
        public Object GetNPCMultiTalkClass(PalCharacter Character) { return Invoke<Object>(nameof(GetNPCMultiTalkClass), Character); }
        public DataTable GetNPCCharacterTalkDT(Object CharacterID) { return Invoke<DataTable>(nameof(GetNPCCharacterTalkDT), CharacterID); }
        public PalEnemyCampStatus GetEnemyCampStatus(Object KeyName) { return Invoke<PalEnemyCampStatus>(nameof(GetEnemyCampStatus), KeyName); }
        public PalWildPalDrinkWaterSpotProvider GetDrinkWaterSpotProvider() { return Invoke<PalWildPalDrinkWaterSpotProvider>(nameof(GetDrinkWaterSpotProvider)); }
        public Object GetCharacterIDFromCharacterIDAndUniqueNPCID(Object CharacterID, Object UniqueNPCID) { return Invoke<Object>(nameof(GetCharacterIDFromCharacterIDAndUniqueNPCID), CharacterID, UniqueNPCID); }
        public void AllResetBossRespawnFlag() { Invoke(nameof(AllResetBossRespawnFlag)); }
    }
    public class PalNPCMultiTalkHandle : Object
    {
        public PalNPCMultiTalkHandle(nint addr) : base(addr) { }
        public Object TalkId { get { return this[nameof(TalkId)]; } set { this[nameof(TalkId)] = value; } }
        public void OnFinishOneTalk() { Invoke(nameof(OnFinishOneTalk)); }
        public void IncrementTalkCountRecord() { Invoke(nameof(IncrementTalkCountRecord)); }
        public Object GetTalkId() { return Invoke<Object>(nameof(GetTalkId)); }
        public DataTable GetTalkData(Object inTalkID) { return Invoke<DataTable>(nameof(GetTalkData), inTalkID); }
        public PalPlayerDataStorage GetPlayerDataStorage() { return Invoke<PalPlayerDataStorage>(nameof(GetPlayerDataStorage)); }
        public PalPlayerLocalRecordData GetLocalRecordData() { return Invoke<PalPlayerLocalRecordData>(nameof(GetLocalRecordData)); }
        public int GetCurrentTalkCount() { return Invoke<int>(nameof(GetCurrentTalkCount)); }
    }
    public class PalNPCSpawnerBase : Actor
    {
        public PalNPCSpawnerBase(nint addr) : base(addr) { }
        public bool bIsRunOnAnyThread { get { return this[nameof(bIsRunOnAnyThread)].Flag; } set { this[nameof(bIsRunOnAnyThread)].Flag = value; } }
        public bool Ignore_DebugSettingDisable { get { return this[nameof(Ignore_DebugSettingDisable)].Flag; } set { this[nameof(Ignore_DebugSettingDisable)].Flag = value; } }
        public bool Ignore_DistanceLocationReset { get { return this[nameof(Ignore_DistanceLocationReset)].Flag; } set { this[nameof(Ignore_DistanceLocationReset)].Flag = value; } }
        public bool Ignore_FarCheck { get { return this[nameof(Ignore_FarCheck)].Flag; } set { this[nameof(Ignore_FarCheck)].Flag = value; } }
        public bool bDoSpawnedTick { get { return this[nameof(bDoSpawnedTick)].Flag; } set { this[nameof(bDoSpawnedTick)].Flag = value; } }
        public EPalSpawnRadiusType SpawnRadiusType { get { return (EPalSpawnRadiusType)this[nameof(SpawnRadiusType)].GetValue<int>(); } set { this[nameof(SpawnRadiusType)].SetValue<int>((int)value); } }
        public bool IsSquadBehaviour { get { return this[nameof(IsSquadBehaviour)].Flag; } set { this[nameof(IsSquadBehaviour)].Flag = value; } }
        public Object DebugOrganizationName { get { return this[nameof(DebugOrganizationName)]; } set { this[nameof(DebugOrganizationName)] = value; } }
        public float LocationResetDistance_SpawnerToCharacterTooFar { get { return this[nameof(LocationResetDistance_SpawnerToCharacterTooFar)].GetValue<float>(); } set { this[nameof(LocationResetDistance_SpawnerToCharacterTooFar)].SetValue<float>(value); } }
        public float LocationResetHeight_SpawnerToCharacterTooLow { get { return this[nameof(LocationResetHeight_SpawnerToCharacterTooLow)].GetValue<float>(); } set { this[nameof(LocationResetHeight_SpawnerToCharacterTooLow)].SetValue<float>(value); } }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public PalNavigationInvokerComponent NavInvokerComponent { get { return this[nameof(NavInvokerComponent)].As<PalNavigationInvokerComponent>(); } set { this["NavInvokerComponent"] = value; } }
        public Array<Vector> NPCLocations { get { return new Array<Vector>(this[nameof(NPCLocations)].Address); } }
        public Object OnCreatedGroupDelegate { get { return this[nameof(OnCreatedGroupDelegate)]; } set { this[nameof(OnCreatedGroupDelegate)] = value; } }
        public Guid WildGroupGuid { get { return this[nameof(WildGroupGuid)].As<Guid>(); } set { this["WildGroupGuid"] = value; } }
        public PalSquad Squad { get { return this[nameof(Squad)].As<PalSquad>(); } set { this["Squad"] = value; } }
        public FlagContainer DisableSpawn { get { return this[nameof(DisableSpawn)].As<FlagContainer>(); } set { this["DisableSpawn"] = value; } }
        public EPalSpwnerImportanceType ImportanceType { get { return (EPalSpwnerImportanceType)this[nameof(ImportanceType)].GetValue<int>(); } set { this[nameof(ImportanceType)].SetValue<int>((int)value); } }
        public void Tick_Spawning(float DeltaTime) { Invoke(nameof(Tick_Spawning), DeltaTime); }
        public void Tick_Spawned(float DeltaTime) { Invoke(nameof(Tick_Spawned), DeltaTime); }
        public void Tick_Despawning(float DeltaTime) { Invoke(nameof(Tick_Despawning), DeltaTime); }
        public void SpawnRequest_ByOutside(bool IsDeleteAliveCharacter) { Invoke(nameof(SpawnRequest_ByOutside), IsDeleteAliveCharacter); }
        public void SetSpawnedFlag(bool IsSpawned) { Invoke(nameof(SetSpawnedFlag), IsSpawned); }
        public void SetSpawnDisableFlag(Object Name, bool isDisable) { Invoke(nameof(SetSpawnDisableFlag), Name, isDisable); }
        public void SetDisableBossSpawner_ToSaveData(Object KeyName) { Invoke(nameof(SetDisableBossSpawner_ToSaveData), KeyName); }
        public void SetCheckRadius(float SpawnRadius, float DespawnRadius) { Invoke(nameof(SetCheckRadius), SpawnRadius, DespawnRadius); }
        public void SetAllNPCLocation() { Invoke(nameof(SetAllNPCLocation)); }
        public void RequestCreateGroup(Array<Object> CharacterIDList) { Invoke(nameof(RequestCreateGroup), CharacterIDList); }
        public void Request_TickSpawningForGameThread(float DeltaTime) { Invoke(nameof(Request_TickSpawningForGameThread), DeltaTime); }
        public void Request_TickSpawnedForGameThread(float DeltaTime) { Invoke(nameof(Request_TickSpawnedForGameThread), DeltaTime); }
        public void Request_TickDespawningForGameThread(float DeltaTime) { Invoke(nameof(Request_TickDespawningForGameThread), DeltaTime); }
        public void RemoveGroupWhenDestoryActor(Actor DestoryActor) { Invoke(nameof(RemoveGroupWhenDestoryActor), DestoryActor); }
        public void RemoveGroupCharacter(PalIndividualCharacterHandle RemoveIndividualHandle) { Invoke(nameof(RemoveGroupCharacter), RemoveIndividualHandle); }
        public bool RandomSpawnLocationByRadiusLineTraceWithWorldLocation(Vector OutLocation, float Radius, float RayStartUpOffset, float RayEndDownOffset, Vector WorldPos, int SumSpawnNum, int SelfIndexInAll) { return Invoke<bool>(nameof(RandomSpawnLocationByRadiusLineTraceWithWorldLocation), OutLocation, Radius, RayStartUpOffset, RayEndDownOffset, WorldPos, SumSpawnNum, SelfIndexInAll); }
        public bool RandomSpawnLocationByRadiusLineTrace(Vector OutLocation, float Radius, float RayStartUpOffset, float RayEndDownOffset, int SumSpawnNum, int SelfIndexInAll) { return Invoke<bool>(nameof(RandomSpawnLocationByRadiusLineTrace), OutLocation, Radius, RayStartUpOffset, RayEndDownOffset, SumSpawnNum, SelfIndexInAll); }
        public void ProcessBossDefeatInfo_ServerInternal(Actor BossActor, Object SpawnerName) { Invoke(nameof(ProcessBossDefeatInfo_ServerInternal), BossActor, SpawnerName); }
        public void PathWalkNameSort(Array<Object> WalkPoint, Array<Object> OutSortedWalkPoint) { Invoke(nameof(PathWalkNameSort), WalkPoint, OutSortedWalkPoint); }
        public void OnInitialized() { Invoke(nameof(OnInitialized)); }
        public bool IsSuppressedByRandomIncident() { return Invoke<bool>(nameof(IsSuppressedByRandomIncident)); }
        public bool IsSpawned() { return Invoke<bool>(nameof(IsSpawned)); }
        public bool IsSpawnDisable() { return Invoke<bool>(nameof(IsSpawnDisable)); }
        public bool IsNearBaseCamp() { return Invoke<bool>(nameof(IsNearBaseCamp)); }
        public float GetSpawnRadiusCM() { return Invoke<float>(nameof(GetSpawnRadiusCM)); }
        public float GetSpawnPointRadius() { return Invoke<float>(nameof(GetSpawnPointRadius)); }
        public int GetSpawnNumRandom_OneTribe(PalSpawnerOneTribeInfo Info) { return Invoke<int>(nameof(GetSpawnNumRandom_OneTribe), Info); }
        public int GetSpawnLevelRandom_OneTribe(PalSpawnerOneTribeInfo Info) { return Invoke<int>(nameof(GetSpawnLevelRandom_OneTribe), Info); }
        public float GetSpawnerRadiusByType() { return Invoke<float>(nameof(GetSpawnerRadiusByType)); }
        public Object GetSpawnDisableDebugInfo() { return Invoke<Object>(nameof(GetSpawnDisableDebugInfo)); }
        public int GetMaxMonsterLevel() { return Invoke<int>(nameof(GetMaxMonsterLevel)); }
        public bool GetIsServer() { return Invoke<bool>(nameof(GetIsServer)); }
        public bool GetDisableBossSpawnerFlag_FromSaveData(Object KeyName) { return Invoke<bool>(nameof(GetDisableBossSpawnerFlag_FromSaveData), KeyName); }
        public void GetAllSpawnedNPCHandle(Array<PalIndividualCharacterHandle> Handles) { Invoke(nameof(GetAllSpawnedNPCHandle), Handles); }
        public void GetAllNPCLocation(Array<Vector> OutLocations) { Invoke(nameof(GetAllNPCLocation), OutLocations); }
        public void CreatedGroupDelegate__DelegateSignature() { Invoke(nameof(CreatedGroupDelegate__DelegateSignature)); }
        public void CreateDebugSpawnerGroupInfo(PalSpawnerGroupInfo OneGroupInfo) { Invoke(nameof(CreateDebugSpawnerGroupInfo), OneGroupInfo); }
        public EPalCheckSpawnResultType CheckSpawnDistance(bool IsSpawned) { return Invoke<EPalCheckSpawnResultType>(nameof(CheckSpawnDistance), IsSpawned); }
        public void BlueprintTick_Spawning(float DeltaTime) { Invoke(nameof(BlueprintTick_Spawning), DeltaTime); }
        public void BlueprintTick_Spawned(float DeltaTime) { Invoke(nameof(BlueprintTick_Spawned), DeltaTime); }
        public void BlueprintTick_Despawning(float DeltaTime) { Invoke(nameof(BlueprintTick_Despawning), DeltaTime); }
        public void BlueprintTick_AnyThread(float DeltaTime) { Invoke(nameof(BlueprintTick_AnyThread), DeltaTime); }
        public void BlueprintTick(float DeltaTime) { Invoke(nameof(BlueprintTick), DeltaTime); }
        public void AddGroupCharacterByGroupId(PalIndividualCharacterHandle AddIndividualHandle, Guid GroupID, Object DebugName) { Invoke(nameof(AddGroupCharacterByGroupId), AddIndividualHandle, GroupID, DebugName); }
        public void AddGroupCharacter(PalIndividualCharacterHandle AddIndividualHandle) { Invoke(nameof(AddGroupCharacter), AddIndividualHandle); }
    }
    public class PalNPCTalkComponent : ActorComponent
    {
        public PalNPCTalkComponent(nint addr) : base(addr) { }
        public bool IsTalking { get { return this[nameof(IsTalking)].Flag; } set { this[nameof(IsTalking)].Flag = value; } }
        public Object OnTalkStartDelegate { get { return this[nameof(OnTalkStartDelegate)]; } set { this[nameof(OnTalkStartDelegate)] = value; } }
        public Object OnTalkEndDelegate { get { return this[nameof(OnTalkEndDelegate)]; } set { this[nameof(OnTalkEndDelegate)] = value; } }
        public void TriggerStartTalk(Actor Other, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(TriggerStartTalk), Other, IndicatorType); }
        public void TriggerEndTalk(Actor Other) { Invoke(nameof(TriggerEndTalk), Other); }
        public void TalkStartDelegate__DelegateSignature(Actor SelfActor, Actor TargetActor) { Invoke(nameof(TalkStartDelegate__DelegateSignature), SelfActor, TargetActor); }
        public void TalkEndDelegate__DelegateSignature(Actor SelfActor, Actor TargetActor) { Invoke(nameof(TalkEndDelegate__DelegateSignature), SelfActor, TargetActor); }
        public void StartTalk(Actor Other) { Invoke(nameof(StartTalk), Other); }
        public bool HasTalkData(PalCharacter TalkCharacter) { return Invoke<bool>(nameof(HasTalkData), TalkCharacter); }
        public bool GetIsTalking() { return Invoke<bool>(nameof(GetIsTalking)); }
    }
    public class PalNPCTalkSystem : Object
    {
        public PalNPCTalkSystem(nint addr) : base(addr) { }
        public PalTalkWidgetParameter talkWidgetParameter { get { return this[nameof(talkWidgetParameter)].As<PalTalkWidgetParameter>(); } set { this["talkWidgetParameter"] = value; } }
        public PalTalkWindowWidgetBase talkWidget { get { return this[nameof(talkWidget)].As<PalTalkWindowWidgetBase>(); } set { this["talkWidget"] = value; } }
        public PalNPCTalkData nowExecutedTalkData { get { return this[nameof(nowExecutedTalkData)].As<PalNPCTalkData>(); } set { this["nowExecutedTalkData"] = value; } }
        public int nowTalkDataIndex { get { return this[nameof(nowTalkDataIndex)].GetValue<int>(); } set { this[nameof(nowTalkDataIndex)].SetValue<int>(value); } }
        public Object nowTalkDataSeqenceName { get { return this[nameof(nowTalkDataSeqenceName)]; } set { this[nameof(nowTalkDataSeqenceName)] = value; } }
        public Array<Object> defaultYesNoChoiceText { get { return new Array<Object>(this[nameof(defaultYesNoChoiceText)].Address); } }
        public Function targetFunc { get { return this[nameof(targetFunc)].As<Function>(); } set { this["targetFunc"] = value; } }
        public DataTable FuncParam { get { return this[nameof(FuncParam)].As<DataTable>(); } set { this["FuncParam"] = value; } }
        public EPalNPCTalkCustomFunctionResult CustomFuncResult { get { return (EPalNPCTalkCustomFunctionResult)this[nameof(CustomFuncResult)].GetValue<int>(); } set { this[nameof(CustomFuncResult)].SetValue<int>((int)value); } }
        public int CustomFuncChoseIndex { get { return this[nameof(CustomFuncChoseIndex)].GetValue<int>(); } set { this[nameof(CustomFuncChoseIndex)].SetValue<int>(value); } }
        public void SetCustomFunctionResult_Implementation(EPalNPCTalkCustomFunctionResult Result) { Invoke(nameof(SetCustomFunctionResult_Implementation), Result); }
        public void SetCustomFunctionChoseIndex_Implementation(int Index) { Invoke(nameof(SetCustomFunctionChoseIndex_Implementation), Index); }
        public EPalNPCTalkProceedResult Proceed() { return Invoke<EPalNPCTalkProceedResult>(nameof(Proceed)); }
        public void Initialize(PalTalkWidgetParameter InParameter, PalTalkWindowWidgetBase inTalkWidget) { Invoke(nameof(Initialize), InParameter, inTalkWidget); }
        public bool ChangeSeqence(Object targetSeqenceName) { return Invoke<bool>(nameof(ChangeSeqence), targetSeqenceName); }
        public bool CallCustomFunc() { return Invoke<bool>(nameof(CallCustomFunc)); }
        public void AddArgument_Implementation(Object Key, Object Text) { Invoke(nameof(AddArgument_Implementation), Key, Text); }
    }
    public class PalNPCTalkSystemCustomFunctionInterface : Interface
    {
        public PalNPCTalkSystemCustomFunctionInterface(nint addr) : base(addr) { }
        public void SetCustomFunctionResult(EPalNPCTalkCustomFunctionResult CustomFunctionResult) { Invoke(nameof(SetCustomFunctionResult), CustomFunctionResult); }
        public void SetCustomFunctionChoseIndex(int Index) { Invoke(nameof(SetCustomFunctionChoseIndex), Index); }
        public void AddArgument(Object Key, Object Text) { Invoke(nameof(AddArgument), Key, Text); }
    }
    public class PalNPCWeaponGenerator : Object
    {
        public PalNPCWeaponGenerator(nint addr) : base(addr) { }
        public Object WeaponIDMap { get { return this[nameof(WeaponIDMap)]; } set { this[nameof(WeaponIDMap)] = value; } }
        public PalContainerId WeaponContainerId { get { return this[nameof(WeaponContainerId)].As<PalContainerId>(); } set { this["WeaponContainerId"] = value; } }
        public PalWeaponBase WeaponActorBP { get { return this[nameof(WeaponActorBP)].As<PalWeaponBase>(); } set { this["WeaponActorBP"] = value; } }
        public bool IsDefaultEquipWeapon { get { return this[nameof(IsDefaultEquipWeapon)].Flag; } set { this[nameof(IsDefaultEquipWeapon)].Flag = value; } }
        public void OnSpawnEvent(PalWeaponBase WeaponActor) { Invoke(nameof(OnSpawnEvent), WeaponActor); }
        public void GenerateWeapn(EPalWeaponType WeaponType, bool IsDefaultEquip) { Invoke(nameof(GenerateWeapn), WeaponType, IsDefaultEquip); }
    }
    public class PalObjectCollector : PalWorldSubsystem
    {
        public PalObjectCollector(nint addr) : base(addr) { }
        public Array<PalCharacter> PalCharacter_All { get { return new Array<PalCharacter>(this[nameof(PalCharacter_All)].Address); } }
        public Array<PalCharacter> PalCharacter_NPC { get { return new Array<PalCharacter>(this[nameof(PalCharacter_NPC)].Address); } }
        public Array<PalCharacter> PalCharacter_Player { get { return new Array<PalCharacter>(this[nameof(PalCharacter_Player)].Address); } }
        public Array<PalMapObjectSpawnerBase> MapObject_SpawnerBase { get { return new Array<PalMapObjectSpawnerBase>(this[nameof(MapObject_SpawnerBase)].Address); } }
        public Object NearestCharacter_FromPlayer { get { return this[nameof(NearestCharacter_FromPlayer)]; } set { this[nameof(NearestCharacter_FromPlayer)] = value; } }
        public Array<PalMapObjectSpawnerBase> NearestSpawnerBase { get { return new Array<PalMapObjectSpawnerBase>(this[nameof(NearestSpawnerBase)].Address); } }
        public Object CalculationNearestCharacter_FromPlayer { get { return this[nameof(CalculationNearestCharacter_FromPlayer)]; } set { this[nameof(CalculationNearestCharacter_FromPlayer)] = value; } }
        public Array<PalMapObjectSpawnerBase> CalculationNearSpawnerBase_FromPlayer { get { return new Array<PalMapObjectSpawnerBase>(this[nameof(CalculationNearSpawnerBase_FromPlayer)].Address); } }
        public Array<Vector> BaseCampLocationList { get { return new Array<Vector>(this[nameof(BaseCampLocationList)].Address); } }
        public bool bIsUpdateBaseCamp { get { return this[nameof(bIsUpdateBaseCamp)].Flag; } set { this[nameof(bIsUpdateBaseCamp)].Flag = value; } }
        public Array<PalMapObjectSpawnerBase> CalculationNearSpawnerBase_FromBaseCamp { get { return new Array<PalMapObjectSpawnerBase>(this[nameof(CalculationNearSpawnerBase_FromBaseCamp)].Address); } }
        public float NearStartDistanceForSpawnerBase { get { return this[nameof(NearStartDistanceForSpawnerBase)].GetValue<float>(); } set { this[nameof(NearStartDistanceForSpawnerBase)].SetValue<float>(value); } }
        public float NearEndDistanceForSpawnerBase { get { return this[nameof(NearEndDistanceForSpawnerBase)].GetValue<float>(); } set { this[nameof(NearEndDistanceForSpawnerBase)].SetValue<float>(value); } }
        public float NearDistanceForSpawnerBaseFromBaseCamp { get { return this[nameof(NearDistanceForSpawnerBaseFromBaseCamp)].GetValue<float>(); } set { this[nameof(NearDistanceForSpawnerBaseFromBaseCamp)].SetValue<float>(value); } }
    }
    public class PalObjectDurabilityInterface : Interface
    {
        public PalObjectDurabilityInterface(nint addr) : base(addr) { }
        public void SetDurability(float NewDurability) { Invoke(nameof(SetDurability), NewDurability); }
        public float GetMaxDurability() { return Invoke<float>(nameof(GetMaxDurability)); }
        public float GetDurability() { return Invoke<float>(nameof(GetDurability)); }
    }
    public class PalObjectReplicatorComponent : ActorComponent
    {
        public PalObjectReplicatorComponent(nint addr) : base(addr) { }
        public Array<Object> ReplicateObject { get { return new Array<Object>(this[nameof(ReplicateObject)].Address); } }
    }
    public class PalOnlineSubsystemSteam : Object
    {
        public PalOnlineSubsystemSteam(nint addr) : base(addr) { }
    }
    public class PalOptimizeParameterSetting : Object
    {
        public PalOptimizeParameterSetting(nint addr) : base(addr) { }
        public PalOptimizeParameter Parameter { get { return this[nameof(Parameter)].As<PalOptimizeParameter>(); } set { this["Parameter"] = value; } }
    }
    public class PalOptionReplicator : PalGameStateReplicatorBase
    {
        public PalOptionReplicator(nint addr) : base(addr) { }
        public PalOptionWorldSettings OptionWorldSettings { get { return this[nameof(OptionWorldSettings)].As<PalOptionWorldSettings>(); } set { this["OptionWorldSettings"] = value; } }
        public void OnRep_OptionWorldSettings() { Invoke(nameof(OnRep_OptionWorldSettings)); }
    }
    public class PalOptionSubsystem : PalWorldSubsystem
    {
        public PalOptionSubsystem(nint addr) : base(addr) { }
        public Object OnChangeKeyboardDelegate { get { return this[nameof(OnChangeKeyboardDelegate)]; } set { this[nameof(OnChangeKeyboardDelegate)] = value; } }
        public Object OnChangePadDelegate { get { return this[nameof(OnChangePadDelegate)]; } set { this[nameof(OnChangePadDelegate)] = value; } }
        public Object OnChangeGraphicsDelegate { get { return this[nameof(OnChangeGraphicsDelegate)]; } set { this[nameof(OnChangeGraphicsDelegate)] = value; } }
        public Object OnChangeWorldSettingsDelegate { get { return this[nameof(OnChangeWorldSettingsDelegate)]; } set { this[nameof(OnChangeWorldSettingsDelegate)] = value; } }
        public Object OnChangeKeyConfigDelegate { get { return this[nameof(OnChangeKeyConfigDelegate)]; } set { this[nameof(OnChangeKeyConfigDelegate)] = value; } }
        public Object OnChangeScreenRatioDelegate { get { return this[nameof(OnChangeScreenRatioDelegate)]; } set { this[nameof(OnChangeScreenRatioDelegate)] = value; } }
        public PalOptionWorldStaticSettings OptionWorldStaticSettings { get { return this[nameof(OptionWorldStaticSettings)].As<PalOptionWorldStaticSettings>(); } set { this["OptionWorldStaticSettings"] = value; } }
        public PalOptionLocalStaticSettings OptionLocalStaticSettings { get { return this[nameof(OptionLocalStaticSettings)].As<PalOptionLocalStaticSettings>(); } set { this["OptionLocalStaticSettings"] = value; } }
        public PalOptionWorldSettings OptionWorldSettings { get { return this[nameof(OptionWorldSettings)].As<PalOptionWorldSettings>(); } set { this["OptionWorldSettings"] = value; } }
        public PalOptionWorldSettings OptionWorldSettingsCache { get { return this[nameof(OptionWorldSettingsCache)].As<PalOptionWorldSettings>(); } set { this["OptionWorldSettingsCache"] = value; } }
        public PalOptionGraphicsSettings GraphicsSettings { get { return this[nameof(GraphicsSettings)].As<PalOptionGraphicsSettings>(); } set { this["GraphicsSettings"] = value; } }
        public PalOptionAudioSettings AudioSettings { get { return this[nameof(AudioSettings)].As<PalOptionAudioSettings>(); } set { this["AudioSettings"] = value; } }
        public PalOptionCommonSettings CommonSettings { get { return this[nameof(CommonSettings)].As<PalOptionCommonSettings>(); } set { this["CommonSettings"] = value; } }
        public PalOptionKeyboardSettings KeyboardSettings { get { return this[nameof(KeyboardSettings)].As<PalOptionKeyboardSettings>(); } set { this["KeyboardSettings"] = value; } }
        public PalOptionPadSettings PadSettings { get { return this[nameof(PadSettings)].As<PalOptionPadSettings>(); } set { this["PadSettings"] = value; } }
        public PalKeyConfigSettings KeyConfigSettings { get { return this[nameof(KeyConfigSettings)].As<PalKeyConfigSettings>(); } set { this["KeyConfigSettings"] = value; } }
        public float BaseFov { get { return this[nameof(BaseFov)].GetValue<float>(); } set { this[nameof(BaseFov)].SetValue<float>(value); } }
        public Object Namespace { get { return this[nameof(Namespace)]; } set { this[nameof(Namespace)] = value; } }
        public DataTable OptionWorldPresetTable { get { return this[nameof(OptionWorldPresetTable)].As<DataTable>(); } set { this["OptionWorldPresetTable"] = value; } }
        public DataTable OptionWorldModePresetTable { get { return this[nameof(OptionWorldModePresetTable)].As<DataTable>(); } set { this["OptionWorldModePresetTable"] = value; } }
        public DataTable OptionGraphicsPresetTable { get { return this[nameof(OptionGraphicsPresetTable)].As<DataTable>(); } set { this["OptionGraphicsPresetTable"] = value; } }
        public Object PalPlayerCharacterClass { get { return this[nameof(PalPlayerCharacterClass)]; } set { this[nameof(PalPlayerCharacterClass)] = value; } }
        public void SetPadSettings(PalOptionPadSettings InPadSettings) { Invoke(nameof(SetPadSettings), InPadSettings); }
        public void SetOptionWorldSettings(PalOptionWorldSettings InOptionWorldSettings) { Invoke(nameof(SetOptionWorldSettings), InOptionWorldSettings); }
        public void SetKeyConfigSettings(PalKeyConfigSettings InKeyConfigSettings) { Invoke(nameof(SetKeyConfigSettings), InKeyConfigSettings); }
        public void SetKeyboardSettings(PalOptionKeyboardSettings InKeyboardSettings) { Invoke(nameof(SetKeyboardSettings), InKeyboardSettings); }
        public void SetGraphicsSettings(PalOptionGraphicsSettings InGraphicsSettings) { Invoke(nameof(SetGraphicsSettings), InGraphicsSettings); }
        public void SetCommonSettings(PalOptionCommonSettings InCommonSettings) { Invoke(nameof(SetCommonSettings), InCommonSettings); }
        public void SetAudioSettings(PalOptionAudioSettings InAudioSettings) { Invoke(nameof(SetAudioSettings), InAudioSettings); }
        public void SaveLocalSettings() { Invoke(nameof(SaveLocalSettings)); }
        public void RefreshBanList() { Invoke(nameof(RefreshBanList)); }
        public void OnCompletedGetBanlist(Object ResponseBody, bool bResponseOK, int ResponseCode) { Invoke(nameof(OnCompletedGetBanlist), ResponseBody, bResponseOK, ResponseCode); }
        public void OnChangeWorldSettingsDelegate__DelegateSignature(PalOptionWorldSettings PrevSettings, PalOptionWorldSettings NewSettings) { Invoke(nameof(OnChangeWorldSettingsDelegate__DelegateSignature), PrevSettings, NewSettings); }
        public void OnChangeScreenRatioDelegate__DelegateSignature(float newRatio) { Invoke(nameof(OnChangeScreenRatioDelegate__DelegateSignature), newRatio); }
        public void OnChangePadDelegate__DelegateSignature(PalOptionPadSettings PrevSettings, PalOptionPadSettings NewSettings) { Invoke(nameof(OnChangePadDelegate__DelegateSignature), PrevSettings, NewSettings); }
        public void OnChangeKeyConfigDelegate__DelegateSignature(PalKeyConfigSettings PrevSettings, PalKeyConfigSettings NewSettings) { Invoke(nameof(OnChangeKeyConfigDelegate__DelegateSignature), PrevSettings, NewSettings); }
        public void OnChangeKeyboardDelegate__DelegateSignature(PalOptionKeyboardSettings PrevSettings, PalOptionKeyboardSettings NewSettings) { Invoke(nameof(OnChangeKeyboardDelegate__DelegateSignature), PrevSettings, NewSettings); }
        public void OnChangeGraphicsDelegate__DelegateSignature(PalOptionGraphicsSettings PrevSettings, PalOptionGraphicsSettings NewSettings) { Invoke(nameof(OnChangeGraphicsDelegate__DelegateSignature), PrevSettings, NewSettings); }
        public void GetSupportScreenSizes(Array<IntPoint> SupportResolutions, byte WindowMode) { Invoke(nameof(GetSupportScreenSizes), SupportResolutions, WindowMode); }
        public PalOptionPadSettings GetPadSettings() { return Invoke<PalOptionPadSettings>(nameof(GetPadSettings)); }
        public PalOptionWorldStaticSettings GetOptionWorldStaticSettings() { return Invoke<PalOptionWorldStaticSettings>(nameof(GetOptionWorldStaticSettings)); }
        public PalOptionWorldSettings GetOptionWorldSettings() { return Invoke<PalOptionWorldSettings>(nameof(GetOptionWorldSettings)); }
        public PalOptionLocalStaticSettings GetOptionLocalStaticSettings() { return Invoke<PalOptionLocalStaticSettings>(nameof(GetOptionLocalStaticSettings)); }
        public PalKeyConfigSettings GetKeyConfigSettings() { return Invoke<PalKeyConfigSettings>(nameof(GetKeyConfigSettings)); }
        public PalOptionKeyboardSettings GetKeyboardSettings() { return Invoke<PalOptionKeyboardSettings>(nameof(GetKeyboardSettings)); }
        public PalOptionGraphicsSettings GetGraphicsSettings() { return Invoke<PalOptionGraphicsSettings>(nameof(GetGraphicsSettings)); }
        public IntPoint GetGameResolution() { return Invoke<IntPoint>(nameof(GetGameResolution)); }
        public PalOptionCommonSettings GetCommonSettings() { return Invoke<PalOptionCommonSettings>(nameof(GetCommonSettings)); }
        public PalOptionAudioSettings GetAudioSettings() { return Invoke<PalOptionAudioSettings>(nameof(GetAudioSettings)); }
        public void ApplyWorldSettings() { Invoke(nameof(ApplyWorldSettings)); }
        public void ApplyWorldPreset(PalOptionWorldSettings OutSettings, EPalOptionWorldDifficulty Difficulty) { Invoke(nameof(ApplyWorldPreset), OutSettings, Difficulty); }
        public void ApplyWorldModePreset(PalOptionWorldSettings OutSettings, bool bIsPvP) { Invoke(nameof(ApplyWorldModePreset), OutSettings, bIsPvP); }
        public void ApplyGraphicsPresetByBenchMark(PalOptionGraphicsSettings OutSettings) { Invoke(nameof(ApplyGraphicsPresetByBenchMark), OutSettings); }
        public void ApplyGraphicsPreset(PalOptionGraphicsSettings OutSettings, EPalOptionGraphicsLevel GraphicsLevel) { Invoke(nameof(ApplyGraphicsPreset), OutSettings, GraphicsLevel); }
    }
    public class PalOptionSaveGame : SaveGame
    {
        public PalOptionSaveGame(nint addr) : base(addr) { }
        public PalOptionSaveData OptionSaveData { get { return this[nameof(OptionSaveData)].As<PalOptionSaveData>(); } set { this["OptionSaveData"] = value; } }
    }
    public class PalOtomoAttackStopJudgeByBall : Object
    {
        public PalOtomoAttackStopJudgeByBall(nint addr) : base(addr) { }
        public bool IsProhibitAttack { get { return this[nameof(IsProhibitAttack)].Flag; } set { this[nameof(IsProhibitAttack)].Flag = value; } }
    }
    public class PalOtomoAttackStopJudgeByBallList : Object
    {
        public PalOtomoAttackStopJudgeByBallList(nint addr) : base(addr) { }
        public Object JudgeList { get { return this[nameof(JudgeList)]; } set { this[nameof(JudgeList)] = value; } }
        public void OnHitCaptureBall(Actor Attacker) { Invoke(nameof(OnHitCaptureBall), Attacker); }
    }
    public class PalOtomoHolderComponentBase : ActorComponent
    {
        public PalOtomoHolderComponentBase(nint addr) : base(addr) { }
        public Object OnCreatedCharacterContainerDelegate { get { return this[nameof(OnCreatedCharacterContainerDelegate)]; } set { this[nameof(OnCreatedCharacterContainerDelegate)] = value; } }
        public Object OnUpdateOtomoSlotDelegate { get { return this[nameof(OnUpdateOtomoSlotDelegate)]; } set { this[nameof(OnUpdateOtomoSlotDelegate)] = value; } }
        public Object OnUpdateOtomoSlotWithActorDelegate { get { return this[nameof(OnUpdateOtomoSlotWithActorDelegate)]; } set { this[nameof(OnUpdateOtomoSlotWithActorDelegate)] = value; } }
        public Object OnUpdateOtomoSlotWithInitializedParameterDelegate { get { return this[nameof(OnUpdateOtomoSlotWithInitializedParameterDelegate)]; } set { this[nameof(OnUpdateOtomoSlotWithInitializedParameterDelegate)] = value; } }
        public Object OnOtomoSpawnedDelegate { get { return this[nameof(OnOtomoSpawnedDelegate)]; } set { this[nameof(OnOtomoSpawnedDelegate)] = value; } }
        public PalOtomoSpawnCollisionChecker CollisionChecker { get { return this[nameof(CollisionChecker)].As<PalOtomoSpawnCollisionChecker>(); } set { this["CollisionChecker"] = value; } }
        public EPalOtomoPalOrderType OtomoOrder { get { return (EPalOtomoPalOrderType)this[nameof(OtomoOrder)].GetValue<int>(); } set { this[nameof(OtomoOrder)].SetValue<int>((int)value); } }
        public PalIndividualCharacterContainer CharacterContainer { get { return this[nameof(CharacterContainer)].As<PalIndividualCharacterContainer>(); } set { this["CharacterContainer"] = value; } }
        public Array<PalIndividualCharacterHandle> CreatingHandleCache { get { return new Array<PalIndividualCharacterHandle>(this[nameof(CreatingHandleCache)].Address); } }
        public void UpdateOtomoSlotWithInitializedParameterDelegate__DelegateSignature(PalCharacter Character) { Invoke(nameof(UpdateOtomoSlotWithInitializedParameterDelegate__DelegateSignature), Character); }
        public void UpdateOtomoSlotDelegate__DelegateSignature(int SlotIndex, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(UpdateOtomoSlotDelegate__DelegateSignature), SlotIndex, LastHandle); }
        public PalIndividualCharacterHandle TryGetSpawnedOtomoHandle() { return Invoke<PalIndividualCharacterHandle>(nameof(TryGetSpawnedOtomoHandle)); }
        public PalCharacter TryGetSpawnedOtomo() { return Invoke<PalCharacter>(nameof(TryGetSpawnedOtomo)); }
        public Pawn TryGetOwnerControlledPawn() { return Invoke<Pawn>(nameof(TryGetOwnerControlledPawn)); }
        public PalCharacter TryGetOwnerControlledCharacter() { return Invoke<PalCharacter>(nameof(TryGetOwnerControlledCharacter)); }
        public PalCharacter TryGetOtomoActorBySlotIndex(int SlotIndex) { return Invoke<PalCharacter>(nameof(TryGetOtomoActorBySlotIndex), SlotIndex); }
        public void TryGetLoadedOtomoData(bool bLoaded, Object OutParameterMap) { Invoke(nameof(TryGetLoadedOtomoData), bLoaded, OutParameterMap); }
        public PalCharacter TryGetCurrentSelectPalActor() { return Invoke<PalCharacter>(nameof(TryGetCurrentSelectPalActor)); }
        public bool TryGetContainer(PalIndividualCharacterContainer Container) { return Invoke<bool>(nameof(TryGetContainer), Container); }
        public void TryFixAssignNearestWorkSelectedOtomo(Actor HitActor) { Invoke(nameof(TryFixAssignNearestWorkSelectedOtomo), HitActor); }
        public void Tmp_EmptySlot(PalCharacterSlotId SlotID) { Invoke(nameof(Tmp_EmptySlot), SlotID); }
        public void SpawnOtomoByLoad(int SlotIndex) { Invoke(nameof(SpawnOtomoByLoad), SlotIndex); }
        public void SetSelectOtomoID_Internal(int Index) { Invoke(nameof(SetSelectOtomoID_Internal), Index); }
        public void SetSelectOtomoID(int Index) { Invoke(nameof(SetSelectOtomoID), Index); }
        public void SetOtomoOrder_ToServer(EPalOtomoPalOrderType OrderType) { Invoke(nameof(SetOtomoOrder_ToServer), OrderType); }
        public void SetInteractComponent(Actor SpawnPal) { Invoke(nameof(SetInteractComponent), SpawnPal); }
        public void OtomoSpawnedDelegate__DelegateSignature(Controller HolderController, PalCharacter OtomoPal) { Invoke(nameof(OtomoSpawnedDelegate__DelegateSignature), HolderController, OtomoPal); }
        public void OnUpdateSlot(PalIndividualCharacterSlot Slot, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(OnUpdateSlot), Slot, LastHandle); }
        public void OnUpdateIndividualActor(PalIndividualCharacterHandle LastHandle) { Invoke(nameof(OnUpdateIndividualActor), LastHandle); }
        public void OnSpawnOtomoCallback_ServerInternal(PalInstanceID ID) { Invoke(nameof(OnSpawnOtomoCallback_ServerInternal), ID); }
        public void OnSpawnDebugOtomoCallback_ServerInternal(PalInstanceID ID) { Invoke(nameof(OnSpawnDebugOtomoCallback_ServerInternal), ID); }
        public void OnReplicated_CharacterContainer_AllSlots(PalIndividualCharacterContainer Container) { Invoke(nameof(OnReplicated_CharacterContainer_AllSlots), Container); }
        public void OnRep_CharacterContainer() { Invoke(nameof(OnRep_CharacterContainer)); }
        public void OnInitializedCharacter(PalCharacter Character) { Invoke(nameof(OnInitializedCharacter), Character); }
        public void OnCreatedCharacterContainer__DelegateSignature() { Invoke(nameof(OnCreatedCharacterContainer__DelegateSignature)); }
        public void OnCreatedCharacterContainer() { Invoke(nameof(OnCreatedCharacterContainer)); }
        public void OnChangeOtomoActive(PalCharacter Otomo, bool IsActive) { Invoke(nameof(OnChangeOtomoActive), Otomo, IsActive); }
        public void LostOtomoByID_ToClient(PalInstanceID ID) { Invoke(nameof(LostOtomoByID_ToClient), ID); }
        public bool IsValidCurrentSelectPalActor() { return Invoke<bool>(nameof(IsValidCurrentSelectPalActor)); }
        public bool IsRidingBySpawnSlotID() { return Invoke<bool>(nameof(IsRidingBySpawnSlotID)); }
        public bool IsRidingBySelectSlotID() { return Invoke<bool>(nameof(IsRidingBySelectSlotID)); }
        public bool IsFullMember() { return Invoke<bool>(nameof(IsFullMember)); }
        public bool IsDeadSelectedOtomo() { return Invoke<bool>(nameof(IsDeadSelectedOtomo)); }
        public bool IsCreatedOtomoContainer() { return Invoke<bool>(nameof(IsCreatedOtomoContainer)); }
        public bool IsControlledByPlayer() { return Invoke<bool>(nameof(IsControlledByPlayer)); }
        public bool IsALLEmpty() { return Invoke<bool>(nameof(IsALLEmpty)); }
        public bool IsAllDeadOtomo() { return Invoke<bool>(nameof(IsAllDeadOtomo)); }
        public bool IsActivatedSelectOtomo() { return Invoke<bool>(nameof(IsActivatedSelectOtomo)); }
        public void Initialize_ServerInternal() { Invoke(nameof(Initialize_ServerInternal)); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public void IncrementSelectOtomoID_Internal() { Invoke(nameof(IncrementSelectOtomoID_Internal)); }
        public void IncrementSelectOtomoID() { Invoke(nameof(IncrementSelectOtomoID)); }
        public void InactiveOtomoByHandle_PreProcess(PalIndividualCharacterHandle Handle) { Invoke(nameof(InactiveOtomoByHandle_PreProcess), Handle); }
        public void InactivateCurrentOtomo() { Invoke(nameof(InactivateCurrentOtomo)); }
        public Transform GetTransform_SpawnPalNearTrainer() { return Invoke<Transform>(nameof(GetTransform_SpawnPalNearTrainer)); }
        public int GetSpawnedOtomoID() { return Invoke<int>(nameof(GetSpawnedOtomoID)); }
        public void GetSlots(Array<PalIndividualCharacterSlot> Slots) { Invoke(nameof(GetSlots), Slots); }
        public int GetSlotIndexByIndividualHandle(PalIndividualCharacterHandle IndividualHandle) { return Invoke<int>(nameof(GetSlotIndexByIndividualHandle), IndividualHandle); }
        public int GetSelectedOtomoID() { return Invoke<int>(nameof(GetSelectedOtomoID)); }
        public int GetPreviousOtomoSlotID() { return Invoke<int>(nameof(GetPreviousOtomoSlotID)); }
        public EPalOtomoPalOrderType GetOtomoOrder() { return Invoke<EPalOtomoPalOrderType>(nameof(GetOtomoOrder)); }
        public PalIndividualCharacterHandle GetOtomoIndividualHandle(int SlotIndex) { return Invoke<PalIndividualCharacterHandle>(nameof(GetOtomoIndividualHandle), SlotIndex); }
        public PalIndividualCharacterSlot GetOtomoIndividualCharacterSlot_Internal(int SlotIndex) { return Invoke<PalIndividualCharacterSlot>(nameof(GetOtomoIndividualCharacterSlot_Internal), SlotIndex); }
        public PalIndividualCharacterSlot GetOtomoIndividualCharacterSlot(int SlotIndex) { return Invoke<PalIndividualCharacterSlot>(nameof(GetOtomoIndividualCharacterSlot), SlotIndex); }
        public int GetOtomoCount() { return Invoke<int>(nameof(GetOtomoCount)); }
        public int GetNextOtomoSlotID() { return Invoke<int>(nameof(GetNextOtomoSlotID)); }
        public int GetMaxOtomoNum() { return Invoke<int>(nameof(GetMaxOtomoNum)); }
        public PalCharacter GetEnemyWhenOtomoThrow(Vector OtomoAppearedLocation) { return Invoke<PalCharacter>(nameof(GetEnemyWhenOtomoThrow), OtomoAppearedLocation); }
        public PalIndividualCharacterSlot GetEmptySlot() { return Invoke<PalIndividualCharacterSlot>(nameof(GetEmptySlot)); }
        public void GetAllIndividualHandle(Array<PalIndividualCharacterHandle> OutArray) { Invoke(nameof(GetAllIndividualHandle), OutArray); }
        public void DecrementSelectOtomoID_Internal() { Invoke(nameof(DecrementSelectOtomoID_Internal)); }
        public void DecrementSelectOtomoID() { Invoke(nameof(DecrementSelectOtomoID)); }
        public void CoopCallCommand() { Invoke(nameof(CoopCallCommand)); }
        public void CallCancelCommand() { Invoke(nameof(CallCancelCommand)); }
        public bool AddOtomoHandleToFreeSlot(PalIndividualCharacterHandle Handle) { return Invoke<bool>(nameof(AddOtomoHandleToFreeSlot), Handle); }
        public void AddLogOtomoPartnerSkill_Waza_ToClient(Actor Otomo, EPalLogType PalLogType) { Invoke(nameof(AddLogOtomoPartnerSkill_Waza_ToClient), Otomo, PalLogType); }
        public void AddLogOtomoPartnerSkill_ToClient(Actor Otomo, EPalLogType PalLogType, int Value, bool AddSkillName) { Invoke(nameof(AddLogOtomoPartnerSkill_ToClient), Otomo, PalLogType, Value, AddSkillName); }
        public bool ActivateCurrentOtomoNearThePlayer() { return Invoke<bool>(nameof(ActivateCurrentOtomoNearThePlayer)); }
        public bool ActivateCurrentOtomo(Transform SpawnTransform) { return Invoke<bool>(nameof(ActivateCurrentOtomo), SpawnTransform); }
    }
    public class PalOtomoSpawnCollisionChecker : Object
    {
        public PalOtomoSpawnCollisionChecker(nint addr) : base(addr) { }
        public Transform GetTransform_WhenSpawnPalNearTrainer(Actor Trainer) { return Invoke<Transform>(nameof(GetTransform_WhenSpawnPalNearTrainer), Trainer); }
        public Vector GetLocation_WhenSpawnPalSphgereThrow(HitResult Hit, Pawn CurrentSelectPalActor) { return Invoke<Vector>(nameof(GetLocation_WhenSpawnPalSphgereThrow), Hit, CurrentSelectPalActor); }
    }
    public class PalOtomoUiBase : PalUserWidget
    {
        public PalOtomoUiBase(nint addr) : base(addr) { }
        public EPalTribeID GetTribeIDFromClass(Object TargetActorClass) { return Invoke<EPalTribeID>(nameof(GetTribeIDFromClass), TargetActorClass); }
    }
    public class PalOwnerCharacterAcquirableInterface : Interface
    {
        public PalOwnerCharacterAcquirableInterface(nint addr) : base(addr) { }
        public PalCharacter GetOwnerCharacter() { return Invoke<PalCharacter>(nameof(GetOwnerCharacter)); }
    }
    public class PalPartnerSkillParameterComponent : ActorComponent
    {
        public PalPartnerSkillParameterComponent(nint addr) : base(addr) { }
        public Object OnOverheat { get { return this[nameof(OnOverheat)]; } set { this[nameof(OnOverheat)] = value; } }
        public Object OnCoolDownCompleted { get { return this[nameof(OnCoolDownCompleted)]; } set { this[nameof(OnCoolDownCompleted)] = value; } }
        public Object OnEffectTimeChanged { get { return this[nameof(OnEffectTimeChanged)]; } set { this[nameof(OnEffectTimeChanged)] = value; } }
        public Object OnCoolDownTimeChanged { get { return this[nameof(OnCoolDownTimeChanged)]; } set { this[nameof(OnCoolDownTimeChanged)] = value; } }
        public Object OnStart { get { return this[nameof(OnStart)]; } set { this[nameof(OnStart)] = value; } }
        public Object OnStop { get { return this[nameof(OnStop)]; } set { this[nameof(OnStop)] = value; } }
        public Object OnToggleExecute { get { return this[nameof(OnToggleExecute)]; } set { this[nameof(OnToggleExecute)] = value; } }
        public Object OnSearchEffectExecute { get { return this[nameof(OnSearchEffectExecute)]; } set { this[nameof(OnSearchEffectExecute)] = value; } }
        public Array<PalDataTableRowName_ItemData> RestrictionItems { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(RestrictionItems)].Address); } }
        public Object SkillName { get { return this[nameof(SkillName)]; } set { this[nameof(SkillName)] = value; } }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
        public FixedPoint effectTime { get { return this[nameof(effectTime)].As<FixedPoint>(); } set { this["effectTime"] = value; } }
        public FixedPoint effectTimeMax { get { return this[nameof(effectTimeMax)].As<FixedPoint>(); } set { this["effectTimeMax"] = value; } }
        public FixedPoint ExecCost { get { return this[nameof(ExecCost)].As<FixedPoint>(); } set { this["ExecCost"] = value; } }
        public FixedPoint IdleCost { get { return this[nameof(IdleCost)].As<FixedPoint>(); } set { this["IdleCost"] = value; } }
        public FixedPoint IdleTime { get { return this[nameof(IdleTime)].As<FixedPoint>(); } set { this["IdleTime"] = value; } }
        public FixedPoint CoolDownTime { get { return this[nameof(CoolDownTime)].As<FixedPoint>(); } set { this["CoolDownTime"] = value; } }
        public FixedPoint coolDownTimeMax { get { return this[nameof(coolDownTimeMax)].As<FixedPoint>(); } set { this["coolDownTimeMax"] = value; } }
        public bool bCanThrowPal { get { return this[nameof(bCanThrowPal)].Flag; } set { this[nameof(bCanThrowPal)].Flag = value; } }
        public bool bCanChangeWeapon { get { return this[nameof(bCanChangeWeapon)].Flag; } set { this[nameof(bCanChangeWeapon)].Flag = value; } }
        public bool bIsToggleKey { get { return this[nameof(bIsToggleKey)].Flag; } set { this[nameof(bIsToggleKey)].Flag = value; } }
        public bool bIdlelCostDecreaseEveryFrame { get { return this[nameof(bIdlelCostDecreaseEveryFrame)].Flag; } set { this[nameof(bIdlelCostDecreaseEveryFrame)].Flag = value; } }
        public bool bIsExecSkillContinuation { get { return this[nameof(bIsExecSkillContinuation)].Flag; } set { this[nameof(bIsExecSkillContinuation)].Flag = value; } }
        public bool bIsRunning { get { return this[nameof(bIsRunning)].Flag; } set { this[nameof(bIsRunning)].Flag = value; } }
        public bool bIsOverheat { get { return this[nameof(bIsOverheat)].Flag; } set { this[nameof(bIsOverheat)].Flag = value; } }
        public bool bIsExecuting { get { return this[nameof(bIsExecuting)].Flag; } set { this[nameof(bIsExecuting)].Flag = value; } }
        public PalCoopSkillModuleBase SkillModule { get { return this[nameof(SkillModule)].As<PalCoopSkillModuleBase>(); } set { this["SkillModule"] = value; } }
        public Array<PalPassivePartnerSkillIdAndParameters> PassiveSkills { get { return new Array<PalPassivePartnerSkillIdAndParameters>(this[nameof(PassiveSkills)].Address); } }
        public PalPartnerSkillParameterRide RideParameter { get { return this[nameof(RideParameter)].As<PalPartnerSkillParameterRide>(); } set { this["RideParameter"] = value; } }
        public Object FunnelCharacterClass { get { return this[nameof(FunnelCharacterClass)]; } set { this[nameof(FunnelCharacterClass)] = value; } }
        public Object FunnelControllerClass { get { return this[nameof(FunnelControllerClass)]; } set { this[nameof(FunnelControllerClass)] = value; } }
        public EPalWazaID FunnelAttackWazaID { get { return (EPalWazaID)this[nameof(FunnelAttackWazaID)].GetValue<int>(); } set { this[nameof(FunnelAttackWazaID)].SetValue<int>((int)value); } }
        public PalPartnerSkillPassiveSkill PassiveSkill { get { return this[nameof(PassiveSkill)].As<PalPartnerSkillPassiveSkill>(); } set { this["PassiveSkill"] = value; } }
        public Object ActiveSkill_MainValue_Overview_EditorOnly { get { return this[nameof(ActiveSkill_MainValue_Overview_EditorOnly)]; } set { this[nameof(ActiveSkill_MainValue_Overview_EditorOnly)] = value; } }
        public Array<float> ActiveSkill_MainValueByRank { get { return new Array<float>(this[nameof(ActiveSkill_MainValueByRank)].Address); } }
        public void Stop() { Invoke(nameof(Stop)); }
        public void Start() { Invoke(nameof(Start)); }
        public void SetName(Object Name) { Invoke(nameof(SetName), Name); }
        public void SetDisableFlagsBySetting(bool isDisable) { Invoke(nameof(SetDisableFlagsBySetting), isDisable); }
        public void SetCoopFlag_ForServer(bool IsCoop) { Invoke(nameof(SetCoopFlag_ForServer), IsCoop); }
        public void Recover() { Invoke(nameof(Recover)); }
        public void OnUpdateInventoryContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateInventoryContainer), Container); }
        public void OnToggleExecute__DelegateSignature(bool IsExecuting) { Invoke(nameof(OnToggleExecute__DelegateSignature), IsExecuting); }
        public void OnStop__DelegateSignature() { Invoke(nameof(OnStop__DelegateSignature)); }
        public void OnStart__DelegateSignature() { Invoke(nameof(OnStart__DelegateSignature)); }
        public void OnSearchEffect__DelegateSignature() { Invoke(nameof(OnSearchEffect__DelegateSignature)); }
        public void OnRideInactivated() { Invoke(nameof(OnRideInactivated)); }
        public void OnRideActivated() { Invoke(nameof(OnRideActivated)); }
        public void OnOwnerCharacterSpawned(PalInstanceID ID) { Invoke(nameof(OnOwnerCharacterSpawned), ID); }
        public void OnOverheat__DelegateSignature() { Invoke(nameof(OnOverheat__DelegateSignature)); }
        public void OnInitializedCharacter(PalCharacter OwnerCharacter) { Invoke(nameof(OnInitializedCharacter), OwnerCharacter); }
        public void OnInactivatedAsWorker() { Invoke(nameof(OnInactivatedAsWorker)); }
        public void OnInactivatedAsPartner() { Invoke(nameof(OnInactivatedAsPartner)); }
        public void OnInactivatedAsOtomoHolder() { Invoke(nameof(OnInactivatedAsOtomoHolder)); }
        public void OnExec() { Invoke(nameof(OnExec)); }
        public void OnEffectTimeChanged__DelegateSignature(FixedPoint effectTime, FixedPoint effectTimeMax) { Invoke(nameof(OnEffectTimeChanged__DelegateSignature), effectTime, effectTimeMax); }
        public void OnCoolDownTimeChanged__DelegateSignature(FixedPoint CoolDownTime, FixedPoint coolDownTimeMax) { Invoke(nameof(OnCoolDownTimeChanged__DelegateSignature), CoolDownTime, coolDownTimeMax); }
        public void OnCoolDownCompleted__DelegateSignature() { Invoke(nameof(OnCoolDownCompleted__DelegateSignature)); }
        public void OnComplated() { Invoke(nameof(OnComplated)); }
        public void OnActivatedAsWorker() { Invoke(nameof(OnActivatedAsWorker)); }
        public void OnActivatedAsPartner() { Invoke(nameof(OnActivatedAsPartner)); }
        public void OnActivatedAsOtomoHolder() { Invoke(nameof(OnActivatedAsOtomoHolder)); }
        public bool IsToggleKey() { return Invoke<bool>(nameof(IsToggleKey)); }
        public bool IsRunning() { return Invoke<bool>(nameof(IsRunning)); }
        public bool IsRestrictedByItems(Actor Trainer) { return Invoke<bool>(nameof(IsRestrictedByItems), Trainer); }
        public bool IsOverheat() { return Invoke<bool>(nameof(IsOverheat)); }
        public bool IsExistActiveSkill() { return Invoke<bool>(nameof(IsExistActiveSkill)); }
        public bool IsCoolDown() { return Invoke<bool>(nameof(IsCoolDown)); }
        public float GetWazaPowerRate(EPalWazaID Waza) { return Invoke<float>(nameof(GetWazaPowerRate), Waza); }
        public EPalWazaID GetWazaID() { return Invoke<EPalWazaID>(nameof(GetWazaID)); }
        public Object GetSkillName() { return Invoke<Object>(nameof(GetSkillName)); }
        public void GetRideParameter(PalPartnerSkillParameterRide OutParam) { Invoke(nameof(GetRideParameter), OutParam); }
        public Array<PalDataTableRowName_ItemData> GetRestrictionItems() { return Invoke<Array<PalDataTableRowName_ItemData>>(nameof(GetRestrictionItems)); }
        public FixedPoint GetMainDamage() { return Invoke<FixedPoint>(nameof(GetMainDamage)); }
        public float GetEffectTimeRatio() { return Invoke<float>(nameof(GetEffectTimeRatio)); }
        public FixedPoint GetEffectTimeMax() { return Invoke<FixedPoint>(nameof(GetEffectTimeMax)); }
        public FixedPoint GetEffectTime() { return Invoke<FixedPoint>(nameof(GetEffectTime)); }
        public float GetCoolDownTimeRatio() { return Invoke<float>(nameof(GetCoolDownTimeRatio)); }
        public FixedPoint GetCoolDownTimeMax() { return Invoke<FixedPoint>(nameof(GetCoolDownTimeMax)); }
        public FixedPoint GetCoolDownTime() { return Invoke<FixedPoint>(nameof(GetCoolDownTime)); }
        public float GetActiveSkillMainValueByRank() { return Invoke<float>(nameof(GetActiveSkillMainValueByRank)); }
        public void ForceOverheat() { Invoke(nameof(ForceOverheat)); }
        public void ExecDuring(float DeltaTime) { Invoke(nameof(ExecDuring), DeltaTime); }
        public PalCoopSkillModuleBase CreateSkillModule(Object SkillModuleClass) { return Invoke<PalCoopSkillModuleBase>(nameof(CreateSkillModule), SkillModuleClass); }
        public bool CanExec() { return Invoke<bool>(nameof(CanExec)); }
        public bool CanChangeWeapon() { return Invoke<bool>(nameof(CanChangeWeapon)); }
        public void CallOnToggleExecute_ToAll(bool Execute) { Invoke(nameof(CallOnToggleExecute_ToAll), Execute); }
        public void CallOnStop_ToAll() { Invoke(nameof(CallOnStop_ToAll)); }
        public void CallOnStartSearchEffect_ToAll(Guid RequestPlayerUId, PalCoopSkillSearchEffectParameter EffectParam) { Invoke(nameof(CallOnStartSearchEffect_ToAll), RequestPlayerUId, EffectParam); }
        public void CallOnStart_ToAll() { Invoke(nameof(CallOnStart_ToAll)); }
        public void CallOnOverheat_ToAll() { Invoke(nameof(CallOnOverheat_ToAll)); }
        public void CallOnEffectTimeChanged_ToAll(FixedPoint effectTime, FixedPoint effectTimeMax) { Invoke(nameof(CallOnEffectTimeChanged_ToAll), effectTime, effectTimeMax); }
        public void CallOnCoolDownTimeChanged_ToAll(FixedPoint CoolDownTime, FixedPoint coolDownTimeMax) { Invoke(nameof(CallOnCoolDownTimeChanged_ToAll), CoolDownTime, coolDownTimeMax); }
        public void CallOnCoolDownCompleted_ToAll() { Invoke(nameof(CallOnCoolDownCompleted_ToAll)); }
    }
    public class PalPartnerSkillPassiveSkill : Object
    {
        public PalPartnerSkillPassiveSkill(nint addr) : base(addr) { }
        public Object IsRestrictedDelegate { get { return this[nameof(IsRestrictedDelegate)]; } set { this[nameof(IsRestrictedDelegate)] = value; } }
        public bool isReserving { get { return this[nameof(isReserving)].Flag; } set { this[nameof(isReserving)].Flag = value; } }
        public bool bIsRestricted { get { return this[nameof(bIsRestricted)].Flag; } set { this[nameof(bIsRestricted)].Flag = value; } }
        public bool bRequireWorkerWorkingPassiveSkill { get { return this[nameof(bRequireWorkerWorkingPassiveSkill)].Flag; } set { this[nameof(bRequireWorkerWorkingPassiveSkill)].Flag = value; } }
        public bool bIsWorking { get { return this[nameof(bIsWorking)].Flag; } set { this[nameof(bIsWorking)].Flag = value; } }
        public Array<PalPassivePartnerSkillIdAndParameters> PassiveSkills { get { return new Array<PalPassivePartnerSkillIdAndParameters>(this[nameof(PassiveSkills)].Address); } }
        public Object SkillStatus { get { return this[nameof(SkillStatus)]; } set { this[nameof(SkillStatus)] = value; } }
        public int CurrentRank { get { return this[nameof(CurrentRank)].GetValue<int>(); } set { this[nameof(CurrentRank)].SetValue<int>(value); } }
        public void OnWorkerAssignChanged(PalCharacterParameterComponent Parameter) { Invoke(nameof(OnWorkerAssignChanged), Parameter); }
        public void OnUpdateOtomoHolder(PalCharacter Character) { Invoke(nameof(OnUpdateOtomoHolder), Character); }
        public void OnUpdateInventoryContainer() { Invoke(nameof(OnUpdateInventoryContainer)); }
        public void OnRideInactivated() { Invoke(nameof(OnRideInactivated)); }
        public void OnRideActivated() { Invoke(nameof(OnRideActivated)); }
        public void OnReserveInactivated() { Invoke(nameof(OnReserveInactivated)); }
        public void OnReserveActivated() { Invoke(nameof(OnReserveActivated)); }
        public void OnInactivatedAsWorker() { Invoke(nameof(OnInactivatedAsWorker)); }
        public void OnInactivatedAsOtomoHolder() { Invoke(nameof(OnInactivatedAsOtomoHolder)); }
        public void OnInactivatedAsOtomo() { Invoke(nameof(OnInactivatedAsOtomo)); }
        public void OnActivatedAsWorker() { Invoke(nameof(OnActivatedAsWorker)); }
        public void OnActivatedAsOtomoHolder() { Invoke(nameof(OnActivatedAsOtomoHolder)); }
        public void OnActivatedAsOtomo() { Invoke(nameof(OnActivatedAsOtomo)); }
        public void ObserveWorking() { Invoke(nameof(ObserveWorking)); }
        public bool IsRestricted__DelegateSignature(Actor Trainer) { return Invoke<bool>(nameof(IsRestricted__DelegateSignature), Trainer); }
        public bool IsRestricted() { return Invoke<bool>(nameof(IsRestricted)); }
        public void Initialize(Array<PalPassivePartnerSkillIdAndParameters> _PassiveSkills) { Invoke(nameof(Initialize), _PassiveSkills); }
        public void InactivateWorkingSkill() { Invoke(nameof(InactivateWorkingSkill)); }
        public PalPlayerController GetTrainerController() { return Invoke<PalPlayerController>(nameof(GetTrainerController)); }
        public PalCharacter GetTrainerActor() { return Invoke<PalCharacter>(nameof(GetTrainerActor)); }
        public Character GetTrainer() { return Invoke<Character>(nameof(GetTrainer)); }
        public Array<Object> GetPassiveSkillList() { return Invoke<Array<Object>>(nameof(GetPassiveSkillList)); }
        public PalCharacter GetOwner() { return Invoke<PalCharacter>(nameof(GetOwner)); }
        public int GetOtomoRank() { return Invoke<int>(nameof(GetOtomoRank)); }
    }
    public class PalPassiveSkillComponent : ActorComponent
    {
        public PalPassiveSkillComponent(nint addr) : base(addr) { }
        public Object OnStartSkillEffectDelegate { get { return this[nameof(OnStartSkillEffectDelegate)]; } set { this[nameof(OnStartSkillEffectDelegate)] = value; } }
        public Object OnChangeSkillEffectValueDelegate { get { return this[nameof(OnChangeSkillEffectValueDelegate)]; } set { this[nameof(OnChangeSkillEffectValueDelegate)] = value; } }
        public Object OnEndSkillEffectDelegate { get { return this[nameof(OnEndSkillEffectDelegate)]; } set { this[nameof(OnEndSkillEffectDelegate)] = value; } }
        public Array<PalPassiveSkillEffectInfos> SkillInfos { get { return new Array<PalPassiveSkillEffectInfos>(this[nameof(SkillInfos)].Address); } }
        public Array<PalPassiveSkillEffectInfos> SkillInfosMirror { get { return new Array<PalPassiveSkillEffectInfos>(this[nameof(SkillInfosMirror)].Address); } }
        public Object SkillStatusMap { get { return this[nameof(SkillStatusMap)]; } set { this[nameof(SkillStatusMap)] = value; } }
        public void SetupSkillFromSelf(Object OwnerObject, Array<Object> skillList) { Invoke(nameof(SetupSkillFromSelf), OwnerObject, skillList); }
        public void OverrideDamageInfoBySkill(PalDamageInfo inoutDamageInfo) { Invoke(nameof(OverrideDamageInfoBySkill), inoutDamageInfo); }
        public void OnStartSkillEffect__DelegateSignature(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnStartSkillEffect__DelegateSignature), EffectType, Value); }
        public void OnStartSkillEffect(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnStartSkillEffect), EffectType, Value); }
        public void OnRep_SkillInfos() { Invoke(nameof(OnRep_SkillInfos)); }
        public void OnEndSkillEffect__DelegateSignature(EPalPassiveSkillEffectType EffectType) { Invoke(nameof(OnEndSkillEffect__DelegateSignature), EffectType); }
        public void OnEndSkillEffect(EPalPassiveSkillEffectType EffectType) { Invoke(nameof(OnEndSkillEffect), EffectType); }
        public void OnChangeSkillEffectValue__DelegateSignature(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnChangeSkillEffectValue__DelegateSignature), EffectType, Value); }
        public void OnChangeSkillEffectValue(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnChangeSkillEffectValue), EffectType, Value); }
        public float GetParameterWithPassiveSkillEffect(float originalValue, EPalPassiveSkillEffectType EffectType) { return Invoke<float>(nameof(GetParameterWithPassiveSkillEffect), originalValue, EffectType); }
        public void AddSpecialAttackRateInfo(Array<PalSpecialAttackRateInfo> SpecialAttackRateInfos) { Invoke(nameof(AddSpecialAttackRateInfo), SpecialAttackRateInfos); }
    }
    public class PalPassiveSkillManager : Object
    {
        public PalPassiveSkillManager(nint addr) : base(addr) { }
        public DataTable PassiveSkillDataTable { get { return this[nameof(PassiveSkillDataTable)].As<DataTable>(); } set { this["PassiveSkillDataTable"] = value; } }
        public Object PalAssignableSkillMap { get { return this[nameof(PalAssignableSkillMap)]; } set { this[nameof(PalAssignableSkillMap)] = value; } }
        public Object RarePalAssignableSkillMap { get { return this[nameof(RarePalAssignableSkillMap)]; } set { this[nameof(RarePalAssignableSkillMap)] = value; } }
        public Object RangedWeaponAssignableSkillMap { get { return this[nameof(RangedWeaponAssignableSkillMap)]; } set { this[nameof(RangedWeaponAssignableSkillMap)] = value; } }
        public Object MeleeWeaponAssignableSkillMap { get { return this[nameof(MeleeWeaponAssignableSkillMap)]; } set { this[nameof(MeleeWeaponAssignableSkillMap)] = value; } }
        public Object ArmorAssignableSkillMap { get { return this[nameof(ArmorAssignableSkillMap)]; } set { this[nameof(ArmorAssignableSkillMap)] = value; } }
        public Object AccessoryAssignableSkillMap { get { return this[nameof(AccessoryAssignableSkillMap)]; } set { this[nameof(AccessoryAssignableSkillMap)] = value; } }
        public void OnCreatedDynamicItemDataInServer(PalDynamicItemDataBase CreatedItemData, PalItemCreateParameter CreateParameter) { Invoke(nameof(OnCreatedDynamicItemDataInServer), CreatedItemData, CreateParameter); }
        public Array<EPalPassiveSkillEffectType> GetSkillEffectTypes(Object SkillName) { return Invoke<Array<EPalPassiveSkillEffectType>>(nameof(GetSkillEffectTypes), SkillName); }
        public bool GetSkillData(Object SkillName, PalPassiveSkillDatabaseRow outSkillData) { return Invoke<bool>(nameof(GetSkillData), SkillName, outSkillData); }
        public Array<Object> GetPassiveSkillNamesRowName(Array<Object> passiveList) { return Invoke<Array<Object>>(nameof(GetPassiveSkillNamesRowName), passiveList); }
        public Array<PalPassiveSkillEffect> GetPassiveSkillEffect(Object SkillName, bool bTargetToSelf) { return Invoke<Array<PalPassiveSkillEffect>>(nameof(GetPassiveSkillEffect), SkillName, bTargetToSelf); }
        public float GetParameterWithSkillEffect(float originalValue, EPalPassiveSkillEffectType EffectType, Array<PalPassiveSkillEffect> skillEffectList) { return Invoke<float>(nameof(GetParameterWithSkillEffect), originalValue, EffectType, skillEffectList); }
        public Object GetNameTextId(Object SkillName) { return Invoke<Object>(nameof(GetNameTextId), SkillName); }
    }
    public class PalPersistentSoundPlayer : Object
    {
        public PalPersistentSoundPlayer(nint addr) : base(addr) { }
        public AkAudioEvent AudioEvent { get { return this[nameof(AudioEvent)].As<AkAudioEvent>(); } set { this["AudioEvent"] = value; } }
        public int FadeDuration { get { return this[nameof(FadeDuration)].GetValue<int>(); } set { this[nameof(FadeDuration)].SetValue<int>(value); } }
        public Object PlayActor { get { return this[nameof(PlayActor)]; } set { this[nameof(PlayActor)] = value; } }
    }
    public class PalPettingPresset : Object
    {
        public PalPettingPresset(nint addr) : base(addr) { }
        public PalPettingParameter SmallPreset { get { return this[nameof(SmallPreset)].As<PalPettingParameter>(); } set { this["SmallPreset"] = value; } }
        public PalPettingParameter SmallMiddlePreset { get { return this[nameof(SmallMiddlePreset)].As<PalPettingParameter>(); } set { this["SmallMiddlePreset"] = value; } }
        public PalPettingParameter MediumPreset { get { return this[nameof(MediumPreset)].As<PalPettingParameter>(); } set { this["MediumPreset"] = value; } }
        public PalPettingParameter LargePreset { get { return this[nameof(LargePreset)].As<PalPettingParameter>(); } set { this["LargePreset"] = value; } }
        public float GetDistance(Actor Pal) { return Invoke<float>(nameof(GetDistance), Pal); }
        public float GetCameraHeight(Actor Pal) { return Invoke<float>(nameof(GetCameraHeight), Pal); }
        public float GetCameraCenterDistance(Actor Pal) { return Invoke<float>(nameof(GetCameraCenterDistance), Pal); }
        public float GetCameraArmLength(Actor Pal) { return Invoke<float>(nameof(GetCameraArmLength), Pal); }
    }
    public class PalPhysicsDefine : Object
    {
        public PalPhysicsDefine(nint addr) : base(addr) { }
    }
    public class PalPhysicsUtility : BlueprintFunctionLibrary
    {
        public PalPhysicsUtility(nint addr) : base(addr) { }
        public void SetCanEverAffectNavigation(ActorComponent Component, bool bAffect) { Invoke(nameof(SetCanEverAffectNavigation), Component, bAffect); }
    }
    public class PalPlayerAccount : Object
    {
        public PalPlayerAccount(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public EPalPlayerAccountState State { get { return (EPalPlayerAccountState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public PalIndividualCharacterHandle IndividualHandle { get { return this[nameof(IndividualHandle)].As<PalIndividualCharacterHandle>(); } set { this["IndividualHandle"] = value; } }
        public Transform LastSavedTransform { get { return this[nameof(LastSavedTransform)].As<Transform>(); } set { this["LastSavedTransform"] = value; } }
        public PalPlayerOtomoData OtomoData { get { return this[nameof(OtomoData)].As<PalPlayerOtomoData>(); } set { this["OtomoData"] = value; } }
        public PalPlayerDataCharacterMake CharacterMakeData { get { return this[nameof(CharacterMakeData)].As<PalPlayerDataCharacterMake>(); } set { this["CharacterMakeData"] = value; } }
        public PalPlayerInventoryData InventoryData { get { return this[nameof(InventoryData)].As<PalPlayerInventoryData>(); } set { this["InventoryData"] = value; } }
        public PalPlayerDataPalStorage PalStorage { get { return this[nameof(PalStorage)].As<PalPlayerDataPalStorage>(); } set { this["PalStorage"] = value; } }
        public PalTechnologyData TechnologyData { get { return this[nameof(TechnologyData)].As<PalTechnologyData>(); } set { this["TechnologyData"] = value; } }
        public PalPlayerRecordData RecordData { get { return this[nameof(RecordData)].As<PalPlayerRecordData>(); } set { this["RecordData"] = value; } }
        public bool bIsSelectedInitMapPoint { get { return this[nameof(bIsSelectedInitMapPoint)].Flag; } set { this[nameof(bIsSelectedInitMapPoint)].Flag = value; } }
    }
    public class PalPlayerBattleSituation : Object
    {
        public PalPlayerBattleSituation(nint addr) : base(addr) { }
        public Object OnBattleRankDownDelegate { get { return this[nameof(OnBattleRankDownDelegate)]; } set { this[nameof(OnBattleRankDownDelegate)] = value; } }
        public Object OnEnemyAddRemoveDelegate { get { return this[nameof(OnEnemyAddRemoveDelegate)]; } set { this[nameof(OnEnemyAddRemoveDelegate)] = value; } }
        public Object OnChangeNearEnemyDelegate { get { return this[nameof(OnChangeNearEnemyDelegate)]; } set { this[nameof(OnChangeNearEnemyDelegate)] = value; } }
        public Object BattleEnemyList { get { return this[nameof(BattleEnemyList)]; } set { this[nameof(BattleEnemyList)] = value; } }
        public bool IsNearCommonEnemy { get { return this[nameof(IsNearCommonEnemy)].Flag; } set { this[nameof(IsNearCommonEnemy)].Flag = value; } }
        public float NearDistanceSqr { get { return this[nameof(NearDistanceSqr)].GetValue<float>(); } set { this[nameof(NearDistanceSqr)].SetValue<float>(value); } }
        public TimerHandle DistanceUpdateTimerHandle { get { return this[nameof(DistanceUpdateTimerHandle)].As<TimerHandle>(); } set { this["DistanceUpdateTimerHandle"] = value; } }
    }
    public class PalPlayerCharacter : PalCharacter
    {
        public PalPlayerCharacter(nint addr) : base(addr) { }
        public PalShooterComponent ShooterComponent { get { return this[nameof(ShooterComponent)].As<PalShooterComponent>(); } set { this["ShooterComponent"] = value; } }
        public PalInteractComponent InteractComponent { get { return this[nameof(InteractComponent)].As<PalInteractComponent>(); } set { this["InteractComponent"] = value; } }
        public PalBuilderComponent BuilderComponent { get { return this[nameof(BuilderComponent)].As<PalBuilderComponent>(); } set { this["BuilderComponent"] = value; } }
        public PalLoadoutSelectorComponent LoadoutSelectorComponent { get { return this[nameof(LoadoutSelectorComponent)].As<PalLoadoutSelectorComponent>(); } set { this["LoadoutSelectorComponent"] = value; } }
        public PalInsideBaseCampCheckComponent InsideBaseCampCheckComponent { get { return this[nameof(InsideBaseCampCheckComponent)].As<PalInsideBaseCampCheckComponent>(); } set { this["InsideBaseCampCheckComponent"] = value; } }
        public PalObjectReplicatorComponent HighPriorityObjectReplicatorComponent { get { return this[nameof(HighPriorityObjectReplicatorComponent)].As<PalObjectReplicatorComponent>(); } set { this["HighPriorityObjectReplicatorComponent"] = value; } }
        public Object OnPlayerReviveDelegate { get { return this[nameof(OnPlayerReviveDelegate)]; } set { this[nameof(OnPlayerReviveDelegate)] = value; } }
        public Object OnPlayerRespawnDelegate { get { return this[nameof(OnPlayerRespawnDelegate)]; } set { this[nameof(OnPlayerRespawnDelegate)] = value; } }
        public Object OnPlayerMoveToRespawnLocationDelegate { get { return this[nameof(OnPlayerMoveToRespawnLocationDelegate)]; } set { this[nameof(OnPlayerMoveToRespawnLocationDelegate)] = value; } }
        public Object OnCombatRankDownDelegate { get { return this[nameof(OnCombatRankDownDelegate)]; } set { this[nameof(OnCombatRankDownDelegate)] = value; } }
        public Object OnAddRemoveEnemyDelegate { get { return this[nameof(OnAddRemoveEnemyDelegate)]; } set { this[nameof(OnAddRemoveEnemyDelegate)] = value; } }
        public Object OnChangeBattleModeDelegate_ForPlayer { get { return this[nameof(OnChangeBattleModeDelegate_ForPlayer)]; } set { this[nameof(OnChangeBattleModeDelegate_ForPlayer)] = value; } }
        public Object OnPlayerDeathAction { get { return this[nameof(OnPlayerDeathAction)]; } set { this[nameof(OnPlayerDeathAction)] = value; } }
        public Object OnChangeBossTowerEntrancePlayer { get { return this[nameof(OnChangeBossTowerEntrancePlayer)]; } set { this[nameof(OnChangeBossTowerEntrancePlayer)] = value; } }
        public Object OnChangeBossEntrancePlayer { get { return this[nameof(OnChangeBossEntrancePlayer)]; } set { this[nameof(OnChangeBossEntrancePlayer)] = value; } }
        public Object OnCombatStartUIAction { get { return this[nameof(OnCombatStartUIAction)]; } set { this[nameof(OnCombatStartUIAction)] = value; } }
        public Object OnChangeRegionArea { get { return this[nameof(OnChangeRegionArea)]; } set { this[nameof(OnChangeRegionArea)] = value; } }
        public Object LastInsideRegionNameID { get { return this[nameof(LastInsideRegionNameID)]; } set { this[nameof(LastInsideRegionNameID)] = value; } }
        public float PlayerCameraYaw { get { return this[nameof(PlayerCameraYaw)].GetValue<float>(); } set { this[nameof(PlayerCameraYaw)].SetValue<float>(value); } }
        public float PlayerCameraPitch { get { return this[nameof(PlayerCameraPitch)].GetValue<float>(); } set { this[nameof(PlayerCameraPitch)].SetValue<float>(value); } }
        public bool IsAdjustedLocationByLoad { get { return this[nameof(IsAdjustedLocationByLoad)].Flag; } set { this[nameof(IsAdjustedLocationByLoad)].Flag = value; } }
        public AnimMontage IdleAnimMontage { get { return this[nameof(IdleAnimMontage)].As<AnimMontage>(); } set { this["IdleAnimMontage"] = value; } }
        public PalPlayerBattleSituation PlayerBattleSituation { get { return this[nameof(PlayerBattleSituation)].As<PalPlayerBattleSituation>(); } set { this["PlayerBattleSituation"] = value; } }
        public bool IsNearCommonEnemyFlag { get { return this[nameof(IsNearCommonEnemyFlag)].Flag; } set { this[nameof(IsNearCommonEnemyFlag)].Flag = value; } }
        public bool bIsSetRespawnTelemetry { get { return this[nameof(bIsSetRespawnTelemetry)].Flag; } set { this[nameof(bIsSetRespawnTelemetry)].Flag = value; } }
        public TimerHandle InDoorTimerHandle { get { return this[nameof(InDoorTimerHandle)].As<TimerHandle>(); } set { this["InDoorTimerHandle"] = value; } }
        public Object GenderChangerClass { get { return this[nameof(GenderChangerClass)]; } set { this[nameof(GenderChangerClass)] = value; } }
        public PalPlayerGenderChanger GenderChanger { get { return this[nameof(GenderChanger)].As<PalPlayerGenderChanger>(); } set { this["GenderChanger"] = value; } }
        public bool bSpectatorMode { get { return this[nameof(bSpectatorMode)].Flag; } set { this[nameof(bSpectatorMode)].Flag = value; } }
        public PalPlayerDataCharacterMakeInfo CharacterMakeInfo { get { return this[nameof(CharacterMakeInfo)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["CharacterMakeInfo"] = value; } }
        public void StopIdleAnimation() { Invoke(nameof(StopIdleAnimation)); }
        public void SetSpectatorMode(bool bSpectator) { Invoke(nameof(SetSpectatorMode), bSpectator); }
        public void SetNearCommonEnemy(bool IsExistNearEnemy) { Invoke(nameof(SetNearCommonEnemy), IsExistNearEnemy); }
        public void PlayIdleAnimation(AnimMontage Montage) { Invoke(nameof(PlayIdleAnimation), Montage); }
        public void PlayEatAnimation() { Invoke(nameof(PlayEatAnimation)); }
        public void OnUpdateEssentialItemContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateEssentialItemContainer), Container); }
        public void OnTriggerInteract(Actor OtherActor, EPalInteractiveObjectIndicatorType IndicatorType) { Invoke(nameof(OnTriggerInteract), OtherActor, IndicatorType); }
        public void OnStartGliding() { Invoke(nameof(OnStartGliding)); }
        public void OnSPOverhead() { Invoke(nameof(OnSPOverhead)); }
        public void OnRep_SpectatorMode(bool before) { Invoke(nameof(OnRep_SpectatorMode), before); }
        public void OnRep_CharacterMakeInfo() { Invoke(nameof(OnRep_CharacterMakeInfo)); }
        public void OnReloadStart() { Invoke(nameof(OnReloadStart)); }
        public void OnPlayerReviveDelegate__DelegateSignature(PalPlayerCharacter Player) { Invoke(nameof(OnPlayerReviveDelegate__DelegateSignature), Player); }
        public void OnPlayerRespawnDelegate__DelegateSignature(PalPlayerCharacter Player) { Invoke(nameof(OnPlayerRespawnDelegate__DelegateSignature), Player); }
        public void OnPlayerMoveToRespawnLocationDelegate__DelegateSignature(PalPlayerCharacter Player, Vector Location) { Invoke(nameof(OnPlayerMoveToRespawnLocationDelegate__DelegateSignature), Player, Location); }
        public void OnPlayerDeathAction__DelegateSignature() { Invoke(nameof(OnPlayerDeathAction__DelegateSignature)); }
        public void OnMontageEnded(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnMontageEnded), Montage, bInterrupted); }
        public void OnJumpDisable() { Invoke(nameof(OnJumpDisable)); }
        public void OnEnterBaseCamp_StartBaseCampCombat(PalBaseCampModel CampModel) { Invoke(nameof(OnEnterBaseCamp_StartBaseCampCombat), CampModel); }
        public void OnEndIdle() { Invoke(nameof(OnEndIdle)); }
        public void OnEndGliding() { Invoke(nameof(OnEndGliding)); }
        public void OnDownBattleEnemyRank(EPalPlayerBattleFinishType FinishType) { Invoke(nameof(OnDownBattleEnemyRank), FinishType); }
        public void OnDamagePlayer_Server(PalDamageResult DamageResult) { Invoke(nameof(OnDamagePlayer_Server), DamageResult); }
        public void OnCombatStartUIActionDelegate__DelegateSignature() { Invoke(nameof(OnCombatStartUIActionDelegate__DelegateSignature)); }
        public void OnCombatRankDownDelegate__DelegateSignature(EPalPlayerBattleFinishType FinishType) { Invoke(nameof(OnCombatRankDownDelegate__DelegateSignature), FinishType); }
        public void OnChangeShooterState(bool IsAim, bool IsShoot) { Invoke(nameof(OnChangeShooterState), IsAim, IsShoot); }
        public void OnChangeRegionAreaDelegate__DelegateSignature(Object RegionNameID) { Invoke(nameof(OnChangeRegionAreaDelegate__DelegateSignature), RegionNameID); }
        public void OnChangePrevWeapon() { Invoke(nameof(OnChangePrevWeapon)); }
        public void OnChangePlayerBattleMode__DelegateSignature(bool IsBattle) { Invoke(nameof(OnChangePlayerBattleMode__DelegateSignature), IsBattle); }
        public void OnChangeNextWeapon() { Invoke(nameof(OnChangeNextWeapon)); }
        public void OnChangeNearEnemy_ToAll(bool IsExist) { Invoke(nameof(OnChangeNearEnemy_ToAll), IsExist); }
        public void OnChangeMovementMode(PalCharacterMovementComponent Component, byte prevMode, byte newMode, EPalCharacterMovementCustomMode PrevCustomMode, EPalCharacterMovementCustomMode NewCustomMode) { Invoke(nameof(OnChangeMovementMode), Component, prevMode, newMode, PrevCustomMode, NewCustomMode); }
        public void OnChangeBossTowerEntrancePlayer__DelegateSignature(Object BossType, Array<PalPlayerCharacter> PlayerList) { Invoke(nameof(OnChangeBossTowerEntrancePlayer__DelegateSignature), BossType, PlayerList); }
        public void OnChangeBattleEnemyRank(EPalBattleBGMType Rank, bool IsAdd) { Invoke(nameof(OnChangeBattleEnemyRank), Rank, IsAdd); }
        public void OnBeginAction(PalActionBase action) { Invoke(nameof(OnBeginAction), action); }
        public void OnAddRemoveEnemyDelegate__DelegateSignature(EPalBattleBGMType Rank, bool IsAdd) { Invoke(nameof(OnAddRemoveEnemyDelegate__DelegateSignature), Rank, IsAdd); }
        public bool IsIdle() { return Invoke<bool>(nameof(IsIdle)); }
        public bool IsGuildMaster() { return Invoke<bool>(nameof(IsGuildMaster)); }
        public bool IsGliding() { return Invoke<bool>(nameof(IsGliding)); }
        public bool IsAdjustedLocation() { return Invoke<bool>(nameof(IsAdjustedLocation)); }
        public PalPlayerController GetPalPlayerController() { return Invoke<PalPlayerController>(nameof(GetPalPlayerController)); }
        public void GetLastInsideRegionNameID(Object OutNameID) { Invoke(nameof(GetLastInsideRegionNameID), OutNameID); }
        public PalPlayerDataCharacterMakeInfo GetCharacterMakeInfo() { return Invoke<PalPlayerDataCharacterMakeInfo>(nameof(GetCharacterMakeInfo)); }
        public Rotator GetCameraRotator() { return Invoke<Rotator>(nameof(GetCameraRotator)); }
        public void CreateLantern() { Invoke(nameof(CreateLantern)); }
        public void ChangeToMale() { Invoke(nameof(ChangeToMale)); }
        public void ChangeToFemale() { Invoke(nameof(ChangeToFemale)); }
        public void CallReviveDelegate() { Invoke(nameof(CallReviveDelegate)); }
        public void CallRespawnDelegate() { Invoke(nameof(CallRespawnDelegate)); }
        public void CallMoveToRespawnLocationDelegate(Vector Location) { Invoke(nameof(CallMoveToRespawnLocationDelegate), Location); }
        public void AdjustLocationByLoad(PalCharacter InCharacter) { Invoke(nameof(AdjustLocationByLoad), InCharacter); }
    }
    public class PalPlayerController : PlayerController
    {
        public PalPlayerController(nint addr) : base(addr) { }
        public bool bAdmin { get { return this[nameof(bAdmin)].Flag; } set { this[nameof(bAdmin)].Flag = value; } }
        public PalAIActionComponent AIActionComponent { get { return this[nameof(AIActionComponent)].As<PalAIActionComponent>(); } set { this["AIActionComponent"] = value; } }
        public PalNetworkMulticastGateComponent MulticastGateComponent { get { return this[nameof(MulticastGateComponent)].As<PalNetworkMulticastGateComponent>(); } set { this["MulticastGateComponent"] = value; } }
        public PalCutsceneComponent CutsceneComponent { get { return this[nameof(CutsceneComponent)].As<PalCutsceneComponent>(); } set { this["CutsceneComponent"] = value; } }
        public PalNetworkTransmitter Transmitter { get { return this[nameof(Transmitter)].As<PalNetworkTransmitter>(); } set { this["Transmitter"] = value; } }
        public float WeaponPaletteLongPressTime { get { return this[nameof(WeaponPaletteLongPressTime)].GetValue<float>(); } set { this[nameof(WeaponPaletteLongPressTime)].SetValue<float>(value); } }
        public float PawnChangeCameraInterpChangeTime { get { return this[nameof(PawnChangeCameraInterpChangeTime)].GetValue<float>(); } set { this[nameof(PawnChangeCameraInterpChangeTime)].SetValue<float>(value); } }
        public bool isOpenConstructionMenu { get { return this[nameof(isOpenConstructionMenu)].Flag; } set { this[nameof(isOpenConstructionMenu)].Flag = value; } }
        public Object OnCoopRequestDelegate { get { return this[nameof(OnCoopRequestDelegate)]; } set { this[nameof(OnCoopRequestDelegate)] = value; } }
        public Object OnCoopReleaseDelegate { get { return this[nameof(OnCoopReleaseDelegate)]; } set { this[nameof(OnCoopReleaseDelegate)] = value; } }
        public Object OnInteractDelegate { get { return this[nameof(OnInteractDelegate)]; } set { this[nameof(OnInteractDelegate)] = value; } }
        public Object OnPressedJumpDelegate { get { return this[nameof(OnPressedJumpDelegate)]; } set { this[nameof(OnPressedJumpDelegate)] = value; } }
        public Object OnInputMoveForwardDelegate { get { return this[nameof(OnInputMoveForwardDelegate)]; } set { this[nameof(OnInputMoveForwardDelegate)] = value; } }
        public Object OnPressedThrowPalButtonDelegate { get { return this[nameof(OnPressedThrowPalButtonDelegate)]; } set { this[nameof(OnPressedThrowPalButtonDelegate)] = value; } }
        public Object OnReleasedThrowPalButtonDelegate { get { return this[nameof(OnReleasedThrowPalButtonDelegate)]; } set { this[nameof(OnReleasedThrowPalButtonDelegate)] = value; } }
        public Object OnPressedSpawnPalButtonDelegate { get { return this[nameof(OnPressedSpawnPalButtonDelegate)]; } set { this[nameof(OnPressedSpawnPalButtonDelegate)] = value; } }
        public Object OnLongPressedSpawnPalButtonDelegate { get { return this[nameof(OnLongPressedSpawnPalButtonDelegate)]; } set { this[nameof(OnLongPressedSpawnPalButtonDelegate)] = value; } }
        public Object OnReleasedSpawnPalButtonDelegate { get { return this[nameof(OnReleasedSpawnPalButtonDelegate)]; } set { this[nameof(OnReleasedSpawnPalButtonDelegate)] = value; } }
        public Object OnLongReleasedSpawnPalButtonDelegate { get { return this[nameof(OnLongReleasedSpawnPalButtonDelegate)]; } set { this[nameof(OnLongReleasedSpawnPalButtonDelegate)] = value; } }
        public Object OnPressedPartnerInstructionsButtonDelegate { get { return this[nameof(OnPressedPartnerInstructionsButtonDelegate)]; } set { this[nameof(OnPressedPartnerInstructionsButtonDelegate)] = value; } }
        public Object OnPressConstructionMenuButtonDelegate { get { return this[nameof(OnPressConstructionMenuButtonDelegate)]; } set { this[nameof(OnPressConstructionMenuButtonDelegate)] = value; } }
        public CurveFloat RecoilCurve { get { return this[nameof(RecoilCurve)].As<CurveFloat>(); } set { this["RecoilCurve"] = value; } }
        public Vector TimerGaugeDisplayOffset { get { return this[nameof(TimerGaugeDisplayOffset)].As<Vector>(); } set { this["TimerGaugeDisplayOffset"] = value; } }
        public Object DamageCameraShake { get { return this[nameof(DamageCameraShake)]; } set { this[nameof(DamageCameraShake)] = value; } }
        public Object DamageCamShakeRegulatorClass { get { return this[nameof(DamageCamShakeRegulatorClass)]; } set { this[nameof(DamageCamShakeRegulatorClass)] = value; } }
        public PalPlayerDamageCamShakeRegulator DamageCamShakeRegulator { get { return this[nameof(DamageCamShakeRegulator)].As<PalPlayerDamageCamShakeRegulator>(); } set { this["DamageCamShakeRegulator"] = value; } }
        public Array<PalLongPressObject> LongPressObjects { get { return new Array<PalLongPressObject>(this[nameof(LongPressObjects)].Address); } }
        public Object cameraRotateModifierMap { get { return this[nameof(cameraRotateModifierMap)]; } set { this[nameof(cameraRotateModifierMap)] = value; } }
        public Array<Rotator> AutoAimRotatorList { get { return new Array<Rotator>(this[nameof(AutoAimRotatorList)].Address); } }
        public DelegateTickFunction PawnAfterTickFunction { get { return this[nameof(PawnAfterTickFunction)].As<DelegateTickFunction>(); } set { this["PawnAfterTickFunction"] = value; } }
        public Actor AutoAimTarget { get { return this[nameof(AutoAimTarget)].As<Actor>(); } set { this["AutoAimTarget"] = value; } }
        public Vector ReticleTargetOffset { get { return this[nameof(ReticleTargetOffset)].As<Vector>(); } set { this["ReticleTargetOffset"] = value; } }
        public Vector2D GamePadNativeAxis { get { return this[nameof(GamePadNativeAxis)].As<Vector2D>(); } set { this["GamePadNativeAxis"] = value; } }
        public Vector2D MouseNativeAxis { get { return this[nameof(MouseNativeAxis)].As<Vector2D>(); } set { this["MouseNativeAxis"] = value; } }
        public Rotator CacheActorRotator { get { return this[nameof(CacheActorRotator)].As<Rotator>(); } set { this["CacheActorRotator"] = value; } }
        public bool TrySwitchOtomo() { return Invoke<bool>(nameof(TrySwitchOtomo)); }
        public void ThrowPalByOutSide(Actor PreOtomoPal) { Invoke(nameof(ThrowPalByOutSide), PreOtomoPal); }
        public void TeleportToSafePoint_ToServer() { Invoke(nameof(TeleportToSafePoint_ToServer)); }
        public void StartStepCoolDownCoolTimer() { Invoke(nameof(StartStepCoolDownCoolTimer)); }
        public void StartFlyToServer() { Invoke(nameof(StartFlyToServer)); }
        public void SetRiderRelativeRotation_ToServer(Rotator Rotator) { Invoke(nameof(SetRiderRelativeRotation_ToServer), Rotator); }
        public void SetOtomoSlot(int SlotID) { Invoke(nameof(SetOtomoSlot), SlotID); }
        public void SetHoldOtomo(int HoldID, PalIndividualCharacterHandle OtomoHandle) { Invoke(nameof(SetHoldOtomo), HoldID, OtomoHandle); }
        public void SetDisableThrowPalFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableThrowPalFlag), flagName, isDisable); }
        public void SetDisableSwitchPalFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableSwitchPalFlag), flagName, isDisable); }
        public void SetDisableInputFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableInputFlag), flagName, isDisable); }
        public void SetCameraRotatorToPlayerCharacter_ToServer(Rotator CameraRotator) { Invoke(nameof(SetCameraRotatorToPlayerCharacter_ToServer), CameraRotator); }
        public void SendScreenLogToClient(Object Message, LinearColor Color, float Duration, Object Key) { Invoke(nameof(SendScreenLogToClient), Message, Color, Duration, Key); }
        public void SendLog_ToClient(EPalLogPriority Priority, Object Text, PalLogAdditionalData AdditionalData) { Invoke(nameof(SendLog_ToClient), Priority, Text, AdditionalData); }
        public void RPCDummy() { Invoke(nameof(RPCDummy)); }
        public void RequestLiftupThrow_ToServer(Actor Target) { Invoke(nameof(RequestLiftupThrow_ToServer), Target); }
        public void RequestLiftup_ToServer(PalCharacter TargetCharacter) { Invoke(nameof(RequestLiftup_ToServer), TargetCharacter); }
        public void RequestFastTravel_ToServer(Guid LocationId) { Invoke(nameof(RequestFastTravel_ToServer), LocationId); }
        public void RemoveCameraRotateSpeedModifierRate(Object modifierName) { Invoke(nameof(RemoveCameraRotateSpeedModifierRate), modifierName); }
        public void ReceiveLiftupRequestResult_ToClient(EPalLiftupRequestResult Result) { Invoke(nameof(ReceiveLiftupRequestResult_ToClient), Result); }
        public void PlaySkill(int SlotID) { Invoke(nameof(PlaySkill), SlotID); }
        public void PalDeprojectScreenPositionToWorld(Vector StartLocation, Vector RayDirection) { Invoke(nameof(PalDeprojectScreenPositionToWorld), StartLocation, RayDirection); }
        public void OnWeaponNotify(EWeaponNotifyType Type) { Invoke(nameof(OnWeaponNotify), Type); }
        public void OnUpdateWeightInventory(float Weight) { Invoke(nameof(OnUpdateWeightInventory), Weight); }
        public void OnSwitchOtomoSpawn() { Invoke(nameof(OnSwitchOtomoSpawn)); }
        public void OnStartCoopRequest() { Invoke(nameof(OnStartCoopRequest)); }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnSpawnAndRideSupportPal() { Invoke(nameof(OnSpawnAndRideSupportPal)); }
        public void OnReleasedThrowPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnReleasedThrowPalButtonDelegate__DelegateSignature)); }
        public void OnReleasedSpawnPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnReleasedSpawnPalButtonDelegate__DelegateSignature)); }
        public void OnReleasedSpawnPalButton() { Invoke(nameof(OnReleasedSpawnPalButton)); }
        public void OnPressedUseRecoveryItemButton() { Invoke(nameof(OnPressedUseRecoveryItemButton)); }
        public void OnPressedThrowPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnPressedThrowPalButtonDelegate__DelegateSignature)); }
        public void OnPressedSpawnPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnPressedSpawnPalButtonDelegate__DelegateSignature)); }
        public void OnPressedPartnerInstructionsButtonDelegate__DelegateSignature() { Invoke(nameof(OnPressedPartnerInstructionsButtonDelegate__DelegateSignature)); }
        public void OnPressedMoveForwardDelegate__DelegateSignature(float InputValue, bool IsController) { Invoke(nameof(OnPressedMoveForwardDelegate__DelegateSignature), InputValue, IsController); }
        public void OnPressedJumpDelegate__DelegateSignature() { Invoke(nameof(OnPressedJumpDelegate__DelegateSignature)); }
        public void OnPressConstructionMenuButtonDelegate__DelegateSignature() { Invoke(nameof(OnPressConstructionMenuButtonDelegate__DelegateSignature)); }
        public void OnOverWeightInventory(float Weight) { Invoke(nameof(OnOverWeightInventory), Weight); }
        public void OnOtomoChangeIncrement() { Invoke(nameof(OnOtomoChangeIncrement)); }
        public void OnOtomoChangeDecrement() { Invoke(nameof(OnOtomoChangeDecrement)); }
        public void OnOtomo_ShortReleased() { Invoke(nameof(OnOtomo_ShortReleased)); }
        public void OnOtomo_Pressed() { Invoke(nameof(OnOtomo_Pressed)); }
        public void OnOtomo_LongReleased() { Invoke(nameof(OnOtomo_LongReleased)); }
        public void OnOtomo_LongPressed() { Invoke(nameof(OnOtomo_LongPressed)); }
        public void OnLongReleasedSpawnPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnLongReleasedSpawnPalButtonDelegate__DelegateSignature)); }
        public void OnLongReleasedSpawnPalButton() { Invoke(nameof(OnLongReleasedSpawnPalButton)); }
        public void OnLongPressedSpawnPalButtonDelegate__DelegateSignature() { Invoke(nameof(OnLongPressedSpawnPalButtonDelegate__DelegateSignature)); }
        public void OnLongPressedCoopButton() { Invoke(nameof(OnLongPressedCoopButton)); }
        public void OnLanded(PalCharacterMovementComponent MovementComponent, HitResult Hit) { Invoke(nameof(OnLanded), MovementComponent, Hit); }
        public void OnJump(PalCharacterMovementComponent MovementComponent) { Invoke(nameof(OnJump), MovementComponent); }
        public void OnInteractDelegate__DelegateSignature() { Invoke(nameof(OnInteractDelegate__DelegateSignature)); }
        public void OnInitializeLocalPlayer_BP() { Invoke(nameof(OnInitializeLocalPlayer_BP)); }
        public void OnGetOffAndDespawnSupportPal() { Invoke(nameof(OnGetOffAndDespawnSupportPal)); }
        public void OnFlyRideTakeOff() { Invoke(nameof(OnFlyRideTakeOff)); }
        public void OnFixedWeightInventory(float Weight) { Invoke(nameof(OnFixedWeightInventory), Weight); }
        public void OnEndRolling() { Invoke(nameof(OnEndRolling)); }
        public void OnEndCoopRequest() { Invoke(nameof(OnEndCoopRequest)); }
        public void OnEndAim() { Invoke(nameof(OnEndAim)); }
        public void OnDestroyPawn(Actor DestroyedActor) { Invoke(nameof(OnDestroyPawn), DestroyedActor); }
        public void OnDamage(PalDamageResult DamageResult) { Invoke(nameof(OnDamage), DamageResult); }
        public void OnCoopRequestDelegate__DelegateSignature() { Invoke(nameof(OnCoopRequestDelegate__DelegateSignature)); }
        public void OnCoopReleaseDelegate__DelegateSignature() { Invoke(nameof(OnCoopReleaseDelegate__DelegateSignature)); }
        public void OnChangeSwimming(bool IsInSwimming) { Invoke(nameof(OnChangeSwimming), IsInSwimming); }
        public void OnChangePadOption(PalOptionPadSettings PrevSettings, PalOptionPadSettings NewSettings) { Invoke(nameof(OnChangePadOption), PrevSettings, NewSettings); }
        public void OnChangeOtomoSlot() { Invoke(nameof(OnChangeOtomoSlot)); }
        public void OnChangeKeyboardOption(PalOptionKeyboardSettings PrevSettings, PalOptionKeyboardSettings NewSettings) { Invoke(nameof(OnChangeKeyboardOption), PrevSettings, NewSettings); }
        public void OnChangeInstructions() { Invoke(nameof(OnChangeInstructions)); }
        public void JumpCancelPalThrow(PalCharacterMovementComponent MovementComponent) { Invoke(nameof(JumpCancelPalThrow), MovementComponent); }
        public bool IsSwimming() { return Invoke<bool>(nameof(IsSwimming)); }
        public bool IsRidingFlyPal() { return Invoke<bool>(nameof(IsRidingFlyPal)); }
        public bool IsRiding() { return Invoke<bool>(nameof(IsRiding)); }
        public bool IsCooping() { return Invoke<bool>(nameof(IsCooping)); }
        public void InactiveOtomo() { Invoke(nameof(InactiveOtomo)); }
        public Object GetTimerGaugeWidgetClass() { return Invoke<Object>(nameof(GetTimerGaugeWidgetClass)); }
        public Actor GetRidingCharacter() { return Invoke<Actor>(nameof(GetRidingCharacter)); }
        public Guid GetPlayerUId() { return Invoke<Guid>(nameof(GetPlayerUId)); }
        public PalPlayerState GetPalPlayerState() { return Invoke<PalPlayerState>(nameof(GetPalPlayerState)); }
        public void GetOffToServer() { Invoke(nameof(GetOffToServer)); }
        public Pawn GetLowBodyPawn() { return Invoke<Pawn>(nameof(GetLowBodyPawn)); }
        public PalCharacter GetLowBodyPalCharacter() { return Invoke<PalCharacter>(nameof(GetLowBodyPalCharacter)); }
        public PalLoadoutSelectorComponent GetLoadoutSelectorComponent() { return Invoke<PalLoadoutSelectorComponent>(nameof(GetLoadoutSelectorComponent)); }
        public Vector2D GetKeyboardMoveValue() { return Invoke<Vector2D>(nameof(GetKeyboardMoveValue)); }
        public PalCharacter GetDefaultPlayerCharacter() { return Invoke<PalCharacter>(nameof(GetDefaultPlayerCharacter)); }
        public PalCharacter GetControlPalCharacter() { return Invoke<PalCharacter>(nameof(GetControlPalCharacter)); }
        public Vector2D GetControllerRightStickValue() { return Invoke<Vector2D>(nameof(GetControllerRightStickValue)); }
        public Vector2D GetControllerLeftStickValue() { return Invoke<Vector2D>(nameof(GetControllerLeftStickValue)); }
        public void EndFlyToServer() { Invoke(nameof(EndFlyToServer)); }
        public void EnableShootingByAction(PalActionComponent Component) { Invoke(nameof(EnableShootingByAction), Component); }
        public void DoStep(EPalStepAxisType Axis, Vector2D StepDirection) { Invoke(nameof(DoStep), Axis, StepDirection); }
        public void Debug_TogglePartnerSkillNoDecrease() { Invoke(nameof(Debug_TogglePartnerSkillNoDecrease)); }
        public void Debug_TeleportToNearestPlayer() { Invoke(nameof(Debug_TeleportToNearestPlayer)); }
        public void Debug_TeleportToNearestCamp() { Invoke(nameof(Debug_TeleportToNearestCamp)); }
        public void Debug_TeleportToBotLocation(int botIndex) { Invoke(nameof(Debug_TeleportToBotLocation), botIndex); }
        public void Debug_TeleportToBotCamp(int botIndex) { Invoke(nameof(Debug_TeleportToBotCamp), botIndex); }
        public void Debug_Teleport2D(Vector Location) { Invoke(nameof(Debug_Teleport2D), Location); }
        public void Debug_ShowInvaderDeubgLog() { Invoke(nameof(Debug_ShowInvaderDeubgLog)); }
        public void Debug_SetPalWorldTimeScale(float Rate) { Invoke(nameof(Debug_SetPalWorldTimeScale), Rate); }
        public void Debug_SetPalWorldTime(int Hour) { Invoke(nameof(Debug_SetPalWorldTime), Hour); }
        public void Debug_SetFPSForServer(float fps) { Invoke(nameof(Debug_SetFPSForServer), fps); }
        public void Debug_RerollCharacterMake() { Invoke(nameof(Debug_RerollCharacterMake)); }
        public void Debug_ReceiveCheatCommand_ToClient(Object Message) { Invoke(nameof(Debug_ReceiveCheatCommand_ToClient), Message); }
        public void Debug_ParallelForUpdateActiveTiles() { Invoke(nameof(Debug_ParallelForUpdateActiveTiles)); }
        public void Debug_NotConsumeMaterialsInCraft() { Invoke(nameof(Debug_NotConsumeMaterialsInCraft)); }
        public void Debug_NotConsumeMaterialsInBuild() { Invoke(nameof(Debug_NotConsumeMaterialsInBuild)); }
        public void Debug_Muteki_ToServer() { Invoke(nameof(Debug_Muteki_ToServer)); }
        public void Debug_InvaderMarchRandom() { Invoke(nameof(Debug_InvaderMarchRandom)); }
        public void Debug_InvaderMarch() { Invoke(nameof(Debug_InvaderMarch)); }
        public void Debug_InsightsTraceStop_ToServer() { Invoke(nameof(Debug_InsightsTraceStop_ToServer)); }
        public void Debug_InsightsTraceStart_ToServer() { Invoke(nameof(Debug_InsightsTraceStart_ToServer)); }
        public void Debug_IgnoreRestrictedByItemsForPartnerSkill() { Invoke(nameof(Debug_IgnoreRestrictedByItemsForPartnerSkill)); }
        public void Debug_ForceSpawnRarePal_ToServer() { Invoke(nameof(Debug_ForceSpawnRarePal_ToServer)); }
        public void Debug_EnableCollectPalCount() { Invoke(nameof(Debug_EnableCollectPalCount)); }
        public void Debug_CheatCommand_ToServer(Object Command) { Invoke(nameof(Debug_CheatCommand_ToServer), Command); }
        public void Debug_AddPlayerExp_ToServer(int addExp) { Invoke(nameof(Debug_AddPlayerExp_ToServer), addExp); }
        public void Debug_AddPartyExp_ToServer(int addExp) { Invoke(nameof(Debug_AddPartyExp_ToServer), addExp); }
        public void Debug_AddMoney_ToServer(long addValue) { Invoke(nameof(Debug_AddMoney_ToServer), addValue); }
        public void Debug_AddExpForALLPlayer_ToServer(int addExp) { Invoke(nameof(Debug_AddExpForALLPlayer_ToServer), addExp); }
        public bool CanCooping() { return Invoke<bool>(nameof(CanCooping)); }
        public void CallOnCoopReleaseDelegate_ToServer() { Invoke(nameof(CallOnCoopReleaseDelegate_ToServer)); }
        public void AddCameraRotateSpeedModifierRate(Object modifierName, float Rate) { Invoke(nameof(AddCameraRotateSpeedModifierRate), modifierName, Rate); }
        public void ActivateCurrentOtomoNearThePlayer() { Invoke(nameof(ActivateCurrentOtomoNearThePlayer)); }
    }
    public class PalPlayerDamageCamShakeRegulator : Object
    {
        public PalPlayerDamageCamShakeRegulator(nint addr) : base(addr) { }
        public DataTable DamageCameraShakeTable { get { return this[nameof(DamageCameraShakeTable)].As<DataTable>(); } set { this["DamageCameraShakeTable"] = value; } }
    }
    public class PalPlayerDataCharacterMake : Object
    {
        public PalPlayerDataCharacterMake(nint addr) : base(addr) { }
        public Object GetRandomHeadMeshName() { return Invoke<Object>(nameof(GetRandomHeadMeshName)); }
        public Object GetRandomHairMeshName() { return Invoke<Object>(nameof(GetRandomHairMeshName)); }
        public Object GetRandomBodyMeshName() { return Invoke<Object>(nameof(GetRandomBodyMeshName)); }
        public void GetPresetMakeInfo(Object WorldContextObject, Object PresetName, PalPlayerDataCharacterMakeInfo OutMakeInfo) { Invoke(nameof(GetPresetMakeInfo), WorldContextObject, PresetName, OutMakeInfo); }
        public PalPlayerDataCharacterMakeInfo GetMakeData() { return Invoke<PalPlayerDataCharacterMakeInfo>(nameof(GetMakeData)); }
    }
    public class PalPlayerDataPalStorage : Object
    {
        public PalPlayerDataPalStorage(nint addr) : base(addr) { }
        public int PageNum { get { return this[nameof(PageNum)].GetValue<int>(); } set { this[nameof(PageNum)].SetValue<int>(value); } }
        public int SlotNumInPage { get { return this[nameof(SlotNumInPage)].GetValue<int>(); } set { this[nameof(SlotNumInPage)].SetValue<int>(value); } }
        public PalIndividualCharacterContainer TargetContainer { get { return this[nameof(TargetContainer)].As<PalIndividualCharacterContainer>(); } set { this["TargetContainer"] = value; } }
        public PalIndividualCharacterSlotsObserver SlotObserver { get { return this[nameof(SlotObserver)].As<PalIndividualCharacterSlotsObserver>(); } set { this["SlotObserver"] = value; } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public bool IsOpen { get { return this[nameof(IsOpen)].Flag; } set { this[nameof(IsOpen)].Flag = value; } }
        public void OnUpdateCharacterContainer_InServer() { Invoke(nameof(OnUpdateCharacterContainer_InServer)); }
        public void OnRep_TargetContainer() { Invoke(nameof(OnRep_TargetContainer)); }
        public void GetSlotsInPage(int PageIndex, Array<PalIndividualCharacterSlot> Slots) { Invoke(nameof(GetSlotsInPage), PageIndex, Slots); }
        public PalIndividualCharacterSlot GetSlot(int PageIndex, int SlotIndex) { return Invoke<PalIndividualCharacterSlot>(nameof(GetSlot), PageIndex, SlotIndex); }
    }
    public class PalPlayerDataStorage : Object
    {
        public PalPlayerDataStorage(nint addr) : base(addr) { }
        public PalPlayerDataPalStorage GetPalStorage() { return Invoke<PalPlayerDataPalStorage>(nameof(GetPalStorage)); }
        public void GetInventoryInfo(PalPlayerDataInventoryInfo outInventoryInfo) { Invoke(nameof(GetInventoryInfo), outInventoryInfo); }
        public PalItemContainerMultiHelper GetInventoryContainers() { return Invoke<PalItemContainerMultiHelper>(nameof(GetInventoryContainers)); }
    }
    public class PalPlayerGenderChanger : Object
    {
        public PalPlayerGenderChanger(nint addr) : base(addr) { }
        public PlayerGenderParams MaleCharacterParams { get { return this[nameof(MaleCharacterParams)].As<PlayerGenderParams>(); } set { this["MaleCharacterParams"] = value; } }
        public PlayerGenderParams FemaleCharacterParams { get { return this[nameof(FemaleCharacterParams)].As<PlayerGenderParams>(); } set { this["FemaleCharacterParams"] = value; } }
        public bool bIsEpmtyFamaleParams { get { return this[nameof(bIsEpmtyFamaleParams)].Flag; } set { this[nameof(bIsEpmtyFamaleParams)].Flag = value; } }
        public bool bIsFamale { get { return this[nameof(bIsFamale)].Flag; } set { this[nameof(bIsFamale)].Flag = value; } }
    }
    public class PalPlayerHeadAnimInstance : AnimInstance
    {
        public PalPlayerHeadAnimInstance(nint addr) : base(addr) { }
        public Vector PlayerEyeLocationRight { get { return this[nameof(PlayerEyeLocationRight)].As<Vector>(); } set { this["PlayerEyeLocationRight"] = value; } }
        public Vector PlayerEyeLocationLeft { get { return this[nameof(PlayerEyeLocationLeft)].As<Vector>(); } set { this["PlayerEyeLocationLeft"] = value; } }
        public void SetPlayerEyeLocation(SkeletalMesh HeadMesh) { Invoke(nameof(SetPlayerEyeLocation), HeadMesh); }
    }
    public class PalPlayerInput : PlayerInput
    {
        public PalPlayerInput(nint addr) : base(addr) { }
        public Object OnKeyConfigChanged { get { return this[nameof(OnKeyConfigChanged)]; } set { this[nameof(OnKeyConfigChanged)] = value; } }
        public Object EnableKeys { get { return this[nameof(EnableKeys)]; } set { this[nameof(EnableKeys)] = value; } }
        public Object DisableKeys { get { return this[nameof(DisableKeys)]; } set { this[nameof(DisableKeys)] = value; } }
        public bool UpdateActionMapping(Object InActionName, PalKeyConfigKeys NewKey, EPalKeyConfigCategory Category) { return Invoke<bool>(nameof(UpdateActionMapping), InActionName, NewKey, Category); }
        public void ResetAxisKey(Object InAxisName, EPalKeyConfigCategory Category, EPalKeyConfigAxisFilterType FilterType) { Invoke(nameof(ResetAxisKey), InAxisName, Category, FilterType); }
        public void ResetActionKey(Object InActionName, EPalKeyConfigCategory Category) { Invoke(nameof(ResetActionKey), InActionName, Category); }
        public void OnKeyConfigChangedDelegate__DelegateSignature() { Invoke(nameof(OnKeyConfigChangedDelegate__DelegateSignature)); }
        public void OnChangeKeyConfig(PalKeyConfigSettings PrevSettings, PalKeyConfigSettings NewSettings) { Invoke(nameof(OnChangeKeyConfig), PrevSettings, NewSettings); }
        public bool IsEnableKey(Key Key, EPalKeyConfigCategory InputType) { return Invoke<bool>(nameof(IsEnableKey), Key, InputType); }
        public void GetAxisMappingByName(Object InAxisName, Array<InputAxisKeyMapping> OutMappings) { Invoke(nameof(GetAxisMappingByName), InAxisName, OutMappings); }
        public PalKeyConfigKeys GetAxisConfigKeys(Object InAxisName, EPalKeyConfigCategory Category, EPalKeyConfigAxisFilterType FilterType) { return Invoke<PalKeyConfigKeys>(nameof(GetAxisConfigKeys), InAxisName, Category, FilterType); }
        public void GetActionMappingByName(Object InActionName, Array<InputActionKeyMapping> OutMappings) { Invoke(nameof(GetActionMappingByName), InActionName, OutMappings); }
        public PalKeyConfigKeys GetActionConfigKeys(Object InActionName, EPalKeyConfigCategory Category) { return Invoke<PalKeyConfigKeys>(nameof(GetActionConfigKeys), InActionName, Category); }
        public void FiltterCategoryAxisMappings(EPalKeyConfigCategory Category, EPalKeyConfigAxisFilterType FilterType, Array<InputAxisKeyMapping> Mappings) { Invoke(nameof(FiltterCategoryAxisMappings), Category, FilterType, Mappings); }
        public void FiltterCategoryActionMappings(EPalKeyConfigCategory Category, Array<InputActionKeyMapping> Mappings) { Invoke(nameof(FiltterCategoryActionMappings), Category, Mappings); }
    }
    public class PalPlayerInventory : PalItemInventoryBase
    {
        public PalPlayerInventory(nint addr) : base(addr) { }
    }
    public class PalPlayerInventoryData : Object
    {
        public PalPlayerInventoryData(nint addr) : base(addr) { }
        public Object OnUpdateInventoryContainerDelegate { get { return this[nameof(OnUpdateInventoryContainerDelegate)]; } set { this[nameof(OnUpdateInventoryContainerDelegate)] = value; } }
        public Object OnUpdateEssentialContainerDelegate { get { return this[nameof(OnUpdateEssentialContainerDelegate)]; } set { this[nameof(OnUpdateEssentialContainerDelegate)] = value; } }
        public Object OnUpdateLoadoutSlotDelegate { get { return this[nameof(OnUpdateLoadoutSlotDelegate)]; } set { this[nameof(OnUpdateLoadoutSlotDelegate)] = value; } }
        public Object OnUpdateEquipmentSlotDelegate { get { return this[nameof(OnUpdateEquipmentSlotDelegate)]; } set { this[nameof(OnUpdateEquipmentSlotDelegate)] = value; } }
        public Object OnUpdateWeightInventoryDelegate { get { return this[nameof(OnUpdateWeightInventoryDelegate)]; } set { this[nameof(OnUpdateWeightInventoryDelegate)] = value; } }
        public Object OnUpdateMaxWeightInventoryDelegate { get { return this[nameof(OnUpdateMaxWeightInventoryDelegate)]; } set { this[nameof(OnUpdateMaxWeightInventoryDelegate)] = value; } }
        public Object OnOverWeightInventoryDelegate { get { return this[nameof(OnOverWeightInventoryDelegate)]; } set { this[nameof(OnOverWeightInventoryDelegate)] = value; } }
        public Object OnFixedInventoryWeightDelegate { get { return this[nameof(OnFixedInventoryWeightDelegate)]; } set { this[nameof(OnFixedInventoryWeightDelegate)] = value; } }
        public Object OnMaxWeightBuffedDelegate { get { return this[nameof(OnMaxWeightBuffedDelegate)]; } set { this[nameof(OnMaxWeightBuffedDelegate)] = value; } }
        public Object OnPickupItemDelegate { get { return this[nameof(OnPickupItemDelegate)]; } set { this[nameof(OnPickupItemDelegate)] = value; } }
        public Object OnGetItemFromConvertItemMapObject { get { return this[nameof(OnGetItemFromConvertItemMapObject)]; } set { this[nameof(OnGetItemFromConvertItemMapObject)] = value; } }
        public PalPlayerDataInventoryInfo inventoryInfo { get { return this[nameof(inventoryInfo)].As<PalPlayerDataInventoryInfo>(); } set { this["inventoryInfo"] = value; } }
        public TimerHandle FullInventoryLogGuardTimerHandle { get { return this[nameof(FullInventoryLogGuardTimerHandle)].As<TimerHandle>(); } set { this["FullInventoryLogGuardTimerHandle"] = value; } }
        public float NowItemWeight { get { return this[nameof(NowItemWeight)].GetValue<float>(); } set { this[nameof(NowItemWeight)].SetValue<float>(value); } }
        public float maxInventoryWeight { get { return this[nameof(maxInventoryWeight)].GetValue<float>(); } set { this[nameof(maxInventoryWeight)].SetValue<float>(value); } }
        public float maxInventoryWeight_Cached { get { return this[nameof(maxInventoryWeight_Cached)].GetValue<float>(); } set { this[nameof(maxInventoryWeight_Cached)].SetValue<float>(value); } }
        public PalItemContainerMultiHelper InventoryMultiHelper { get { return this[nameof(InventoryMultiHelper)].As<PalItemContainerMultiHelper>(); } set { this["InventoryMultiHelper"] = value; } }
        public float PassiveBuffedMaxWeight { get { return this[nameof(PassiveBuffedMaxWeight)].GetValue<float>(); } set { this[nameof(PassiveBuffedMaxWeight)].SetValue<float>(value); } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public PalMoneyData moneyData { get { return this[nameof(moneyData)].As<PalMoneyData>(); } set { this["moneyData"] = value; } }
        public AkAudioEvent EquipmentBreakAudioEvent { get { return this[nameof(EquipmentBreakAudioEvent)].As<AkAudioEvent>(); } set { this["EquipmentBreakAudioEvent"] = value; } }
        public void UpdateWeightInventoryDelegate__DelegateSignature(float nowWeight) { Invoke(nameof(UpdateWeightInventoryDelegate__DelegateSignature), nowWeight); }
        public void UpdateMaxWeightInventoryDelegate__DelegateSignature(float maxWeight) { Invoke(nameof(UpdateMaxWeightInventoryDelegate__DelegateSignature), maxWeight); }
        public void UpdateLoadoutSlotDelegate__DelegateSignature(PalItemSlot itemSlot, EPalPlayerInventoryType updatedLoadoutType) { Invoke(nameof(UpdateLoadoutSlotDelegate__DelegateSignature), itemSlot, updatedLoadoutType); }
        public void UpdateInventoryContainerDelegate__DelegateSignature(PalItemContainer Container) { Invoke(nameof(UpdateInventoryContainerDelegate__DelegateSignature), Container); }
        public void UpdateEssentialContainerDelegate__DelegateSignature(PalItemContainer Container) { Invoke(nameof(UpdateEssentialContainerDelegate__DelegateSignature), Container); }
        public void UpdateEquipmentSlotDelegate__DelegateSignature(PalItemSlot itemSlot, EPalPlayerEquipItemSlotType slotType) { Invoke(nameof(UpdateEquipmentSlotDelegate__DelegateSignature), itemSlot, slotType); }
        public bool TryRemoveEquipment(PalItemSlot EquipSlot) { return Invoke<bool>(nameof(TryRemoveEquipment), EquipSlot); }
        public bool TryGetItemSlotFromEquipmentType(EPalPlayerEquipItemSlotType equipmentSlotType, PalItemSlot outSlot) { return Invoke<bool>(nameof(TryGetItemSlotFromEquipmentType), equipmentSlotType, outSlot); }
        public bool TryGetItemIdBySlot(EPalPlayerEquipItemSlotType equipmentSlotType, PalItemId outItemId) { return Invoke<bool>(nameof(TryGetItemIdBySlot), equipmentSlotType, outItemId); }
        public EPalPlayerEquipItemSlotType TryGetEquipmentTypeFromStaticItemID(Object StaticItemId) { return Invoke<EPalPlayerEquipItemSlotType>(nameof(TryGetEquipmentTypeFromStaticItemID), StaticItemId); }
        public bool TryGetEquipmentContainerIDFromStaticItemID(Object StaticItemId, PalContainerId outContainerId) { return Invoke<bool>(nameof(TryGetEquipmentContainerIDFromStaticItemID), StaticItemId, outContainerId); }
        public bool TryGetEmptySlot(EPalPlayerInventoryType inventoryType, PalItemSlot emptySlot) { return Invoke<bool>(nameof(TryGetEmptySlot), inventoryType, emptySlot); }
        public bool TryGetContainerIdFromItemType(EPalItemTypeA itemTypeA, PalContainerId outContainerId) { return Invoke<bool>(nameof(TryGetContainerIdFromItemType), itemTypeA, outContainerId); }
        public bool TryGetContainerIDFromInventoryType(EPalPlayerInventoryType inventoryType, PalContainerId outContainerId) { return Invoke<bool>(nameof(TryGetContainerIDFromInventoryType), inventoryType, outContainerId); }
        public bool TryGetContainerFromStaticItemID(Object StaticItemId, PalItemContainer OutContainer) { return Invoke<bool>(nameof(TryGetContainerFromStaticItemID), StaticItemId, OutContainer); }
        public bool TryGetContainerFromInventoryType(EPalPlayerInventoryType inventoryType, PalItemContainer OutContainer) { return Invoke<bool>(nameof(TryGetContainerFromInventoryType), inventoryType, OutContainer); }
        public bool TryEquipSlot(PalItemSlot Slot) { return Invoke<bool>(nameof(TryEquipSlot), Slot); }
        public void RequestTrashItemFromDropSlot_ServerInternal() { Invoke(nameof(RequestTrashItemFromDropSlot_ServerInternal)); }
        public void RequestTrashItemFromDropSlot() { Invoke(nameof(RequestTrashItemFromDropSlot)); }
        public void RequestSortInventory_ServerInternal() { Invoke(nameof(RequestSortInventory_ServerInternal)); }
        public void RequestSortInventory() { Invoke(nameof(RequestSortInventory)); }
        public void RequestFillSlotToTargetContainerFromInventory_ToServer(PalContainerId ToContainerId) { Invoke(nameof(RequestFillSlotToTargetContainerFromInventory_ToServer), ToContainerId); }
        public void RequestFillSlotToInventoryFromTargetContainer_ToServer(PalContainerId FromContainerId) { Invoke(nameof(RequestFillSlotToInventoryFromTargetContainer_ToServer), FromContainerId); }
        public void RequestDropItemFromDropSlot_ServerInternal() { Invoke(nameof(RequestDropItemFromDropSlot_ServerInternal)); }
        public void RequestDropItemFromDropSlot() { Invoke(nameof(RequestDropItemFromDropSlot)); }
        public void RequestAddItem(Object StaticItemId, int Count, bool isAssignPassive) { Invoke(nameof(RequestAddItem), StaticItemId, Count, isAssignPassive); }
        public void PickupItemDelegate__DelegateSignature(Array<PalItemAndNum> ItemInfos) { Invoke(nameof(PickupItemDelegate__DelegateSignature), ItemInfos); }
        public void OverWeightInventoryDelegate__DelegateSignature(float nowWeight) { Invoke(nameof(OverWeightInventoryDelegate__DelegateSignature), nowWeight); }
        public void OnUpdatePassiveSkill(EPalPassiveSkillEffectType EffectType, float Value) { Invoke(nameof(OnUpdatePassiveSkill), EffectType, Value); }
        public void OnUpdateLoadoutSlot(PalItemSlot Slot) { Invoke(nameof(OnUpdateLoadoutSlot), Slot); }
        public void OnUpdateInventoryContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateInventoryContainer), Container); }
        public void OnUpdateEssentialContainer(PalItemContainer Container) { Invoke(nameof(OnUpdateEssentialContainer), Container); }
        public void OnUpdateEquipmentSlot_ForServer(PalItemSlot Slot) { Invoke(nameof(OnUpdateEquipmentSlot_ForServer), Slot); }
        public void OnUpdateEquipmentSlot(PalItemSlot Slot) { Invoke(nameof(OnUpdateEquipmentSlot), Slot); }
        public void OnUpdateAnyEquipmentDurability(float OldDurability, float NewDurability) { Invoke(nameof(OnUpdateAnyEquipmentDurability), OldDurability, NewDurability); }
        public void OnRep_maxInventoryWeight() { Invoke(nameof(OnRep_maxInventoryWeight)); }
        public void OnRep_InventoryInfo() { Invoke(nameof(OnRep_InventoryInfo)); }
        public void OnRep_BuffMaxWeight() { Invoke(nameof(OnRep_BuffMaxWeight)); }
        public void OnOnUpdateStatusPoint(Object StatusName, int prevPoint, int newPoint) { Invoke(nameof(OnOnUpdateStatusPoint), StatusName, prevPoint, newPoint); }
        public void OnEndPassiveSkill(EPalPassiveSkillEffectType EffectType) { Invoke(nameof(OnEndPassiveSkill), EffectType); }
        public void MaxWeightBuffedDelegate__DelegateSignature() { Invoke(nameof(MaxWeightBuffedDelegate__DelegateSignature)); }
        public bool IsExistItem(Object StaticItemId) { return Invoke<bool>(nameof(IsExistItem), StaticItemId); }
        public bool IsEquipSlot(PalItemSlot CheckSlot) { return Invoke<bool>(nameof(IsEquipSlot), CheckSlot); }
        public bool IsEquip(EPalPlayerEquipItemSlotType equipmentSlotType, Object StaticItemId) { return Invoke<bool>(nameof(IsEquip), equipmentSlotType, StaticItemId); }
        public int GetUnlockedFoodEquipSlotNum() { return Invoke<int>(nameof(GetUnlockedFoodEquipSlotNum)); }
        public float GetNowItemWeight() { return Invoke<float>(nameof(GetNowItemWeight)); }
        public void GetItemInfoByItemTypeA(Array<EPalItemTypeA> itemTypeA, Array<PalItemAndNum> OutItemInfos) { Invoke(nameof(GetItemInfoByItemTypeA), itemTypeA, OutItemInfos); }
        public EPalPlayerInventoryType GetInventoryTypeFromStaticItemID(Object StaticItemId) { return Invoke<EPalPlayerInventoryType>(nameof(GetInventoryTypeFromStaticItemID), StaticItemId); }
        public EPalPlayerInventoryType GetInventoryTypeFromItemTypeA(EPalItemTypeA itemTypeA) { return Invoke<EPalPlayerInventoryType>(nameof(GetInventoryTypeFromItemTypeA), itemTypeA); }
        public void FixedWeightInventoryDelegate__DelegateSignature(float nowWeight) { Invoke(nameof(FixedWeightInventoryDelegate__DelegateSignature), nowWeight); }
        public int CountItemNum(Object StaticItemId) { return Invoke<int>(nameof(CountItemNum), StaticItemId); }
        public bool CanEquip(EPalPlayerEquipItemSlotType equipmentSlotType, Object StaticItemId) { return Invoke<bool>(nameof(CanEquip), equipmentSlotType, StaticItemId); }
        public EPalItemOperationResult AddItem_ServerInternal(Object StaticItemId, int Count, bool isAssignPassive) { return Invoke<EPalItemOperationResult>(nameof(AddItem_ServerInternal), StaticItemId, Count, isAssignPassive); }
        public void AddFullInventoryLog_Client() { Invoke(nameof(AddFullInventoryLog_Client)); }
    }
    public class PalPlayerManager : PalWorldSubsystem
    {
        public PalPlayerManager(nint addr) : base(addr) { }
        public PalPlayerClassStructSet PlayerClassStructSet { get { return this[nameof(PlayerClassStructSet)].As<PalPlayerClassStructSet>(); } set { this["PlayerClassStructSet"] = value; } }
        public Object PlayerAccountMap { get { return this[nameof(PlayerAccountMap)]; } set { this[nameof(PlayerAccountMap)] = value; } }
        public Object LoginPlayerMap { get { return this[nameof(LoginPlayerMap)]; } set { this[nameof(LoginPlayerMap)] = value; } }
    }
    public class PalPlayerMenuUI : UserWidget
    {
        public PalPlayerMenuUI(nint addr) : base(addr) { }
        public PalItemSlotId SelectItemSlot { get { return this[nameof(SelectItemSlot)].As<PalItemSlotId>(); } set { this["SelectItemSlot"] = value; } }
        public bool IsDraging { get { return this[nameof(IsDraging)].Flag; } set { this[nameof(IsDraging)].Flag = value; } }
        public void SetSelectedItemSlot(PalItemSlotId SelectSlot) { Invoke(nameof(SetSelectedItemSlot), SelectSlot); }
        public void SetIsDraging(bool Draging) { Invoke(nameof(SetIsDraging), Draging); }
        public void OpenWidget(Object WidgetClass, UserWidget OutWidget, int ZOrder) { Invoke(nameof(OpenWidget), WidgetClass, OutWidget, ZOrder); }
        public void OpenInventoryMenu() { Invoke(nameof(OpenInventoryMenu)); }
        public void OpenChestMenu(PalItemContainer ChestContainer) { Invoke(nameof(OpenChestMenu), ChestContainer); }
        public void InitBindAxis() { Invoke(nameof(InitBindAxis)); }
        public PalItemSlotId GetSelectedItemSlot() { return Invoke<PalItemSlotId>(nameof(GetSelectedItemSlot)); }
        public bool GetIsDragingt() { return Invoke<bool>(nameof(GetIsDragingt)); }
        public void CreateDragWidget(PalItemSlotId SlotID) { Invoke(nameof(CreateDragWidget), SlotID); }
        public void CloseInventoryMenu() { Invoke(nameof(CloseInventoryMenu)); }
        public void CloseChestMenu(PalItemContainer ChestContainer) { Invoke(nameof(CloseChestMenu), ChestContainer); }
        public void BackOneWidget() { Invoke(nameof(BackOneWidget)); }
        public void AddMouseYawInput(float Val) { Invoke(nameof(AddMouseYawInput), Val); }
        public void AddMousePitchInput(float Val) { Invoke(nameof(AddMousePitchInput), Val); }
    }
    public class PalPlayerMenuUIManager : Object
    {
        public PalPlayerMenuUIManager(nint addr) : base(addr) { }
        public PalPlayerMenuUI PlayerMenuUI { get { return this[nameof(PlayerMenuUI)].As<PalPlayerMenuUI>(); } set { this["PlayerMenuUI"] = value; } }
        public void ToggleInventoryWindow() { Invoke(nameof(ToggleInventoryWindow)); }
        public void Test_SetPlayerContainerID(PalContainerId ContainerId) { Invoke(nameof(Test_SetPlayerContainerID), ContainerId); }
        public PalContainerId Test_GetPlayerContainerID() { return Invoke<PalContainerId>(nameof(Test_GetPlayerContainerID)); }
        public void SelectItem(PalItemSlotId SelectSlot) { Invoke(nameof(SelectItem), SelectSlot); }
    }
    public class PalPlayerOtomoData : Object
    {
        public PalPlayerOtomoData(nint addr) : base(addr) { }
        public PalContainerId OtomoCharacterContainerId { get { return this[nameof(OtomoCharacterContainerId)].As<PalContainerId>(); } set { this["OtomoCharacterContainerId"] = value; } }
        public EPalOtomoPalOrderType OtomoOrder { get { return (EPalOtomoPalOrderType)this[nameof(OtomoOrder)].GetValue<int>(); } set { this[nameof(OtomoOrder)].SetValue<int>((int)value); } }
    }
    public class PalPlayerPartyPalHolder : Object
    {
        public PalPlayerPartyPalHolder(nint addr) : base(addr) { }
        public PalIndividualCharacterHandle FirstOtomoPal { get { return this[nameof(FirstOtomoPal)].As<PalIndividualCharacterHandle>(); } set { this["FirstOtomoPal"] = value; } }
        public PalIndividualCharacterHandle SecondOtomoPal { get { return this[nameof(SecondOtomoPal)].As<PalIndividualCharacterHandle>(); } set { this["SecondOtomoPal"] = value; } }
        public Array<PalIndividualCharacterHandle> BenchMember { get { return new Array<PalIndividualCharacterHandle>(this[nameof(BenchMember)].Address); } }
        public float FirstCoolTimer { get { return this[nameof(FirstCoolTimer)].GetValue<float>(); } set { this[nameof(FirstCoolTimer)].SetValue<float>(value); } }
        public float SecondCoolTimer { get { return this[nameof(SecondCoolTimer)].GetValue<float>(); } set { this[nameof(SecondCoolTimer)].SetValue<float>(value); } }
        public float CoolDownTime { get { return this[nameof(CoolDownTime)].GetValue<float>(); } set { this[nameof(CoolDownTime)].SetValue<float>(value); } }
        public void UpdateCoolTimer(float DeltaTime) { Invoke(nameof(UpdateCoolTimer), DeltaTime); }
        public void Test_SetClassArray(Array<Object> MonsterClassArray) { Invoke(nameof(Test_SetClassArray), MonsterClassArray); }
        public void SetUpPartyHolder(float CoolDownTime_Second) { Invoke(nameof(SetUpPartyHolder), CoolDownTime_Second); }
        public void RestartCoolTime(bool SecondPal) { Invoke(nameof(RestartCoolTime), SecondPal); }
        public bool PawnOtmoIsPartyOtomo(bool SecondPal, PalIndividualCharacterHandle IDHandle) { return Invoke<bool>(nameof(PawnOtmoIsPartyOtomo), SecondPal, IDHandle); }
        public bool IsUsableCommandSkill(bool SecondPal) { return Invoke<bool>(nameof(IsUsableCommandSkill), SecondPal); }
        public void GetPartyMember(Array<PalIndividualCharacterHandle> OutPartyMember) { Invoke(nameof(GetPartyMember), OutPartyMember); }
        public PalIndividualCharacterHandle GetOtomoPal(bool SecondPal) { return Invoke<PalIndividualCharacterHandle>(nameof(GetOtomoPal), SecondPal); }
        public float GetCoolTimeRate(bool SecondPal) { return Invoke<float>(nameof(GetCoolTimeRate), SecondPal); }
        public void ChangePalSlot(bool SecondPal) { Invoke(nameof(ChangePalSlot), SecondPal); }
    }
    public class PalPlayerRecordData : Object
    {
        public PalPlayerRecordData(nint addr) : base(addr) { }
        public Object OnRelicNumUpdate { get { return this[nameof(OnRelicNumUpdate)]; } set { this[nameof(OnRelicNumUpdate)] = value; } }
        public Object OnRelicNumAdd { get { return this[nameof(OnRelicNumAdd)]; } set { this[nameof(OnRelicNumAdd)] = value; } }
        public Array<Object> RecordDataTriggerClassArray { get { return new Array<Object>(this[nameof(RecordDataTriggerClassArray)].Address); } }
        public Array<PalPlayerRecordDataTrigger> RecordDataTriggerArray { get { return new Array<PalPlayerRecordDataTrigger>(this[nameof(RecordDataTriggerArray)].Address); } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public PalPlayerRecordDataRepInfoArray_BoolVal TowerBossDefeatFlag { get { return this[nameof(TowerBossDefeatFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["TowerBossDefeatFlag"] = value; } }
        public PalPlayerRecordDataRepInfoArray_BoolVal NormalBossDefeatFlag { get { return this[nameof(NormalBossDefeatFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["NormalBossDefeatFlag"] = value; } }
        public int BossDefeatCount { get { return this[nameof(BossDefeatCount)].GetValue<int>(); } set { this[nameof(BossDefeatCount)].SetValue<int>(value); } }
        public int TribeCaptureCount { get { return this[nameof(TribeCaptureCount)].GetValue<int>(); } set { this[nameof(TribeCaptureCount)].SetValue<int>(value); } }
        public PalPlayerRecordDataRepInfoArray_IntVal PalCaptureCount { get { return this[nameof(PalCaptureCount)].As<PalPlayerRecordDataRepInfoArray_IntVal>(); } set { this["PalCaptureCount"] = value; } }
        public PalPlayerRecordDataRepInfoArray_BoolVal PaldeckUnlockFlag { get { return this[nameof(PaldeckUnlockFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["PaldeckUnlockFlag"] = value; } }
        public int PalCaptureCountBonusCount_Tier1 { get { return this[nameof(PalCaptureCountBonusCount_Tier1)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier1)].SetValue<int>(value); } }
        public int PalCaptureCountBonusCount_Tier2 { get { return this[nameof(PalCaptureCountBonusCount_Tier2)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier2)].SetValue<int>(value); } }
        public int PalCaptureCountBonusCount_Tier3 { get { return this[nameof(PalCaptureCountBonusCount_Tier3)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier3)].SetValue<int>(value); } }
        public PalPlayerRecordDataRepInfoArray_BoolVal RelicObtainForInstanceFlag { get { return this[nameof(RelicObtainForInstanceFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["RelicObtainForInstanceFlag"] = value; } }
        public int RelicPossessNum { get { return this[nameof(RelicPossessNum)].GetValue<int>(); } set { this[nameof(RelicPossessNum)].SetValue<int>(value); } }
        public int RelicPossessNumMirror { get { return this[nameof(RelicPossessNumMirror)].GetValue<int>(); } set { this[nameof(RelicPossessNumMirror)].SetValue<int>(value); } }
        public PalPlayerRecordDataRepInfoArray_BoolVal NoteObtainForInstanceFlag { get { return this[nameof(NoteObtainForInstanceFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["NoteObtainForInstanceFlag"] = value; } }
        public PalPlayerRecordDataRepInfoArray_BoolVal FastTravelPointUnlockFlag { get { return this[nameof(FastTravelPointUnlockFlag)].As<PalPlayerRecordDataRepInfoArray_BoolVal>(); } set { this["FastTravelPointUnlockFlag"] = value; } }
        public PalStageInstanceId EnteringStageInstanceId { get { return this[nameof(EnteringStageInstanceId)].As<PalStageInstanceId>(); } set { this["EnteringStageInstanceId"] = value; } }
        public Array<Guid> BuildingObjectMapObjectInstanceIds { get { return new Array<Guid>(this[nameof(BuildingObjectMapObjectInstanceIds)].Address); } }
        public Object Debug_EnteringStageDataLayerName { get { return this[nameof(Debug_EnteringStageDataLayerName)]; } set { this[nameof(Debug_EnteringStageDataLayerName)] = value; } }
        public Object Debug_LastEnteredStageDataLayerName { get { return this[nameof(Debug_LastEnteredStageDataLayerName)]; } set { this[nameof(Debug_LastEnteredStageDataLayerName)] = value; } }
        public void OnRep_RelicNum() { Invoke(nameof(OnRep_RelicNum)); }
        public void OnRelicNumUpdateDelegate__DelegateSignature() { Invoke(nameof(OnRelicNumUpdateDelegate__DelegateSignature)); }
        public void OnRelicNumAddedDelegate__DelegateSignature(int AddNum) { Invoke(nameof(OnRelicNumAddedDelegate__DelegateSignature), AddNum); }
        public void OnCompleteBuild_ServerInternal(PalMapObjectModel MapObjectModel) { Invoke(nameof(OnCompleteBuild_ServerInternal), MapObjectModel); }
    }
    public class PalPlayerRecordDataUtility : BlueprintFunctionLibrary
    {
        public PalPlayerRecordDataUtility(nint addr) : base(addr) { }
        public void SetRecordData_TribeIdFlag_ForServer(Object WorldContextObject, PalPlayerRecordDataRepInfoArray_BoolVal RecordData, EPalTribeID Key) { Invoke(nameof(SetRecordData_TribeIdFlag_ForServer), WorldContextObject, RecordData, Key); }
        public void SetRecordData_TribeIdCount_ForServer(Object WorldContextObject, PalPlayerRecordDataRepInfoArray_IntVal RecordData, EPalTribeID Key, int Value) { Invoke(nameof(SetRecordData_TribeIdCount_ForServer), WorldContextObject, RecordData, Key, Value); }
        public void SetRecordData_Int_ForServer(Object WorldContextObject, PalPlayerRecordDataRepInfoArray_IntVal RecordData, Object Key, int Value) { Invoke(nameof(SetRecordData_Int_ForServer), WorldContextObject, RecordData, Key, Value); }
        public void SetRecordData_BossDefeat_ForServer(Object WorldContextObject, PalPlayerRecordDataRepInfoArray_BoolVal RecordData, EPalBossType Key) { Invoke(nameof(SetRecordData_BossDefeat_ForServer), WorldContextObject, RecordData, Key); }
        public void SetRecordData_Bool_ForServer(Object WorldContextObject, PalPlayerRecordDataRepInfoArray_BoolVal RecordData, Object Key, bool bValue) { Invoke(nameof(SetRecordData_Bool_ForServer), WorldContextObject, RecordData, Key, bValue); }
        public bool GetRecordData_TribeIdFlag(PalPlayerRecordDataRepInfoArray_BoolVal RecordData, EPalTribeID Key) { return Invoke<bool>(nameof(GetRecordData_TribeIdFlag), RecordData, Key); }
        public int GetRecordData_TribeIdCount(PalPlayerRecordDataRepInfoArray_IntVal RecordData, EPalTribeID Key) { return Invoke<int>(nameof(GetRecordData_TribeIdCount), RecordData, Key); }
        public int GetRecordData_Int(PalPlayerRecordDataRepInfoArray_IntVal RecordData, Object Key) { return Invoke<int>(nameof(GetRecordData_Int), RecordData, Key); }
        public int GetRecordData_BossDefeat(PalPlayerRecordDataRepInfoArray_BoolVal RecordData, EPalBossType Key) { return Invoke<int>(nameof(GetRecordData_BossDefeat), RecordData, Key); }
        public int GetRecordData_BoolCount(PalPlayerRecordDataRepInfoArray_BoolVal RecordData) { return Invoke<int>(nameof(GetRecordData_BoolCount), RecordData); }
        public bool GetRecordData_Bool(PalPlayerRecordDataRepInfoArray_BoolVal RecordData, Object Key) { return Invoke<bool>(nameof(GetRecordData_Bool), RecordData, Key); }
    }
    public class PalPlayerLocalRecordData : Object
    {
        public PalPlayerLocalRecordData(nint addr) : base(addr) { }
        public Object Local_ActivateOtomoCount { get { return this[nameof(Local_ActivateOtomoCount)]; } set { this[nameof(Local_ActivateOtomoCount)] = value; } }
        public Object Local_PalEncountFlag { get { return this[nameof(Local_PalEncountFlag)]; } set { this[nameof(Local_PalEncountFlag)] = value; } }
        public Object Local_PalDexNewFlag { get { return this[nameof(Local_PalDexNewFlag)]; } set { this[nameof(Local_PalDexNewFlag)] = value; } }
        public Object Local_NoteCheckedFlag { get { return this[nameof(Local_NoteCheckedFlag)]; } set { this[nameof(Local_NoteCheckedFlag)] = value; } }
        public Object Local_LoadoutSelectedIndexMap { get { return this[nameof(Local_LoadoutSelectedIndexMap)]; } set { this[nameof(Local_LoadoutSelectedIndexMap)] = value; } }
        public Object Local_NewUnlockedBuilds { get { return this[nameof(Local_NewUnlockedBuilds)]; } set { this[nameof(Local_NewUnlockedBuilds)] = value; } }
        public bool Local_IsBuildMenuChecked { get { return this[nameof(Local_IsBuildMenuChecked)].Flag; } set { this[nameof(Local_IsBuildMenuChecked)].Flag = value; } }
        public Object Local_NPCTalkCountMap { get { return this[nameof(Local_NPCTalkCountMap)]; } set { this[nameof(Local_NPCTalkCountMap)] = value; } }
        public Object Local_NewUnlockedTechs { get { return this[nameof(Local_NewUnlockedTechs)]; } set { this[nameof(Local_NewUnlockedTechs)] = value; } }
        public Object Local_ShowedCutsceneFlag { get { return this[nameof(Local_ShowedCutsceneFlag)]; } set { this[nameof(Local_ShowedCutsceneFlag)] = value; } }
        public int Local_PlayTime { get { return this[nameof(Local_PlayTime)].GetValue<int>(); } set { this[nameof(Local_PlayTime)].SetValue<int>(value); } }
    }
    public class PalPlayerRecordDataInternals : Object
    {
        public PalPlayerRecordDataInternals(nint addr) : base(addr) { }
    }
    public class PalPlayerRecordDataTrigger : Object
    {
        public PalPlayerRecordDataTrigger(nint addr) : base(addr) { }
    }
    public class PalPlayerState : PlayerState
    {
        public PalPlayerState(nint addr) : base(addr) { }
        public UniqueNetIdRepl WinGDKUniqueId { get { return this[nameof(WinGDKUniqueId)].As<UniqueNetIdRepl>(); } set { this["WinGDKUniqueId"] = value; } }
        public Object OnReportCrimeIdsDelegate { get { return this[nameof(OnReportCrimeIdsDelegate)]; } set { this[nameof(OnReportCrimeIdsDelegate)] = value; } }
        public Object OnReleaseWantedDelegate { get { return this[nameof(OnReleaseWantedDelegate)]; } set { this[nameof(OnReleaseWantedDelegate)] = value; } }
        public Object OnStartCrimeDelegate { get { return this[nameof(OnStartCrimeDelegate)]; } set { this[nameof(OnStartCrimeDelegate)] = value; } }
        public Object OnEndCrimeDelegate { get { return this[nameof(OnEndCrimeDelegate)]; } set { this[nameof(OnEndCrimeDelegate)] = value; } }
        public Object OnCompleteLoadInitWorldPartitionDelegate_InClient { get { return this[nameof(OnCompleteLoadInitWorldPartitionDelegate_InClient)]; } set { this[nameof(OnCompleteLoadInitWorldPartitionDelegate_InClient)] = value; } }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public PalInstanceID IndividualHandleId { get { return this[nameof(IndividualHandleId)].As<PalInstanceID>(); } set { this["IndividualHandleId"] = value; } }
        public Vector CachedPlayerLocation { get { return this[nameof(CachedPlayerLocation)].As<Vector>(); } set { this["CachedPlayerLocation"] = value; } }
        public Quat CachedPlayerRotation { get { return this[nameof(CachedPlayerRotation)].As<Quat>(); } set { this["CachedPlayerRotation"] = value; } }
        public PalPlayerOtomoData OtomoData { get { return this[nameof(OtomoData)].As<PalPlayerOtomoData>(); } set { this["OtomoData"] = value; } }
        public PalPlayerDataCharacterMake CharacterMakeData { get { return this[nameof(CharacterMakeData)].As<PalPlayerDataCharacterMake>(); } set { this["CharacterMakeData"] = value; } }
        public PalPlayerInventoryData InventoryData { get { return this[nameof(InventoryData)].As<PalPlayerInventoryData>(); } set { this["InventoryData"] = value; } }
        public PalPlayerDataPalStorage PalStorage { get { return this[nameof(PalStorage)].As<PalPlayerDataPalStorage>(); } set { this["PalStorage"] = value; } }
        public PalTechnologyData TechnologyData { get { return this[nameof(TechnologyData)].As<PalTechnologyData>(); } set { this["TechnologyData"] = value; } }
        public PalPlayerRecordData RecordData { get { return this[nameof(RecordData)].As<PalPlayerRecordData>(); } set { this["RecordData"] = value; } }
        public bool bIsSelectedInitMapPoint { get { return this[nameof(bIsSelectedInitMapPoint)].Flag; } set { this[nameof(bIsSelectedInitMapPoint)].Flag = value; } }
        public bool bDetectedInValidPlayer { get { return this[nameof(bDetectedInValidPlayer)].Flag; } set { this[nameof(bDetectedInValidPlayer)].Flag = value; } }
        public PalPlayerLocalRecordData LocalRecordData { get { return this[nameof(LocalRecordData)].As<PalPlayerLocalRecordData>(); } set { this["LocalRecordData"] = value; } }
        public PalWorldMapUIData WorldMapData { get { return this[nameof(WorldMapData)].As<PalWorldMapUIData>(); } set { this["WorldMapData"] = value; } }
        public PalQuestManager QuestManager { get { return this[nameof(QuestManager)].As<PalQuestManager>(); } set { this["QuestManager"] = value; } }
        public PalGroupGuildBase GuildBelongTo { get { return this[nameof(GuildBelongTo)].As<PalGroupGuildBase>(); } set { this["GuildBelongTo"] = value; } }
        public PalNetworkPlayerStateComponent NetworkComp { get { return this[nameof(NetworkComp)].As<PalNetworkPlayerStateComponent>(); } set { this["NetworkComp"] = value; } }
        public PalSyncTeleportComponent SyncTeleportComp { get { return this[nameof(SyncTeleportComp)].As<PalSyncTeleportComponent>(); } set { this["SyncTeleportComp"] = value; } }
        public DateTime StartPlayTime { get { return this[nameof(StartPlayTime)].As<DateTime>(); } set { this["StartPlayTime"] = value; } }
        public bool bIsNewCharacter { get { return this[nameof(bIsNewCharacter)].Flag; } set { this[nameof(bIsNewCharacter)].Flag = value; } }
        public Guid LoginTryingPlayerUId_InServer { get { return this[nameof(LoginTryingPlayerUId_InServer)].As<Guid>(); } set { this["LoginTryingPlayerUId_InServer"] = value; } }
        public bool bIsCompleteSyncPlayerFromServer_InClient { get { return this[nameof(bIsCompleteSyncPlayerFromServer_InClient)].Flag; } set { this[nameof(bIsCompleteSyncPlayerFromServer_InClient)].Flag = value; } }
        public PalPlayerAccountInitData AcountInitData { get { return this[nameof(AcountInitData)].As<PalPlayerAccountInitData>(); } set { this["AcountInitData"] = value; } }
        public Array<PalLogInfo_DropPal> DropPalInfo { get { return new Array<PalLogInfo_DropPal>(this[nameof(DropPalInfo)].Address); } }
        public PalDialogParameter_RequestJoinGuild RequestJoinGuildDialogParameter { get { return this[nameof(RequestJoinGuildDialogParameter)].As<PalDialogParameter_RequestJoinGuild>(); } set { this["RequestJoinGuildDialogParameter"] = value; } }
        public Object WaitLoadingWorldPartitionTimerMap { get { return this[nameof(WaitLoadingWorldPartitionTimerMap)]; } set { this[nameof(WaitLoadingWorldPartitionTimerMap)] = value; } }
        public int ChatCounter { get { return this[nameof(ChatCounter)].GetValue<int>(); } set { this[nameof(ChatCounter)].SetValue<int>(value); } }
        public void WaitWorldPartitionDelegate(TimerHandle OutTimerHandle, Object Delegate) { Invoke(nameof(WaitWorldPartitionDelegate), OutTimerHandle, Delegate); }
        public void StartCrimeDelegate__DelegateSignature(Guid CrimeInstanceId) { Invoke(nameof(StartCrimeDelegate__DelegateSignature), CrimeInstanceId); }
        public void ShowTowerBossDefeatRewardUI() { Invoke(nameof(ShowTowerBossDefeatRewardUI)); }
        public void ShowBossDefeatRewardUI(int TechPoint) { Invoke(nameof(ShowBossDefeatRewardUI), TechPoint); }
        public void SendDeath_ToServer(PalCharacter Target) { Invoke(nameof(SendDeath_ToServer), Target); }
        public void SendDamage_ToServer(PalCharacter Target, PalDamageInfo Info) { Invoke(nameof(SendDamage_ToServer), Target, Info); }
        public void SendAccountInitData_ForServer(PalPlayerAccountInitData accountInitData) { Invoke(nameof(SendAccountInitData_ForServer), accountInitData); }
        public void ReturnSelfSingleDelegate__DelegateSignature(PalPlayerState PlayerState) { Invoke(nameof(ReturnSelfSingleDelegate__DelegateSignature), PlayerState); }
        public void ReturnSelfDelegate__DelegateSignature(PalPlayerState PlayerState) { Invoke(nameof(ReturnSelfDelegate__DelegateSignature), PlayerState); }
        public void RequestUnlockFastTravelPoint_ToServer(Object UnlockFlagKey) { Invoke(nameof(RequestUnlockFastTravelPoint_ToServer), UnlockFlagKey); }
        public void RequestSpawnMonsterForPlayer(Object CharacterID, int Num, int Level) { Invoke(nameof(RequestSpawnMonsterForPlayer), CharacterID, Num, Level); }
        public void RequestRespawn() { Invoke(nameof(RequestRespawn)); }
        public void RequestObtainLevelObject_ToServer(PalLevelObjectObtainable TargetObject) { Invoke(nameof(RequestObtainLevelObject_ToServer), TargetObject); }
        public void RequestJoinPlayer_ToServer(Guid JoinPlayerUId, PalPlayerInitializeParameter InitPlayerParam) { Invoke(nameof(RequestJoinPlayer_ToServer), JoinPlayerUId, InitPlayerParam); }
        public void RequestBotLocation() { Invoke(nameof(RequestBotLocation)); }
        public void RequestAccountInitData_ForClient() { Invoke(nameof(RequestAccountInitData_ForClient)); }
        public void ReportCrimeIdsDelegate__DelegateSignature(PalIndividualCharacterHandle CriminalHandle, Array<Object> CrimeIds) { Invoke(nameof(ReportCrimeIdsDelegate__DelegateSignature), CriminalHandle, CrimeIds); }
        public void ReleaseWantedDelegate__DelegateSignature(PalIndividualCharacterHandle CriminalHandle) { Invoke(nameof(ReleaseWantedDelegate__DelegateSignature), CriminalHandle); }
        public void RegisterForPalDex_ToClient(PalUIPalCaptureInfo CaptureInfo) { Invoke(nameof(RegisterForPalDex_ToClient), CaptureInfo); }
        public void RegisterForPalDex_ServerInternal(PalInstanceID IndividualId) { Invoke(nameof(RegisterForPalDex_ServerInternal), IndividualId); }
        public void ReceiveNotifyLoginComplete() { Invoke(nameof(ReceiveNotifyLoginComplete)); }
        public void OpenRequestJoinGuildDialog_ToClient(PalInstanceID RequestPlayerInstanceId) { Invoke(nameof(OpenRequestJoinGuildDialog_ToClient), RequestPlayerInstanceId); }
        public void OnUpdatePlayerInfoInGuildBelongTo(PalGroupGuildBase Guild, Guid InPlayerUId, PalGuildPlayerInfo InPlayerInfo) { Invoke(nameof(OnUpdatePlayerInfoInGuildBelongTo), Guild, InPlayerUId, InPlayerInfo); }
        public void OnRep_WinGDKUniqueId() { Invoke(nameof(OnRep_WinGDKUniqueId)); }
        public void OnRep_PlayerUId() { Invoke(nameof(OnRep_PlayerUId)); }
        public void OnRep_GuildBelongTo(PalGroupGuildBase OldValue) { Invoke(nameof(OnRep_GuildBelongTo), OldValue); }
        public void OnRelicNumAdded(int AddNum) { Invoke(nameof(OnRelicNumAdded), AddNum); }
        public void OnRecievedGuildJoinRequestResult(EPalGuildJoinRequestResult ResultType, PalInstanceID RequestPlayerInstanceId, PalInstanceID TargerPlayerInstanceId) { Invoke(nameof(OnRecievedGuildJoinRequestResult), ResultType, RequestPlayerInstanceId, TargerPlayerInstanceId); }
        public void OnNotifiedReturnToFieldFromStage_ToClient() { Invoke(nameof(OnNotifiedReturnToFieldFromStage_ToClient)); }
        public void OnNotifiedEnteredStage_ToClient() { Invoke(nameof(OnNotifiedEnteredStage_ToClient)); }
        public void OnCreatePlayerIndividualHandle_InServer(PalInstanceID ID) { Invoke(nameof(OnCreatePlayerIndividualHandle_InServer), ID); }
        public void OnCreatedGrantedIndividualHandle_ServerInternal(PalInstanceID IndividualId) { Invoke(nameof(OnCreatedGrantedIndividualHandle_ServerInternal), IndividualId); }
        public void OnCompleteSyncWorld_InClient(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteSyncWorld_InClient), PlayerState); }
        public void OnCompleteSyncPlayer_InClient(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteSyncPlayer_InClient), PlayerState); }
        public void OnCompleteSyncAll_InClient(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteSyncAll_InClient), PlayerState); }
        public void OnCompleteLoadWorldPartitionDelegate__DelegateSignature() { Invoke(nameof(OnCompleteLoadWorldPartitionDelegate__DelegateSignature)); }
        public void OnCompleteLoadInitWorldPartitionDelegate__DelegateSignature() { Invoke(nameof(OnCompleteLoadInitWorldPartitionDelegate__DelegateSignature)); }
        public void OnCompleteLoadInitWorldPartition_InClient(PalPlayerState PlayerState) { Invoke(nameof(OnCompleteLoadInitWorldPartition_InClient), PlayerState); }
        public void OnClosedRequestJoinGuildDialog(bool Result) { Invoke(nameof(OnClosedRequestJoinGuildDialog), Result); }
        public void OnClosedOverBaseCampDialog(bool Result) { Invoke(nameof(OnClosedOverBaseCampDialog), Result); }
        public void OnClosedCheckBaseCampAuthorityDialog(bool Result) { Invoke(nameof(OnClosedCheckBaseCampAuthorityDialog), Result); }
        public void NotifyStartInitSelectMap_ToServer() { Invoke(nameof(NotifyStartInitSelectMap_ToServer)); }
        public void NotifyRunInitialize_ToClient() { Invoke(nameof(NotifyRunInitialize_ToClient)); }
        public void NotifyRemovedCharacterFromPalBox_ToServer(PalInstanceID IndividualId) { Invoke(nameof(NotifyRemovedCharacterFromPalBox_ToServer), IndividualId); }
        public void NotifyOpenClosePalBox_ToServer(bool IsOpen) { Invoke(nameof(NotifyOpenClosePalBox_ToServer), IsOpen); }
        public void NotifyObtainComplete_ToServer(PalInstanceID IndividualId) { Invoke(nameof(NotifyObtainComplete_ToServer), IndividualId); }
        public void NotifyInvalidPlayer_ToClient() { Invoke(nameof(NotifyInvalidPlayer_ToClient)); }
        public void NotifyForceUpdateInventory_ToServer(bool IsOpen) { Invoke(nameof(NotifyForceUpdateInventory_ToServer), IsOpen); }
        public void NotifyFailedJoin_ToClient(EPalPlayerJoinResult Result) { Invoke(nameof(NotifyFailedJoin_ToClient), Result); }
        public void NotifyDropOtomoInfo(Array<PalLogInfo_DropPal> InDropPalInfo) { Invoke(nameof(NotifyDropOtomoInfo), InDropPalInfo); }
        public void NotifyCompleteInitSelectMap_ToServer() { Invoke(nameof(NotifyCompleteInitSelectMap_ToServer)); }
        public void NotifyClientInitializeToServer(UniqueNetIdRepl ReceiveUniqueId) { Invoke(nameof(NotifyClientInitializeToServer), ReceiveUniqueId); }
        public void NotifyClientInitializedEssential_ToServer() { Invoke(nameof(NotifyClientInitializedEssential_ToServer)); }
        public void LoadTitleLevel(bool bIsSaveSuccess) { Invoke(nameof(LoadTitleLevel), bIsSaveSuccess); }
        public bool IsSelectedInitMapPoint() { return Invoke<bool>(nameof(IsSelectedInitMapPoint)); }
        public bool IsInStage() { return Invoke<bool>(nameof(IsInStage)); }
        public bool IsCompleteLoadInitWorldPartition() { return Invoke<bool>(nameof(IsCompleteLoadInitWorldPartition)); }
        public void GrantExpForParty(int ExpValue) { Invoke(nameof(GrantExpForParty), ExpValue); }
        public PalWorldMapUIData GetWorldMapData() { return Invoke<PalWorldMapUIData>(nameof(GetWorldMapData)); }
        public PalTechnologyData GetTechnologyData() { return Invoke<PalTechnologyData>(nameof(GetTechnologyData)); }
        public PalSyncTeleportComponent GetSyncTeleportComp() { return Invoke<PalSyncTeleportComponent>(nameof(GetSyncTeleportComp)); }
        public PalPlayerRecordData GetRecordData() { return Invoke<PalPlayerRecordData>(nameof(GetRecordData)); }
        public PalQuestManager GetQuestManager() { return Invoke<PalQuestManager>(nameof(GetQuestManager)); }
        public PalPlayerInfoForMap GetPlayerInfoForMap() { return Invoke<PalPlayerInfoForMap>(nameof(GetPlayerInfoForMap)); }
        public PalPlayerDataPalStorage GetPalStorage() { return Invoke<PalPlayerDataPalStorage>(nameof(GetPalStorage)); }
        public PalPlayerOtomoData GetPalPlayerOtomoData() { return Invoke<PalPlayerOtomoData>(nameof(GetPalPlayerOtomoData)); }
        public PalPlayerDataCharacterMake GetPalPlayerCharacterMakeData() { return Invoke<PalPlayerDataCharacterMake>(nameof(GetPalPlayerCharacterMakeData)); }
        public PalPlayerLocalRecordData GetLocalRecordData() { return Invoke<PalPlayerLocalRecordData>(nameof(GetLocalRecordData)); }
        public PalPlayerInventoryData GetInventoryData() { return Invoke<PalPlayerInventoryData>(nameof(GetInventoryData)); }
        public Array<PalLogInfo_DropPal> GetAndClearLastDropPalInfo() { return Invoke<Array<PalLogInfo_DropPal>>(nameof(GetAndClearLastDropPalInfo)); }
        public void FixedCharacterName(Object CharacterName) { Invoke(nameof(FixedCharacterName), CharacterName); }
        public void FixedCharacterMakeData(PalPlayerDataCharacterMakeInfo MakeInfo) { Invoke(nameof(FixedCharacterMakeData), MakeInfo); }
        public void EnterChat_Receive(PalChatMessage ChatMessage) { Invoke(nameof(EnterChat_Receive), ChatMessage); }
        public bool EnterChat(Object Msg, EPalChatCategory Category) { return Invoke<bool>(nameof(EnterChat), Msg, Category); }
        public void EndCrimeDelegate__DelegateSignature(Guid CrimeInstanceId) { Invoke(nameof(EndCrimeDelegate__DelegateSignature), CrimeInstanceId); }
        public void DropOtomoSingle_ToServer(Vector DropLocation, PalInstanceID dropID) { Invoke(nameof(DropOtomoSingle_ToServer), DropLocation, dropID); }
        public void Debug_ShutdownToClient() { Invoke(nameof(Debug_ShutdownToClient)); }
        public void Debug_SetDestructionByCompleteBuiltFlag_ToServer() { Invoke(nameof(Debug_SetDestructionByCompleteBuiltFlag_ToServer)); }
        public void Debug_RequestStopAICheckOfCharacter_ToServer(PalCharacter TargetCharacter) { Invoke(nameof(Debug_RequestStopAICheckOfCharacter_ToServer), TargetCharacter); }
        public void Debug_RequestStartAICheckOfCharacter_ToServer(PalCharacter TargetCharacter) { Invoke(nameof(Debug_RequestStartAICheckOfCharacter_ToServer), TargetCharacter); }
        public void Debug_RequestShutdownRemoteServer_ToServer() { Invoke(nameof(Debug_RequestShutdownRemoteServer_ToServer)); }
        public void Debug_RequestShutdownRemoteServer() { Invoke(nameof(Debug_RequestShutdownRemoteServer)); }
        public void Debug_RequestDeletePlayerSelf_ToServer() { Invoke(nameof(Debug_RequestDeletePlayerSelf_ToServer)); }
        public void Debug_RequestDeletePlayerSelf() { Invoke(nameof(Debug_RequestDeletePlayerSelf)); }
        public void Debug_RequestCauseServerCrash_ToServer() { Invoke(nameof(Debug_RequestCauseServerCrash_ToServer)); }
        public void Debug_RequestCauseServerCrash() { Invoke(nameof(Debug_RequestCauseServerCrash)); }
        public void Debug_RequestAllowBroadcastAIInfoOfCharacter_ToServer(PalCharacter TargetCharacter) { Invoke(nameof(Debug_RequestAllowBroadcastAIInfoOfCharacter_ToServer), TargetCharacter); }
        public void Debug_RepairEquipment_ToServer() { Invoke(nameof(Debug_RepairEquipment_ToServer)); }
        public void Debug_ReceiveDeletePlayerSelf_ToRequestClient(bool bResult) { Invoke(nameof(Debug_ReceiveDeletePlayerSelf_ToRequestClient), bResult); }
        public void Debug_OnCreatedIndividual(PalInstanceID ID) { Invoke(nameof(Debug_OnCreatedIndividual), ID); }
        public void Debug_DeleteWorldAndShutdownRemoteServer_ToServer() { Invoke(nameof(Debug_DeleteWorldAndShutdownRemoteServer_ToServer)); }
        public void Debug_DeleteWorldAndShutdownRemoteServer() { Invoke(nameof(Debug_DeleteWorldAndShutdownRemoteServer)); }
        public void Debug_CaptureNewMonsterByDebugOtomoInfo_ToServer(PalDebugOtomoPalInfo Info) { Invoke(nameof(Debug_CaptureNewMonsterByDebugOtomoInfo_ToServer), Info); }
        public void Debug_CaptureNewMonster_ToServer(Object CharacterID) { Invoke(nameof(Debug_CaptureNewMonster_ToServer), CharacterID); }
        public void Debug_BuildDebugBaseCamp_ToServer(Object CampMode, int workerCount) { Invoke(nameof(Debug_BuildDebugBaseCamp_ToServer), CampMode, workerCount); }
        public void CapturePalDelegate__DelegateSignature(PalUIPalCaptureInfo CaptureInfo) { Invoke(nameof(CapturePalDelegate__DelegateSignature), CaptureInfo); }
        public void CallOrRegisterOnCompleteSyncPlayerFromServer_InClient(Object Delegate) { Invoke(nameof(CallOrRegisterOnCompleteSyncPlayerFromServer_InClient), Delegate); }
        public void CallOrRegisterOnCompleteLoadInitWorldPartition_InClient(Object Delegate) { Invoke(nameof(CallOrRegisterOnCompleteLoadInitWorldPartition_InClient), Delegate); }
        public void AddItemGetLog_ToClient(PalStaticItemIdAndNum ItemAndNum) { Invoke(nameof(AddItemGetLog_ToClient), ItemAndNum); }
        public void AddFullInventoryLog_ToClient() { Invoke(nameof(AddFullInventoryLog_ToClient)); }
    }
    public class PalPlayerUtility : BlueprintFunctionLibrary
    {
        public PalPlayerUtility(nint addr) : base(addr) { }
        public void WritePlayerGrappling(PalNetArchive Blackboard, Vector HitLocatoin, Vector MoveEndLocation, float Speed) { Invoke(nameof(WritePlayerGrappling), Blackboard, HitLocatoin, MoveEndLocation, Speed); }
        public void WritePlayerFeedItemTo(PalNetArchive Blackboard, PalItemSlotId itemSlotId, int itemNum) { Invoke(nameof(WritePlayerFeedItemTo), Blackboard, itemSlotId, itemNum); }
        public void ReadPlayerGrappling(PalNetArchive Blackboard, Vector HitLocatoin, Vector MoveEndLocation, float Speed) { Invoke(nameof(ReadPlayerGrappling), Blackboard, HitLocatoin, MoveEndLocation, Speed); }
        public void ReadPlayerFeedItemTo(PalNetArchive Blackboard, PalItemSlotId itemSlotId, int itemNum) { Invoke(nameof(ReadPlayerFeedItemTo), Blackboard, itemSlotId, itemNum); }
    }
    public class PalPoseableMeshComponent : SkeletalMeshComponent
    {
        public PalPoseableMeshComponent(nint addr) : base(addr) { }
        public void SetBoneTransformByName(Object BoneName, Transform InTransform, byte BoneSpace) { Invoke(nameof(SetBoneTransformByName), BoneName, InTransform, BoneSpace); }
        public void SetBoneScaleByName(Object BoneName, Vector InScale3D, byte BoneSpace) { Invoke(nameof(SetBoneScaleByName), BoneName, InScale3D, BoneSpace); }
        public void SetBoneRotationByName(Object BoneName, Rotator InRotation, byte BoneSpace) { Invoke(nameof(SetBoneRotationByName), BoneName, InRotation, BoneSpace); }
        public void SetBoneLocationByName(Object BoneName, Vector InLocation, byte BoneSpace) { Invoke(nameof(SetBoneLocationByName), BoneName, InLocation, BoneSpace); }
        public void ResetBoneTransformByName(Object BoneName) { Invoke(nameof(ResetBoneTransformByName), BoneName); }
        public Transform GetBoneTransformByName(Object BoneName, byte BoneSpace) { return Invoke<Transform>(nameof(GetBoneTransformByName), BoneName, BoneSpace); }
        public Vector GetBoneScaleByName(Object BoneName, byte BoneSpace) { return Invoke<Vector>(nameof(GetBoneScaleByName), BoneName, BoneSpace); }
        public Rotator GetBoneRotationByName(Object BoneName, byte BoneSpace) { return Invoke<Rotator>(nameof(GetBoneRotationByName), BoneName, BoneSpace); }
        public Vector GetBoneLocationByName(Object BoneName, byte BoneSpace) { return Invoke<Vector>(nameof(GetBoneLocationByName), BoneName, BoneSpace); }
        public void CopyPoseFromSkeletalComponent(SkeletalMeshComponent InComponentToCopy) { Invoke(nameof(CopyPoseFromSkeletalComponent), InComponentToCopy); }
    }
    public class PalPrimaryGameLayoutBase : PrimaryGameLayout
    {
        public PalPrimaryGameLayoutBase(nint addr) : base(addr) { }
        public void ShowLiftIcon() { Invoke(nameof(ShowLiftIcon)); }
        public void ShowFocusCursor(Widget TargetWidget) { Invoke(nameof(ShowFocusCursor), TargetWidget); }
        public void ShowCommonReward(PalUICommonRewardDisplayData RewardDisplayData) { Invoke(nameof(ShowCommonReward), RewardDisplayData); }
        public void ShowCommonItemInfo(PalUICommonItemInfoDisplayData DisplayData) { Invoke(nameof(ShowCommonItemInfo), DisplayData); }
        public void SetupLiftIcon() { Invoke(nameof(SetupLiftIcon)); }
        public void HideLiftIcon() { Invoke(nameof(HideLiftIcon)); }
        public void HideFocusCursor() { Invoke(nameof(HideFocusCursor)); }
        public void HideCommonItemInfo() { Invoke(nameof(HideCommonItemInfo)); }
        public void FadeOut(EPalFadeWidgetLayerType LayerType) { Invoke(nameof(FadeOut), LayerType); }
        public void FadeIn(EPalFadeWidgetLayerType LayerType, PalHUDDispatchParameter_FadeWidget FadeParameter) { Invoke(nameof(FadeIn), LayerType, FadeParameter); }
    }
    public class PalProceduralFoliageComponent : ProceduralFoliageComponent
    {
        public PalProceduralFoliageComponent(nint addr) : base(addr) { }
        public ShapeComponent SpawningShape { get { return this[nameof(SpawningShape)].As<ShapeComponent>(); } set { this["SpawningShape"] = value; } }
    }
    public class PalProgressBar : ProgressBar
    {
        public PalProgressBar(nint addr) : base(addr) { }
        public void SetFillImage(SlateBrush NewImage) { Invoke(nameof(SetFillImage), NewImage); }
    }
    public class PalQuestBlock : Object
    {
        public PalQuestBlock(nint addr) : base(addr) { }
        public Object OnUpdatedBlockDelegate { get { return this[nameof(OnUpdatedBlockDelegate)]; } set { this[nameof(OnUpdatedBlockDelegate)] = value; } }
        public Object OnCompletedBlockDelegate { get { return this[nameof(OnCompletedBlockDelegate)]; } set { this[nameof(OnCompletedBlockDelegate)] = value; } }
        public bool IsAutoComplete { get { return this[nameof(IsAutoComplete)].Flag; } set { this[nameof(IsAutoComplete)].Flag = value; } }
        public void UpdatedBlockDelegate__DelegateSignature(PalQuestBlock UpdatedQuestBlock) { Invoke(nameof(UpdatedBlockDelegate__DelegateSignature), UpdatedQuestBlock); }
        public void Setup() { Invoke(nameof(Setup)); }
        public void OnSetup_ForBP() { Invoke(nameof(OnSetup_ForBP)); }
        public void OnSetup() { Invoke(nameof(OnSetup)); }
        public void OnComplete_ForBP() { Invoke(nameof(OnComplete_ForBP)); }
        public void OnComplete() { Invoke(nameof(OnComplete)); }
        public void GetProgressText(Object OutText) { Invoke(nameof(GetProgressText), OutText); }
        public void GetDescriptionText(Object OutText) { Invoke(nameof(GetDescriptionText), OutText); }
        public void CompletedBlockDelegate__DelegateSignature(PalQuestBlock CompletedQuestBlock) { Invoke(nameof(CompletedBlockDelegate__DelegateSignature), CompletedQuestBlock); }
        public void Complete() { Invoke(nameof(Complete)); }
        public bool CanComplete() { return Invoke<bool>(nameof(CanComplete)); }
        public void CallUpdateBlockDelegate_ForBP() { Invoke(nameof(CallUpdateBlockDelegate_ForBP)); }
    }
    public class PalQuestBlock_BaseCampLevel : PalQuestBlock
    {
        public PalQuestBlock_BaseCampLevel(nint addr) : base(addr) { }
        public int RequireLevel { get { return this[nameof(RequireLevel)].GetValue<int>(); } set { this[nameof(RequireLevel)].SetValue<int>(value); } }
        public int NowBaseCampLevel { get { return this[nameof(NowBaseCampLevel)].GetValue<int>(); } set { this[nameof(NowBaseCampLevel)].SetValue<int>(value); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void OnTimer_CheckBaseCampLevel() { Invoke(nameof(OnTimer_CheckBaseCampLevel)); }
    }
    public class PalQuestBlock_CheckBossDefeat : PalQuestBlock
    {
        public PalQuestBlock_CheckBossDefeat(nint addr) : base(addr) { }
        public EPalBossType CheckBossType { get { return (EPalBossType)this[nameof(CheckBossType)].GetValue<int>(); } set { this[nameof(CheckBossType)].SetValue<int>((int)value); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void CheckFlag() { Invoke(nameof(CheckFlag)); }
    }
    public class PalQuestBlock_CheckPalCaptureNum : PalQuestBlock
    {
        public PalQuestBlock_CheckPalCaptureNum(nint addr) : base(addr) { }
        public int RequireCount { get { return this[nameof(RequireCount)].GetValue<int>(); } set { this[nameof(RequireCount)].SetValue<int>(value); } }
        public PalDataTableRowName_PalMonsterData CountPalName { get { return this[nameof(CountPalName)].As<PalDataTableRowName_PalMonsterData>(); } set { this["CountPalName"] = value; } }
        public int NowCaptureCount { get { return this[nameof(NowCaptureCount)].GetValue<int>(); } set { this[nameof(NowCaptureCount)].SetValue<int>(value); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void CheckCount() { Invoke(nameof(CheckCount)); }
    }
    public class PalQuestBlock_CheckTechnology : PalQuestBlock
    {
        public PalQuestBlock_CheckTechnology(nint addr) : base(addr) { }
        public PalDataTableRowName_RecipeTechnologyData RequireTechnologyName { get { return this[nameof(RequireTechnologyName)].As<PalDataTableRowName_RecipeTechnologyData>(); } set { this["RequireTechnologyName"] = value; } }
        public void OnUnlockedAnyTechnology() { Invoke(nameof(OnUnlockedAnyTechnology)); }
    }
    public class PalQuestBlock_CollectItem : PalQuestBlock
    {
        public PalQuestBlock_CollectItem(nint addr) : base(addr) { }
    }
    public class PalQuestBlock_CountBaseCamp : PalQuestBlock
    {
        public PalQuestBlock_CountBaseCamp(nint addr) : base(addr) { }
        public int RequireCampCount { get { return this[nameof(RequireCampCount)].GetValue<int>(); } set { this[nameof(RequireCampCount)].SetValue<int>(value); } }
        public int NowBaseCampCount { get { return this[nameof(NowBaseCampCount)].GetValue<int>(); } set { this[nameof(NowBaseCampCount)].SetValue<int>(value); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void OnTimer_CheckBaseCamp() { Invoke(nameof(OnTimer_CheckBaseCamp)); }
    }
    public class PalQuestBlock_CountBuild : PalQuestBlock
    {
        public PalQuestBlock_CountBuild(nint addr) : base(addr) { }
        public PalDataTableRowName_MapObjectData RequireBuildObjectName { get { return this[nameof(RequireBuildObjectName)].As<PalDataTableRowName_MapObjectData>(); } set { this["RequireBuildObjectName"] = value; } }
        public int RequireBuildCount { get { return this[nameof(RequireBuildCount)].GetValue<int>(); } set { this[nameof(RequireBuildCount)].SetValue<int>(value); } }
        public int NowBuildCount { get { return this[nameof(NowBuildCount)].GetValue<int>(); } set { this[nameof(NowBuildCount)].SetValue<int>(value); } }
        public int NowBlueprintCount { get { return this[nameof(NowBlueprintCount)].GetValue<int>(); } set { this[nameof(NowBlueprintCount)].SetValue<int>(value); } }
        public Array<Object> CheckMapObjectModels { get { return new Array<Object>(this[nameof(CheckMapObjectModels)].Address); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void OnTimer_CheckMapObject() { Invoke(nameof(OnTimer_CheckMapObject)); }
        public void OnRepMapObjectModel_Client(PalMapObjectModel MapObjectModel) { Invoke(nameof(OnRepMapObjectModel_Client), MapObjectModel); }
        public void OnAddedMapObjectModel_Server(PalMapObjectModel MapObjectModel, Vector Vector) { Invoke(nameof(OnAddedMapObjectModel_Server), MapObjectModel, Vector); }
    }
    public class PalQuestBlock_CountPickupItem : PalQuestBlock
    {
        public PalQuestBlock_CountPickupItem(nint addr) : base(addr) { }
        public int RequireCount { get { return this[nameof(RequireCount)].GetValue<int>(); } set { this[nameof(RequireCount)].SetValue<int>(value); } }
        public PalDataTableRowName_ItemData DetectItemName { get { return this[nameof(DetectItemName)].As<PalDataTableRowName_ItemData>(); } set { this["DetectItemName"] = value; } }
        public int NowPickupCount { get { return this[nameof(NowPickupCount)].GetValue<int>(); } set { this[nameof(NowPickupCount)].SetValue<int>(value); } }
        public void OnPickupItem(Array<PalItemAndNum> ItemInfos) { Invoke(nameof(OnPickupItem), ItemInfos); }
    }
    public class PalQuestBlock_CountWorker : PalQuestBlock
    {
        public PalQuestBlock_CountWorker(nint addr) : base(addr) { }
        public int RequireWorkerCount { get { return this[nameof(RequireWorkerCount)].GetValue<int>(); } set { this[nameof(RequireWorkerCount)].SetValue<int>(value); } }
        public int NowWorkerCount { get { return this[nameof(NowWorkerCount)].GetValue<int>(); } set { this[nameof(NowWorkerCount)].SetValue<int>(value); } }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void OnTimer_CheckBaseCampWorker() { Invoke(nameof(OnTimer_CheckBaseCampWorker)); }
    }
    public class PalQuestBlock_DetectCapturePal : PalQuestBlock
    {
        public PalQuestBlock_DetectCapturePal(nint addr) : base(addr) { }
        public int RequireCount { get { return this[nameof(RequireCount)].GetValue<int>(); } set { this[nameof(RequireCount)].SetValue<int>(value); } }
        public PalDataTableRowName_PalMonsterData DetectPalName { get { return this[nameof(DetectPalName)].As<PalDataTableRowName_PalMonsterData>(); } set { this["DetectPalName"] = value; } }
        public int NowCaptureCount { get { return this[nameof(NowCaptureCount)].GetValue<int>(); } set { this[nameof(NowCaptureCount)].SetValue<int>(value); } }
        public void OnCapturedPal(PalUIPalCaptureInfo CaptureInfo) { Invoke(nameof(OnCapturedPal), CaptureInfo); }
    }
    public class PalQuestBlock_DetectCraft : PalQuestBlock
    {
        public PalQuestBlock_DetectCraft(nint addr) : base(addr) { }
        public int RequireCount { get { return this[nameof(RequireCount)].GetValue<int>(); } set { this[nameof(RequireCount)].SetValue<int>(value); } }
        public PalDataTableRowName_ItemData DetectItemName { get { return this[nameof(DetectItemName)].As<PalDataTableRowName_ItemData>(); } set { this["DetectItemName"] = value; } }
        public int NowCraftNumCount { get { return this[nameof(NowCraftNumCount)].GetValue<int>(); } set { this[nameof(NowCraftNumCount)].SetValue<int>(value); } }
        public void OnCraftItem(Array<PalItemAndNum> ItemInfos) { Invoke(nameof(OnCraftItem), ItemInfos); }
    }
    public class PalQuestBlock_DetectMeal : PalQuestBlock
    {
        public PalQuestBlock_DetectMeal(nint addr) : base(addr) { }
        public int RequireCount { get { return this[nameof(RequireCount)].GetValue<int>(); } set { this[nameof(RequireCount)].SetValue<int>(value); } }
        public int NowMealCount { get { return this[nameof(NowMealCount)].GetValue<int>(); } set { this[nameof(NowMealCount)].SetValue<int>(value); } }
        public void OnTriedMeal() { Invoke(nameof(OnTriedMeal)); }
    }
    public class PalQuestBlock_OpenSurvivalGuide : PalQuestBlock
    {
        public PalQuestBlock_OpenSurvivalGuide(nint addr) : base(addr) { }
        public TimerHandle CheckTimerHandle { get { return this[nameof(CheckTimerHandle)].As<TimerHandle>(); } set { this["CheckTimerHandle"] = value; } }
        public void OnTimer_CheckOpen() { Invoke(nameof(OnTimer_CheckOpen)); }
    }
    public class PalQuestBlock_UseStatusPoint : PalQuestBlock
    {
        public PalQuestBlock_UseStatusPoint(nint addr) : base(addr) { }
        public void OnUpdateStatusPoint() { Invoke(nameof(OnUpdateStatusPoint)); }
    }
    public class PalQuestData : Object
    {
        public PalQuestData(nint addr) : base(addr) { }
        public Object OnUpdatedQuestDelegate { get { return this[nameof(OnUpdatedQuestDelegate)]; } set { this[nameof(OnUpdatedQuestDelegate)] = value; } }
        public Object OnCompletedQuestDelegate { get { return this[nameof(OnCompletedQuestDelegate)]; } set { this[nameof(OnCompletedQuestDelegate)] = value; } }
        public PalQuestBlock NowQuestBlock { get { return this[nameof(NowQuestBlock)].As<PalQuestBlock>(); } set { this["NowQuestBlock"] = value; } }
        public Array<Object> QuestBlockList { get { return new Array<Object>(this[nameof(QuestBlockList)].Address); } }
        public PalCommonQuestRewardData CommonRewardData { get { return this[nameof(CommonRewardData)].As<PalCommonQuestRewardData>(); } set { this["CommonRewardData"] = value; } }
        public Object CustomQuestRewardGiverClass { get { return this[nameof(CustomQuestRewardGiverClass)]; } set { this[nameof(CustomQuestRewardGiverClass)] = value; } }
        public void UpdatedQuestDelegate__DelegateSignature(PalQuestData UpdatedQuest) { Invoke(nameof(UpdatedQuestDelegate__DelegateSignature), UpdatedQuest); }
        public void ProgressInternal() { Invoke(nameof(ProgressInternal)); }
        public void OnUpdatedQuestBlock(PalQuestBlock UpdatedBlock) { Invoke(nameof(OnUpdatedQuestBlock), UpdatedBlock); }
        public void OnCompletedQuestBlock(PalQuestBlock CompletedBlock) { Invoke(nameof(OnCompletedQuestBlock), CompletedBlock); }
        public void Initialize(int BlockIndex, Object InQuestName) { Invoke(nameof(Initialize), BlockIndex, InQuestName); }
        public void GetQuestDataName(Object outName) { Invoke(nameof(GetQuestDataName), outName); }
        public void GetQuestBlock(PalQuestBlock OutBlock) { Invoke(nameof(GetQuestBlock), OutBlock); }
        public int GetNowQuestBlockIndex() { return Invoke<int>(nameof(GetNowQuestBlockIndex)); }
        public void GetCustomRewardGiverClass(Object OutClass) { Invoke(nameof(GetCustomRewardGiverClass), OutClass); }
        public void GetCommonRewardData(PalCommonQuestRewardData OutData) { Invoke(nameof(GetCommonRewardData), OutData); }
        public void CompleteQuestDelegate__DelegateSignature(PalQuestData CompletedQuest) { Invoke(nameof(CompleteQuestDelegate__DelegateSignature), CompletedQuest); }
        public bool CompleteNowBlock() { return Invoke<bool>(nameof(CompleteNowBlock)); }
    }
    public class PalQuestManager : Object
    {
        public PalQuestManager(nint addr) : base(addr) { }
        public Object OnUpdatedQuestDelegate { get { return this[nameof(OnUpdatedQuestDelegate)]; } set { this[nameof(OnUpdatedQuestDelegate)] = value; } }
        public Object OnCompletedQuestDelegate { get { return this[nameof(OnCompletedQuestDelegate)]; } set { this[nameof(OnCompletedQuestDelegate)] = value; } }
        public Object OrderedQuestMap { get { return this[nameof(OrderedQuestMap)]; } set { this[nameof(OrderedQuestMap)] = value; } }
        public Array<Object> CompletedQuestNames { get { return new Array<Object>(this[nameof(CompletedQuestNames)].Address); } }
        public DataTable QuestDataSet { get { return this[nameof(QuestDataSet)].As<DataTable>(); } set { this["QuestDataSet"] = value; } }
        public PalCommonQuestRewardGiver CommonRewardGiver { get { return this[nameof(CommonRewardGiver)].As<PalCommonQuestRewardGiver>(); } set { this["CommonRewardGiver"] = value; } }
        public void UpdatedAnyQuestDelegate__DelegateSignature(PalQuestData UpdatedQuest) { Invoke(nameof(UpdatedAnyQuestDelegate__DelegateSignature), UpdatedQuest); }
        public void OnUpdatedQuest(PalQuestData UpdatedQuest) { Invoke(nameof(OnUpdatedQuest), UpdatedQuest); }
        public void OnCompletedQuest(PalQuestData CompletedQuest) { Invoke(nameof(OnCompletedQuest), CompletedQuest); }
        public bool IsAllQuestComplete() { return Invoke<bool>(nameof(IsAllQuestComplete)); }
        public void CompletedAnyQuestDelegate__DelegateSignature(PalQuestData CompletedQuest) { Invoke(nameof(CompletedAnyQuestDelegate__DelegateSignature), CompletedQuest); }
    }
    public class PalQuestRewardGiver : Object
    {
        public PalQuestRewardGiver(nint addr) : base(addr) { }
        public void TakeReward() { Invoke(nameof(TakeReward)); }
    }
    public class PalCommonQuestRewardGiver : PalQuestRewardGiver
    {
        public PalCommonQuestRewardGiver(nint addr) : base(addr) { }
        public PalCommonQuestRewardData RewardData { get { return this[nameof(RewardData)].As<PalCommonQuestRewardData>(); } set { this["RewardData"] = value; } }
        public void SetCommonRewardData(PalCommonQuestRewardData InRewardList) { Invoke(nameof(SetCommonRewardData), InRewardList); }
    }
    public class PalRadarChartWidgetBase : PalCustomPrimitiveWidget
    {
        public PalRadarChartWidgetBase(nint addr) : base(addr) { }
        public EPalRadarChartDrawType drawType { get { return (EPalRadarChartDrawType)this[nameof(drawType)].GetValue<int>(); } set { this[nameof(drawType)].SetValue<int>((int)value); } }
        public int parameterNum { get { return this[nameof(parameterNum)].GetValue<int>(); } set { this[nameof(parameterNum)].SetValue<int>(value); } }
        public bool isMinMaxValuePerParam { get { return this[nameof(isMinMaxValuePerParam)].Flag; } set { this[nameof(isMinMaxValuePerParam)].Flag = value; } }
        public Array<int> parameterValueMin { get { return new Array<int>(this[nameof(parameterValueMin)].Address); } }
        public Array<int> parameterValueMax { get { return new Array<int>(this[nameof(parameterValueMax)].Address); } }
        public Color fillColor { get { return this[nameof(fillColor)].As<Color>(); } set { this["fillColor"] = value; } }
        public Color maxValuefillColor { get { return this[nameof(maxValuefillColor)].As<Color>(); } set { this["maxValuefillColor"] = value; } }
        public Color BorderColor { get { return this[nameof(BorderColor)].As<Color>(); } set { this["BorderColor"] = value; } }
        public float borderSize { get { return this[nameof(borderSize)].GetValue<float>(); } set { this[nameof(borderSize)].SetValue<float>(value); } }
        public bool isCheckParameterMaxValue { get { return this[nameof(isCheckParameterMaxValue)].Flag; } set { this[nameof(isCheckParameterMaxValue)].Flag = value; } }
        public void SetParameterValue(int Index, int Value) { Invoke(nameof(SetParameterValue), Index, Value); }
        public int GetMinValue(int Index) { return Invoke<int>(nameof(GetMinValue), Index); }
        public int GetMaxValue(int Index) { return Invoke<int>(nameof(GetMaxValue), Index); }
        public void BuildVertexData() { Invoke(nameof(BuildVertexData)); }
    }
    public class PalRagdollPreset : Object
    {
        public PalRagdollPreset(nint addr) : base(addr) { }
        public Array<Object> LockBoneNames { get { return new Array<Object>(this[nameof(LockBoneNames)].Address); } }
        public float LinearDamping { get { return this[nameof(LinearDamping)].GetValue<float>(); } set { this[nameof(LinearDamping)].SetValue<float>(value); } }
        public float AngularDamping { get { return this[nameof(AngularDamping)].GetValue<float>(); } set { this[nameof(AngularDamping)].SetValue<float>(value); } }
    }
    public class PalRandomIncidentActionBase : Object
    {
        public PalRandomIncidentActionBase(nint addr) : base(addr) { }
        public Object OnRandomIncidentActionNotify { get { return this[nameof(OnRandomIncidentActionNotify)]; } set { this[nameof(OnRandomIncidentActionNotify)] = value; } }
        public bool bIsTickable { get { return this[nameof(bIsTickable)].Flag; } set { this[nameof(bIsTickable)].Flag = value; } }
        public void Terminate() { Invoke(nameof(Terminate)); }
        public void Start() { Invoke(nameof(Start)); }
        public void SetTickable(bool isTickable) { Invoke(nameof(SetTickable), isTickable); }
        public void SendNotify(EPalRandomIncidentActionNotifyType NotifyType) { Invoke(nameof(SendNotify), NotifyType); }
        public void OnTick(float DeltaTime) { Invoke(nameof(OnTick), DeltaTime); }
        public void OnTerminate() { Invoke(nameof(OnTerminate)); }
        public void OnStart() { Invoke(nameof(OnStart)); }
        public void OnRandomIncidentActionNotify__DelegateSignature(EPalRandomIncidentActionNotifyType NotifyType) { Invoke(nameof(OnRandomIncidentActionNotify__DelegateSignature), NotifyType); }
        public void OnInitialized() { Invoke(nameof(OnInitialized)); }
        public void OnAllNpcSpawned() { Invoke(nameof(OnAllNpcSpawned)); }
        public void Initialize() { Invoke(nameof(Initialize)); }
    }
    public class PalRandomIncidentBase : PalIncidentBase
    {
        public PalRandomIncidentBase(nint addr) : base(addr) { }
        public Object OnEnterAnyArea { get { return this[nameof(OnEnterAnyArea)]; } set { this[nameof(OnEnterAnyArea)] = value; } }
        public Object OnExitAnyArea { get { return this[nameof(OnExitAnyArea)]; } set { this[nameof(OnExitAnyArea)] = value; } }
        public bool bIsFinishWithIncidentSpawner { get { return this[nameof(bIsFinishWithIncidentSpawner)].Flag; } set { this[nameof(bIsFinishWithIncidentSpawner)].Flag = value; } }
        public EPalRandomIncidentSpawnerAreaType PrevEnterArea { get { return (EPalRandomIncidentSpawnerAreaType)this[nameof(PrevEnterArea)].GetValue<int>(); } set { this[nameof(PrevEnterArea)].SetValue<int>((int)value); } }
        public void SetDisableFlagForNPCSpawner(Vector Center, float Radius, Object Name, bool isDisable) { Invoke(nameof(SetDisableFlagForNPCSpawner), Center, Radius, Name, isDisable); }
        public void OnExitAnyArea__DelegateSignature(EPalRandomIncidentSpawnerAreaType AreaType, int PlayerId) { Invoke(nameof(OnExitAnyArea__DelegateSignature), AreaType, PlayerId); }
        public void OnEnterAnyArea__DelegateSignature(EPalRandomIncidentSpawnerAreaType AreaType, int PlayerId) { Invoke(nameof(OnEnterAnyArea__DelegateSignature), AreaType, PlayerId); }
        public bool IsOutbreakTable(DataTable Table) { return Invoke<bool>(nameof(IsOutbreakTable), Table); }
        public bool IsFinishWithIncidentSpawner() { return Invoke<bool>(nameof(IsFinishWithIncidentSpawner)); }
        public int GetPlayerId() { return Invoke<int>(nameof(GetPlayerId)); }
        public PalRandomIncidentNPCSpawner GetNPCSpawner() { return Invoke<PalRandomIncidentNPCSpawner>(nameof(GetNPCSpawner)); }
        public void CreateSpawnMonsterDataListFromOutbreakRow(DataTable Table, Array<PalRandomIncidentSpawnMonsterData> OutMonsterList, Array<Object> Names) { Invoke(nameof(CreateSpawnMonsterDataListFromOutbreakRow), Table, OutMonsterList, Names); }
        public void BroadcastOnEnterAreaAndOnExitArea(int PlayerId) { Invoke(nameof(BroadcastOnEnterAreaAndOnExitArea), PlayerId); }
    }
    public class PalRandomIncidentLotteryBase : Object
    {
        public PalRandomIncidentLotteryBase(nint addr) : base(addr) { }
        public float LotteryRate { get { return this[nameof(LotteryRate)].GetValue<float>(); } set { this[nameof(LotteryRate)].SetValue<float>(value); } }
        public Array<PalRandomIncidentSpawnIncidentParameter> LotteryParameters { get { return new Array<PalRandomIncidentSpawnIncidentParameter>(this[nameof(LotteryParameters)].Address); } }
        public bool LotteryIncident(PalRandomIncidentSpawnIncidentParameter OutResult) { return Invoke<bool>(nameof(LotteryIncident), OutResult); }
        public float GetLotteryRate() { return Invoke<float>(nameof(GetLotteryRate)); }
        public int GetLotteryParameters(Array<PalRandomIncidentSpawnIncidentParameter> OutParam) { return Invoke<int>(nameof(GetLotteryParameters), OutParam); }
    }
    public class PalRandomIncidentNPCSpawner : PalNPCSpawnerBase
    {
        public PalRandomIncidentNPCSpawner(nint addr) : base(addr) { }
        public Object OnNPCSpawnedDelegate { get { return this[nameof(OnNPCSpawnedDelegate)]; } set { this[nameof(OnNPCSpawnedDelegate)] = value; } }
        public Object OnNPCDespawnedDelegate { get { return this[nameof(OnNPCDespawnedDelegate)]; } set { this[nameof(OnNPCDespawnedDelegate)] = value; } }
        public Object GroupMap { get { return this[nameof(GroupMap)]; } set { this[nameof(GroupMap)] = value; } }
        public void SpawnNPC(Object RowName, PalRandomIncidentSpawnNPCData SpawnData, int SpawnPointIndex, int SpawnPointCount) { Invoke(nameof(SpawnNPC), RowName, SpawnData, SpawnPointIndex, SpawnPointCount); }
        public void SpawnMonster(Object RowName, PalRandomIncidentSpawnMonsterData SpawnData, int SpawnPointIndex, int SpawnPointCount) { Invoke(nameof(SpawnMonster), RowName, SpawnData, SpawnPointIndex, SpawnPointCount); }
        public void RequestCreateGroups(Array<int> Groups) { Invoke(nameof(RequestCreateGroups), Groups); }
        public void NPCSpawned__DelegateSignature(Object RowName) { Invoke(nameof(NPCSpawned__DelegateSignature), RowName); }
        public void NPCDespawned__DelegateSignature(Object RowName) { Invoke(nameof(NPCDespawned__DelegateSignature), RowName); }
        public bool IsSpawnedCharacter(PalIndividualCharacterHandle Handle) { return Invoke<bool>(nameof(IsSpawnedCharacter), Handle); }
        public void GetSpawnedCharacters(Array<Actor> SpawnedCharacters) { Invoke(nameof(GetSpawnedCharacters), SpawnedCharacters); }
        public PalIndividualCharacterHandle FindIndividualCharacterHandleByName(Object RowNames, Object Name) { return Invoke<PalIndividualCharacterHandle>(nameof(FindIndividualCharacterHandleByName), RowNames, Name); }
        public PalCharacter FindCharacterByName(Object Name) { return Invoke<PalCharacter>(nameof(FindCharacterByName), Name); }
        public void DespawnCharacters() { Invoke(nameof(DespawnCharacters)); }
        public void AddGroupCharacterByGroupNo(PalIndividualCharacterHandle AddIndividualHandle, int GroupNo) { Invoke(nameof(AddGroupCharacterByGroupNo), AddIndividualHandle, GroupNo); }
    }
    public class PalRandomIncidentSpawnerBase : Actor
    {
        public PalRandomIncidentSpawnerBase(nint addr) : base(addr) { }
        public Object WalkPointRefarences { get { return this[nameof(WalkPointRefarences)]; } set { this[nameof(WalkPointRefarences)] = value; } }
        public Object LotteryClass { get { return this[nameof(LotteryClass)]; } set { this[nameof(LotteryClass)] = value; } }
        public float CoolDownTimeMinute { get { return this[nameof(CoolDownTimeMinute)].GetValue<float>(); } set { this[nameof(CoolDownTimeMinute)].SetValue<float>(value); } }
        public double CoolDownTimeSecRemain { get { return this[nameof(CoolDownTimeSecRemain)].GetValue<double>(); } set { this[nameof(CoolDownTimeSecRemain)].SetValue<double>(value); } }
        public Object AreaRadius { get { return this[nameof(AreaRadius)]; } set { this[nameof(AreaRadius)] = value; } }
        public int PlayerId { get { return this[nameof(PlayerId)].GetValue<int>(); } set { this[nameof(PlayerId)].SetValue<int>(value); } }
        public PalIncidentBase ExecIncident { get { return this[nameof(ExecIncident)].As<PalIncidentBase>(); } set { this["ExecIncident"] = value; } }
        public EPalRandomIncidentSpawnerStatus Status { get { return (EPalRandomIncidentSpawnerStatus)this[nameof(Status)].GetValue<int>(); } set { this[nameof(Status)].SetValue<int>((int)value); } }
        public PalIncidentDynamicParameterRandom Parameter { get { return this[nameof(Parameter)].As<PalIncidentDynamicParameterRandom>(); } set { this["Parameter"] = value; } }
        public PalRandomIncidentLotteryBase Lottery { get { return this[nameof(Lottery)].As<PalRandomIncidentLotteryBase>(); } set { this["Lottery"] = value; } }
        public void UpdateStatusWaitPlayerOutside(float DeltaTime) { Invoke(nameof(UpdateStatusWaitPlayerOutside), DeltaTime); }
        public void UpdateStatusIdle(float DeltaTime) { Invoke(nameof(UpdateStatusIdle), DeltaTime); }
        public void UpdateStatusExecuting(float DeltaTime) { Invoke(nameof(UpdateStatusExecuting), DeltaTime); }
        public void UpdateStatusCoolDown(float DeltaTime) { Invoke(nameof(UpdateStatusCoolDown), DeltaTime); }
        public void StartCoolDown() { Invoke(nameof(StartCoolDown)); }
        public void SetStatus(EPalRandomIncidentSpawnerStatus NewStatus) { Invoke(nameof(SetStatus), NewStatus); }
        public void SetAreaRadius(EPalRandomIncidentSpawnerAreaType AreaType, float Radius) { Invoke(nameof(SetAreaRadius), AreaType, Radius); }
        public void OnIncidentSpawned(PalIncidentBase Incident, PalIncidentDynamicParameterRandom DynamicParameter) { Invoke(nameof(OnIncidentSpawned), Incident, DynamicParameter); }
        public bool IsInsideArea(EPalRandomIncidentSpawnerAreaType Area, Character pPlayer) { return Invoke<bool>(nameof(IsInsideArea), Area, pPlayer); }
        public Object GetAreaRadiusAll() { return Invoke<Object>(nameof(GetAreaRadiusAll)); }
        public float GetAreaRadius(EPalRandomIncidentSpawnerAreaType AreaType) { return Invoke<float>(nameof(GetAreaRadius), AreaType); }
        public PalCharacter FindPlayerInsideArea(EPalRandomIncidentSpawnerAreaType AreaType) { return Invoke<PalCharacter>(nameof(FindPlayerInsideArea), AreaType); }
        public void EndIncident() { Invoke(nameof(EndIncident)); }
        public void DestroyUnuseActors(Array<Actor> OutList) { Invoke(nameof(DestroyUnuseActors), OutList); }
        public void CreateWalkPathList() { Invoke(nameof(CreateWalkPathList)); }
        public void CollectWalkPoints(Array<Actor> WalkPoints) { Invoke(nameof(CollectWalkPoints), WalkPoints); }
        public void CollectChildActors(Array<Actor> OutList) { Invoke(nameof(CollectChildActors), OutList); }
        public void AddWalkPath(Object PathName, Array<Actor> PointList) { Invoke(nameof(AddWalkPath), PathName, PointList); }
    }
    public class PalRCONSubsystem : GameInstanceSubsystem
    {
        public PalRCONSubsystem(nint addr) : base(addr) { }
    }
    public class PalRecastNavMesh : RecastNavMesh
    {
        public PalRecastNavMesh(nint addr) : base(addr) { }
    }
    public class PalRecordTrigger_BossBattle : PalPlayerRecordDataTrigger
    {
        public PalRecordTrigger_BossBattle(nint addr) : base(addr) { }
        public void OnLocalPlayerBossBattleSuccessed(PalPlayerCharacter LocalPlayer, EPalBossType BossType) { Invoke(nameof(OnLocalPlayerBossBattleSuccessed), LocalPlayer, BossType); }
    }
    public class PalRegionAreaTriggerBase : Actor
    {
        public PalRegionAreaTriggerBase(nint addr) : base(addr) { }
        public Object BindRegionNameMsgID { get { return this[nameof(BindRegionNameMsgID)]; } set { this[nameof(BindRegionNameMsgID)] = value; } }
        public void OnOverlap(Actor OtherActor) { Invoke(nameof(OnOverlap), OtherActor); }
        public void OnEndOverlap(Actor OtherActor) { Invoke(nameof(OnEndOverlap), OtherActor); }
    }
    public class PalReplaceSetting : Object
    {
        public PalReplaceSetting(nint addr) : base(addr) { }
        public Object CharacterIDReplacer { get { return this[nameof(CharacterIDReplacer)]; } set { this[nameof(CharacterIDReplacer)] = value; } }
    }
    public class PalReplicationGraph : ReplicationGraph
    {
        public PalReplicationGraph(nint addr) : base(addr) { }
        public Array<Object> SpatializedClasses { get { return new Array<Object>(this[nameof(SpatializedClasses)].Address); } }
        public Array<Object> NonSpatializedChildClasses { get { return new Array<Object>(this[nameof(NonSpatializedChildClasses)].Address); } }
        public Array<Object> AlwaysRelevantClasses { get { return new Array<Object>(this[nameof(AlwaysRelevantClasses)].Address); } }
        public ReplicationGraphNode_GridSpatialization2D GridNode { get { return this[nameof(GridNode)].As<ReplicationGraphNode_GridSpatialization2D>(); } set { this["GridNode"] = value; } }
        public ReplicationGraphNode_ActorList AlwaysRelevantNode { get { return this[nameof(AlwaysRelevantNode)].As<ReplicationGraphNode_ActorList>(); } set { this["AlwaysRelevantNode"] = value; } }
    }
    public class PalReplicationGraphNode_AlwaysRelevant_ForConnection : ReplicationGraphNode
    {
        public PalReplicationGraphNode_AlwaysRelevant_ForConnection(nint addr) : base(addr) { }
        public Actor LastPawn { get { return this[nameof(LastPawn)].As<Actor>(); } set { this["LastPawn"] = value; } }
        public Array<AlwaysRelevantActorInfo> PastRelevantActors { get { return new Array<AlwaysRelevantActorInfo>(this[nameof(PastRelevantActors)].Address); } }
    }
    public class PalReplicationGraphNode_PlayerStateFrequencyLimiter : ReplicationGraphNode
    {
        public PalReplicationGraphNode_PlayerStateFrequencyLimiter(nint addr) : base(addr) { }
    }
    public class PalRetainerBox : RetainerBox
    {
        public PalRetainerBox(nint addr) : base(addr) { }
    }
    public class PalReticleTargetableInterface : Interface
    {
        public PalReticleTargetableInterface(nint addr) : base(addr) { }
        public bool IsShowOutlineInReticleTargetting() { return Invoke<bool>(nameof(IsShowOutlineInReticleTargetting)); }
    }
    public class PalReticleTargetUtility : Object
    {
        public PalReticleTargetUtility(nint addr) : base(addr) { }
    }
    public class PalRichTextBlockBase : CommonRichTextBlock
    {
        public PalRichTextBlockBase(nint addr) : base(addr) { }
        public DataTableRowHandle BindTextDatatableHandle { get { return this[nameof(BindTextDatatableHandle)].As<DataTableRowHandle>(); } set { this["BindTextDatatableHandle"] = value; } }
        public bool IsAutoTextSetWhenWidgetRebuilt { get { return this[nameof(IsAutoTextSetWhenWidgetRebuilt)].Flag; } set { this[nameof(IsAutoTextSetWhenWidgetRebuilt)].Flag = value; } }
        public Object DefaultStyleName { get { return this[nameof(DefaultStyleName)]; } set { this[nameof(DefaultStyleName)] = value; } }
        public bool IsAutoAdjustScale { get { return this[nameof(IsAutoAdjustScale)].Flag; } set { this[nameof(IsAutoAdjustScale)].Flag = value; } }
        public int MaxWidth { get { return this[nameof(MaxWidth)].GetValue<int>(); } set { this[nameof(MaxWidth)].SetValue<int>(value); } }
        public void SetText_GDKInternal(bool IsSuccess, Object OutString) { Invoke(nameof(SetText_GDKInternal), IsSuccess, OutString); }
        public void Left(int Count, Object OutText) { Invoke(nameof(Left), Count, OutText); }
        public int GetTextLengthWithoutTag() { return Invoke<int>(nameof(GetTextLengthWithoutTag)); }
        public Object GetBindedOriginalText() { return Invoke<Object>(nameof(GetBindedOriginalText)); }
    }
    public class PalRichTextDecorator_TagText : RichTextBlockDecorator
    {
        public PalRichTextDecorator_TagText(nint addr) : base(addr) { }
        public Object GetTextStringInternal(Object WorldContextObject, Object ID) { return Invoke<Object>(nameof(GetTextStringInternal), WorldContextObject, ID); }
        public Object GetTagName() { return Invoke<Object>(nameof(GetTagName)); }
    }
    public class PalRichTextIconDecorator : RichTextBlockImageDecorator
    {
        public PalRichTextIconDecorator(nint addr) : base(addr) { }
        public DataTable ControlKeyIconData { get { return this[nameof(ControlKeyIconData)].As<DataTable>(); } set { this["ControlKeyIconData"] = value; } }
    }
    public class PalRideMarkerComponent : StaticMeshComponent
    {
        public PalRideMarkerComponent(nint addr) : base(addr) { }
        public EPalRidePositionType RidePositionType { get { return (EPalRidePositionType)this[nameof(RidePositionType)].GetValue<int>(); } set { this[nameof(RidePositionType)].SetValue<int>((int)value); } }
        public bool bIsAdjustRotation { get { return this[nameof(bIsAdjustRotation)].Flag; } set { this[nameof(bIsAdjustRotation)].Flag = value; } }
        public bool bIsFixScale { get { return this[nameof(bIsFixScale)].Flag; } set { this[nameof(bIsFixScale)].Flag = value; } }
        public bool bHiddenCharacterWhenAim { get { return this[nameof(bHiddenCharacterWhenAim)].Flag; } set { this[nameof(bHiddenCharacterWhenAim)].Flag = value; } }
        public bool bDisableLookAtByRide { get { return this[nameof(bDisableLookAtByRide)].Flag; } set { this[nameof(bDisableLookAtByRide)].Flag = value; } }
        public bool bDisableFullBodyIK_UniqueRide { get { return this[nameof(bDisableFullBodyIK_UniqueRide)].Flag; } set { this[nameof(bDisableFullBodyIK_UniqueRide)].Flag = value; } }
        public Object UniqueRidePalWeaponClass { get { return this[nameof(UniqueRidePalWeaponClass)]; } set { this[nameof(UniqueRidePalWeaponClass)] = value; } }
        public PalDataTableRowName_PalMonsterData UniqueRidePalID { get { return this[nameof(UniqueRidePalID)].As<PalDataTableRowName_PalMonsterData>(); } set { this["UniqueRidePalID"] = value; } }
        public Object OnChangeRiding { get { return this[nameof(OnChangeRiding)]; } set { this[nameof(OnChangeRiding)] = value; } }
        public Object Rider { get { return this[nameof(Rider)]; } set { this[nameof(Rider)] = value; } }
        public PalActiveSkillSlot SkillSlot { get { return this[nameof(SkillSlot)].As<PalActiveSkillSlot>(); } set { this["SkillSlot"] = value; } }
        public PalUniqueRideWeaponBase WeaponActor { get { return this[nameof(WeaponActor)].As<PalUniqueRideWeaponBase>(); } set { this["WeaponActor"] = value; } }
        public void SyncActiveSkill(PalIndividualCharacterParameter IndividualParameter) { Invoke(nameof(SyncActiveSkill), IndividualParameter); }
        public void SetVisibleWeapon() { Invoke(nameof(SetVisibleWeapon)); }
        public void SetRidingFlag(bool bIsEnable) { Invoke(nameof(SetRidingFlag), bIsEnable); }
        public bool IsRiding() { return Invoke<bool>(nameof(IsRiding)); }
        public bool IsAdjustRotation() { return Invoke<bool>(nameof(IsAdjustRotation)); }
        public Transform GetRideSocketTransform(byte space) { return Invoke<Transform>(nameof(GetRideSocketTransform), space); }
        public PalCharacter GetRiderCharacter() { return Invoke<PalCharacter>(nameof(GetRiderCharacter)); }
        public Object GetAttackSocketName() { return Invoke<Object>(nameof(GetAttackSocketName)); }
        public PalActiveSkillSlot GetActiveSkillSlot() { return Invoke<PalActiveSkillSlot>(nameof(GetActiveSkillSlot)); }
        public void ChangeRiding__DelegateSignature(bool isEnable) { Invoke(nameof(ChangeRiding__DelegateSignature), isEnable); }
        public void CameraChangeActorActive(bool Active) { Invoke(nameof(CameraChangeActorActive), Active); }
    }
    public class PalRiderComponent : ActorComponent
    {
        public PalRiderComponent(nint addr) : base(addr) { }
        public Object OnRide { get { return this[nameof(OnRide)]; } set { this[nameof(OnRide)] = value; } }
        public Object OnGetOff { get { return this[nameof(OnGetOff)]; } set { this[nameof(OnGetOff)] = value; } }
        public Object RidingMarker { get { return this[nameof(RidingMarker)]; } set { this[nameof(RidingMarker)] = value; } }
        public Object RideActionMap { get { return this[nameof(RideActionMap)]; } set { this[nameof(RideActionMap)] = value; } }
        public Controller FullRidePalController { get { return this[nameof(FullRidePalController)].As<Controller>(); } set { this["FullRidePalController"] = value; } }
        public AnimMontage RideShakingMontage { get { return this[nameof(RideShakingMontage)].As<AnimMontage>(); } set { this["RideShakingMontage"] = value; } }
        public FlagContainer DisableRide { get { return this[nameof(DisableRide)].As<FlagContainer>(); } set { this["DisableRide"] = value; } }
        public FlagContainer DisableGetOff { get { return this[nameof(DisableGetOff)].As<FlagContainer>(); } set { this["DisableGetOff"] = value; } }
        public FlagContainer DisableAdjustRotation { get { return this[nameof(DisableAdjustRotation)].As<FlagContainer>(); } set { this["DisableAdjustRotation"] = value; } }
        public Vector DefaultMeshLocation { get { return this[nameof(DefaultMeshLocation)].As<Vector>(); } set { this["DefaultMeshLocation"] = value; } }
        public FlagContainer DisableUniqueRideIK { get { return this[nameof(DisableUniqueRideIK)].As<FlagContainer>(); } set { this["DisableUniqueRideIK"] = value; } }
        public float DefaultJumpZVelocity { get { return this[nameof(DefaultJumpZVelocity)].GetValue<float>(); } set { this[nameof(DefaultJumpZVelocity)].SetValue<float>(value); } }
        public Object BackRideLimit { get { return this[nameof(BackRideLimit)]; } set { this[nameof(BackRideLimit)] = value; } }
        public Object UniqueRideAnimBPClassMap { get { return this[nameof(UniqueRideAnimBPClassMap)]; } set { this[nameof(UniqueRideAnimBPClassMap)] = value; } }
        public Object UniqueRideAnimeAssetMap { get { return this[nameof(UniqueRideAnimeAssetMap)]; } set { this[nameof(UniqueRideAnimeAssetMap)] = value; } }
        public void StopShakingMontage() { Invoke(nameof(StopShakingMontage)); }
        public void SetRideMarker(PalRideMarkerComponent Marker) { Invoke(nameof(SetRideMarker), Marker); }
        public void SetDisableUniqueRideIK(Object flagName, bool isDisable) { Invoke(nameof(SetDisableUniqueRideIK), flagName, isDisable); }
        public void SetDisableRide(Object flagName, bool bIsDisable) { Invoke(nameof(SetDisableRide), flagName, bIsDisable); }
        public void SetDisableGetOff(Object flagName, bool bIsDisable) { Invoke(nameof(SetDisableGetOff), flagName, bIsDisable); }
        public void SetDisableAdjustRotation(Object flagName, bool bIsDisable) { Invoke(nameof(SetDisableAdjustRotation), flagName, bIsDisable); }
        public void SetDefaultMeshLocation(Vector Location) { Invoke(nameof(SetDefaultMeshLocation), Location); }
        public void RideClientRep(PalRideMarkerComponent Marker) { Invoke(nameof(RideClientRep), Marker); }
        public bool Ride(PalRideMarkerComponent Marker, bool bIsSkipAnimation) { return Invoke<bool>(nameof(Ride), Marker, bIsSkipAnimation); }
        public void PlayShakingMontage(AnimMontage overrideMontage, float PlayRate) { Invoke(nameof(PlayShakingMontage), overrideMontage, PlayRate); }
        public void OnStartInteractInClient(Object Object) { Invoke(nameof(OnStartInteractInClient), Object); }
        public void OnStartInteractForServer() { Invoke(nameof(OnStartInteractForServer)); }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnSleepPlayer(int LastDamage) { Invoke(nameof(OnSleepPlayer), LastDamage); }
        public void OnSleep(int LastDamage) { Invoke(nameof(OnSleep), LastDamage); }
        public void OnRide__DelegateSignature(Actor RideActor) { Invoke(nameof(OnRide__DelegateSignature), RideActor); }
        public void OnInactive() { Invoke(nameof(OnInactive)); }
        public void OnGetOff__DelegateSignature(Actor RideActor) { Invoke(nameof(OnGetOff__DelegateSignature), RideActor); }
        public void OnEndInteractInClient() { Invoke(nameof(OnEndInteractInClient)); }
        public void OnEndInteractForServer() { Invoke(nameof(OnEndInteractForServer)); }
        public void OnEndAim() { Invoke(nameof(OnEndAim)); }
        public void OnDeadPlayer(PalDeadInfo DeadInfo) { Invoke(nameof(OnDeadPlayer), DeadInfo); }
        public void OnDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnDead), DeadInfo); }
        public void OnChangeActive(bool IsActive) { Invoke(nameof(OnChangeActive), IsActive); }
        public void OnCaptureStart() { Invoke(nameof(OnCaptureStart)); }
        public bool IsRiding() { return Invoke<bool>(nameof(IsRiding)); }
        public bool IsDisableRide() { return Invoke<bool>(nameof(IsDisableRide)); }
        public bool IsDisableGetOff() { return Invoke<bool>(nameof(IsDisableGetOff)); }
        public bool IsDisableAdjustRotation() { return Invoke<bool>(nameof(IsDisableAdjustRotation)); }
        public PalUniqueRideAnimeAssetBase GetUniqueRideAnimeAsset() { return Invoke<PalUniqueRideAnimeAssetBase>(nameof(GetUniqueRideAnimeAsset)); }
        public Actor GetRindingActor() { return Invoke<Actor>(nameof(GetRindingActor)); }
        public bool GetRiderModelIsBackward() { return Invoke<bool>(nameof(GetRiderModelIsBackward)); }
        public PalRideMarkerComponent GetRideMarker() { return Invoke<PalRideMarkerComponent>(nameof(GetRideMarker)); }
        public bool GetOff(bool bIsSkipAnimation, bool bNoAnimCancel) { return Invoke<bool>(nameof(GetOff), bIsSkipAnimation, bNoAnimCancel); }
        public Vector GetDefaultMeshLocation() { return Invoke<Vector>(nameof(GetDefaultMeshLocation)); }
        public EPalRidePositionType GetCurrentRidePositionType() { return Invoke<EPalRidePositionType>(nameof(GetCurrentRidePositionType)); }
        public void DettachRiderNoAnimation() { Invoke(nameof(DettachRiderNoAnimation)); }
        public void DettachRider() { Invoke(nameof(DettachRider)); }
        public bool CanUniqueRideIK() { return Invoke<bool>(nameof(CanUniqueRideIK)); }
        public void AttachRiderNoAnimation() { Invoke(nameof(AttachRiderNoAnimation)); }
        public bool AttachRider() { return Invoke<bool>(nameof(AttachRider)); }
    }
    public class PalWorldBaseInfoSaveDataUtility : BlueprintFunctionLibrary
    {
        public PalWorldBaseInfoSaveDataUtility(nint addr) : base(addr) { }
        public Object GetWorldName(PalWorldBaseInfoSaveData SaveData) { return Invoke<Object>(nameof(GetWorldName), SaveData); }
    }
    public class PalLocalWorldSaveGame : SaveGame
    {
        public PalLocalWorldSaveGame(nint addr) : base(addr) { }
        public int Version { get { return this[nameof(Version)].GetValue<int>(); } set { this[nameof(Version)].SetValue<int>(value); } }
        public PalLocalSaveData SaveData { get { return this[nameof(SaveData)].As<PalLocalSaveData>(); } set { this["SaveData"] = value; } }
    }
    public class PalWorldBaseInfoSaveGame : SaveGame
    {
        public PalWorldBaseInfoSaveGame(nint addr) : base(addr) { }
        public int Version { get { return this[nameof(Version)].GetValue<int>(); } set { this[nameof(Version)].SetValue<int>(value); } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public PalWorldBaseInfoSaveData SaveData { get { return this[nameof(SaveData)].As<PalWorldBaseInfoSaveData>(); } set { this["SaveData"] = value; } }
    }
    public class PalWorldSaveGame : SaveGame
    {
        public PalWorldSaveGame(nint addr) : base(addr) { }
        public int Version { get { return this[nameof(Version)].GetValue<int>(); } set { this[nameof(Version)].SetValue<int>(value); } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public PalWorldSaveData worldSaveData { get { return this[nameof(worldSaveData)].As<PalWorldSaveData>(); } set { this["worldSaveData"] = value; } }
    }
    public class PalWorldPlayerSaveGame : SaveGame
    {
        public PalWorldPlayerSaveGame(nint addr) : base(addr) { }
        public int Version { get { return this[nameof(Version)].GetValue<int>(); } set { this[nameof(Version)].SetValue<int>(value); } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public PalWorldPlayerSaveData SaveData { get { return this[nameof(SaveData)].As<PalWorldPlayerSaveData>(); } set { this["SaveData"] = value; } }
    }
    public class PalWorldOptionSaveGame : SaveGame
    {
        public PalWorldOptionSaveGame(nint addr) : base(addr) { }
        public int Version { get { return this[nameof(Version)].GetValue<int>(); } set { this[nameof(Version)].SetValue<int>(value); } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public PalOptionWorldSaveData OptionWorldData { get { return this[nameof(OptionWorldData)].As<PalOptionWorldSaveData>(); } set { this["OptionWorldData"] = value; } }
    }
    public class PalGameWorldDataSaveInterface : Interface
    {
        public PalGameWorldDataSaveInterface(nint addr) : base(addr) { }
    }
    public class PalGamePlayerDataSaveInterface : Interface
    {
        public PalGamePlayerDataSaveInterface(nint addr) : base(addr) { }
    }
    public class PalSaveGameManager : Object
    {
        public PalSaveGameManager(nint addr) : base(addr) { }
        public Object OnStartedWorldAutoSave { get { return this[nameof(OnStartedWorldAutoSave)]; } set { this[nameof(OnStartedWorldAutoSave)] = value; } }
        public Object OnEndedWorldAutoSave { get { return this[nameof(OnEndedWorldAutoSave)]; } set { this[nameof(OnEndedWorldAutoSave)] = value; } }
        public Object OnStartedLocalWorldAutoSave { get { return this[nameof(OnStartedLocalWorldAutoSave)]; } set { this[nameof(OnStartedLocalWorldAutoSave)] = value; } }
        public Object OnEndedLocalWorldAutoSave { get { return this[nameof(OnEndedLocalWorldAutoSave)]; } set { this[nameof(OnEndedLocalWorldAutoSave)] = value; } }
        public Object OnStartedPlayerAutoSave { get { return this[nameof(OnStartedPlayerAutoSave)]; } set { this[nameof(OnStartedPlayerAutoSave)] = value; } }
        public Object OnEndedPlayerAutoSave { get { return this[nameof(OnEndedPlayerAutoSave)]; } set { this[nameof(OnEndedPlayerAutoSave)] = value; } }
        public PalWorldSaveGame LoadedWorldSaveData { get { return this[nameof(LoadedWorldSaveData)].As<PalWorldSaveGame>(); } set { this["LoadedWorldSaveData"] = value; } }
        public PalLocalWorldSaveGame LoadedLocalWorldSaveData { get { return this[nameof(LoadedLocalWorldSaveData)].As<PalLocalWorldSaveGame>(); } set { this["LoadedLocalWorldSaveData"] = value; } }
        public PalWorldOptionSaveGame LoadedWorldOptionSaveData { get { return this[nameof(LoadedWorldOptionSaveData)].As<PalWorldOptionSaveGame>(); } set { this["LoadedWorldOptionSaveData"] = value; } }
        public TimerHandle AutoSaveWorldDataTimerHandle { get { return this[nameof(AutoSaveWorldDataTimerHandle)].As<TimerHandle>(); } set { this["AutoSaveWorldDataTimerHandle"] = value; } }
        public TimerHandle AutoSaveLocalWorldDataTimerHandle { get { return this[nameof(AutoSaveLocalWorldDataTimerHandle)].As<TimerHandle>(); } set { this["AutoSaveLocalWorldDataTimerHandle"] = value; } }
        public Object AutoSaveWorldDefaultName { get { return this[nameof(AutoSaveWorldDefaultName)]; } set { this[nameof(AutoSaveWorldDefaultName)] = value; } }
        public Array<Object> GameSavers { get { return new Array<Object>(this[nameof(GameSavers)].Address); } }
        public Object PlayerDataSaver { get { return this[nameof(PlayerDataSaver)]; } set { this[nameof(PlayerDataSaver)] = value; } }
        public bool IsAppliedPlayerSaveData { get { return this[nameof(IsAppliedPlayerSaveData)].Flag; } set { this[nameof(IsAppliedPlayerSaveData)].Flag = value; } }
        public PalAsyncSaveProcessParallel WorldSaveProcess { get { return this[nameof(WorldSaveProcess)].As<PalAsyncSaveProcessParallel>(); } set { this["WorldSaveProcess"] = value; } }
        public bool bIsForceDisableAutoSave { get { return this[nameof(bIsForceDisableAutoSave)].Flag; } set { this[nameof(bIsForceDisableAutoSave)].Flag = value; } }
        public bool bIsUseBackupSaveData { get { return this[nameof(bIsUseBackupSaveData)].Flag; } set { this[nameof(bIsUseBackupSaveData)].Flag = value; } }
        public int NearSaveBackupNum { get { return this[nameof(NearSaveBackupNum)].GetValue<int>(); } set { this[nameof(NearSaveBackupNum)].SetValue<int>(value); } }
        public int MinutesSaveBackupNum { get { return this[nameof(MinutesSaveBackupNum)].GetValue<int>(); } set { this[nameof(MinutesSaveBackupNum)].SetValue<int>(value); } }
        public int HourSaveBackupNum { get { return this[nameof(HourSaveBackupNum)].GetValue<int>(); } set { this[nameof(HourSaveBackupNum)].SetValue<int>(value); } }
        public int DaySaveBackupNum { get { return this[nameof(DaySaveBackupNum)].GetValue<int>(); } set { this[nameof(DaySaveBackupNum)].SetValue<int>(value); } }
        public void StartWorldDataAutoSave() { Invoke(nameof(StartWorldDataAutoSave)); }
        public void StartLocalWorldDataAutoSave() { Invoke(nameof(StartLocalWorldDataAutoSave)); }
        public void OnStartedWorldAutoSave__DelegateSignature() { Invoke(nameof(OnStartedWorldAutoSave__DelegateSignature)); }
        public void OnStartedPlayerAutoSave__DelegateSignature() { Invoke(nameof(OnStartedPlayerAutoSave__DelegateSignature)); }
        public void OnStartedLocalWorldAutoSave__DelegateSignature() { Invoke(nameof(OnStartedLocalWorldAutoSave__DelegateSignature)); }
        public void OnFinishedWorldAsyncSaveGameInternal(Object SlotName, int UserIndex, bool bSuccess, Object WorldName, Object Timestamp) { Invoke(nameof(OnFinishedWorldAsyncSaveGameInternal), SlotName, UserIndex, bSuccess, WorldName, Timestamp); }
        public void OnEndedWorldAutoSave__DelegateSignature(bool IsSuccess) { Invoke(nameof(OnEndedWorldAutoSave__DelegateSignature), IsSuccess); }
        public void OnEndedPlayerAutoSave__DelegateSignature(bool IsSuccess) { Invoke(nameof(OnEndedPlayerAutoSave__DelegateSignature), IsSuccess); }
        public void OnEndedLocalWorldAutoSave__DelegateSignature(bool IsSuccess) { Invoke(nameof(OnEndedLocalWorldAutoSave__DelegateSignature), IsSuccess); }
        public bool IsValidWorldSaveDirectoryName_LocalData(Object WorldSaveDirectoryName) { return Invoke<bool>(nameof(IsValidWorldSaveDirectoryName_LocalData), WorldSaveDirectoryName); }
        public bool IsValidWorldSaveDirectoryName(Object WorldSaveDirectoryName) { return Invoke<bool>(nameof(IsValidWorldSaveDirectoryName), WorldSaveDirectoryName); }
        public bool IsValidWorldData(Object WorldName) { return Invoke<bool>(nameof(IsValidWorldData), WorldName); }
        public bool IsValidLocalWorldData(Object WorldName) { return Invoke<bool>(nameof(IsValidLocalWorldData), WorldName); }
        public bool IsLoadedWorldOptionData() { return Invoke<bool>(nameof(IsLoadedWorldOptionData)); }
        public bool IsLoadedWorldData() { return Invoke<bool>(nameof(IsLoadedWorldData)); }
        public bool IsLoadedLocalWorldData() { return Invoke<bool>(nameof(IsLoadedLocalWorldData)); }
        public bool IsAppliedPlayerData() { return Invoke<bool>(nameof(IsAppliedPlayerData)); }
        public Array<Object> GetWorldNames() { return Invoke<Array<Object>>(nameof(GetWorldNames)); }
        public Object GetWorldBaseInfoMap() { return Invoke<Object>(nameof(GetWorldBaseInfoMap)); }
        public int GetMaxWorldSaveDataNum() { return Invoke<int>(nameof(GetMaxWorldSaveDataNum)); }
        public PalWorldSaveGame GetLoadedWorldSaveData() { return Invoke<PalWorldSaveGame>(nameof(GetLoadedWorldSaveData)); }
        public PalWorldOptionSaveGame GetLoadedWorldOptionSaveData() { return Invoke<PalWorldOptionSaveGame>(nameof(GetLoadedWorldOptionSaveData)); }
        public PalLocalWorldSaveGame GetLoadedLocalWorldSaveData() { return Invoke<PalLocalWorldSaveGame>(nameof(GetLoadedLocalWorldSaveData)); }
    }
    public class PalScrollBox : PanelWidget
    {
        public PalScrollBox(nint addr) : base(addr) { }
        public ScrollBoxStyle WidgetStyle { get { return this[nameof(WidgetStyle)].As<ScrollBoxStyle>(); } set { this["WidgetStyle"] = value; } }
        public ScrollBarStyle WidgetBarStyle { get { return this[nameof(WidgetBarStyle)].As<ScrollBarStyle>(); } set { this["WidgetBarStyle"] = value; } }
        public SlateWidgetStyleAsset Style { get { return this[nameof(Style)].As<SlateWidgetStyleAsset>(); } set { this["Style"] = value; } }
        public SlateWidgetStyleAsset BarStyle { get { return this[nameof(BarStyle)].As<SlateWidgetStyleAsset>(); } set { this["BarStyle"] = value; } }
        public byte Orientation { get { return this[nameof(Orientation)].GetValue<byte>(); } set { this[nameof(Orientation)].SetValue<byte>(value); } }
        public ESlateVisibility ScrollBarVisibility { get { return (ESlateVisibility)this[nameof(ScrollBarVisibility)].GetValue<int>(); } set { this[nameof(ScrollBarVisibility)].SetValue<int>((int)value); } }
        public EConsumeMouseWheel ConsumeMouseWheel { get { return (EConsumeMouseWheel)this[nameof(ConsumeMouseWheel)].GetValue<int>(); } set { this[nameof(ConsumeMouseWheel)].SetValue<int>((int)value); } }
        public Vector2D ScrollbarThickness { get { return this[nameof(ScrollbarThickness)].As<Vector2D>(); } set { this["ScrollbarThickness"] = value; } }
        public Margin ScrollbarPadding { get { return this[nameof(ScrollbarPadding)].As<Margin>(); } set { this["ScrollbarPadding"] = value; } }
        public bool AlwaysShowScrollbar { get { return this[nameof(AlwaysShowScrollbar)].Flag; } set { this[nameof(AlwaysShowScrollbar)].Flag = value; } }
        public bool AlwaysShowScrollbarTrack { get { return this[nameof(AlwaysShowScrollbarTrack)].Flag; } set { this[nameof(AlwaysShowScrollbarTrack)].Flag = value; } }
        public bool AllowOverscroll { get { return this[nameof(AllowOverscroll)].Flag; } set { this[nameof(AllowOverscroll)].Flag = value; } }
        public bool bAnimateWheelScrolling { get { return this[nameof(bAnimateWheelScrolling)].Flag; } set { this[nameof(bAnimateWheelScrolling)].Flag = value; } }
        public EPalDescendantScrollDestination NavigationDestination { get { return (EPalDescendantScrollDestination)this[nameof(NavigationDestination)].GetValue<int>(); } set { this[nameof(NavigationDestination)].SetValue<int>((int)value); } }
        public float NavigationScrollPadding { get { return this[nameof(NavigationScrollPadding)].GetValue<float>(); } set { this[nameof(NavigationScrollPadding)].SetValue<float>(value); } }
        public EPalScrollWhenFocusChanges ScrollWhenFocusChanges { get { return (EPalScrollWhenFocusChanges)this[nameof(ScrollWhenFocusChanges)].GetValue<int>(); } set { this[nameof(ScrollWhenFocusChanges)].SetValue<int>((int)value); } }
        public bool bAllowRightClickDragScrolling { get { return this[nameof(bAllowRightClickDragScrolling)].Flag; } set { this[nameof(bAllowRightClickDragScrolling)].Flag = value; } }
        public float WheelScrollMultiplier { get { return this[nameof(WheelScrollMultiplier)].GetValue<float>(); } set { this[nameof(WheelScrollMultiplier)].SetValue<float>(value); } }
        public Object OnUserScrolled { get { return this[nameof(OnUserScrolled)]; } set { this[nameof(OnUserScrolled)] = value; } }
        public void SetWheelScrollMultiplier(float NewWheelScrollMultiplier) { Invoke(nameof(SetWheelScrollMultiplier), NewWheelScrollMultiplier); }
        public void SetScrollWhenFocusChanges(EPalScrollWhenFocusChanges NewScrollWhenFocusChanges) { Invoke(nameof(SetScrollWhenFocusChanges), NewScrollWhenFocusChanges); }
        public void SetScrollOffset(float NewScrollOffset) { Invoke(nameof(SetScrollOffset), NewScrollOffset); }
        public void SetScrollBarVisibility(ESlateVisibility NewScrollBarVisibility) { Invoke(nameof(SetScrollBarVisibility), NewScrollBarVisibility); }
        public void SetScrollbarThickness(Vector2D NewScrollbarThickness) { Invoke(nameof(SetScrollbarThickness), NewScrollbarThickness); }
        public void SetScrollbarPadding(Margin NewScrollbarPadding) { Invoke(nameof(SetScrollbarPadding), NewScrollbarPadding); }
        public void SetOrientation(byte NewOrientation) { Invoke(nameof(SetOrientation), NewOrientation); }
        public void SetConsumeMouseWheel(EConsumeMouseWheel NewConsumeMouseWheel) { Invoke(nameof(SetConsumeMouseWheel), NewConsumeMouseWheel); }
        public void SetAnimateWheelScrolling(bool bShouldAnimateWheelScrolling) { Invoke(nameof(SetAnimateWheelScrolling), bShouldAnimateWheelScrolling); }
        public void SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar) { Invoke(nameof(SetAlwaysShowScrollbar), NewAlwaysShowScrollbar); }
        public void SetAllowOverscroll(bool NewAllowOverscroll) { Invoke(nameof(SetAllowOverscroll), NewAllowOverscroll); }
        public void ScrollWidgetIntoView(Widget WidgetToFind, bool AnimateScroll, EPalDescendantScrollDestination ScrollDestination, float Padding) { Invoke(nameof(ScrollWidgetIntoView), WidgetToFind, AnimateScroll, ScrollDestination, Padding); }
        public void ScrollToStart() { Invoke(nameof(ScrollToStart)); }
        public void ScrollToEnd() { Invoke(nameof(ScrollToEnd)); }
        public float GetViewOffsetFraction() { return Invoke<float>(nameof(GetViewOffsetFraction)); }
        public float GetScrollOffsetOfEnd() { return Invoke<float>(nameof(GetScrollOffsetOfEnd)); }
        public float GetScrollOffset() { return Invoke<float>(nameof(GetScrollOffset)); }
        public void EndInertialScrolling() { Invoke(nameof(EndInertialScrolling)); }
    }
    public class PalScrollBoxSlot : PanelSlot
    {
        public PalScrollBoxSlot(nint addr) : base(addr) { }
        public Margin Padding { get { return this[nameof(Padding)].As<Margin>(); } set { this["Padding"] = value; } }
        public byte HorizontalAlignment { get { return this[nameof(HorizontalAlignment)].GetValue<byte>(); } set { this[nameof(HorizontalAlignment)].SetValue<byte>(value); } }
        public byte VerticalAlignment { get { return this[nameof(VerticalAlignment)].GetValue<byte>(); } set { this[nameof(VerticalAlignment)].SetValue<byte>(value); } }
        public void SetVerticalAlignment(byte InVerticalAlignment) { Invoke(nameof(SetVerticalAlignment), InVerticalAlignment); }
        public void SetPadding(Margin InPadding) { Invoke(nameof(SetPadding), InPadding); }
        public void SetHorizontalAlignment(byte InHorizontalAlignment) { Invoke(nameof(SetHorizontalAlignment), InHorizontalAlignment); }
    }
    public class PalSetDefaultsCommandlet : Commandlet
    {
        public PalSetDefaultsCommandlet(nint addr) : base(addr) { }
    }
    public class PalShooterAnimeAssetBase : Object
    {
        public PalShooterAnimeAssetBase(nint addr) : base(addr) { }
        public WeaponAnimationInfo AnimeInfo { get { return this[nameof(AnimeInfo)].As<WeaponAnimationInfo>(); } set { this["AnimeInfo"] = value; } }
        public void ChangeRideMontage(AnimMontage NextAnim, EWeaponAnimationType AnimType) { Invoke(nameof(ChangeRideMontage), NextAnim, AnimType); }
    }
    public class PalUniqueRideAnimeAssetBase : Object
    {
        public PalUniqueRideAnimeAssetBase(nint addr) : base(addr) { }
        public Vector IKPoleLocation_Hand_R { get { return this[nameof(IKPoleLocation_Hand_R)].As<Vector>(); } set { this["IKPoleLocation_Hand_R"] = value; } }
        public Vector IKPoleLocation_Hand_L { get { return this[nameof(IKPoleLocation_Hand_L)].As<Vector>(); } set { this["IKPoleLocation_Hand_L"] = value; } }
        public Vector IKPoleLocation_Foot_R { get { return this[nameof(IKPoleLocation_Foot_R)].As<Vector>(); } set { this["IKPoleLocation_Foot_R"] = value; } }
        public Vector IKPoleLocation_Foot_L { get { return this[nameof(IKPoleLocation_Foot_L)].As<Vector>(); } set { this["IKPoleLocation_Foot_L"] = value; } }
        public bool DisableLeftHandIK_BallMotion { get { return this[nameof(DisableLeftHandIK_BallMotion)].Flag; } set { this[nameof(DisableLeftHandIK_BallMotion)].Flag = value; } }
        public AnimSequence RidingAnimation { get { return this[nameof(RidingAnimation)].As<AnimSequence>(); } set { this["RidingAnimation"] = value; } }
        public AnimMontage RidingAnimation_Ball_Aim { get { return this[nameof(RidingAnimation_Ball_Aim)].As<AnimMontage>(); } set { this["RidingAnimation_Ball_Aim"] = value; } }
        public AnimMontage RidingAnimation_Ball_Fire { get { return this[nameof(RidingAnimation_Ball_Fire)].As<AnimMontage>(); } set { this["RidingAnimation_Ball_Fire"] = value; } }
        public WeaponNotifyAnimationInfo WeaponNotifyAnimInfo_Ball_Aim { get { return this[nameof(WeaponNotifyAnimInfo_Ball_Aim)].As<WeaponNotifyAnimationInfo>(); } set { this["WeaponNotifyAnimInfo_Ball_Aim"] = value; } }
        public WeaponNotifyAnimationInfo WeaponNotifyAnimInfo_Ball_Fire { get { return this[nameof(WeaponNotifyAnimInfo_Ball_Fire)].As<WeaponNotifyAnimationInfo>(); } set { this["WeaponNotifyAnimInfo_Ball_Fire"] = value; } }
        public AnimSequence GetRideAnimSequence() { return Invoke<AnimSequence>(nameof(GetRideAnimSequence)); }
    }
    public class PalShooterComponent : ActorComponent
    {
        public PalShooterComponent(nint addr) : base(addr) { }
        public Object OnChangeTargetDirectionDelegate { get { return this[nameof(OnChangeTargetDirectionDelegate)]; } set { this[nameof(OnChangeTargetDirectionDelegate)] = value; } }
        public Object OnStartAim { get { return this[nameof(OnStartAim)]; } set { this[nameof(OnStartAim)] = value; } }
        public Object OnEndAim { get { return this[nameof(OnEndAim)]; } set { this[nameof(OnEndAim)] = value; } }
        public Object OnPullTrigger { get { return this[nameof(OnPullTrigger)]; } set { this[nameof(OnPullTrigger)] = value; } }
        public Object OnReleaseTrigger { get { return this[nameof(OnReleaseTrigger)]; } set { this[nameof(OnReleaseTrigger)] = value; } }
        public Object OnChangeState { get { return this[nameof(OnChangeState)]; } set { this[nameof(OnChangeState)] = value; } }
        public Object OnWeaponNotifyDelegate { get { return this[nameof(OnWeaponNotifyDelegate)]; } set { this[nameof(OnWeaponNotifyDelegate)] = value; } }
        public Object OnEndShootingAnimationDelegate { get { return this[nameof(OnEndShootingAnimationDelegate)]; } set { this[nameof(OnEndShootingAnimationDelegate)] = value; } }
        public Object OnChangeWeaponDelegate { get { return this[nameof(OnChangeWeaponDelegate)]; } set { this[nameof(OnChangeWeaponDelegate)] = value; } }
        public Object OnReloadStartDelegate { get { return this[nameof(OnReloadStartDelegate)]; } set { this[nameof(OnReloadStartDelegate)] = value; } }
        public Object OnReloadBulletDelegate { get { return this[nameof(OnReloadBulletDelegate)]; } set { this[nameof(OnReloadBulletDelegate)] = value; } }
        public Object OnUpdatedUsableHandFlagDelegate { get { return this[nameof(OnUpdatedUsableHandFlagDelegate)]; } set { this[nameof(OnUpdatedUsableHandFlagDelegate)] = value; } }
        public float WalkSpeedMultiplierInAim { get { return this[nameof(WalkSpeedMultiplierInAim)].GetValue<float>(); } set { this[nameof(WalkSpeedMultiplierInAim)].SetValue<float>(value); } }
        public float WalkSpeedMultiplierInHipShoot { get { return this[nameof(WalkSpeedMultiplierInHipShoot)].GetValue<float>(); } set { this[nameof(WalkSpeedMultiplierInHipShoot)].SetValue<float>(value); } }
        public float ChangeWeaponInterpTime { get { return this[nameof(ChangeWeaponInterpTime)].GetValue<float>(); } set { this[nameof(ChangeWeaponInterpTime)].SetValue<float>(value); } }
        public Object DefaultWeaponAnimeAssetBPSoftClassMap { get { return this[nameof(DefaultWeaponAnimeAssetBPSoftClassMap)]; } set { this[nameof(DefaultWeaponAnimeAssetBPSoftClassMap)] = value; } }
        public Object OtherWeaponAnimeAssetBPSoftClassMap { get { return this[nameof(OtherWeaponAnimeAssetBPSoftClassMap)]; } set { this[nameof(OtherWeaponAnimeAssetBPSoftClassMap)] = value; } }
        public Object WeaponCategoryForPreLoad { get { return this[nameof(WeaponCategoryForPreLoad)]; } set { this[nameof(WeaponCategoryForPreLoad)] = value; } }
        public bool IsUseBlurUpdate { get { return this[nameof(IsUseBlurUpdate)].Flag; } set { this[nameof(IsUseBlurUpdate)].Flag = value; } }
        public Object DefaultWeaponAnimeAssetMap { get { return this[nameof(DefaultWeaponAnimeAssetMap)]; } set { this[nameof(DefaultWeaponAnimeAssetMap)] = value; } }
        public Object OtherWeaponAnimeAssetMap { get { return this[nameof(OtherWeaponAnimeAssetMap)]; } set { this[nameof(OtherWeaponAnimeAssetMap)] = value; } }
        public Object LoadedDefaultWeaponSet { get { return this[nameof(LoadedDefaultWeaponSet)]; } set { this[nameof(LoadedDefaultWeaponSet)] = value; } }
        public Object LoadedOtherWeaponSet { get { return this[nameof(LoadedOtherWeaponSet)]; } set { this[nameof(LoadedOtherWeaponSet)] = value; } }
        public Object OverrideWeaponNotifyAnimationMap { get { return this[nameof(OverrideWeaponNotifyAnimationMap)]; } set { this[nameof(OverrideWeaponNotifyAnimationMap)] = value; } }
        public Vector targetDirection { get { return this[nameof(targetDirection)].As<Vector>(); } set { this["targetDirection"] = value; } }
        public bool bIsAiming { get { return this[nameof(bIsAiming)].Flag; } set { this[nameof(bIsAiming)].Flag = value; } }
        public bool bIsShooting { get { return this[nameof(bIsShooting)].Flag; } set { this[nameof(bIsShooting)].Flag = value; } }
        public bool bIsRequestAim { get { return this[nameof(bIsRequestAim)].Flag; } set { this[nameof(bIsRequestAim)].Flag = value; } }
        public bool bIsRequestPullTrigger { get { return this[nameof(bIsRequestPullTrigger)].Flag; } set { this[nameof(bIsRequestPullTrigger)].Flag = value; } }
        public bool bIsReloading { get { return this[nameof(bIsReloading)].Flag; } set { this[nameof(bIsReloading)].Flag = value; } }
        public FlagContainer UseControllerRotationYawFlags { get { return this[nameof(UseControllerRotationYawFlags)].As<FlagContainer>(); } set { this["UseControllerRotationYawFlags"] = value; } }
        public PalWeaponBase HasWeapon { get { return this[nameof(HasWeapon)].As<PalWeaponBase>(); } set { this["HasWeapon"] = value; } }
        public PalWeaponBase CacheNextWeapon { get { return this[nameof(CacheNextWeapon)].As<PalWeaponBase>(); } set { this["CacheNextWeapon"] = value; } }
        public WeaponAnimationInfo PrevWeaponAnimationInfo { get { return this[nameof(PrevWeaponAnimationInfo)].As<WeaponAnimationInfo>(); } set { this["PrevWeaponAnimationInfo"] = value; } }
        public bool bIsDisableShootingTemporarily { get { return this[nameof(bIsDisableShootingTemporarily)].Flag; } set { this[nameof(bIsDisableShootingTemporarily)].Flag = value; } }
        public LayeredFlagContainer DisableAimFlag { get { return this[nameof(DisableAimFlag)].As<LayeredFlagContainer>(); } set { this["DisableAimFlag"] = value; } }
        public LayeredFlagContainer DisableShootFlag { get { return this[nameof(DisableShootFlag)].As<LayeredFlagContainer>(); } set { this["DisableShootFlag"] = value; } }
        public LayeredFlagContainer DisableWeaponChange { get { return this[nameof(DisableWeaponChange)].As<LayeredFlagContainer>(); } set { this["DisableWeaponChange"] = value; } }
        public FlagContainer HiddenWeapon { get { return this[nameof(HiddenWeapon)].As<FlagContainer>(); } set { this["HiddenWeapon"] = value; } }
        public float PullTriggerCountDown { get { return this[nameof(PullTriggerCountDown)].GetValue<float>(); } set { this[nameof(PullTriggerCountDown)].SetValue<float>(value); } }
        public int PullTriggerCountDownCount { get { return this[nameof(PullTriggerCountDownCount)].GetValue<int>(); } set { this[nameof(PullTriggerCountDownCount)].SetValue<int>(value); } }
        public float ElapsedTimeSinceWeaponChange { get { return this[nameof(ElapsedTimeSinceWeaponChange)].GetValue<float>(); } set { this[nameof(ElapsedTimeSinceWeaponChange)].SetValue<float>(value); } }
        public EPalWeaponType OverrideWeaponType { get { return (EPalWeaponType)this[nameof(OverrideWeaponType)].GetValue<int>(); } set { this[nameof(OverrideWeaponType)].SetValue<int>((int)value); } }
        public bool bUnstoppable { get { return this[nameof(bUnstoppable)].Flag; } set { this[nameof(bUnstoppable)].Flag = value; } }
        public bool bIsHoldTrigger { get { return this[nameof(bIsHoldTrigger)].Flag; } set { this[nameof(bIsHoldTrigger)].Flag = value; } }
        public bool bBufferedInput { get { return this[nameof(bBufferedInput)].Flag; } set { this[nameof(bBufferedInput)].Flag = value; } }
        public bool bIsShootingHold { get { return this[nameof(bIsShootingHold)].Flag; } set { this[nameof(bIsShootingHold)].Flag = value; } }
        public PalWeaponBase NPCWeapon { get { return this[nameof(NPCWeapon)].As<PalWeaponBase>(); } set { this["NPCWeapon"] = value; } }
        public float CurrentBulletBlurRate { get { return this[nameof(CurrentBulletBlurRate)].GetValue<float>(); } set { this[nameof(CurrentBulletBlurRate)].SetValue<float>(value); } }
        public float RapidFireBlur { get { return this[nameof(RapidFireBlur)].GetValue<float>(); } set { this[nameof(RapidFireBlur)].SetValue<float>(value); } }
        public RandomStream RandomStream { get { return this[nameof(RandomStream)].As<RandomStream>(); } set { this["RandomStream"] = value; } }
        public void StopWeaponChangeAnimation() { Invoke(nameof(StopWeaponChangeAnimation)); }
        public void StopReloadInternal() { Invoke(nameof(StopReloadInternal)); }
        public void StopReload() { Invoke(nameof(StopReload)); }
        public void StopPullTriggerAnime_forBP() { Invoke(nameof(StopPullTriggerAnime_forBP)); }
        public void StartAimDelegate__DelegateSignature() { Invoke(nameof(StartAimDelegate__DelegateSignature)); }
        public void StartAim() { Invoke(nameof(StartAim)); }
        public void SetUsedRightHand(Object flagName, bool bIsUsed) { Invoke(nameof(SetUsedRightHand), flagName, bIsUsed); }
        public void SetUsedLeftHand(Object flagName, bool bIsUsed) { Invoke(nameof(SetUsedLeftHand), flagName, bIsUsed); }
        public void SetupInputComponent(InputComponent InputComponent) { Invoke(nameof(SetupInputComponent), InputComponent); }
        public void SetTargetDirection_ToServer(Vector targetDirection) { Invoke(nameof(SetTargetDirection_ToServer), targetDirection); }
        public void SetTargetDirection(Vector Direction) { Invoke(nameof(SetTargetDirection), Direction); }
        public void SetShootingHold(bool IsHold) { Invoke(nameof(SetShootingHold), IsHold); }
        public void SetOverrideWeaponType(EPalWeaponType Type) { Invoke(nameof(SetOverrideWeaponType), Type); }
        public void SetHiddenAttachWeapon(Object flagName, bool isHidden) { Invoke(nameof(SetHiddenAttachWeapon), flagName, isHidden); }
        public void SetDisableWeaponForUI(bool Disable) { Invoke(nameof(SetDisableWeaponForUI), Disable); }
        public void SetDisableWeaponChangeAnime(Object flagName, bool bIsUsed) { Invoke(nameof(SetDisableWeaponChangeAnime), flagName, bIsUsed); }
        public void SetDisableShootFlag_Layered(EPalShooterFlagContainerPriority Priority, Object flagName, bool isDisable) { Invoke(nameof(SetDisableShootFlag_Layered), Priority, flagName, isDisable); }
        public void SetDisableShootFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableShootFlag), flagName, isDisable); }
        public void SetDisableReloadFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableReloadFlag), flagName, isDisable); }
        public void SetDisableLeftHandAttachFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableLeftHandAttachFlag), flagName, isDisable); }
        public void SetDisableEndAim(Object flagName, bool isDisable) { Invoke(nameof(SetDisableEndAim), flagName, isDisable); }
        public void SetDisableChangeWeaponFlag_Layered(EPalShooterFlagContainerPriority Priority, Object flagName, bool isDisable) { Invoke(nameof(SetDisableChangeWeaponFlag_Layered), Priority, flagName, isDisable); }
        public void SetDisableChangeWeaponFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableChangeWeaponFlag), flagName, isDisable); }
        public void SetDisableAimFlag_Layered(EPalShooterFlagContainerPriority Priority, Object flagName, bool isDisable) { Invoke(nameof(SetDisableAimFlag_Layered), Priority, flagName, isDisable); }
        public void SetDisableAimFlag(Object flagName, bool isDisable) { Invoke(nameof(SetDisableAimFlag), flagName, isDisable); }
        public void ReturnTriggerDelegate__DelegateSignature() { Invoke(nameof(ReturnTriggerDelegate__DelegateSignature)); }
        public void ResetOverrideWeaponType() { Invoke(nameof(ResetOverrideWeaponType)); }
        public void ReloadWeaponInternal() { Invoke(nameof(ReloadWeaponInternal)); }
        public void ReloadWeapon() { Invoke(nameof(ReloadWeapon)); }
        public void ReleaseTrigger() { Invoke(nameof(ReleaseTrigger)); }
        public void PullTriggerDelegate__DelegateSignature() { Invoke(nameof(PullTriggerDelegate__DelegateSignature)); }
        public void PullTrigger() { Invoke(nameof(PullTrigger)); }
        public void OnWeaponNotifyDelegate__DelegateSignature(EWeaponNotifyType Type) { Invoke(nameof(OnWeaponNotifyDelegate__DelegateSignature), Type); }
        public void OnWeaponNotify(EWeaponNotifyType Type) { Invoke(nameof(OnWeaponNotify), Type); }
        public void OnWeaponAnimationNotifyEnd(Object NotifyName, BranchingPointNotifyPayload BranchingPointNotifyPayload) { Invoke(nameof(OnWeaponAnimationNotifyEnd), NotifyName, BranchingPointNotifyPayload); }
        public void OnWeaponAnimationNotifyBegin(Object NotifyName, BranchingPointNotifyPayload BranchingPointNotifyPayload) { Invoke(nameof(OnWeaponAnimationNotifyBegin), NotifyName, BranchingPointNotifyPayload); }
        public void OnUpdatedUsableHandFlag__DelegateSignature(bool CanUseLeftHandFlag, bool CanUseRightHandFlag) { Invoke(nameof(OnUpdatedUsableHandFlag__DelegateSignature), CanUseLeftHandFlag, CanUseRightHandFlag); }
        public void OnStartOwnerAction(PalActionBase action) { Invoke(nameof(OnStartOwnerAction), action); }
        public void OnReloadStart__DelegateSignature() { Invoke(nameof(OnReloadStart__DelegateSignature)); }
        public void OnReloadBullet__DelegateSignature() { Invoke(nameof(OnReloadBullet__DelegateSignature)); }
        public void OnOwnerAnimInitialized() { Invoke(nameof(OnOwnerAnimInitialized)); }
        public void OnLanded(PalCharacterMovementComponent Component, HitResult Hit) { Invoke(nameof(OnLanded), Component, Hit); }
        public void OnJump(PalCharacterMovementComponent Component) { Invoke(nameof(OnJump), Component); }
        public void OnEndShootingAnimation__DelegateSignature(AnimMontage Montage) { Invoke(nameof(OnEndShootingAnimation__DelegateSignature), Montage); }
        public void OnEndReloadAnimation(AnimMontage Montage, bool bInterrupted) { Invoke(nameof(OnEndReloadAnimation), Montage, bInterrupted); }
        public void OnDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnDead), DeadInfo); }
        public void OnCrouch(PalCharacterMovementComponent Component, bool bIsCrouch) { Invoke(nameof(OnCrouch), Component, bIsCrouch); }
        public void OnChangeWeapon__DelegateSignature(PalWeaponBase weapon) { Invoke(nameof(OnChangeWeapon__DelegateSignature), weapon); }
        public void OnChangeTargetDirection() { Invoke(nameof(OnChangeTargetDirection)); }
        public void OnChangeChangeImportance(EPalCharacterImportanceType Next) { Invoke(nameof(OnChangeChangeImportance), Next); }
        public bool IsShooting() { return Invoke<bool>(nameof(IsShooting)); }
        public bool IsReloading() { return Invoke<bool>(nameof(IsReloading)); }
        public bool IsPlayShootingAnimation() { return Invoke<bool>(nameof(IsPlayShootingAnimation)); }
        public bool IsHiddenAttachWeapon() { return Invoke<bool>(nameof(IsHiddenAttachWeapon)); }
        public bool IsAiming() { return Invoke<bool>(nameof(IsAiming)); }
        public PalShooterAnimeAssetBase GetThrowAnimAsset() { return Invoke<PalShooterAnimeAssetBase>(nameof(GetThrowAnimAsset)); }
        public Vector GetTargetDirection() { return Invoke<Vector>(nameof(GetTargetDirection)); }
        public WeaponAnimationInfo GetPrevWeaponAnimationInfo() { return Invoke<WeaponAnimationInfo>(nameof(GetPrevWeaponAnimationInfo)); }
        public PalWeaponBase GetHasWeapon() { return Invoke<PalWeaponBase>(nameof(GetHasWeapon)); }
        public WeaponAnimationInfo GetCurrentWeaponAnimationInfo() { return Invoke<WeaponAnimationInfo>(nameof(GetCurrentWeaponAnimationInfo)); }
        public RidingAnimationInfo GetCurrentRidingAnimationInfo() { return Invoke<RidingAnimationInfo>(nameof(GetCurrentRidingAnimationInfo)); }
        public float GetCurrentBulletBlurRate() { return Invoke<float>(nameof(GetCurrentBulletBlurRate)); }
        public float GetChangeWeaponAnimationWeight() { return Invoke<float>(nameof(GetChangeWeaponAnimationWeight)); }
        public PalShooterAnimeAssetBase GetBowAnimAsset() { return Invoke<PalShooterAnimeAssetBase>(nameof(GetBowAnimAsset)); }
        public void EndAimDelegate__DelegateSignature() { Invoke(nameof(EndAimDelegate__DelegateSignature)); }
        public void EndAim() { Invoke(nameof(EndAim)); }
        public void ChangeWeapon(PalWeaponBase weapon) { Invoke(nameof(ChangeWeapon), weapon); }
        public void ChangeTargetDirectionDelegate__DelegateSignature(Vector Direction) { Invoke(nameof(ChangeTargetDirectionDelegate__DelegateSignature), Direction); }
        public void ChangeStateDelegate__DelegateSignature(bool IsAim, bool IsShoot) { Invoke(nameof(ChangeStateDelegate__DelegateSignature), IsAim, IsShoot); }
        public void ChangeIsShooting(bool IsShooting) { Invoke(nameof(ChangeIsShooting), IsShooting); }
        public void ChangeIsAiming(bool IsAiming) { Invoke(nameof(ChangeIsAiming), IsAiming); }
        public bool CanWeaponChangeAnime() { return Invoke<bool>(nameof(CanWeaponChangeAnime)); }
        public bool CanUseWeapon(PalWeaponBase weapon) { return Invoke<bool>(nameof(CanUseWeapon), weapon); }
        public bool CanUseRightHand() { return Invoke<bool>(nameof(CanUseRightHand)); }
        public bool CanUseLeftHand() { return Invoke<bool>(nameof(CanUseLeftHand)); }
        public bool CanShoot() { return Invoke<bool>(nameof(CanShoot)); }
        public bool CanReload() { return Invoke<bool>(nameof(CanReload)); }
        public bool CanLeftHandAttach() { return Invoke<bool>(nameof(CanLeftHandAttach)); }
        public bool CanChangeNextWeapon_Layered(EPalShooterFlagContainerPriority Priority) { return Invoke<bool>(nameof(CanChangeNextWeapon_Layered), Priority); }
        public bool CanChangeNextWeapon() { return Invoke<bool>(nameof(CanChangeNextWeapon)); }
        public bool CanAutoAim() { return Invoke<bool>(nameof(CanAutoAim)); }
        public bool CanAim() { return Invoke<bool>(nameof(CanAim)); }
        public void BowPullAnimeEnd() { Invoke(nameof(BowPullAnimeEnd)); }
        public void AttachWeapon_ForPartnerSkillPalWeapon_ToAll(PalWeaponBase weapon) { Invoke(nameof(AttachWeapon_ForPartnerSkillPalWeapon_ToAll), weapon); }
        public void AttachWeapon_ForNPC_ToAll(bool IsNotNull) { Invoke(nameof(AttachWeapon_ForNPC_ToAll), IsNotNull); }
        public void AttachWeapon(PalWeaponBase weapon) { Invoke(nameof(AttachWeapon), weapon); }
        public void AddRapidFireBlur() { Invoke(nameof(AddRapidFireBlur)); }
    }
    public class PalSpringArmComponent : SpringArmComponent
    {
        public PalSpringArmComponent(nint addr) : base(addr) { }
        public byte WaterProbeChannel { get { return this[nameof(WaterProbeChannel)].GetValue<byte>(); } set { this[nameof(WaterProbeChannel)].SetValue<byte>(value); } }
    }
    public class PalShooterSpringArmComponent : PalSpringArmComponent
    {
        public PalShooterSpringArmComponent(nint addr) : base(addr) { }
        public float CameraInterpTime { get { return this[nameof(CameraInterpTime)].GetValue<float>(); } set { this[nameof(CameraInterpTime)].SetValue<float>(value); } }
        public float AimingCameraLagSpeed { get { return this[nameof(AimingCameraLagSpeed)].GetValue<float>(); } set { this[nameof(AimingCameraLagSpeed)].SetValue<float>(value); } }
        public CurveFloat LengthInterpCurve { get { return this[nameof(LengthInterpCurve)].As<CurveFloat>(); } set { this["LengthInterpCurve"] = value; } }
        public CurveFloat OffsetInterpCurve { get { return this[nameof(OffsetInterpCurve)].As<CurveFloat>(); } set { this["OffsetInterpCurve"] = value; } }
        public float WalkCameraArmLength { get { return this[nameof(WalkCameraArmLength)].GetValue<float>(); } set { this[nameof(WalkCameraArmLength)].SetValue<float>(value); } }
        public Vector WalkCameraOffset { get { return this[nameof(WalkCameraOffset)].As<Vector>(); } set { this["WalkCameraOffset"] = value; } }
        public float HipShootCameraArmLength { get { return this[nameof(HipShootCameraArmLength)].GetValue<float>(); } set { this[nameof(HipShootCameraArmLength)].SetValue<float>(value); } }
        public Vector HipShootCameraOffset { get { return this[nameof(HipShootCameraOffset)].As<Vector>(); } set { this["HipShootCameraOffset"] = value; } }
        public float AimCameraArmLength { get { return this[nameof(AimCameraArmLength)].GetValue<float>(); } set { this[nameof(AimCameraArmLength)].SetValue<float>(value); } }
        public Vector AimCameraOffset { get { return this[nameof(AimCameraOffset)].As<Vector>(); } set { this["AimCameraOffset"] = value; } }
        public Object DefaultWeaponStandCameraParameterMap { get { return this[nameof(DefaultWeaponStandCameraParameterMap)]; } set { this[nameof(DefaultWeaponStandCameraParameterMap)] = value; } }
        public Object UniqueWeaponStandCameraParameterMap { get { return this[nameof(UniqueWeaponStandCameraParameterMap)]; } set { this[nameof(UniqueWeaponStandCameraParameterMap)] = value; } }
        public float AirCameraArmLength { get { return this[nameof(AirCameraArmLength)].GetValue<float>(); } set { this[nameof(AirCameraArmLength)].SetValue<float>(value); } }
        public Vector AirCameraOffset { get { return this[nameof(AirCameraOffset)].As<Vector>(); } set { this["AirCameraOffset"] = value; } }
        public float AirHipShootCameraArmLength { get { return this[nameof(AirHipShootCameraArmLength)].GetValue<float>(); } set { this[nameof(AirHipShootCameraArmLength)].SetValue<float>(value); } }
        public Vector AirHipShootCameraOffset { get { return this[nameof(AirHipShootCameraOffset)].As<Vector>(); } set { this["AirHipShootCameraOffset"] = value; } }
        public float AirAimCameraArmLength { get { return this[nameof(AirAimCameraArmLength)].GetValue<float>(); } set { this[nameof(AirAimCameraArmLength)].SetValue<float>(value); } }
        public Vector AirAimCameraOffset { get { return this[nameof(AirAimCameraOffset)].As<Vector>(); } set { this["AirAimCameraOffset"] = value; } }
        public float FlyCameraArmLength { get { return this[nameof(FlyCameraArmLength)].GetValue<float>(); } set { this[nameof(FlyCameraArmLength)].SetValue<float>(value); } }
        public Vector FlyCameraOffset { get { return this[nameof(FlyCameraOffset)].As<Vector>(); } set { this["FlyCameraOffset"] = value; } }
        public float FlyHipShootCameraArmLength { get { return this[nameof(FlyHipShootCameraArmLength)].GetValue<float>(); } set { this[nameof(FlyHipShootCameraArmLength)].SetValue<float>(value); } }
        public Vector FlyHipShootCameraOffset { get { return this[nameof(FlyHipShootCameraOffset)].As<Vector>(); } set { this["FlyHipShootCameraOffset"] = value; } }
        public float FlyAimCameraArmLength { get { return this[nameof(FlyAimCameraArmLength)].GetValue<float>(); } set { this[nameof(FlyAimCameraArmLength)].SetValue<float>(value); } }
        public Vector FlyAimCameraOffset { get { return this[nameof(FlyAimCameraOffset)].As<Vector>(); } set { this["FlyAimCameraOffset"] = value; } }
        public float CrouchCameraArmLength { get { return this[nameof(CrouchCameraArmLength)].GetValue<float>(); } set { this[nameof(CrouchCameraArmLength)].SetValue<float>(value); } }
        public Vector CrouchCameraOffset { get { return this[nameof(CrouchCameraOffset)].As<Vector>(); } set { this["CrouchCameraOffset"] = value; } }
        public float CrouchHipShootCameraArmLength { get { return this[nameof(CrouchHipShootCameraArmLength)].GetValue<float>(); } set { this[nameof(CrouchHipShootCameraArmLength)].SetValue<float>(value); } }
        public Vector CrouchHipShootCameraOffset { get { return this[nameof(CrouchHipShootCameraOffset)].As<Vector>(); } set { this["CrouchHipShootCameraOffset"] = value; } }
        public float CrouchAimCameraArmLength { get { return this[nameof(CrouchAimCameraArmLength)].GetValue<float>(); } set { this[nameof(CrouchAimCameraArmLength)].SetValue<float>(value); } }
        public Vector CrouchAimCameraOffset { get { return this[nameof(CrouchAimCameraOffset)].As<Vector>(); } set { this["CrouchAimCameraOffset"] = value; } }
        public float SlidingCameraArmLength { get { return this[nameof(SlidingCameraArmLength)].GetValue<float>(); } set { this[nameof(SlidingCameraArmLength)].SetValue<float>(value); } }
        public Vector SlidingCameraOffset { get { return this[nameof(SlidingCameraOffset)].As<Vector>(); } set { this["SlidingCameraOffset"] = value; } }
        public float SlidingHipShootCameraArmLength { get { return this[nameof(SlidingHipShootCameraArmLength)].GetValue<float>(); } set { this[nameof(SlidingHipShootCameraArmLength)].SetValue<float>(value); } }
        public Vector SlidingHipShootCameraOffset { get { return this[nameof(SlidingHipShootCameraOffset)].As<Vector>(); } set { this["SlidingHipShootCameraOffset"] = value; } }
        public float SlidingAimCameraArmLength { get { return this[nameof(SlidingAimCameraArmLength)].GetValue<float>(); } set { this[nameof(SlidingAimCameraArmLength)].SetValue<float>(value); } }
        public Vector SlidingAimCameraOffset { get { return this[nameof(SlidingAimCameraOffset)].As<Vector>(); } set { this["SlidingAimCameraOffset"] = value; } }
        public float DeadCameraArmLength { get { return this[nameof(DeadCameraArmLength)].GetValue<float>(); } set { this[nameof(DeadCameraArmLength)].SetValue<float>(value); } }
        public Vector DeadCameraOffset { get { return this[nameof(DeadCameraOffset)].As<Vector>(); } set { this["DeadCameraOffset"] = value; } }
        public FixedPoint64 PrevPlayerHp { get { return this[nameof(PrevPlayerHp)].As<FixedPoint64>(); } set { this["PrevPlayerHp"] = value; } }
        public float DefaultCameraLagSpeed { get { return this[nameof(DefaultCameraLagSpeed)].GetValue<float>(); } set { this[nameof(DefaultCameraLagSpeed)].SetValue<float>(value); } }
        public PalShooterComponent ShooterComponent { get { return this[nameof(ShooterComponent)].As<PalShooterComponent>(); } set { this["ShooterComponent"] = value; } }
        public PalCharacterMovementComponent MoveComponent { get { return this[nameof(MoveComponent)].As<PalCharacterMovementComponent>(); } set { this["MoveComponent"] = value; } }
        public PalCharacterParameterComponent ParameterComponent { get { return this[nameof(ParameterComponent)].As<PalCharacterParameterComponent>(); } set { this["ParameterComponent"] = value; } }
        public PalDamageReactionComponent DamageReactionComponent { get { return this[nameof(DamageReactionComponent)].As<PalDamageReactionComponent>(); } set { this["DamageReactionComponent"] = value; } }
        public FloatContainer ArmLengthScaleContainer { get { return this[nameof(ArmLengthScaleContainer)].As<FloatContainer>(); } set { this["ArmLengthScaleContainer"] = value; } }
        public void UpdateCameraInterp(float DeltaTime) { Invoke(nameof(UpdateCameraInterp), DeltaTime); }
        public void UnregisterAdditionalOffsets() { Invoke(nameof(UnregisterAdditionalOffsets)); }
        public void UnregisterAdditionalOffset(Object flgName) { Invoke(nameof(UnregisterAdditionalOffset), flgName); }
        public void SetCameraLengthScale(Object flagName, float Scale) { Invoke(nameof(SetCameraLengthScale), flagName, Scale); }
        public void ResetCameraInterp() { Invoke(nameof(ResetCameraInterp)); }
        public void ResetCameraDirection() { Invoke(nameof(ResetCameraDirection)); }
        public void RegisterAdditionalOffset(ShooterSpringCameraAdditionalOffset Offset) { Invoke(nameof(RegisterAdditionalOffset), Offset); }
        public void OnUpdatePlayerHp(FixedPoint64 nowHP, FixedPoint64 nowMaxHP) { Invoke(nameof(OnUpdatePlayerHp), nowHP, nowMaxHP); }
        public void OnStartAim() { Invoke(nameof(OnStartAim)); }
        public void OnReleaseTrigger() { Invoke(nameof(OnReleaseTrigger)); }
        public void OnPullTrigger() { Invoke(nameof(OnPullTrigger)); }
        public void OnLanded(PalCharacterMovementComponent Component, HitResult Hit) { Invoke(nameof(OnLanded), Component, Hit); }
        public void OnJump(PalCharacterMovementComponent Component) { Invoke(nameof(OnJump), Component); }
        public void OnFly(PalCharacterMovementComponent Component) { Invoke(nameof(OnFly), Component); }
        public void OnEndAim() { Invoke(nameof(OnEndAim)); }
        public void OnDyingDeadEnd(PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnDyingDeadEnd), PlayerCharacter); }
        public void OnDead(PalDeadInfo DeadInfo) { Invoke(nameof(OnDead), DeadInfo); }
        public void OnCompleteInitializeParameter(PalCharacter InCharacter) { Invoke(nameof(OnCompleteInitializeParameter), InCharacter); }
        public void OnChangeSliding(PalCharacterMovementComponent Component, bool IsSliding) { Invoke(nameof(OnChangeSliding), Component, IsSliding); }
        public void OnChangeShootState(bool IsAim, bool IsShooting) { Invoke(nameof(OnChangeShootState), IsAim, IsShooting); }
        public void OnChangeGraphicsDelegate(PalOptionGraphicsSettings PrevSettings, PalOptionGraphicsSettings NewSettings) { Invoke(nameof(OnChangeGraphicsDelegate), PrevSettings, NewSettings); }
        public void OnChangeCrouch(PalCharacterMovementComponent Component, bool isCrouch) { Invoke(nameof(OnChangeCrouch), Component, isCrouch); }
        public Vector GetCurrentCameraOffset() { return Invoke<Vector>(nameof(GetCurrentCameraOffset)); }
        public float GetCurrentCameraArmLength() { return Invoke<float>(nameof(GetCurrentCameraArmLength)); }
        public void ChangeArmParameter_forBP() { Invoke(nameof(ChangeArmParameter_forBP)); }
    }
    public class PalShopManager : PalWorldSubsystem
    {
        public PalShopManager(nint addr) : base(addr) { }
        public Object OnRecievedBuyResultDelegate { get { return this[nameof(OnRecievedBuyResultDelegate)]; } set { this[nameof(OnRecievedBuyResultDelegate)] = value; } }
        public Object OnReceivedDroppedPalDataDelegate { get { return this[nameof(OnReceivedDroppedPalDataDelegate)]; } set { this[nameof(OnReceivedDroppedPalDataDelegate)] = value; } }
        public Object CreatedItemShopMap_ForServer { get { return this[nameof(CreatedItemShopMap_ForServer)]; } set { this[nameof(CreatedItemShopMap_ForServer)] = value; } }
        public Object CreatedPalShopMap_ForServer { get { return this[nameof(CreatedPalShopMap_ForServer)]; } set { this[nameof(CreatedPalShopMap_ForServer)] = value; } }
        public Array<PalDroppedPalProductDataForShop> LocalDroppedPalData { get { return new Array<PalDroppedPalProductDataForShop>(this[nameof(LocalDroppedPalData)].Address); } }
        public PalShopProduct_LostPal LostPalProduct_Tmp { get { return this[nameof(LostPalProduct_Tmp)].As<PalShopProduct_LostPal>(); } set { this["LostPalProduct_Tmp"] = value; } }
    }
    public class PalShopProductBase : Object
    {
        public PalShopProductBase(nint addr) : base(addr) { }
        public Object OnUpdateNowStockNumDelegate { get { return this[nameof(OnUpdateNowStockNumDelegate)]; } set { this[nameof(OnUpdateNowStockNumDelegate)] = value; } }
        public Object OnUpdateMaxStockNumDelegate { get { return this[nameof(OnUpdateMaxStockNumDelegate)]; } set { this[nameof(OnUpdateMaxStockNumDelegate)] = value; } }
        public Guid MyProductID { get { return this[nameof(MyProductID)].As<Guid>(); } set { this["MyProductID"] = value; } }
        public bool IsInfinityStockFlag { get { return this[nameof(IsInfinityStockFlag)].Flag; } set { this[nameof(IsInfinityStockFlag)].Flag = value; } }
        public int StockNum { get { return this[nameof(StockNum)].GetValue<int>(); } set { this[nameof(StockNum)].SetValue<int>(value); } }
        public int MaxStockNum { get { return this[nameof(MaxStockNum)].GetValue<int>(); } set { this[nameof(MaxStockNum)].SetValue<int>(value); } }
        public bool IsValidProductFlag { get { return this[nameof(IsValidProductFlag)].Flag; } set { this[nameof(IsValidProductFlag)].Flag = value; } }
        public void UpdateNowStockNumDelegate__DelegateSignature(int NowStock) { Invoke(nameof(UpdateNowStockNumDelegate__DelegateSignature), NowStock); }
        public void UpdateMaxStockNumDelegate__DelegateSignature(int MaxStockNum) { Invoke(nameof(UpdateMaxStockNumDelegate__DelegateSignature), MaxStockNum); }
        public void OnRep_StockNum() { Invoke(nameof(OnRep_StockNum)); }
        public void OnRep_MaxStockNum() { Invoke(nameof(OnRep_MaxStockNum)); }
        public bool IsValidProduct() { return Invoke<bool>(nameof(IsValidProduct)); }
        public bool IsSoldout() { return Invoke<bool>(nameof(IsSoldout)); }
        public bool IsInfinityStock() { return Invoke<bool>(nameof(IsInfinityStock)); }
        public int GetRemainStockNum() { return Invoke<int>(nameof(GetRemainStockNum)); }
        public void GetProductNameText(Object OutText) { Invoke(nameof(GetProductNameText), OutText); }
        public int GetMaxStockNum() { return Invoke<int>(nameof(GetMaxStockNum)); }
        public int GetMaxBuyNum_LocalPlayer() { return Invoke<int>(nameof(GetMaxBuyNum_LocalPlayer)); }
        public void GetId(Guid OutID) { Invoke(nameof(GetId), OutID); }
        public bool CanBuy_LocalPlayer() { return Invoke<bool>(nameof(CanBuy_LocalPlayer)); }
    }
    public class PalShopProduct_PalSaveParameter : PalShopProductBase
    {
        public PalShopProduct_PalSaveParameter(nint addr) : base(addr) { }
        public PalIndividualCharacterSaveParameter ProductPalSaveParameter { get { return this[nameof(ProductPalSaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["ProductPalSaveParameter"] = value; } }
        public Guid ReservedPlayerUID { get { return this[nameof(ReservedPlayerUID)].As<Guid>(); } set { this["ReservedPlayerUID"] = value; } }
        public void OnCreatedBuyPal(PalInstanceID CreatedPalInstanceID) { Invoke(nameof(OnCreatedBuyPal), CreatedPalInstanceID); }
        public void GetProductPalParameter(PalIndividualCharacterSaveParameter outParameter) { Invoke(nameof(GetProductPalParameter), outParameter); }
        public int GetPrice() { return Invoke<int>(nameof(GetPrice)); }
    }
    public class PalShopProduct_LostPal : PalShopProduct_PalSaveParameter
    {
        public PalShopProduct_LostPal(nint addr) : base(addr) { }
    }
    public class PalShopProduct_TradeItem : PalShopProductBase
    {
        public PalShopProduct_TradeItem(nint addr) : base(addr) { }
        public Object ProductStaticItemID { get { return this[nameof(ProductStaticItemID)]; } set { this[nameof(ProductStaticItemID)] = value; } }
        public float BuyRate { get { return this[nameof(BuyRate)].GetValue<float>(); } set { this[nameof(BuyRate)].SetValue<float>(value); } }
        public int GetRequireMoney() { return Invoke<int>(nameof(GetRequireMoney)); }
        public void GetProductStaticItemID(Object OutStaticID) { Invoke(nameof(GetProductStaticItemID), OutStaticID); }
    }
    public class PalShopUtility : BlueprintFunctionLibrary
    {
        public PalShopUtility(nint addr) : base(addr) { }
        public void LotteryItemShop(Object WorldContextObject, Object ItemShopLotteryName, Object OutShopName) { Invoke(nameof(LotteryItemShop), WorldContextObject, ItemShopLotteryName, OutShopName); }
        public bool GetPalShopCreateData(Object WorldContextObject, Object ShopName, PalPalShopCreateDataRow OutData) { return Invoke<bool>(nameof(GetPalShopCreateData), WorldContextObject, ShopName, OutData); }
        public bool GetItemShopCreateData(Object WorldContextObject, Object ShopName, PalItemShopCreateDataRow OutData) { return Invoke<bool>(nameof(GetItemShopCreateData), WorldContextObject, ShopName, OutData); }
        public bool CreateNewPalShop(Object WorldContextObject, PalPalShopCreateDataRow createShopData, Object sharedShopKeyName, PalShopBase outCreatedShop) { return Invoke<bool>(nameof(CreateNewPalShop), WorldContextObject, createShopData, sharedShopKeyName, outCreatedShop); }
        public bool CreateNewItemShop(Object WorldContextObject, PalItemShopCreateDataRow createShopData, Object sharedShopKeyName, PalShopBase outCreatedShop) { return Invoke<bool>(nameof(CreateNewItemShop), WorldContextObject, createShopData, sharedShopKeyName, outCreatedShop); }
        public bool CanSellFromStaticItemIDAndNum(Object WorldContextObject, PalStaticItemIdAndNum staticItemIDAndNum, float SellRate) { return Invoke<bool>(nameof(CanSellFromStaticItemIDAndNum), WorldContextObject, staticItemIDAndNum, SellRate); }
        public bool CanSellFromSlotIdAndNum(Object WorldContextObject, PalItemSlotIdAndNum SlotIdAndNum, float SellRate) { return Invoke<bool>(nameof(CanSellFromSlotIdAndNum), WorldContextObject, SlotIdAndNum, SellRate); }
        public int CalcPalSellPrice(Object WorldContextObject, PalIndividualCharacterSaveParameter SaveParameter, float SellRate) { return Invoke<int>(nameof(CalcPalSellPrice), WorldContextObject, SaveParameter, SellRate); }
        public int CalcItemSellPrice(Object WorldContextObject, PalStaticItemIdAndNum staticItemIDAndNum, float SellRate) { return Invoke<int>(nameof(CalcItemSellPrice), WorldContextObject, staticItemIDAndNum, SellRate); }
    }
    public class PalSimpleInteractableObject : Actor
    {
        public PalSimpleInteractableObject(nint addr) : base(addr) { }
        public EPalInteractiveObjectIndicatorType GetIndicatorType() { return Invoke<EPalInteractiveObjectIndicatorType>(nameof(GetIndicatorType)); }
    }
    public class PalSkeletalMeshComponent : SkeletalMeshComponent
    {
        public PalSkeletalMeshComponent(nint addr) : base(addr) { }
        public bool bCanRagdoll { get { return this[nameof(bCanRagdoll)].Flag; } set { this[nameof(bCanRagdoll)].Flag = value; } }
        public float ClavicleAdjustDegree { get { return this[nameof(ClavicleAdjustDegree)].GetValue<float>(); } set { this[nameof(ClavicleAdjustDegree)].SetValue<float>(value); } }
        public bool bIsEnableGroundTilt { get { return this[nameof(bIsEnableGroundTilt)].Flag; } set { this[nameof(bIsEnableGroundTilt)].Flag = value; } }
        public float PitchAngle { get { return this[nameof(PitchAngle)].GetValue<float>(); } set { this[nameof(PitchAngle)].SetValue<float>(value); } }
        public float RollAngle { get { return this[nameof(RollAngle)].GetValue<float>(); } set { this[nameof(RollAngle)].SetValue<float>(value); } }
        public float TiltingInterpTime { get { return this[nameof(TiltingInterpTime)].GetValue<float>(); } set { this[nameof(TiltingInterpTime)].SetValue<float>(value); } }
        public Vector DefaultLocation { get { return this[nameof(DefaultLocation)].As<Vector>(); } set { this["DefaultLocation"] = value; } }
        public Rotator DefaultRotator { get { return this[nameof(DefaultRotator)].As<Rotator>(); } set { this["DefaultRotator"] = value; } }
        public Vector BeginTiltVector { get { return this[nameof(BeginTiltVector)].As<Vector>(); } set { this["BeginTiltVector"] = value; } }
        public Vector EndTiltVector { get { return this[nameof(EndTiltVector)].As<Vector>(); } set { this["EndTiltVector"] = value; } }
        public float TiltTimer { get { return this[nameof(TiltTimer)].GetValue<float>(); } set { this[nameof(TiltTimer)].SetValue<float>(value); } }
        public Object OnAppliedMakeInfo { get { return this[nameof(OnAppliedMakeInfo)]; } set { this[nameof(OnAppliedMakeInfo)] = value; } }
        public FlagContainer DisableTilt { get { return this[nameof(DisableTilt)].As<FlagContainer>(); } set { this["DisableTilt"] = value; } }
        public FloatContainer ScaleFloatContainer { get { return this[nameof(ScaleFloatContainer)].As<FloatContainer>(); } set { this["ScaleFloatContainer"] = value; } }
        public FloatContainer PitchFloatContainer { get { return this[nameof(PitchFloatContainer)].As<FloatContainer>(); } set { this["PitchFloatContainer"] = value; } }
        public FloatContainer AnimRateScaleFloatContainer { get { return this[nameof(AnimRateScaleFloatContainer)].As<FloatContainer>(); } set { this["AnimRateScaleFloatContainer"] = value; } }
        public float DefaultAnimRateScale { get { return this[nameof(DefaultAnimRateScale)].GetValue<float>(); } set { this[nameof(DefaultAnimRateScale)].SetValue<float>(value); } }
        public Vector DefaultScale3D { get { return this[nameof(DefaultScale3D)].As<Vector>(); } set { this["DefaultScale3D"] = value; } }
        public EPalSkeletalMeshType PalSkeletalMeshType { get { return (EPalSkeletalMeshType)this[nameof(PalSkeletalMeshType)].GetValue<int>(); } set { this[nameof(PalSkeletalMeshType)].SetValue<int>((int)value); } }
        public float CharcterMakeMorphMax { get { return this[nameof(CharcterMakeMorphMax)].GetValue<float>(); } set { this[nameof(CharcterMakeMorphMax)].SetValue<float>(value); } }
        public Object ItemName { get { return this[nameof(ItemName)]; } set { this[nameof(ItemName)] = value; } }
        public Object BodyTypeName { get { return this[nameof(BodyTypeName)]; } set { this[nameof(BodyTypeName)] = value; } }
        public bool DisableChangeMesh_ByPlayerDead { get { return this[nameof(DisableChangeMesh_ByPlayerDead)].Flag; } set { this[nameof(DisableChangeMesh_ByPlayerDead)].Flag = value; } }
        public EVisibilityBasedAnimTickOption DefaultTickOption { get { return (EVisibilityBasedAnimTickOption)this[nameof(DefaultTickOption)].GetValue<int>(); } set { this[nameof(DefaultTickOption)].SetValue<int>((int)value); } }
        public PalPlayerDataCharacterMakeInfo CharacterMakeInfo { get { return this[nameof(CharacterMakeInfo)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["CharacterMakeInfo"] = value; } }
        public void SetTiltDisable(Object flagName, bool bIsDisable) { Invoke(nameof(SetTiltDisable), flagName, bIsDisable); }
        public void SetRuntimeScale(Object flagName, float Scale) { Invoke(nameof(SetRuntimeScale), flagName, Scale); }
        public void SetRuntimePitch(Object flagName, float Pitch) { Invoke(nameof(SetRuntimePitch), flagName, Pitch); }
        public void SetRuntimeAnimRateScale(Object flagName, float RateScale) { Invoke(nameof(SetRuntimeAnimRateScale), flagName, RateScale); }
        public void SetDisableChangeMesh(bool Disable) { Invoke(nameof(SetDisableChangeMesh), Disable); }
        public void SetCharacterMakeInfo(PalPlayerDataCharacterMakeInfo Info) { Invoke(nameof(SetCharacterMakeInfo), Info); }
        public void ResetTransformToDefault() { Invoke(nameof(ResetTransformToDefault)); }
        public bool IsDisableTilt() { return Invoke<bool>(nameof(IsDisableTilt)); }
        public EPalSkeletalMeshType GetPalSkeletalMeshType() { return Invoke<EPalSkeletalMeshType>(nameof(GetPalSkeletalMeshType)); }
        public float GetAnimRateScale() { return Invoke<float>(nameof(GetAnimRateScale)); }
        public void ChangeVisibilityAnimTick(EPalSkeletalTickLayer SkeletalTickLayer) { Invoke(nameof(ChangeVisibilityAnimTick), SkeletalTickLayer); }
        public void AppliedMakeInfoDelegate__DelegateSignature(PalSkeletalMeshComponent SkeletalMeshComponent) { Invoke(nameof(AppliedMakeInfoDelegate__DelegateSignature), SkeletalMeshComponent); }
    }
    public class PalSkillDamageReactionComponent : ActorComponent
    {
        public PalSkillDamageReactionComponent(nint addr) : base(addr) { }
        public Object OnDamageDelegate { get { return this[nameof(OnDamageDelegate)]; } set { this[nameof(OnDamageDelegate)] = value; } }
        public PalHitEffectSlot EffectSlot { get { return this[nameof(EffectSlot)].As<PalHitEffectSlot>(); } set { this["EffectSlot"] = value; } }
    }
    public class PalSkillEffectBase : Actor
    {
        public PalSkillEffectBase(nint addr) : base(addr) { }
        public float EffectSize { get { return this[nameof(EffectSize)].GetValue<float>(); } set { this[nameof(EffectSize)].SetValue<float>(value); } }
        public float MinSize { get { return this[nameof(MinSize)].GetValue<float>(); } set { this[nameof(MinSize)].SetValue<float>(value); } }
        public float MaxSize { get { return this[nameof(MaxSize)].GetValue<float>(); } set { this[nameof(MaxSize)].SetValue<float>(value); } }
        public float LifeTime { get { return this[nameof(LifeTime)].GetValue<float>(); } set { this[nameof(LifeTime)].SetValue<float>(value); } }
        public PalAttackFilter AttackFilter { get { return this[nameof(AttackFilter)].As<PalAttackFilter>(); } set { this["AttackFilter"] = value; } }
        public PalHitFilter HitFilterGround { get { return this[nameof(HitFilterGround)].As<PalHitFilter>(); } set { this["HitFilterGround"] = value; } }
        public PalHitFilter HitFilterCustomRange { get { return this[nameof(HitFilterCustomRange)].As<PalHitFilter>(); } set { this["HitFilterCustomRange"] = value; } }
        public Actor AttackTarget { get { return this[nameof(AttackTarget)].As<Actor>(); } set { this["AttackTarget"] = value; } }
        public TimerHandle LifeTimeHandler { get { return this[nameof(LifeTimeHandler)].As<TimerHandle>(); } set { this["LifeTimeHandler"] = value; } }
        public PalSoundPlayer SoundPlayer { get { return this[nameof(SoundPlayer)].As<PalSoundPlayer>(); } set { this["SoundPlayer"] = value; } }
        public RandomStream RandomStream { get { return this[nameof(RandomStream)].As<RandomStream>(); } set { this["RandomStream"] = value; } }
        public void StopAllNiagaraSound() { Invoke(nameof(StopAllNiagaraSound)); }
        public void StopAkSound() { Invoke(nameof(StopAkSound)); }
        public TimerHandle SetTimeCallbackBySkillEffectSpawnParameter(Object WorldContextObject, SkillEffectSpawnParameter Parameter, Object callObject, Object timeDelegate) { return Invoke<TimerHandle>(nameof(SetTimeCallbackBySkillEffectSpawnParameter), WorldContextObject, Parameter, callObject, timeDelegate); }
        public void SetActorTransformByOwner(Actor SkillOwner, Vector MyOffset) { Invoke(nameof(SetActorTransformByOwner), SkillOwner, MyOffset); }
        public void SetActionTargetActor(Actor Target) { Invoke(nameof(SetActionTargetActor), Target); }
        public void PlayAkSound(AkAudioEvent AudioEvent) { Invoke(nameof(PlayAkSound), AudioEvent); }
        public void OnInitialize() { Invoke(nameof(OnInitialize)); }
        public void LifeTimeCallback() { Invoke(nameof(LifeTimeCallback)); }
        public bool IsSelfOwnerCharacterOrRaider(Actor HitTarget) { return Invoke<bool>(nameof(IsSelfOwnerCharacterOrRaider), HitTarget); }
        public bool IsRidden() { return Invoke<bool>(nameof(IsRidden)); }
        public void Initialize(Actor SkillOwner, Vector MyOffset, Actor Target, RandomStream RandomStream) { Invoke(nameof(Initialize), SkillOwner, MyOffset, Target, RandomStream); }
        public PalCharacter GetOwnerCharacter() { return Invoke<PalCharacter>(nameof(GetOwnerCharacter)); }
        public Vector GetActionTargetLocation() { return Invoke<Vector>(nameof(GetActionTargetLocation)); }
        public Actor GetActionTargetActor() { return Invoke<Actor>(nameof(GetActionTargetActor)); }
        public PalSkillEffectBase CreateChildSkillEffect(Object EffectClass, Transform SpawnTransform, RandomStream RandomStream, ESpawnActorCollisionHandlingMethod collisionMethod, Actor ownerActor) { return Invoke<PalSkillEffectBase>(nameof(CreateChildSkillEffect), EffectClass, SpawnTransform, RandomStream, collisionMethod, ownerActor); }
    }
    public class PalSkyLightVolume : Actor
    {
        public PalSkyLightVolume(nint addr) : base(addr) { }
        public SkyLightComponent Component { get { return this[nameof(Component)].As<SkyLightComponent>(); } set { this["Component"] = value; } }
        public bool bEnabled { get { return this[nameof(bEnabled)].Flag; } set { this[nameof(bEnabled)].Flag = value; } }
        public bool bDisableEnabledFlag { get { return this[nameof(bDisableEnabledFlag)].Flag; } set { this[nameof(bDisableEnabledFlag)].Flag = value; } }
        public void OnRep_bEnabled() { Invoke(nameof(OnRep_bEnabled)); }
    }
    public class PalSoundDebugModel : Actor
    {
        public PalSoundDebugModel(nint addr) : base(addr) { }
        public void Initialize(AkAudioEvent AudioEvent) { Invoke(nameof(Initialize), AudioEvent); }
    }
    public class PalSoundEmitterComponent : ActorComponent
    {
        public PalSoundEmitterComponent(nint addr) : base(addr) { }
        public void EmitSound(Object SoundFName, Actor EmitterCharacter, Vector EmitLocation, float VolumeRate) { Invoke(nameof(EmitSound), SoundFName, EmitterCharacter, EmitLocation, VolumeRate); }
    }
    public class PalSoundPlayer : Object
    {
        public PalSoundPlayer(nint addr) : base(addr) { }
        public Object AkCallbackOuter { get { return this[nameof(AkCallbackOuter)]; } set { this[nameof(AkCallbackOuter)] = value; } }
        public bool StopWhenOwnerDestroyed { get { return this[nameof(StopWhenOwnerDestroyed)].Flag; } set { this[nameof(StopWhenOwnerDestroyed)].Flag = value; } }
        public SceneComponent OwnerComponent { get { return this[nameof(OwnerComponent)].As<SceneComponent>(); } set { this["OwnerComponent"] = value; } }
        public AkComponent AkComponent { get { return this[nameof(AkComponent)].As<AkComponent>(); } set { this["AkComponent"] = value; } }
        public Object OwnerAttachPointName { get { return this[nameof(OwnerAttachPointName)]; } set { this[nameof(OwnerAttachPointName)] = value; } }
        public Object AkCallback { get { return this[nameof(AkCallback)]; } set { this[nameof(AkCallback)] = value; } }
        public Object PlaySoundParameters { get { return this[nameof(PlaySoundParameters)]; } set { this[nameof(PlaySoundParameters)] = value; } }
        public Object OutputBusVolumes { get { return this[nameof(OutputBusVolumes)]; } set { this[nameof(OutputBusVolumes)] = value; } }
        public void UpdateOutputBusBolume() { Invoke(nameof(UpdateOutputBusBolume)); }
        public void Terminate() { Invoke(nameof(Terminate)); }
        public void StopSound() { Invoke(nameof(StopSound)); }
        public void StopByPlayingId(int PlayingID) { Invoke(nameof(StopByPlayingId), PlayingID); }
        public void SetWorldLocation(Vector Location) { Invoke(nameof(SetWorldLocation), Location); }
        public void SetSwitch(Object SwitchGroup, Object SwitchState) { Invoke(nameof(SetSwitch), SwitchGroup, SwitchState); }
        public void SetRTPCValue(Object Name, float Value, float interpolSec) { Invoke(nameof(SetRTPCValue), Name, Value, interpolSec); }
        public void SetPhysicalMaterial(byte PhysicalSurface) { Invoke(nameof(SetPhysicalMaterial), PhysicalSurface); }
        public void SetOutputBusVolume(Object Name, float Volume) { Invoke(nameof(SetOutputBusVolume), Name, Volume); }
        public void SetOcclusionRefreshInterval(float Interval) { Invoke(nameof(SetOcclusionRefreshInterval), Interval); }
        public void PostTrigger(Object Trigger) { Invoke(nameof(PostTrigger), Trigger); }
        public int PlaySound(AkAudioEvent AudioEvent, PalSoundOptions Options) { return Invoke<int>(nameof(PlaySound), AudioEvent, Options); }
        public void OnAkPostEventCallback(EAkCallbackType CallbackType, AkCallbackInfo CallbackInfo) { Invoke(nameof(OnAkPostEventCallback), CallbackType, CallbackInfo); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public Vector GetWorldLocation() { return Invoke<Vector>(nameof(GetWorldLocation)); }
        public Rotator GetOwnerRotation() { return Invoke<Rotator>(nameof(GetOwnerRotation)); }
        public Vector GetOwnerLocation() { return Invoke<Vector>(nameof(GetOwnerLocation)); }
        public bool GetOutputBusVolume(Object Name, float Volume) { return Invoke<bool>(nameof(GetOutputBusVolume), Name, Volume); }
        public void FadeOutByPlayingId(int PlayingID, int FadeOutDuration) { Invoke(nameof(FadeOutByPlayingId), PlayingID, FadeOutDuration); }
        public void ClearOutputBusVolume(Object Name) { Invoke(nameof(ClearOutputBusVolume), Name); }
    }
    public class PalSoundPlayerComponent : ActorComponent
    {
        public PalSoundPlayerComponent(nint addr) : base(addr) { }
        public Object PalSoundSlotClass { get { return this[nameof(PalSoundSlotClass)]; } set { this[nameof(PalSoundSlotClass)] = value; } }
        public Object OnGetAkOwnerComponent { get { return this[nameof(OnGetAkOwnerComponent)]; } set { this[nameof(OnGetAkOwnerComponent)] = value; } }
        public PalSoundSlot PalSoundSlotCache { get { return this[nameof(PalSoundSlotCache)].As<PalSoundSlot>(); } set { this["PalSoundSlotCache"] = value; } }
        public SceneComponent OnGetAkOwnerComponent__DelegateSignature() { return Invoke<SceneComponent>(nameof(OnGetAkOwnerComponent__DelegateSignature)); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
    }
    public class PalSoundPlayerInEditorComponent : ActorComponent
    {
        public PalSoundPlayerInEditorComponent(nint addr) : base(addr) { }
        public Object PalSoundSlotClass { get { return this[nameof(PalSoundSlotClass)]; } set { this[nameof(PalSoundSlotClass)] = value; } }
        public PalSoundSlot PalSoundSlotCache { get { return this[nameof(PalSoundSlotCache)].As<PalSoundSlot>(); } set { this["PalSoundSlotCache"] = value; } }
        public void SetPhysicalMaterial(byte PhysicalSurface) { Invoke(nameof(SetPhysicalMaterial), PhysicalSurface); }
    }
    public class PalSoundSlot : Object
    {
        public PalSoundSlot(nint addr) : base(addr) { }
        public Object SoundMap { get { return this[nameof(SoundMap)]; } set { this[nameof(SoundMap)] = value; } }
        public Object PlaySoundParameters { get { return this[nameof(PlaySoundParameters)]; } set { this[nameof(PlaySoundParameters)] = value; } }
        public PalSoundPlayer SoundPlayer { get { return this[nameof(SoundPlayer)].As<PalSoundPlayer>(); } set { this["SoundPlayer"] = value; } }
        public void Terminate() { Invoke(nameof(Terminate)); }
        public void StopSoundBySoundId(PalDataTableRowName_SoundID SoundId) { Invoke(nameof(StopSoundBySoundId), SoundId); }
        public void StopSound() { Invoke(nameof(StopSound)); }
        public void StopByPlayingId(int PlayingID) { Invoke(nameof(StopByPlayingId), PlayingID); }
        public void SetSwitch(Object SwitchGroup, Object SwitchState) { Invoke(nameof(SetSwitch), SwitchGroup, SwitchState); }
        public void SetRTPCValue(Object Name, float Value, float interpolSec) { Invoke(nameof(SetRTPCValue), Name, Value, interpolSec); }
        public void SetPhysicalMaterial(byte PhysicalSurface) { Invoke(nameof(SetPhysicalMaterial), PhysicalSurface); }
        public int PlaySoundByAkEvent(AkAudioEvent AkEvent, PalSoundOptions Options) { return Invoke<int>(nameof(PlaySoundByAkEvent), AkEvent, Options); }
        public int PlaySound(PalDataTableRowName_SoundID ID, PalSoundOptions Options) { return Invoke<int>(nameof(PlaySound), ID, Options); }
        public void OnAkPostEventCallback(EAkCallbackType CallbackType, AkCallbackInfo CallbackInfo) { Invoke(nameof(OnAkPostEventCallback), CallbackType, CallbackInfo); }
        public bool IsPlayingBySoundId(PalDataTableRowName_SoundID SoundId) { return Invoke<bool>(nameof(IsPlayingBySoundId), SoundId); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public PalSoundPlayer GetSoundPlayer() { return Invoke<PalSoundPlayer>(nameof(GetSoundPlayer)); }
        public AkAudioEvent GetAkEvent(PalDataTableRowName_SoundID ID) { return Invoke<AkAudioEvent>(nameof(GetAkEvent), ID); }
    }
    public class PalSoundUtility : BlueprintFunctionLibrary
    {
        public PalSoundUtility(nint addr) : base(addr) { }
        public void StopSoundByActorWithSoundId(Actor Actor, PalDataTableRowName_SoundID ID) { Invoke(nameof(StopSoundByActorWithSoundId), Actor, ID); }
        public void StopSoundByActor_Editor(Actor Actor) { Invoke(nameof(StopSoundByActor_Editor), Actor); }
        public void StopSoundByActor(Actor Actor) { Invoke(nameof(StopSoundByActor), Actor); }
        public PalSoundDebugModel SpawnSoundDebugModel(AkAudioEvent AudioEvent, Vector Location, Rotator Rotation, Object WorldObject) { return Invoke<PalSoundDebugModel>(nameof(SpawnSoundDebugModel), AudioEvent, Location, Rotation, WorldObject); }
        public void SetSwitchByActor(Actor Actor, Object SwitchGroup, Object SwitchState) { Invoke(nameof(SetSwitchByActor), Actor, SwitchGroup, SwitchState); }
        public void SetRTPCValueByActor(Actor Actor, Object Name, float Value, float interpolSec) { Invoke(nameof(SetRTPCValueByActor), Actor, Name, Value, interpolSec); }
        public void SetPhysicalMaterial(Actor Actor, byte PhysicalSurface) { Invoke(nameof(SetPhysicalMaterial), Actor, PhysicalSurface); }
        public void PlaySoundByActor_Editor(Actor Actor, PalDataTableRowName_SoundID ID, PalSoundOptions Option, Object SoundSlotClass, byte PhysicalSurface) { Invoke(nameof(PlaySoundByActor_Editor), Actor, ID, Option, SoundSlotClass, PhysicalSurface); }
        public void PlaySoundByActor(Actor Actor, PalDataTableRowName_SoundID ID, PalSoundOptions Option) { Invoke(nameof(PlaySoundByActor), Actor, ID, Option); }
        public bool PlayAkEventSoundByActor(Actor Actor, AkAudioEvent AkEvent) { return Invoke<bool>(nameof(PlayAkEventSoundByActor), Actor, AkEvent); }
        public void PalSoundUtilityBoolCallbackFunction__DelegateSignature(bool IsPlaying) { Invoke(nameof(PalSoundUtilityBoolCallbackFunction__DelegateSignature), IsPlaying); }
        public void IsSoundPlayingByActor(Actor Actor, PalDataTableRowName_SoundID ID, Object cb) { Invoke(nameof(IsSoundPlayingByActor), Actor, ID, cb); }
    }
    public class PalSpectator : PalCharacter
    {
        public PalSpectator(nint addr) : base(addr) { }
    }
    public class PalSpeedCollisionComponent : SphereComponent
    {
        public PalSpeedCollisionComponent(nint addr) : base(addr) { }
        public bool IsSelfEnable { get { return this[nameof(IsSelfEnable)].Flag; } set { this[nameof(IsSelfEnable)].Flag = value; } }
        public Array<PalInstanceID> HitPalList { get { return new Array<PalInstanceID>(this[nameof(HitPalList)].Address); } }
        public void OnAllActionEnd(PalActionComponent ActionComponent) { Invoke(nameof(OnAllActionEnd), ActionComponent); }
        public void OnActionBegin(PalActionBase action) { Invoke(nameof(OnActionBegin), action); }
        public void DelayRemoveInterval() { Invoke(nameof(DelayRemoveInterval)); }
        public void BeginOverlapEvent(PrimitiveComponent OverlappedComponent, Actor OtherActor, PrimitiveComponent OtherComp, int OtherBodyIndex, bool bFromSweep, HitResult SweepResult) { Invoke(nameof(BeginOverlapEvent), OverlappedComponent, OtherActor, OtherComp, OtherBodyIndex, bFromSweep, SweepResult); }
    }
    public class PalSphereBodyBase : Actor
    {
        public PalSphereBodyBase(nint addr) : base(addr) { }
        public void RPCDummy() { Invoke(nameof(RPCDummy)); }
    }
    public class PalSpotAreaBase : Actor
    {
        public PalSpotAreaBase(nint addr) : base(addr) { }
        public EPalAudioState AudioState { get { return (EPalAudioState)this[nameof(AudioState)].GetValue<int>(); } set { this[nameof(AudioState)].SetValue<int>((int)value); } }
        public bool bIsOverlappedLocalPlayer { get { return this[nameof(bIsOverlappedLocalPlayer)].Flag; } set { this[nameof(bIsOverlappedLocalPlayer)].Flag = value; } }
        public void OnEndOverlap(PrimitiveComponent OverlappedComponent, PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnEndOverlap), OverlappedComponent, PlayerCharacter); }
        public void OnBeginOverlap(PrimitiveComponent OverlappedComponent, PalPlayerCharacter PlayerCharacter) { Invoke(nameof(OnBeginOverlap), OverlappedComponent, PlayerCharacter); }
        public EPalAudioState GetAudioState() { return Invoke<EPalAudioState>(nameof(GetAudioState)); }
        public PrimitiveComponent GetAreaCollision() { return Invoke<PrimitiveComponent>(nameof(GetAreaCollision)); }
    }
    public class PalSquad : Object
    {
        public PalSquad(nint addr) : base(addr) { }
        public Object OnSomeOneDeadDelegate { get { return this[nameof(OnSomeOneDeadDelegate)]; } set { this[nameof(OnSomeOneDeadDelegate)] = value; } }
        public Object OnCombatPropagationDelegate { get { return this[nameof(OnCombatPropagationDelegate)]; } set { this[nameof(OnCombatPropagationDelegate)] = value; } }
        public Object OnEscapePropagationDelegate { get { return this[nameof(OnEscapePropagationDelegate)]; } set { this[nameof(OnEscapePropagationDelegate)] = value; } }
        public PalInstanceID LeaderId { get { return this[nameof(LeaderId)].As<PalInstanceID>(); } set { this["LeaderId"] = value; } }
        public Array<PalInstanceID> MemberIDList { get { return new Array<PalInstanceID>(this[nameof(MemberIDList)].Address); } }
        public PalAIBlackboardBase LeaderBB { get { return this[nameof(LeaderBB)].As<PalAIBlackboardBase>(); } set { this["LeaderBB"] = value; } }
        public void RemoveWhenDestoryActor(Actor DestoryActor) { Invoke(nameof(RemoveWhenDestoryActor), DestoryActor); }
        public void OnSomeOneDeadDelegate__DelegateSignature(PalDeadInfo DeadInfo) { Invoke(nameof(OnSomeOneDeadDelegate__DelegateSignature), DeadInfo); }
        public void OnCombatPropagationDelegate__DelegateSignature(Actor StartActor) { Invoke(nameof(OnCombatPropagationDelegate__DelegateSignature), StartActor); }
        public void GetMemberID(Array<PalInstanceID> OutList) { Invoke(nameof(GetMemberID), OutList); }
        public void EscapeStart(Actor StartActor, Actor Target) { Invoke(nameof(EscapeStart), StartActor, Target); }
        public void EscapePropagationDelegate__DelegateSignature(Actor StartActor, Actor TargetActor) { Invoke(nameof(EscapePropagationDelegate__DelegateSignature), StartActor, TargetActor); }
        public void DeadAndUpdateLeader(PalDeadInfo DeadInfo) { Invoke(nameof(DeadAndUpdateLeader), DeadInfo); }
        public void CombatStart(Actor StartActor) { Invoke(nameof(CombatStart), StartActor); }
        public void AddCharacter(PalInstanceID PalInstanceID) { Invoke(nameof(AddCharacter), PalInstanceID); }
    }
    public class PalStageAreaBounds : Actor
    {
        public PalStageAreaBounds(nint addr) : base(addr) { }
    }
    public class PalStageRegistrationParameterBase : Object
    {
        public PalStageRegistrationParameterBase(nint addr) : base(addr) { }
    }
    public class PalStageDefines : Object
    {
        public PalStageDefines(nint addr) : base(addr) { }
    }
    public class PalStageUtility : BlueprintFunctionLibrary
    {
        public PalStageUtility(nint addr) : base(addr) { }
    }
    public class PalStageModelBase : Object
    {
        public PalStageModelBase(nint addr) : base(addr) { }
        public PalStageInstanceId InstanceId { get { return this[nameof(InstanceId)].As<PalStageInstanceId>(); } set { this["InstanceId"] = value; } }
        public Array<PalStagePlayerInfo> PlayerInfos { get { return new Array<PalStagePlayerInfo>(this[nameof(PlayerInfos)].Address); } }
        public void OnCompleteLoadStage_ServerInternal(PalStageModelBase TargetStageModel) { Invoke(nameof(OnCompleteLoadStage_ServerInternal), TargetStageModel); }
    }
    public class PalStageRegistrationParameterBossBattle : PalStageRegistrationParameterBase
    {
        public PalStageRegistrationParameterBossBattle(nint addr) : base(addr) { }
    }
    public class PalStageModelBossBattle : PalStageModelBase
    {
        public PalStageModelBossBattle(nint addr) : base(addr) { }
        public PalBossBattleInstanceModel InstanceModel { get { return this[nameof(InstanceModel)].As<PalBossBattleInstanceModel>(); } set { this["InstanceModel"] = value; } }
        public void OnRep_InstanceModel() { Invoke(nameof(OnRep_InstanceModel)); }
        public PalBossBattleInstanceModel GetInstanceModel() { return Invoke<PalBossBattleInstanceModel>(nameof(GetInstanceModel)); }
    }
    public class PalStageRegistrationParameterDungeon : PalStageRegistrationParameterBase
    {
        public PalStageRegistrationParameterDungeon(nint addr) : base(addr) { }
    }
    public class PalStageModelDungeon : PalStageModelBase
    {
        public PalStageModelDungeon(nint addr) : base(addr) { }
        public PalDungeonInstanceModel InstanceModel { get { return this[nameof(InstanceModel)].As<PalDungeonInstanceModel>(); } set { this["InstanceModel"] = value; } }
        public PalDungeonInstanceModel GetInstanceModel() { return Invoke<PalDungeonInstanceModel>(nameof(GetInstanceModel)); }
    }
    public class PalStageReplicator : PalGameStateReplicatorBase
    {
        public PalStageReplicator(nint addr) : base(addr) { }
        public PalFastStageModelRepInfoArray RepInfoArray { get { return this[nameof(RepInfoArray)].As<PalFastStageModelRepInfoArray>(); } set { this["RepInfoArray"] = value; } }
    }
    public class PalStageWorldSubsystem : PalWorldSubsystem
    {
        public PalStageWorldSubsystem(nint addr) : base(addr) { }
        public Object StageModelMap { get { return this[nameof(StageModelMap)]; } set { this[nameof(StageModelMap)] = value; } }
        public Object StageAreaInfoMap { get { return this[nameof(StageAreaInfoMap)]; } set { this[nameof(StageAreaInfoMap)] = value; } }
    }
    public class PalStateMachineStateBase_BlueprintBase : PalStateMachineStateBase
    {
        public PalStateMachineStateBase_BlueprintBase(nint addr) : base(addr) { }
        public void StateTick(float DeltaTime) { Invoke(nameof(StateTick), DeltaTime); }
        public void StateExit() { Invoke(nameof(StateExit)); }
        public void StateEnter() { Invoke(nameof(StateEnter)); }
    }
    public class PalStaticItemDataBase : Object
    {
        public PalStaticItemDataBase(nint addr) : base(addr) { }
        public Object ID { get { return this[nameof(ID)]; } set { this[nameof(ID)] = value; } }
        public Object IconTexture { get { return this[nameof(IconTexture)]; } set { this[nameof(IconTexture)] = value; } }
        public EPalItemTypeA TypeA { get { return (EPalItemTypeA)this[nameof(TypeA)].GetValue<int>(); } set { this[nameof(TypeA)].SetValue<int>((int)value); } }
        public EPalItemTypeB TypeB { get { return (EPalItemTypeB)this[nameof(TypeB)].GetValue<int>(); } set { this[nameof(TypeB)].SetValue<int>((int)value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public int Rarity { get { return this[nameof(Rarity)].GetValue<int>(); } set { this[nameof(Rarity)].SetValue<int>(value); } }
        public int Price { get { return this[nameof(Price)].GetValue<int>(); } set { this[nameof(Price)].SetValue<int>(value); } }
        public int MaxStackCount { get { return this[nameof(MaxStackCount)].GetValue<int>(); } set { this[nameof(MaxStackCount)].SetValue<int>(value); } }
        public int SortID { get { return this[nameof(SortID)].GetValue<int>(); } set { this[nameof(SortID)].SetValue<int>(value); } }
        public Object DynamicItemDataClass { get { return this[nameof(DynamicItemDataClass)]; } set { this[nameof(DynamicItemDataClass)] = value; } }
        public bool bNotConsumed { get { return this[nameof(bNotConsumed)].Flag; } set { this[nameof(bNotConsumed)].Flag = value; } }
        public Object actorClass { get { return this[nameof(actorClass)]; } set { this[nameof(actorClass)] = value; } }
        public Object StaticMeshPath { get { return this[nameof(StaticMeshPath)]; } set { this[nameof(StaticMeshPath)] = value; } }
        public Object VisualBlueprintClassSoft { get { return this[nameof(VisualBlueprintClassSoft)]; } set { this[nameof(VisualBlueprintClassSoft)] = value; } }
        public EPalDropItemType DropItemType { get { return (EPalDropItemType)this[nameof(DropItemType)].GetValue<int>(); } set { this[nameof(DropItemType)].SetValue<int>((int)value); } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public float Durability { get { return this[nameof(Durability)].GetValue<float>(); } set { this[nameof(Durability)].SetValue<float>(value); } }
        public Object PassiveSkill { get { return this[nameof(PassiveSkill)]; } set { this[nameof(PassiveSkill)] = value; } }
        public float CorruptionFactor { get { return this[nameof(CorruptionFactor)].GetValue<float>(); } set { this[nameof(CorruptionFactor)].SetValue<float>(value); } }
        //public float FloatValue1 { get { return this[nameof(FloatValue1)].GetValue<float>(); } set { this[nameof(FloatValue1)].SetValue<float>(value); } }
        public Object OverrideNameMsgID { get { return this[nameof(OverrideNameMsgID)]; } set { this[nameof(OverrideNameMsgID)] = value; } }
        public Object OverrideDescMsgID { get { return this[nameof(OverrideDescMsgID)]; } set { this[nameof(OverrideDescMsgID)] = value; } }
        public bool UseItem(PalDynamicItemDataBase DynamicItemData, Object WorldContextObject) { return Invoke<bool>(nameof(UseItem), DynamicItemData, WorldContextObject); }
        public bool IsCorruptible() { return Invoke<bool>(nameof(IsCorruptible)); }
        public bool HasDynamicItemClass() { return Invoke<bool>(nameof(HasDynamicItemClass)); }
        public bool HasActorClass() { return Invoke<bool>(nameof(HasActorClass)); }
        public Object GetVisualBlueprintClass(Object WorldContextObject) { return Invoke<Object>(nameof(GetVisualBlueprintClass), WorldContextObject); }
        public Object GetPassiveSkill() { return Invoke<Object>(nameof(GetPassiveSkill)); }
        public void GetNameMsgId(Object OutMsgID) { Invoke(nameof(GetNameMsgId), OutMsgID); }
        public int GetMaxStackCount() { return Invoke<int>(nameof(GetMaxStackCount)); }
        public Object GetId() { return Invoke<Object>(nameof(GetId)); }
        public Object GetDynamicItemDataClass() { return Invoke<Object>(nameof(GetDynamicItemDataClass)); }
        public void GetDescriptionMsgId(Object OutMsgID) { Invoke(nameof(GetDescriptionMsgId), OutMsgID); }
        public Object GetActorClass() { return Invoke<Object>(nameof(GetActorClass)); }
    }
    public class PalStaticArmorItemData : PalStaticItemDataBase
    {
        public PalStaticArmorItemData(nint addr) : base(addr) { }
        public int AttackValue { get { return this[nameof(AttackValue)].GetValue<int>(); } set { this[nameof(AttackValue)].SetValue<int>(value); } }
        public int DefenseValue { get { return this[nameof(DefenseValue)].GetValue<int>(); } set { this[nameof(DefenseValue)].SetValue<int>(value); } }
        public int HPValue { get { return this[nameof(HPValue)].GetValue<int>(); } set { this[nameof(HPValue)].SetValue<int>(value); } }
        public int ShieldValue { get { return this[nameof(ShieldValue)].GetValue<int>(); } set { this[nameof(ShieldValue)].SetValue<int>(value); } }
        public int GetShieldValue() { return Invoke<int>(nameof(GetShieldValue)); }
        public int GetHPValue() { return Invoke<int>(nameof(GetHPValue)); }
        public int GetDefenseValue() { return Invoke<int>(nameof(GetDefenseValue)); }
        public int GetAttackValue() { return Invoke<int>(nameof(GetAttackValue)); }
    }
    public class PalStaticCharacterParameterComponent : ActorComponent
    {
        public PalStaticCharacterParameterComponent(nint addr) : base(addr) { }
        public Object AIActionMap { get { return this[nameof(AIActionMap)]; } set { this[nameof(AIActionMap)] = value; } }
        public float CallApproachWalkSpeedMultiplier { get { return this[nameof(CallApproachWalkSpeedMultiplier)].GetValue<float>(); } set { this[nameof(CallApproachWalkSpeedMultiplier)].SetValue<float>(value); } }
        public Array<AnimMontage> RandomRestMontage { get { return new Array<AnimMontage>(this[nameof(RandomRestMontage)].Address); } }
        public Array<PalRandomRestInfo> RandomRestMontageInfos { get { return new Array<PalRandomRestInfo>(this[nameof(RandomRestMontageInfos)].Address); } }
        public Object GeneralAnimSequenceMap { get { return this[nameof(GeneralAnimSequenceMap)]; } set { this[nameof(GeneralAnimSequenceMap)] = value; } }
        public Object GeneralMontageMap { get { return this[nameof(GeneralMontageMap)]; } set { this[nameof(GeneralMontageMap)] = value; } }
        public Object GeneralBlendSpaceMap { get { return this[nameof(GeneralBlendSpaceMap)]; } set { this[nameof(GeneralBlendSpaceMap)] = value; } }
        public Object RagdollPresetMap { get { return this[nameof(RagdollPresetMap)]; } set { this[nameof(RagdollPresetMap)] = value; } }
        public Object ActionMontageMap { get { return this[nameof(ActionMontageMap)]; } set { this[nameof(ActionMontageMap)] = value; } }
        public Array<AnimMontage> EmoteList { get { return new Array<AnimMontage>(this[nameof(EmoteList)].Address); } }
        public Object WazaActionDeclarationMap { get { return this[nameof(WazaActionDeclarationMap)]; } set { this[nameof(WazaActionDeclarationMap)] = value; } }
        public Object WazaActionInstancedMap { get { return this[nameof(WazaActionInstancedMap)]; } set { this[nameof(WazaActionInstancedMap)] = value; } }
        public float CaptureSuccessRate { get { return this[nameof(CaptureSuccessRate)].GetValue<float>(); } set { this[nameof(CaptureSuccessRate)].SetValue<float>(value); } }
        public bool IsPal { get { return this[nameof(IsPal)].Flag; } set { this[nameof(IsPal)].Flag = value; } }
        public float SkillEffectScale { get { return this[nameof(SkillEffectScale)].GetValue<float>(); } set { this[nameof(SkillEffectScale)].SetValue<float>(value); } }
        public Vector SkillEffectOffsetScale { get { return this[nameof(SkillEffectOffsetScale)].As<Vector>(); } set { this["SkillEffectOffsetScale"] = value; } }
        public float FollowSideDistanceRate { get { return this[nameof(FollowSideDistanceRate)].GetValue<float>(); } set { this[nameof(FollowSideDistanceRate)].SetValue<float>(value); } }
        public Object FootStampMap { get { return this[nameof(FootStampMap)]; } set { this[nameof(FootStampMap)] = value; } }
        public float StepVelocityXY { get { return this[nameof(StepVelocityXY)].GetValue<float>(); } set { this[nameof(StepVelocityXY)].SetValue<float>(value); } }
        public float StepVelocityZ { get { return this[nameof(StepVelocityZ)].GetValue<float>(); } set { this[nameof(StepVelocityZ)].SetValue<float>(value); } }
        public Object HeadBoneName { get { return this[nameof(HeadBoneName)]; } set { this[nameof(HeadBoneName)] = value; } }
        public Object PhysicsBodyRootName { get { return this[nameof(PhysicsBodyRootName)]; } set { this[nameof(PhysicsBodyRootName)] = value; } }
        public Object ToolAttachBoneName { get { return this[nameof(ToolAttachBoneName)]; } set { this[nameof(ToolAttachBoneName)] = value; } }
        public Vector2D HPGaugeUIOffset { get { return this[nameof(HPGaugeUIOffset)].As<Vector2D>(); } set { this["HPGaugeUIOffset"] = value; } }
        public float ExclamationMarkOffsetZ { get { return this[nameof(ExclamationMarkOffsetZ)].GetValue<float>(); } set { this[nameof(ExclamationMarkOffsetZ)].SetValue<float>(value); } }
        public EPalMonsterMovementType MovementType { get { return (EPalMonsterMovementType)this[nameof(MovementType)].GetValue<int>(); } set { this[nameof(MovementType)].SetValue<int>((int)value); } }
        public float Weight_KG { get { return this[nameof(Weight_KG)].GetValue<float>(); } set { this[nameof(Weight_KG)].SetValue<float>(value); } }
        public int Mass_Scale { get { return this[nameof(Mass_Scale)].GetValue<int>(); } set { this[nameof(Mass_Scale)].SetValue<int>(value); } }
        public float IsGroundCrossRange { get { return this[nameof(IsGroundCrossRange)].GetValue<float>(); } set { this[nameof(IsGroundCrossRange)].SetValue<float>(value); } }
        public Object PhysicsBoneNameMap { get { return this[nameof(PhysicsBoneNameMap)]; } set { this[nameof(PhysicsBoneNameMap)] = value; } }
        public bool IsUncapturable { get { return this[nameof(IsUncapturable)].Flag; } set { this[nameof(IsUncapturable)].Flag = value; } }
        public bool IsBackWalkForwardAnime { get { return this[nameof(IsBackWalkForwardAnime)].Flag; } set { this[nameof(IsBackWalkForwardAnime)].Flag = value; } }
        public bool IsRightLeft_WakeupFromRagdoll { get { return this[nameof(IsRightLeft_WakeupFromRagdoll)].Flag; } set { this[nameof(IsRightLeft_WakeupFromRagdoll)].Flag = value; } }
        public Vector GetupMotion_UtubuseOrRight_0FramePelvisLocation { get { return this[nameof(GetupMotion_UtubuseOrRight_0FramePelvisLocation)].As<Vector>(); } set { this["GetupMotion_UtubuseOrRight_0FramePelvisLocation"] = value; } }
        public Vector GetupMotion_AomukeOrLeft_0FramePelvisLocation { get { return this[nameof(GetupMotion_AomukeOrLeft_0FramePelvisLocation)].As<Vector>(); } set { this["GetupMotion_AomukeOrLeft_0FramePelvisLocation"] = value; } }
        public Object Ragdoll_RightLeftGetup_ForwardTailName { get { return this[nameof(Ragdoll_RightLeftGetup_ForwardTailName)]; } set { this[nameof(Ragdoll_RightLeftGetup_ForwardTailName)] = value; } }
        public Object Ragdoll_RightLeftGetup_RightLegName { get { return this[nameof(Ragdoll_RightLeftGetup_RightLegName)]; } set { this[nameof(Ragdoll_RightLeftGetup_RightLegName)] = value; } }
        public EPalPettingSizeType PettingSize { get { return (EPalPettingSizeType)this[nameof(PettingSize)].GetValue<int>(); } set { this[nameof(PettingSize)].SetValue<int>((int)value); } }
        public float PettingDistance { get { return this[nameof(PettingDistance)].GetValue<float>(); } set { this[nameof(PettingDistance)].SetValue<float>(value); } }
        public float PettingStartAddDistance { get { return this[nameof(PettingStartAddDistance)].GetValue<float>(); } set { this[nameof(PettingStartAddDistance)].SetValue<float>(value); } }
        public float PettingEndLeaveDistance { get { return this[nameof(PettingEndLeaveDistance)].GetValue<float>(); } set { this[nameof(PettingEndLeaveDistance)].SetValue<float>(value); } }
        public float PettingCameraCenterDistance_Override { get { return this[nameof(PettingCameraCenterDistance_Override)].GetValue<float>(); } set { this[nameof(PettingCameraCenterDistance_Override)].SetValue<float>(value); } }
        public float PettingCameraHeight_Override { get { return this[nameof(PettingCameraHeight_Override)].GetValue<float>(); } set { this[nameof(PettingCameraHeight_Override)].SetValue<float>(value); } }
        public float PettingCameraArmLength_Override { get { return this[nameof(PettingCameraArmLength_Override)].GetValue<float>(); } set { this[nameof(PettingCameraArmLength_Override)].SetValue<float>(value); } }
        public EPalSizeType Size { get { return (EPalSizeType)this[nameof(Size)].GetValue<int>(); } set { this[nameof(Size)].SetValue<int>((int)value); } }
        public float Ragdoll_GravityRate { get { return this[nameof(Ragdoll_GravityRate)].GetValue<float>(); } set { this[nameof(Ragdoll_GravityRate)].SetValue<float>(value); } }
        public bool IsLookatIKAble { get { return this[nameof(IsLookatIKAble)].Flag; } set { this[nameof(IsLookatIKAble)].Flag = value; } }
        public float SmallDamageAnimationApplyRate { get { return this[nameof(SmallDamageAnimationApplyRate)].GetValue<float>(); } set { this[nameof(SmallDamageAnimationApplyRate)].SetValue<float>(value); } }
        public float SmallDamageAnimationPlayRate { get { return this[nameof(SmallDamageAnimationPlayRate)].GetValue<float>(); } set { this[nameof(SmallDamageAnimationPlayRate)].SetValue<float>(value); } }
        public ShooterSpringCameraParameter CameraOffsetInLiftup { get { return this[nameof(CameraOffsetInLiftup)].As<ShooterSpringCameraParameter>(); } set { this["CameraOffsetInLiftup"] = value; } }
        public bool IsForcedTurnWhenDamageReaction { get { return this[nameof(IsForcedTurnWhenDamageReaction)].Flag; } set { this[nameof(IsForcedTurnWhenDamageReaction)].Flag = value; } }
        public bool DisableNPCDamageRolling { get { return this[nameof(DisableNPCDamageRolling)].Flag; } set { this[nameof(DisableNPCDamageRolling)].Flag = value; } }
        public float CapsuleHalfHeightDefault { get { return this[nameof(CapsuleHalfHeightDefault)].GetValue<float>(); } set { this[nameof(CapsuleHalfHeightDefault)].SetValue<float>(value); } }
        public Object PalSoundSlotClass { get { return this[nameof(PalSoundSlotClass)]; } set { this[nameof(PalSoundSlotClass)] = value; } }
        public Object AkAttachPointName { get { return this[nameof(AkAttachPointName)]; } set { this[nameof(AkAttachPointName)] = value; } }
        public Object PalFootStepEffectAssetClass { get { return this[nameof(PalFootStepEffectAssetClass)]; } set { this[nameof(PalFootStepEffectAssetClass)] = value; } }
        public PalStaticCharacterInfo_SpawnItem SpawnItem { get { return this[nameof(SpawnItem)].As<PalStaticCharacterInfo_SpawnItem>(); } set { this["SpawnItem"] = value; } }
        public PalSoundSlot PalSoundSlotCache { get { return this[nameof(PalSoundSlotCache)].As<PalSoundSlot>(); } set { this["PalSoundSlotCache"] = value; } }
        public PalFootStepEffectAssetBase PalFootStepEffectAssetCache { get { return this[nameof(PalFootStepEffectAssetCache)].As<PalFootStepEffectAssetBase>(); } set { this["PalFootStepEffectAssetCache"] = value; } }
        public Object MissWazaAction { get { return this[nameof(MissWazaAction)]; } set { this[nameof(MissWazaAction)] = value; } }
        public bool IsBoss_Database { get { return this[nameof(IsBoss_Database)].Flag; } set { this[nameof(IsBoss_Database)].Flag = value; } }
        public bool IsTowerBoss_Database { get { return this[nameof(IsTowerBoss_Database)].Flag; } set { this[nameof(IsTowerBoss_Database)].Flag = value; } }
        public EPalSpawnedCharacterType SpawnedCharacterType { get { return (EPalSpawnedCharacterType)this[nameof(SpawnedCharacterType)].GetValue<int>(); } set { this[nameof(SpawnedCharacterType)].SetValue<int>((int)value); } }
        public void SetSpawnedCharacterType(EPalSpawnedCharacterType SpawnedType) { Invoke(nameof(SetSpawnedCharacterType), SpawnedType); }
        public void LoadWazaActionClass(EPalWazaID WazaID) { Invoke(nameof(LoadWazaActionClass), WazaID); }
        public bool IsTowerBossPal() { return Invoke<bool>(nameof(IsTowerBossPal)); }
        public bool IsSwimPal() { return Invoke<bool>(nameof(IsSwimPal)); }
        public bool IsRarePal() { return Invoke<bool>(nameof(IsRarePal)); }
        public bool IsFlyPal() { return Invoke<bool>(nameof(IsFlyPal)); }
        public bool IsBossPal_Database_ExceptRare() { return Invoke<bool>(nameof(IsBossPal_Database_ExceptRare)); }
        public bool IsBossPal_Database() { return Invoke<bool>(nameof(IsBossPal_Database)); }
        public bool IgnoreLeanBack() { return Invoke<bool>(nameof(IgnoreLeanBack)); }
        public bool IgnoreBlowAway() { return Invoke<bool>(nameof(IgnoreBlowAway)); }
        public EPalSpawnedCharacterType GetSpawnedCharacterType() { return Invoke<EPalSpawnedCharacterType>(nameof(GetSpawnedCharacterType)); }
        public PalRandomRestInfo GetRandomRestInfo() { return Invoke<PalRandomRestInfo>(nameof(GetRandomRestInfo)); }
        public float GetCaptureRate_ByCharacterID() { return Invoke<float>(nameof(GetCaptureRate_ByCharacterID)); }
        public AnimMontage FindMontange(EPalActionType ActionType, bool bExist) { return Invoke<AnimMontage>(nameof(FindMontange), ActionType, bExist); }
    }
    public class PalStaticConsumeItemData : PalStaticItemDataBase
    {
        public PalStaticConsumeItemData(nint addr) : base(addr) { }
        public int RestoreHP { get { return this[nameof(RestoreHP)].GetValue<int>(); } set { this[nameof(RestoreHP)].SetValue<int>(value); } }
        public int RestoreSP { get { return this[nameof(RestoreSP)].GetValue<int>(); } set { this[nameof(RestoreSP)].SetValue<int>(value); } }
        public int RestoreSatiety { get { return this[nameof(RestoreSatiety)].GetValue<int>(); } set { this[nameof(RestoreSatiety)].SetValue<int>(value); } }
        public int RestoreSanity { get { return this[nameof(RestoreSanity)].GetValue<int>(); } set { this[nameof(RestoreSanity)].SetValue<int>(value); } }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
        public EPalWazaID GetWazaID() { return Invoke<EPalWazaID>(nameof(GetWazaID)); }
        public int GetRestoreSP() { return Invoke<int>(nameof(GetRestoreSP)); }
        public int GetRestoreSatiety() { return Invoke<int>(nameof(GetRestoreSatiety)); }
        public int GetRestoreSanity() { return Invoke<int>(nameof(GetRestoreSanity)); }
        public int GetRestoreHP() { return Invoke<int>(nameof(GetRestoreHP)); }
    }
    public class PalStaticItemDataAsset : DataAsset
    {
        public PalStaticItemDataAsset(nint addr) : base(addr) { }
        public Object StaticItemDataMap { get { return this[nameof(StaticItemDataMap)]; } set { this[nameof(StaticItemDataMap)] = value; } }
        public Object UndefinedVisualBlueprintClassSoft { get { return this[nameof(UndefinedVisualBlueprintClassSoft)]; } set { this[nameof(UndefinedVisualBlueprintClassSoft)] = value; } }
    }
    public class PalStaticItemDataManager : Object
    {
        public PalStaticItemDataManager(nint addr) : base(addr) { }
        public PalStaticItemDataAsset StaticItemDataAsset { get { return this[nameof(StaticItemDataAsset)].As<PalStaticItemDataAsset>(); } set { this["StaticItemDataAsset"] = value; } }
    }
    public class PalStaticItemDataTable : Object
    {
        public PalStaticItemDataTable(nint addr) : base(addr) { }
        public PalStaticItemDataAsset DataAsset { get { return this[nameof(DataAsset)].As<PalStaticItemDataAsset>(); } set { this["DataAsset"] = value; } }
    }
    public class PalStaticLogCollector : Object
    {
        public PalStaticLogCollector(nint addr) : base(addr) { }
        public Guid overInventoryWeightId { get { return this[nameof(overInventoryWeightId)].As<Guid>(); } set { this["overInventoryWeightId"] = value; } }
        public PalLogManager targetLogManager { get { return this[nameof(targetLogManager)].As<PalLogManager>(); } set { this["targetLogManager"] = value; } }
        public void RegisterLogCollectEvent_BP() { Invoke(nameof(RegisterLogCollectEvent_BP)); }
        public void OnReadyPlayerInventoryData(PalPlayerDataStorage PlayerDataStorage) { Invoke(nameof(OnReadyPlayerInventoryData), PlayerDataStorage); }
        public void OnOverWeightInventory(float nowWeight) { Invoke(nameof(OnOverWeightInventory), nowWeight); }
        public void OnFixedWeightInventory(float nowWeight) { Invoke(nameof(OnFixedWeightInventory), nowWeight); }
        public void OnEndedWorldAutoSave(bool IsSuccess) { Invoke(nameof(OnEndedWorldAutoSave), IsSuccess); }
    }
    public class PalStaticWeaponItemData : PalStaticItemDataBase
    {
        public PalStaticWeaponItemData(nint addr) : base(addr) { }
        public int MagazineSize { get { return this[nameof(MagazineSize)].GetValue<int>(); } set { this[nameof(MagazineSize)].SetValue<int>(value); } }
        public float SneakAttackRate { get { return this[nameof(SneakAttackRate)].GetValue<float>(); } set { this[nameof(SneakAttackRate)].SetValue<float>(value); } }
        public int AttackValue { get { return this[nameof(AttackValue)].GetValue<int>(); } set { this[nameof(AttackValue)].SetValue<int>(value); } }
        public int DefenseValue { get { return this[nameof(DefenseValue)].GetValue<int>(); } set { this[nameof(DefenseValue)].SetValue<int>(value); } }
        public int GetWeaponDefense() { return Invoke<int>(nameof(GetWeaponDefense)); }
        public int GetWeaponBaseDamage() { return Invoke<int>(nameof(GetWeaponBaseDamage)); }
        public float GetSneakAttackRate() { return Invoke<float>(nameof(GetSneakAttackRate)); }
        public int GetMaxMagazineSize() { return Invoke<int>(nameof(GetMaxMagazineSize)); }
    }
    public class PalStationaryWeaponBase : PalWeaponBase
    {
        public PalStationaryWeaponBase(nint addr) : base(addr) { }
        public float GetAttackableDistance() { return Invoke<float>(nameof(GetAttackableDistance)); }
        public float GetAttackableAngle() { return Invoke<float>(nameof(GetAttackableAngle)); }
    }
    public class PalStatModelPerformance : Object
    {
        public PalStatModelPerformance(nint addr) : base(addr) { }
        public void SetupInitializeStat(float FrameTime, float GameThreadTime, float RenderThreadTime, float GPUTime) { Invoke(nameof(SetupInitializeStat), FrameTime, GameThreadTime, RenderThreadTime, GPUTime); }
        public void Initialize() { Invoke(nameof(Initialize)); }
        public void Deinitialize() { Invoke(nameof(Deinitialize)); }
    }
    public class PalStatPalCount : Object
    {
        public PalStatPalCount(nint addr) : base(addr) { }
        public Font FontObject { get { return this[nameof(FontObject)].As<Font>(); } set { this["FontObject"] = value; } }
    }
    public class PalStatusCollectItem : PalStatusBase
    {
        public PalStatusCollectItem(nint addr) : base(addr) { }
        public PalStaticItemIdAndNum CollectItemInfo { get { return this[nameof(CollectItemInfo)].As<PalStaticItemIdAndNum>(); } set { this["CollectItemInfo"] = value; } }
        public void TickStatus_Implementation(float DeltaTime) { Invoke(nameof(TickStatus_Implementation), DeltaTime); }
        public void SetCollectItemInfo(PalStaticItemIdAndNum ItemIDAndNum) { Invoke(nameof(SetCollectItemInfo), ItemIDAndNum); }
        public void OnEndStatus_Implementation() { Invoke(nameof(OnEndStatus_Implementation)); }
        public void OnBreakStatus_Implementation() { Invoke(nameof(OnBreakStatus_Implementation)); }
        public void OnBeginStatus_Implementation() { Invoke(nameof(OnBeginStatus_Implementation)); }
        public void OnBeginSomeStatus_Implementation() { Invoke(nameof(OnBeginSomeStatus_Implementation)); }
        public bool IsThrown() { return Invoke<bool>(nameof(IsThrown)); }
        public bool IsServer() { return Invoke<bool>(nameof(IsServer)); }
        public bool IsRestrictedByWorkerEvent() { return Invoke<bool>(nameof(IsRestrictedByWorkerEvent)); }
        public bool IsRestrictedByWork() { return Invoke<bool>(nameof(IsRestrictedByWork)); }
        public bool IsLifted() { return Invoke<bool>(nameof(IsLifted)); }
        public bool IsHealth() { return Invoke<bool>(nameof(IsHealth)); }
        public bool IsBattleMode() { return Invoke<bool>(nameof(IsBattleMode)); }
        public PalPlayerInventoryData GetOwnerPlayerInventoryData() { return Invoke<PalPlayerInventoryData>(nameof(GetOwnerPlayerInventoryData)); }
        public PalStaticItemIdAndNum GetCollectItemInfo() { return Invoke<PalStaticItemIdAndNum>(nameof(GetCollectItemInfo)); }
        public void DropItem(Object ItemId, int DropNum, Vector SpawnLocation, Vector ReleaseDirection) { Invoke(nameof(DropItem), ItemId, DropNum, SpawnLocation, ReleaseDirection); }
        public bool CanSpawnItem() { return Invoke<bool>(nameof(CanSpawnItem)); }
    }
    public class PalStatusComponent : ActorComponent
    {
        public PalStatusComponent(nint addr) : base(addr) { }
        public Object StatusMap { get { return this[nameof(StatusMap)]; } set { this[nameof(StatusMap)] = value; } }
        public Object OnAddStatus { get { return this[nameof(OnAddStatus)]; } set { this[nameof(OnAddStatus)] = value; } }
        public Object OnRemoveStatus { get { return this[nameof(OnRemoveStatus)]; } set { this[nameof(OnRemoveStatus)] = value; } }
        public Array<PalStatusBase> ExecutionStatusList { get { return new Array<PalStatusBase>(this[nameof(ExecutionStatusList)].Address); } }
        public Array<PalStatusBase> ExecutionStatusListCache { get { return new Array<PalStatusBase>(this[nameof(ExecutionStatusListCache)].Address); } }
        public void SomeStatus_ToAll(EPalStatusID StatusId, StatusDynamicParameter Param) { Invoke(nameof(SomeStatus_ToAll), StatusId, Param); }
        public void RemoveStatus_ToServer(EPalStatusID StatusId, int issuerID) { Invoke(nameof(RemoveStatus_ToServer), StatusId, issuerID); }
        public void RemoveStatus(EPalStatusID StatusId) { Invoke(nameof(RemoveStatus), StatusId); }
        public void OnRep_ExecutionStatusList() { Invoke(nameof(OnRep_ExecutionStatusList)); }
        public void OnRemoveStatus__DelegateSignature(PalStatusComponent StatusComponent, EPalStatusID StatusId) { Invoke(nameof(OnRemoveStatus__DelegateSignature), StatusComponent, StatusId); }
        public void OnAddStatus__DelegateSignature(PalStatusComponent StatusComponent, EPalStatusID StatusId, PalStatusBase Status) { Invoke(nameof(OnAddStatus__DelegateSignature), StatusComponent, StatusId, Status); }
        public PalStatusBase GetExecutionStatusCache(EPalStatusID StatusId) { return Invoke<PalStatusBase>(nameof(GetExecutionStatusCache), StatusId); }
        public PalStatusBase GetExecutionStatus(EPalStatusID StatusId) { return Invoke<PalStatusBase>(nameof(GetExecutionStatus), StatusId); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
        public void AddStatusParameter(EPalStatusID StatusId, StatusDynamicParameter Param) { Invoke(nameof(AddStatusParameter), StatusId, Param); }
        public void AddStatus_ToServer(EPalStatusID StatusId, StatusDynamicParameter Param, int issuerID) { Invoke(nameof(AddStatus_ToServer), StatusId, Param, issuerID); }
        public void AddStatus(EPalStatusID StatusId) { Invoke(nameof(AddStatus), StatusId); }
    }
    public class PalStatusLifeSteal : PalStatusBase
    {
        public PalStatusLifeSteal(nint addr) : base(addr) { }
        public void OnLifeSteal(int Damage) { Invoke(nameof(OnLifeSteal), Damage); }
        public int CalucRecoverPoint(int Damage) { return Invoke<int>(nameof(CalucRecoverPoint), Damage); }
    }
    public class PalStatus_StaminaControl : PalStatusBase
    {
        public PalStatus_StaminaControl(nint addr) : base(addr) { }
        public bool IsLocalPlayerOrPal { get { return this[nameof(IsLocalPlayerOrPal)].Flag; } set { this[nameof(IsLocalPlayerOrPal)].Flag = value; } }
        public bool IsPreCliming { get { return this[nameof(IsPreCliming)].Flag; } set { this[nameof(IsPreCliming)].Flag = value; } }
        public void DecreaseStepStamina() { Invoke(nameof(DecreaseStepStamina)); }
        public void DecreaseJumpStamina(PalCharacterMovementComponent Movement) { Invoke(nameof(DecreaseJumpStamina), Movement); }
    }
    public class PalGameSystemNeedSync : Interface
    {
        public PalGameSystemNeedSync(nint addr) : base(addr) { }
    }
    public class PalSyncTeleportComponent : ActorComponent
    {
        public PalSyncTeleportComponent(nint addr) : base(addr) { }
        public Object OnPlayerMovedClientDelegate { get { return this[nameof(OnPlayerMovedClientDelegate)]; } set { this[nameof(OnPlayerMovedClientDelegate)] = value; } }
        public Object OnPlayerMoveCompleteClientDelegate { get { return this[nameof(OnPlayerMoveCompleteClientDelegate)]; } set { this[nameof(OnPlayerMoveCompleteClientDelegate)] = value; } }
        public AkAudioEvent DefaultStartSE { get { return this[nameof(DefaultStartSE)].As<AkAudioEvent>(); } set { this["DefaultStartSE"] = value; } }
        public PalHUDDispatchParameter_FadeWidget FadeParameter { get { return this[nameof(FadeParameter)].As<PalHUDDispatchParameter_FadeWidget>(); } set { this["FadeParameter"] = value; } }
        public void SyncTeleportPlayerMovedDynamicDelegate__DelegateSignature() { Invoke(nameof(SyncTeleportPlayerMovedDynamicDelegate__DelegateSignature)); }
        public void SyncTeleport_ToClient(PalSyncTeleportRequestParameter Parameter) { Invoke(nameof(SyncTeleport_ToClient), Parameter); }
        public void SyncTeleport(PalSyncTeleportRequestParameter Parameter) { Invoke(nameof(SyncTeleport), Parameter); }
        public void RequestSyncTeleportStart_ToServer(PalSyncTeleportRequestParameter Parameter) { Invoke(nameof(RequestSyncTeleportStart_ToServer), Parameter); }
        public void RequestSyncTeleportMove_ToServer() { Invoke(nameof(RequestSyncTeleportMove_ToServer)); }
        public void RequestSyncTeleportEnd_ToServer() { Invoke(nameof(RequestSyncTeleportEnd_ToServer)); }
        public void ReceiveSyncTeleportStartResult_ToClient(bool bIsSuccess) { Invoke(nameof(ReceiveSyncTeleportStartResult_ToClient), bIsSuccess); }
        public void ReceiveSyncTeleportMoveResult_ToClient(bool bIsSuccess) { Invoke(nameof(ReceiveSyncTeleportMoveResult_ToClient), bIsSuccess); }
        public void ReceiveSyncTeleportEnd_ToClient(bool bIsSuccess) { Invoke(nameof(ReceiveSyncTeleportEnd_ToClient), bIsSuccess); }
        public void OnEndSyncTeleportFadeOut() { Invoke(nameof(OnEndSyncTeleportFadeOut)); }
        public void OnEndSyncTeleportFadeIn() { Invoke(nameof(OnEndSyncTeleportFadeIn)); }
        public bool IsTeleporting() { return Invoke<bool>(nameof(IsTeleporting)); }
        public Quat GetTeleportRotation() { return Invoke<Quat>(nameof(GetTeleportRotation)); }
        public Vector GetTeleportLocation() { return Invoke<Vector>(nameof(GetTeleportLocation)); }
    }
    public class PalSystemInitializeInterface : Interface
    {
        public PalSystemInitializeInterface(nint addr) : base(addr) { }
    }
    public class PalEditorTalkTreeDataTable : Object
    {
        public PalEditorTalkTreeDataTable(nint addr) : base(addr) { }
    }
    public class PalEditorTalkTreeDataUtility : BlueprintFunctionLibrary
    {
        public PalEditorTalkTreeDataUtility(nint addr) : base(addr) { }
    }
    public class PalEditorNpcMultiTalkDataUtility : BlueprintFunctionLibrary
    {
        public PalEditorNpcMultiTalkDataUtility(nint addr) : base(addr) { }
    }
    public class PalTalkWidgetParameter : PalHUDDispatchParameterBase
    {
        public PalTalkWidgetParameter(nint addr) : base(addr) { }
        public DataTable talkDataTable { get { return this[nameof(talkDataTable)].As<DataTable>(); } set { this["talkDataTable"] = value; } }
        public Object startTalkSequence { get { return this[nameof(startTalkSequence)]; } set { this[nameof(startTalkSequence)] = value; } }
        public Actor talker { get { return this[nameof(talker)].As<Actor>(); } set { this["talker"] = value; } }
        public PalIncidentBase talkIncident { get { return this[nameof(talkIncident)].As<PalIncidentBase>(); } set { this["talkIncident"] = value; } }
        public bool IsCancel { get { return this[nameof(IsCancel)].Flag; } set { this[nameof(IsCancel)].Flag = value; } }
    }
    public class PalUserWidgetHierarchical : PalUserWidget
    {
        public PalUserWidgetHierarchical(nint addr) : base(addr) { }
    }
    public class PalUserWidgetStackableUI : PalUserWidgetHierarchical
    {
        public PalUserWidgetStackableUI(nint addr) : base(addr) { }
        public AkAudioEvent OpenAkEvent { get { return this[nameof(OpenAkEvent)].As<AkAudioEvent>(); } set { this["OpenAkEvent"] = value; } }
        public AkAudioEvent CloseAkEvent { get { return this[nameof(CloseAkEvent)].As<AkAudioEvent>(); } set { this["CloseAkEvent"] = value; } }
        public void OnPreClose() { Invoke(nameof(OnPreClose)); }
        public void OnPostClose() { Invoke(nameof(OnPostClose)); }
        public void OnClose() { Invoke(nameof(OnClose)); }
        public AkAudioEvent GetOpenAkEvent() { return Invoke<AkAudioEvent>(nameof(GetOpenAkEvent)); }
        public AkAudioEvent GetCloseAkEvent() { return Invoke<AkAudioEvent>(nameof(GetCloseAkEvent)); }
        public void Close() { Invoke(nameof(Close)); }
    }
    public class PalUserWidgetOverlayUI : PalUserWidgetStackableUI
    {
        public PalUserWidgetOverlayUI(nint addr) : base(addr) { }
        public bool IsEnableCancelAction { get { return this[nameof(IsEnableCancelAction)].Flag; } set { this[nameof(IsEnableCancelAction)].Flag = value; } }
        public PalUIActionBindData CancelInputHandle { get { return this[nameof(CancelInputHandle)].As<PalUIActionBindData>(); } set { this["CancelInputHandle"] = value; } }
        public PalUIActionBindData EscInputHandle { get { return this[nameof(EscInputHandle)].As<PalUIActionBindData>(); } set { this["EscInputHandle"] = value; } }
        public void ResetCancelAction() { Invoke(nameof(ResetCancelAction)); }
        public void OverrideCancelAction(bool IsDisplayActionBar, byte InputType, Object Callback) { Invoke(nameof(OverrideCancelAction), IsDisplayActionBar, InputType, Callback); }
        public void ClearCancelAction() { Invoke(nameof(ClearCancelAction)); }
    }
    public class PalTalkWindowWidgetBase : PalUserWidgetOverlayUI
    {
        public PalTalkWindowWidgetBase(nint addr) : base(addr) { }
        public PalNPCTalkSystem talkSystem { get { return this[nameof(talkSystem)].As<PalNPCTalkSystem>(); } set { this["talkSystem"] = value; } }
        public void ShowChoice(Array<Object> choiceTextIDList) { Invoke(nameof(ShowChoice), choiceTextIDList); }
        public void SetTalkerName(Object Text) { Invoke(nameof(SetTalkerName), Text); }
        public void SetMainTextList(Array<Object> textIDList) { Invoke(nameof(SetMainTextList), textIDList); }
        public void RequestClose() { Invoke(nameof(RequestClose)); }
        public EPalNPCTalkSelectedChoiceResult NotifyChoiceIndex(int Index) { return Invoke<EPalNPCTalkSelectedChoiceResult>(nameof(NotifyChoiceIndex), Index); }
        public bool HasArguments() { return Invoke<bool>(nameof(HasArguments)); }
        public void CreateTextAppliedArgments(Object OrgText, Object OutText) { Invoke(nameof(CreateTextAppliedArgments), OrgText, OutText); }
        public void AddArgument(Object Key, Object Text) { Invoke(nameof(AddArgument), Key, Text); }
    }
    public class PalTechnologyData : Object
    {
        public PalTechnologyData(nint addr) : base(addr) { }
        public Object OnUpdateTechnologyPoint { get { return this[nameof(OnUpdateTechnologyPoint)]; } set { this[nameof(OnUpdateTechnologyPoint)] = value; } }
        public Object OnUpdateBossTechnologyPoint { get { return this[nameof(OnUpdateBossTechnologyPoint)]; } set { this[nameof(OnUpdateBossTechnologyPoint)] = value; } }
        public Object OnUnlockedAnyTechnology { get { return this[nameof(OnUnlockedAnyTechnology)]; } set { this[nameof(OnUnlockedAnyTechnology)] = value; } }
        public Object OnNewUnlockedUpdate { get { return this[nameof(OnNewUnlockedUpdate)]; } set { this[nameof(OnNewUnlockedUpdate)] = value; } }
        public PalTechnologyDataSet technologyDataSet { get { return this[nameof(technologyDataSet)].As<PalTechnologyDataSet>(); } set { this["technologyDataSet"] = value; } }
        public PalTechnologyDataTableRowBase emptyTechnologyData { get { return this[nameof(emptyTechnologyData)].As<PalTechnologyDataTableRowBase>(); } set { this["emptyTechnologyData"] = value; } }
        public PalTechnologyRecipeUnlockDataTableRow emptyRecipeTechnologyData { get { return this[nameof(emptyRecipeTechnologyData)].As<PalTechnologyRecipeUnlockDataTableRow>(); } set { this["emptyRecipeTechnologyData"] = value; } }
        public Array<Object> UnlockedTechnologyNameArray { get { return new Array<Object>(this[nameof(UnlockedTechnologyNameArray)].Address); } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public int TechnologyPoint { get { return this[nameof(TechnologyPoint)].GetValue<int>(); } set { this[nameof(TechnologyPoint)].SetValue<int>(value); } }
        public int bossTechnologyPoint { get { return this[nameof(bossTechnologyPoint)].GetValue<int>(); } set { this[nameof(bossTechnologyPoint)].SetValue<int>(value); } }
        public Array<Object> DefaultLockRecipeNameArray { get { return new Array<Object>(this[nameof(DefaultLockRecipeNameArray)].Address); } }
        public Array<Object> DefaultLockBuildObjectNameArray { get { return new Array<Object>(this[nameof(DefaultLockBuildObjectNameArray)].Address); } }
        public void RequestUnlockRecipeTechnology(Object UnlockTechnologyName) { Invoke(nameof(RequestUnlockRecipeTechnology), UnlockTechnologyName); }
        public void RequestAddTechnologyPointByItem(PalItemSlotId ConsumeSlotId) { Invoke(nameof(RequestAddTechnologyPointByItem), ConsumeSlotId); }
        public void RemoveNewUnlockedFlag(Object technologyName) { Invoke(nameof(RemoveNewUnlockedFlag), technologyName); }
        public void OnUpdateTechnologyPoint__DelegateSignature(int TechnologyPoint) { Invoke(nameof(OnUpdateTechnologyPoint__DelegateSignature), TechnologyPoint); }
        public void OnUpdateLocalPlayerLevel(int addLevel, int nowLevel) { Invoke(nameof(OnUpdateLocalPlayerLevel), addLevel, nowLevel); }
        public void OnUnlockedAnyTechnology__DelegateSignature() { Invoke(nameof(OnUnlockedAnyTechnology__DelegateSignature)); }
        public void OnRep_UnlockedTechnologyNameArray() { Invoke(nameof(OnRep_UnlockedTechnologyNameArray)); }
        public void OnRep_TechnologyPoint() { Invoke(nameof(OnRep_TechnologyPoint)); }
        public void OnRep_BossTechnologyPoint() { Invoke(nameof(OnRep_BossTechnologyPoint)); }
        public void OnNewUnlockedUpdateDelegate__DelegateSignature() { Invoke(nameof(OnNewUnlockedUpdateDelegate__DelegateSignature)); }
        public bool IsUnlockRecipeTechnology(Object technologyName) { return Invoke<bool>(nameof(IsUnlockRecipeTechnology), technologyName); }
        public bool IsUnlockCraftRecipe(Object craftRecipeName) { return Invoke<bool>(nameof(IsUnlockCraftRecipe), craftRecipeName); }
        public bool IsUnlockBuildObject(Object BuildObjectId) { return Invoke<bool>(nameof(IsUnlockBuildObject), BuildObjectId); }
        public bool IsUnlockableRecipeTechnology(Object technologyName) { return Invoke<bool>(nameof(IsUnlockableRecipeTechnology), technologyName); }
        public bool IsNewUnlockedTechnology(Object technologyName) { return Invoke<bool>(nameof(IsNewUnlockedTechnology), technologyName); }
        public bool IsNewUnlockedBuild_Radial(Object BuildName) { return Invoke<bool>(nameof(IsNewUnlockedBuild_Radial), BuildName); }
        public bool IsExistNewUnlockedTechnology() { return Invoke<bool>(nameof(IsExistNewUnlockedTechnology)); }
        public int GetTechnologyPoints() { return Invoke<int>(nameof(GetTechnologyPoints)); }
        public Object GetTechnologyName(Object technologyName) { return Invoke<Object>(nameof(GetTechnologyName), technologyName); }
        public Object GetTechnologyDesc(Object technologyName) { return Invoke<Object>(nameof(GetTechnologyDesc), technologyName); }
        public PalTechnologyDataTableRowBase GetTechlonogyBaseData(Object technologyName) { return Invoke<PalTechnologyDataTableRowBase>(nameof(GetTechlonogyBaseData), technologyName); }
        public Array<Object> GetRecipeTechnologyRowNameArray() { return Invoke<Array<Object>>(nameof(GetRecipeTechnologyRowNameArray)); }
        public PalTechnologyRecipeUnlockDataTableRow GetRecipeTechlonogy(Object technologyName) { return Invoke<PalTechnologyRecipeUnlockDataTableRow>(nameof(GetRecipeTechlonogy), technologyName); }
        public int GetBossTechnologyPoints() { return Invoke<int>(nameof(GetBossTechnologyPoints)); }
        public void FilteringUnlockedRecipe(Array<Object> OriginalResipeIdArray, Array<Object> OutRecipeIdArray) { Invoke(nameof(FilteringUnlockedRecipe), OriginalResipeIdArray, OutRecipeIdArray); }
        public void CheckNewUnlockedFlag_Radial(Object BuildName) { Invoke(nameof(CheckNewUnlockedFlag_Radial), BuildName); }
    }
    public class PalTemperatureComponent : BoxComponent
    {
        public PalTemperatureComponent(nint addr) : base(addr) { }
        public Object OnChangeTemperatureDelegate { get { return this[nameof(OnChangeTemperatureDelegate)]; } set { this[nameof(OnChangeTemperatureDelegate)] = value; } }
        public int CurrentTemperature { get { return this[nameof(CurrentTemperature)].GetValue<int>(); } set { this[nameof(CurrentTemperature)].SetValue<int>(value); } }
        public Object SelfKeyName { get { return this[nameof(SelfKeyName)]; } set { this[nameof(SelfKeyName)] = value; } }
        public void RemoveHeatSource(Object UniqueName) { Invoke(nameof(RemoveHeatSource), UniqueName); }
        public void OnChangeTemperatureDelegate__DelegateSignature(int NextTemperature) { Invoke(nameof(OnChangeTemperatureDelegate__DelegateSignature), NextTemperature); }
        public void OnChangeHour() { Invoke(nameof(OnChangeHour)); }
        public int GetCurrentTemperature() { return Invoke<int>(nameof(GetCurrentTemperature)); }
        public void CallOnChangeTemperature(int Next) { Invoke(nameof(CallOnChangeTemperature), Next); }
        public void CallAllDelegate() { Invoke(nameof(CallAllDelegate)); }
        public void AddHeatSourceInfo(Object UniqueName, PalHeatSourceInfo HeatInfo) { Invoke(nameof(AddHeatSourceInfo), UniqueName, HeatInfo); }
        public void AddHeatSource(Object UniqueName, int HeatLevel) { Invoke(nameof(AddHeatSource), UniqueName, HeatLevel); }
    }
    public class PalTestMapObjectRegistrationToManager : Actor
    {
        public PalTestMapObjectRegistrationToManager(nint addr) : base(addr) { }
        public bool bReadyVirtualBaseCamp { get { return this[nameof(bReadyVirtualBaseCamp)].Flag; } set { this[nameof(bReadyVirtualBaseCamp)].Flag = value; } }
        public void ForceBuildComplete() { Invoke(nameof(ForceBuildComplete)); }
    }
    public class PalTestNetArchiveTransmition : Actor
    {
        public PalTestNetArchiveTransmition(nint addr) : base(addr) { }
        public void SendTest() { Invoke(nameof(SendTest)); }
        public void OnRecieveTest(PalNetArchive Ar) { Invoke(nameof(OnRecieveTest), Ar); }
    }
    public class PalTextBlockBase : CommonTextBlock
    {
        public PalTextBlockBase(nint addr) : base(addr) { }
        public DataTableRowHandle BindTextDatatableHandle { get { return this[nameof(BindTextDatatableHandle)].As<DataTableRowHandle>(); } set { this["BindTextDatatableHandle"] = value; } }
        public bool IsAutoTextSetWhenWidgetRebuilt { get { return this[nameof(IsAutoTextSetWhenWidgetRebuilt)].Flag; } set { this[nameof(IsAutoTextSetWhenWidgetRebuilt)].Flag = value; } }
        public bool IsAutoAdjustScale { get { return this[nameof(IsAutoAdjustScale)].Flag; } set { this[nameof(IsAutoAdjustScale)].Flag = value; } }
        public int MaxWidth { get { return this[nameof(MaxWidth)].GetValue<int>(); } set { this[nameof(MaxWidth)].SetValue<int>(value); } }
        public void UpdateRowName(Object RowName) { Invoke(nameof(UpdateRowName), RowName); }
        public void SetText_GDKInternal(bool IsSuccess, Object OutString) { Invoke(nameof(SetText_GDKInternal), IsSuccess, OutString); }
        public Object GetBindedOriginalText() { return Invoke<Object>(nameof(GetBindedOriginalText)); }
        public bool BP_ReflectText() { return Invoke<bool>(nameof(BP_ReflectText)); }
    }
    public class PalTimeManager : PalWorldSubsystem
    {
        public PalTimeManager(nint addr) : base(addr) { }
        public Object OnNightStartDelegate { get { return this[nameof(OnNightStartDelegate)]; } set { this[nameof(OnNightStartDelegate)] = value; } }
        public Object OnNightEndDelegate { get { return this[nameof(OnNightEndDelegate)]; } set { this[nameof(OnNightEndDelegate)] = value; } }
        public Object OnPreNightSkipDelegate { get { return this[nameof(OnPreNightSkipDelegate)]; } set { this[nameof(OnPreNightSkipDelegate)] = value; } }
        public Object OnNightSkipDelegate { get { return this[nameof(OnNightSkipDelegate)]; } set { this[nameof(OnNightSkipDelegate)] = value; } }
        public Object OnChangeHoursDelegate { get { return this[nameof(OnChangeHoursDelegate)]; } set { this[nameof(OnChangeHoursDelegate)] = value; } }
        public Object OnChangeMinutesDelegate { get { return this[nameof(OnChangeMinutesDelegate)]; } set { this[nameof(OnChangeMinutesDelegate)] = value; } }
        public Array<PalPlayerCharacter> SleepingPlayers { get { return new Array<PalPlayerCharacter>(this[nameof(SleepingPlayers)].Address); } }
        public TimerHandle NightSkipTimerHandle { get { return this[nameof(NightSkipTimerHandle)].As<TimerHandle>(); } set { this["NightSkipTimerHandle"] = value; } }
        public void TimerEventDelegate__DelegateSignature() { Invoke(nameof(TimerEventDelegate__DelegateSignature)); }
        public void Tick_BP(float DeltaTime) { Invoke(nameof(Tick_BP), DeltaTime); }
        public void SetGameTime_FixDay(int NextHour) { Invoke(nameof(SetGameTime_FixDay), NextHour); }
        public void RemoveSleepPlayer(PalPlayerCharacter Player) { Invoke(nameof(RemoveSleepPlayer), Player); }
        public Object PalTimeSecondsToString(float InSeconds) { return Invoke<Object>(nameof(PalTimeSecondsToString), InSeconds); }
        public void OnNightStartDelegate__DelegateSignature() { Invoke(nameof(OnNightStartDelegate__DelegateSignature)); }
        public void OnNightSkipDelegate__DelegateSignature() { Invoke(nameof(OnNightSkipDelegate__DelegateSignature)); }
        public void OnNightEndDelegate__DelegateSignature() { Invoke(nameof(OnNightEndDelegate__DelegateSignature)); }
        public void OnChangeMinutesDelegate__DelegateSignature() { Invoke(nameof(OnChangeMinutesDelegate__DelegateSignature)); }
        public void OnChangeHoursDelegate__DelegateSignature() { Invoke(nameof(OnChangeHoursDelegate__DelegateSignature)); }
        public Object GetDebugTimeString() { return Invoke<Object>(nameof(GetDebugTimeString)); }
        public float GetDayTimePassRate() { return Invoke<float>(nameof(GetDayTimePassRate)); }
        public int GetCurrentPalWorldTime_Second() { return Invoke<int>(nameof(GetCurrentPalWorldTime_Second)); }
        public int GetCurrentPalWorldTime_Minute() { return Invoke<int>(nameof(GetCurrentPalWorldTime_Minute)); }
        public int GetCurrentPalWorldTime_Hour() { return Invoke<int>(nameof(GetCurrentPalWorldTime_Hour)); }
        public int GetCurrentPalWorldTime_Day() { return Invoke<int>(nameof(GetCurrentPalWorldTime_Day)); }
        public float GetCurrentPalWorldHoursFloat() { return Invoke<float>(nameof(GetCurrentPalWorldHoursFloat)); }
        public EPalOneDayTimeType GetCurrentDayTimeType() { return Invoke<EPalOneDayTimeType>(nameof(GetCurrentDayTimeType)); }
        public void ClearTimer(Object WorldContextObject, PalTimerHandle Handle) { Invoke(nameof(ClearTimer), WorldContextObject, Handle); }
        public PalTimerHandle AddTimerEventBySpan(Object Delegate, float Hours, float Minutes, float Seconds) { return Invoke<PalTimerHandle>(nameof(AddTimerEventBySpan), Delegate, Hours, Minutes, Seconds); }
        public void AddSleepPlayer(PalPlayerCharacter Player) { Invoke(nameof(AddSleepPlayer), Player); }
    }
    public class PalTimerPointLightComponent : PointLightComponent
    {
        public PalTimerPointLightComponent(nint addr) : base(addr) { }
        public CurveFloat LightCurve { get { return this[nameof(LightCurve)].As<CurveFloat>(); } set { this["LightCurve"] = value; } }
        public bool bIsLocalOnly { get { return this[nameof(bIsLocalOnly)].Flag; } set { this[nameof(bIsLocalOnly)].Flag = value; } }
        public float DefaultIntensity { get { return this[nameof(DefaultIntensity)].GetValue<float>(); } set { this[nameof(DefaultIntensity)].SetValue<float>(value); } }
        public FlagContainer DisableFlag { get { return this[nameof(DisableFlag)].As<FlagContainer>(); } set { this["DisableFlag"] = value; } }
        public FlagContainer EnableWhenDayTimeFlag { get { return this[nameof(EnableWhenDayTimeFlag)].As<FlagContainer>(); } set { this["EnableWhenDayTimeFlag"] = value; } }
        public void SetEnableWhenDayTime(Object Key, bool Enable) { Invoke(nameof(SetEnableWhenDayTime), Key, Enable); }
        public void CheckOtomoPal_AndSetRange(PalCharacter SelfCharacter) { Invoke(nameof(CheckOtomoPal_AndSetRange), SelfCharacter); }
    }
    public class PalToolUtility : BlueprintFunctionLibrary
    {
        public PalToolUtility(nint addr) : base(addr) { }
        public void CopyFileOverride(Object sourceFileName, Object destFileName) { Invoke(nameof(CopyFileOverride), sourceFileName, destFileName); }
    }
    public class PalTreasureBoxVisualBase : Actor
    {
        public PalTreasureBoxVisualBase(nint addr) : base(addr) { }
        public PalSkeletalMeshComponent SkeletalMeshComponent { get { return this[nameof(SkeletalMeshComponent)].As<PalSkeletalMeshComponent>(); } set { this["SkeletalMeshComponent"] = value; } }
        public void SetTickEnabled(bool bEnabled) { Invoke(nameof(SetTickEnabled), bEnabled); }
        public void OnPlayMontageNotifyBegin_BP(Object NotifyName) { Invoke(nameof(OnPlayMontageNotifyBegin_BP), NotifyName); }
        public void OnPlayMontageNotifyBegin(Object NotifyName, BranchingPointNotifyPayload BranchingPointPayload) { Invoke(nameof(OnPlayMontageNotifyBegin), NotifyName, BranchingPointPayload); }
    }
    public class PalTriggerAreaBase : Actor
    {
        public PalTriggerAreaBase(nint addr) : base(addr) { }
        public Object OnTriggerHitBeginDelegate { get { return this[nameof(OnTriggerHitBeginDelegate)]; } set { this[nameof(OnTriggerHitBeginDelegate)] = value; } }
        public Object OnTriggerHitEndDelegate { get { return this[nameof(OnTriggerHitEndDelegate)]; } set { this[nameof(OnTriggerHitEndDelegate)] = value; } }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public Guid GetInstanceId() { return Invoke<Guid>(nameof(GetInstanceId)); }
    }
    public class PalTutorialManager : PalWorldSubsystem
    {
        public PalTutorialManager(nint addr) : base(addr) { }
        public Object OnTutorialTriggered { get { return this[nameof(OnTutorialTriggered)]; } set { this[nameof(OnTutorialTriggered)] = value; } }
        public Array<PalTutorialTriggerBase> TutorialTriggers { get { return new Array<PalTutorialTriggerBase>(this[nameof(TutorialTriggers)].Address); } }
        public DataTable MsgDataTable { get { return this[nameof(MsgDataTable)].As<DataTable>(); } set { this["MsgDataTable"] = value; } }
        public DataTable TutorialTriggersDataTable { get { return this[nameof(TutorialTriggersDataTable)].As<DataTable>(); } set { this["TutorialTriggersDataTable"] = value; } }
        public void TutorialTriggerDelegate__DelegateSignature(DataTableRowHandle TutorialMsg) { Invoke(nameof(TutorialTriggerDelegate__DelegateSignature), TutorialMsg); }
        public void TutorialTrigger_Common(EPalTutorialTriggerConditionType TriggerType) { Invoke(nameof(TutorialTrigger_Common), TriggerType); }
        public void TutorialTrigger_Capture(PalUIPalCaptureInfo CaptureInfo, bool CaptureSuccess) { Invoke(nameof(TutorialTrigger_Capture), CaptureInfo, CaptureSuccess); }
    }
    public class PalTutorialQuestManager : PalQuestManager
    {
        public PalTutorialQuestManager(nint addr) : base(addr) { }
        public Array<PalOrderedQuestSaveData> CachedOrderedQuestSaveData { get { return new Array<PalOrderedQuestSaveData>(this[nameof(CachedOrderedQuestSaveData)].Address); } }
    }
    public class PalTutorialTriggerBase : Object
    {
        public PalTutorialTriggerBase(nint addr) : base(addr) { }
        public bool Checked { get { return this[nameof(Checked)].Flag; } set { this[nameof(Checked)].Flag = value; } }
        public bool CanTriggerMultiple { get { return this[nameof(CanTriggerMultiple)].Flag; } set { this[nameof(CanTriggerMultiple)].Flag = value; } }
        public DataTableRowHandle TutorialMsgID { get { return this[nameof(TutorialMsgID)].As<DataTableRowHandle>(); } set { this["TutorialMsgID"] = value; } }
        public EPalTutorialTriggerType GetType() { return Invoke<EPalTutorialTriggerType>(nameof(GetType)); }
    }
    public class PalTutorialTrigger_Common : PalTutorialTriggerBase
    {
        public PalTutorialTrigger_Common(nint addr) : base(addr) { }
        public EPalTutorialTriggerConditionType TriggerType { get { return (EPalTutorialTriggerConditionType)this[nameof(TriggerType)].GetValue<int>(); } set { this[nameof(TriggerType)].SetValue<int>((int)value); } }
    }
    public class PalTutorialTrigger_AddItem : PalTutorialTriggerBase
    {
        public PalTutorialTrigger_AddItem(nint addr) : base(addr) { }
        public Array<Object> StaticItemIds { get { return new Array<Object>(this[nameof(StaticItemIds)].Address); } }
        public EPalItemTypeB ItemCategory { get { return (EPalItemTypeB)this[nameof(ItemCategory)].GetValue<int>(); } set { this[nameof(ItemCategory)].SetValue<int>((int)value); } }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
    }
    public class PalTutorialTrigger_Individual : PalTutorialTriggerBase
    {
        public PalTutorialTrigger_Individual(nint addr) : base(addr) { }
        public EPalTutorialTriggerConditionType TriggerType { get { return (EPalTutorialTriggerConditionType)this[nameof(TriggerType)].GetValue<int>(); } set { this[nameof(TriggerType)].SetValue<int>((int)value); } }
    }
    public class PalTutorialTrigger_Respawn : PalTutorialTriggerBase
    {
        public PalTutorialTrigger_Respawn(nint addr) : base(addr) { }
        public Array<EPalLocationType> LocationTypes { get { return new Array<EPalLocationType>(this[nameof(LocationTypes)].Address); } }
    }
    public class PalTutorialTrigger_Capture : PalTutorialTriggerBase
    {
        public PalTutorialTrigger_Capture(nint addr) : base(addr) { }
        public EPalTutorialTriggerConditionType TriggerType { get { return (EPalTutorialTriggerConditionType)this[nameof(TriggerType)].GetValue<int>(); } set { this[nameof(TriggerType)].SetValue<int>((int)value); } }
        public int TriggerCount { get { return this[nameof(TriggerCount)].GetValue<int>(); } set { this[nameof(TriggerCount)].SetValue<int>(value); } }
    }
    public class PalMapBaseCampWorkerOrderTypeUtility : BlueprintFunctionLibrary
    {
        public PalMapBaseCampWorkerOrderTypeUtility(nint addr) : base(addr) { }
        public bool IsBattleOrderType(EPalMapBaseCampWorkerOrderType OrderType) { return Invoke<bool>(nameof(IsBattleOrderType), OrderType); }
    }
    public class PalEnergyTypeUtility : BlueprintFunctionLibrary
    {
        public PalEnergyTypeUtility(nint addr) : base(addr) { }
        public void CollectWorkableElementTypes(EPalEnergyType EnergyType, Array<EPalElementType> ElementTypes) { Invoke(nameof(CollectWorkableElementTypes), EnergyType, ElementTypes); }
    }
    public class PalLandingTypeUtility : BlueprintFunctionLibrary
    {
        public PalLandingTypeUtility(nint addr) : base(addr) { }
        public bool IsRollStep(EPalLandingType T) { return Invoke<bool>(nameof(IsRollStep), T); }
        public bool IsJumpLanding(EPalLandingType T) { return Invoke<bool>(nameof(IsJumpLanding), T); }
        public bool IsFootStep(EPalLandingType T) { return Invoke<bool>(nameof(IsFootStep), T); }
    }
    public class PalContainerIdUtility : BlueprintFunctionLibrary
    {
        public PalContainerIdUtility(nint addr) : base(addr) { }
        public PalContainerId NoneContainerId() { return Invoke<PalContainerId>(nameof(NoneContainerId)); }
        public bool IsNoneContainerId(PalContainerId ContainerId) { return Invoke<bool>(nameof(IsNoneContainerId), ContainerId); }
        public bool BP_NotEqual(PalContainerId A, PalContainerId B) { return Invoke<bool>(nameof(BP_NotEqual), A, B); }
        public bool BP_Equal(PalContainerId A, PalContainerId B) { return Invoke<bool>(nameof(BP_Equal), A, B); }
    }
    public class PalUIActionWidgetBase : CommonActionWidget
    {
        public PalUIActionWidgetBase(nint addr) : base(addr) { }
        public void OverrideImage(SlateBrush OverrideBrush) { Invoke(nameof(OverrideImage), OverrideBrush); }
        public Object GetLocalizedDisplayText() { return Invoke<Object>(nameof(GetLocalizedDisplayText)); }
    }
    public class PalUIActionWidgetForPlayerInput : PalUserWidget
    {
        public PalUIActionWidgetForPlayerInput(nint addr) : base(addr) { }
        public Object BindInputActionName { get { return this[nameof(BindInputActionName)]; } set { this[nameof(BindInputActionName)] = value; } }
        public Object OverrideMouseInputActionName { get { return this[nameof(OverrideMouseInputActionName)]; } set { this[nameof(OverrideMouseInputActionName)] = value; } }
        public Object OverridePadInputActionName { get { return this[nameof(OverridePadInputActionName)]; } set { this[nameof(OverridePadInputActionName)] = value; } }
        public int OverrideInputType { get { return this[nameof(OverrideInputType)].GetValue<int>(); } set { this[nameof(OverrideInputType)].SetValue<int>(value); } }
        public void UpdateImage(SlateBrush newBrush) { Invoke(nameof(UpdateImage), newBrush); }
        public void UnbindInputMethodChangeEvent() { Invoke(nameof(UnbindInputMethodChangeEvent)); }
        public void OnKeyConfigChanged() { Invoke(nameof(OnKeyConfigChanged)); }
        public void ChangeOverrideType(int Type) { Invoke(nameof(ChangeOverrideType), Type); }
        public void ChangeOverridePadBindActionName(Object NewActionName) { Invoke(nameof(ChangeOverridePadBindActionName), NewActionName); }
        public void ChangeOverrideMouseBindActionName(Object NewActionName) { Invoke(nameof(ChangeOverrideMouseBindActionName), NewActionName); }
        public void ChangeBindActionName(Object NewActionName) { Invoke(nameof(ChangeBindActionName), NewActionName); }
        public void BindInputMethodChangeEvent() { Invoke(nameof(BindInputMethodChangeEvent)); }
    }
    public class PalUIAimReticleBase : PalUserWidget
    {
        public PalUIAimReticleBase(nint addr) : base(addr) { }
        public void TickDisplayOutline(HitResult HitResult) { Invoke(nameof(TickDisplayOutline), HitResult); }
        public void IsAssignableToHitResult(HitResult HitResult, PalCharacterParameterComponent checkCharacterParam, PalUIAimReticleMapObjectAssignableData outAssignableData) { Invoke(nameof(IsAssignableToHitResult), HitResult, checkCharacterParam, outAssignableData); }
    }
    public class PalUIBaseCampManageModel : Object
    {
        public PalUIBaseCampManageModel(nint addr) : base(addr) { }
        public Object PalBoxClass { get { return this[nameof(PalBoxClass)]; } set { this[nameof(PalBoxClass)] = value; } }
        public PalUIPalBoxModel PalBox { get { return this[nameof(PalBox)].As<PalUIPalBoxModel>(); } set { this["PalBox"] = value; } }
        public Object BaseCampWorkersClass { get { return this[nameof(BaseCampWorkersClass)]; } set { this[nameof(BaseCampWorkersClass)] = value; } }
        public PalUIBaseCampWorkersModel BaseCampWorkers { get { return this[nameof(BaseCampWorkers)].As<PalUIBaseCampWorkersModel>(); } set { this["BaseCampWorkers"] = value; } }
        public Object BaseCampWaitersClass { get { return this[nameof(BaseCampWaitersClass)]; } set { this[nameof(BaseCampWaitersClass)] = value; } }
        public PalUIBaseCampWaitersModel BaseCampWaiters { get { return this[nameof(BaseCampWaiters)].As<PalUIBaseCampWaitersModel>(); } set { this["BaseCampWaiters"] = value; } }
        public Object BaseCampPartyClass { get { return this[nameof(BaseCampPartyClass)]; } set { this[nameof(BaseCampPartyClass)] = value; } }
        public PalUIBaseCampPartyModel BaseCampParty { get { return this[nameof(BaseCampParty)].As<PalUIBaseCampPartyModel>(); } set { this["BaseCampParty"] = value; } }
        public void MoveWaiterToWorker(int SlotIndex) { Invoke(nameof(MoveWaiterToWorker), SlotIndex); }
        public void MoveSlotToPosses(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToPosses), Slot); }
        public void MoveSlotToParty(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToParty), Slot); }
        public void MoveSlotToLost(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToLost), Slot); }
        public void Initialize(Guid BaseCampId) { Invoke(nameof(Initialize), BaseCampId); }
    }
    public class PalUIBaseCampPartyModel : Object
    {
        public PalUIBaseCampPartyModel(nint addr) : base(addr) { }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public Array<PalIndividualCharacterSlot> GetCurrentPageSlots() { return Invoke<Array<PalIndividualCharacterSlot>>(nameof(GetCurrentPageSlots)); }
    }
    public class PalHUDDispatchParameter_BaseCampTask : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_BaseCampTask(nint addr) : base(addr) { }
        public Guid TargetBaseCampId { get { return this[nameof(TargetBaseCampId)].As<Guid>(); } set { this["TargetBaseCampId"] = value; } }
    }
    public class PalUIBaseCampTaskBase : PalUserWidgetOverlayUI
    {
        public PalUIBaseCampTaskBase(nint addr) : base(addr) { }
        public Object baseCampTaskCheckerClass { get { return this[nameof(baseCampTaskCheckerClass)]; } set { this[nameof(baseCampTaskCheckerClass)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public int lastCheckedBaseCampLevel { get { return this[nameof(lastCheckedBaseCampLevel)].GetValue<int>(); } set { this[nameof(lastCheckedBaseCampLevel)].SetValue<int>(value); } }
        public PalBaseCampTaskChecker taskChecker { get { return this[nameof(taskChecker)].As<PalBaseCampTaskChecker>(); } set { this["taskChecker"] = value; } }
        public bool TryBaseCampLevelUp() { return Invoke<bool>(nameof(TryBaseCampLevelUp)); }
        public void SetTargetBaseCampID(Guid TargetBaseCampId) { Invoke(nameof(SetTargetBaseCampID), TargetBaseCampId); }
        public bool IsCampLevelMax() { return Invoke<bool>(nameof(IsCampLevelMax)); }
        public bool GetNowLevelTaskData(PalBaseCampTaskDataSet outTaskData) { return Invoke<bool>(nameof(GetNowLevelTaskData), outTaskData); }
        public PalBaseCampModel GetBaseCampModel() { return Invoke<PalBaseCampModel>(nameof(GetBaseCampModel)); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
        public bool CheckTask(PalBaseCampTaskCheckedData outChedckedData) { return Invoke<bool>(nameof(CheckTask), outChedckedData); }
    }
    public class PalUIBaseCampWaitersModel : Object
    {
        public PalUIBaseCampWaitersModel(nint addr) : base(addr) { }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public Array<PalIndividualCharacterSlot> GetCurrentPageSlots() { return Invoke<Array<PalIndividualCharacterSlot>>(nameof(GetCurrentPageSlots)); }
    }
    public class PalUIBaseCampWorkerListModel : Object
    {
        public PalUIBaseCampWorkerListModel(nint addr) : base(addr) { }
        public Object OnUpdatePageDelegate { get { return this[nameof(OnUpdatePageDelegate)]; } set { this[nameof(OnUpdatePageDelegate)] = value; } }
        public Guid BaseCampId { get { return this[nameof(BaseCampId)].As<Guid>(); } set { this["BaseCampId"] = value; } }
        public Guid CurrentDisplayBaseCampId { get { return this[nameof(CurrentDisplayBaseCampId)].As<Guid>(); } set { this["CurrentDisplayBaseCampId"] = value; } }
        public void UpdatePageDelegate__DelegateSignature(PalUIBaseCampWorkerListModel Model) { Invoke(nameof(UpdatePageDelegate__DelegateSignature), Model); }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public void SelectFirstEmptyHandleSlot() { Invoke(nameof(SelectFirstEmptyHandleSlot)); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public void GetCurrentPageSlots(Array<PalIndividualCharacterSlot> OutSlots) { Invoke(nameof(GetCurrentPageSlots), OutSlots); }
        public Guid GetCurrentDisplayBaseCampId() { return Invoke<Guid>(nameof(GetCurrentDisplayBaseCampId)); }
        public Object GetBaseCampName() { return Invoke<Object>(nameof(GetBaseCampName)); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
    }
    public class PalUIBaseCampWorkersModel : Object
    {
        public PalUIBaseCampWorkersModel(nint addr) : base(addr) { }
        public Object OnUpdatePageDelegate { get { return this[nameof(OnUpdatePageDelegate)]; } set { this[nameof(OnUpdatePageDelegate)] = value; } }
        public int CurrentPageIndex { get { return this[nameof(CurrentPageIndex)].GetValue<int>(); } set { this[nameof(CurrentPageIndex)].SetValue<int>(value); } }
        public void UpdatePageDelegate__DelegateSignature(PalUIBaseCampWorkersModel Model) { Invoke(nameof(UpdatePageDelegate__DelegateSignature), Model); }
        public void ToPage(int PageIndex) { Invoke(nameof(ToPage), PageIndex); }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public void SelectFirstEmptyHandleSlot() { Invoke(nameof(SelectFirstEmptyHandleSlot)); }
        public int GetWholePageCount() { return Invoke<int>(nameof(GetWholePageCount)); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public Array<PalIndividualCharacterSlot> GetCurrentPageSlots() { return Invoke<Array<PalIndividualCharacterSlot>>(nameof(GetCurrentPageSlots)); }
        public PalBaseCampModel GetBaseCampModel(int PageIndex) { return Invoke<PalBaseCampModel>(nameof(GetBaseCampModel), PageIndex); }
        public Guid GetBaseCampId() { return Invoke<Guid>(nameof(GetBaseCampId)); }
    }
    public class PalUIBuilding : PalUserWidgetStackableUI
    {
        public PalUIBuilding(nint addr) : base(addr) { }
        public void BuildObjectSuccessed() { Invoke(nameof(BuildObjectSuccessed)); }
        public void BuildObjectFailed(int ResultIntValue) { Invoke(nameof(BuildObjectFailed), ResultIntValue); }
    }
    public class PalUIBuildingModel : Object
    {
        public PalUIBuildingModel(nint addr) : base(addr) { }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
        public void Setup(Object InBuildObjectId) { Invoke(nameof(Setup), InBuildObjectId); }
        public void RotateTarget(bool bRight) { Invoke(nameof(RotateTarget), bRight); }
        public void OnUpdateInventory(PalItemContainer Container) { Invoke(nameof(OnUpdateInventory), Container); }
        public void FinishBuilding() { Invoke(nameof(FinishBuilding)); }
        public void Dispose() { Invoke(nameof(Dispose)); }
        public void BuildObject(bool bContinuously) { Invoke(nameof(BuildObject), bContinuously); }
    }
    public class PalUIBuildingParameter : PalHUDDispatchParameterBase
    {
        public PalUIBuildingParameter(nint addr) : base(addr) { }
        public int BuildObjectId { get { return this[nameof(BuildObjectId)].GetValue<int>(); } set { this[nameof(BuildObjectId)].SetValue<int>(value); } }
    }
    public class PalUIBuildModel : Object
    {
        public PalUIBuildModel(nint addr) : base(addr) { }
        public Object ForceBuildPalBoxTextId { get { return this[nameof(ForceBuildPalBoxTextId)]; } set { this[nameof(ForceBuildPalBoxTextId)] = value; } }
        public void StartDismantleMode(int LastSelectedIndex, bool bFromRadialMenu) { Invoke(nameof(StartDismantleMode), LastSelectedIndex, bFromRadialMenu); }
        public void StartBuildObject(Object BuildObjectId, bool bFromRadialMenu) { Invoke(nameof(StartBuildObject), BuildObjectId, bFromRadialMenu); }
        public void OnOpenMenu() { Invoke(nameof(OnOpenMenu)); }
        public void OnConfimAlert_ForceBuildPalBox(bool bDialogBool) { Invoke(nameof(OnConfimAlert_ForceBuildPalBox), bDialogBool); }
        public void GetBuildObjectDataArrayForTypeAByTypeB(EPalBuildObjectTypeA TypeA, Array<PalBuildObjectDataSetTypeB> OutArray) { Invoke(nameof(GetBuildObjectDataArrayForTypeAByTypeB), TypeA, OutArray); }
        public void FinishDismantleMode() { Invoke(nameof(FinishDismantleMode)); }
    }
    public class PalBuildProgressWorldHUDParameter : PalHUDDispatchParameterBase
    {
        public PalBuildProgressWorldHUDParameter(nint addr) : base(addr) { }
        public PalBuildProcess BuildProcess { get { return this[nameof(BuildProcess)].As<PalBuildProcess>(); } set { this["BuildProcess"] = value; } }
        public PalBuildObject BuildObject { get { return this[nameof(BuildObject)].As<PalBuildObject>(); } set { this["BuildObject"] = value; } }
    }
    public class PalUIBuildProgressWorldHUD : PalUserWidgetWorldHUD
    {
        public PalUIBuildProgressWorldHUD(nint addr) : base(addr) { }
        public PalBuildProcess BuildProcess { get { return this[nameof(BuildProcess)].As<PalBuildProcess>(); } set { this["BuildProcess"] = value; } }
        public void SetProgress(PalWorkProgress Work) { Invoke(nameof(SetProgress), Work); }
        public void OnUpdatedAssignCharacter(PalWorkBase TargetWork) { Invoke(nameof(OnUpdatedAssignCharacter), TargetWork); }
        public void OnRequestClose(PalBuildProcess Process) { Invoke(nameof(OnRequestClose), Process); }
        public void CloseSelf() { Invoke(nameof(CloseSelf)); }
        public void BindUpdateAssingedCharacterDelegate() { Invoke(nameof(BindUpdateAssingedCharacterDelegate)); }
    }
    public class PalUICharacterDisplayOptionInterface : Interface
    {
        public PalUICharacterDisplayOptionInterface(nint addr) : base(addr) { }
        public bool IsSelectableSlot(PalIndividualCharacterSlot Slot) { return Invoke<bool>(nameof(IsSelectableSlot), Slot); }
    }
    public class PalUICharacterDisplayModel : Object
    {
        public PalUICharacterDisplayModel(nint addr) : base(addr) { }
        public Object OnUpdateDelegate { get { return this[nameof(OnUpdateDelegate)]; } set { this[nameof(OnUpdateDelegate)] = value; } }
        public Array<PalIndividualCharacterSlot> DisplaySlots { get { return new Array<PalIndividualCharacterSlot>(this[nameof(DisplaySlots)].Address); } }
        public Array<PalInstanceID> NotSelectableIndividualIds { get { return new Array<PalInstanceID>(this[nameof(NotSelectableIndividualIds)].Address); } }
        public void UpdateDelegate__DelegateSignature(PalUICharacterDisplayModel Model) { Invoke(nameof(UpdateDelegate__DelegateSignature), Model); }
        public bool IsSelectable(int DisplayIndex) { return Invoke<bool>(nameof(IsSelectable), DisplayIndex); }
        public int GetSlotCount() { return Invoke<int>(nameof(GetSlotCount)); }
        public void GetDisplaySlots(Array<PalIndividualCharacterSlot> OutSlots) { Invoke(nameof(GetDisplaySlots), OutSlots); }
    }
    public class PalUICharacterHPGaugeBase : PalUserWidget
    {
        public PalUICharacterHPGaugeBase(nint addr) : base(addr) { }
        public void UpdateVisibility() { Invoke(nameof(UpdateVisibility)); }
        public void UpdateText() { Invoke(nameof(UpdateText)); }
        public void UpdatePosition() { Invoke(nameof(UpdatePosition)); }
        public void SetupGaugeColor() { Invoke(nameof(SetupGaugeColor)); }
        public void SetupEvents() { Invoke(nameof(SetupEvents)); }
        public void SetTargetCharacter(PalCharacter TargetCharacter) { Invoke(nameof(SetTargetCharacter), TargetCharacter); }
        public void SetHPPercent(float Percent) { Invoke(nameof(SetHPPercent), Percent); }
        public void OnRequestClose() { Invoke(nameof(OnRequestClose)); }
    }
    public class PalUICharacterMakeBase : PalUserWidgetOverlayUI
    {
        public PalUICharacterMakeBase(nint addr) : base(addr) { }
        public void RequestChangePlayerName(Object NewPlayerName) { Invoke(nameof(RequestChangePlayerName), NewPlayerName); }
        public bool GetPlayerMakeInfo(PalPlayerDataCharacterMakeInfo OutMakeInfo) { return Invoke<bool>(nameof(GetPlayerMakeInfo), OutMakeInfo); }
        public void ApplyMakeInfoToPlayerData(PalPlayerDataCharacterMakeInfo MakeInfo) { Invoke(nameof(ApplyMakeInfoToPlayerData), MakeInfo); }
    }
    public class PalHUDDispatchParameter_CharacterMake : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_CharacterMake(nint addr) : base(addr) { }
        public bool bIsNewGame { get { return this[nameof(bIsNewGame)].Flag; } set { this[nameof(bIsNewGame)].Flag = value; } }
    }
    public class PalUICharacterStatus : PalUserWidgetOverlayUI
    {
        public PalUICharacterStatus(nint addr) : base(addr) { }
        public void RemoveActiveSkill(PalIndividualCharacterHandle targetHandle, EPalWazaID targetWazaID) { Invoke(nameof(RemoveActiveSkill), targetHandle, targetWazaID); }
        public void DropCharacter(PalIndividualCharacterHandle targetHandle) { Invoke(nameof(DropCharacter), targetHandle); }
        public void ChangeNickname(PalIndividualCharacterHandle targetHandle, Object newNickName) { Invoke(nameof(ChangeNickname), targetHandle, newNickName); }
        public void ChangeActiveSkill(PalIndividualCharacterHandle targetHandle, EPalWazaID changeWazaID, EPalWazaID newWazaID) { Invoke(nameof(ChangeActiveSkill), targetHandle, changeWazaID, newWazaID); }
        public void AddActiveSkill(PalIndividualCharacterHandle targetHandle, EPalWazaID newWazaID) { Invoke(nameof(AddActiveSkill), targetHandle, newWazaID); }
    }
    public class PalUICompassIconBase : PalUserWidget
    {
        public PalUICompassIconBase(nint addr) : base(addr) { }
    }
    public class PalUIConvertItemModel : Object
    {
        public PalUIConvertItemModel(nint addr) : base(addr) { }
        public PalUIProductSettingModel ProductSettingModel { get { return this[nameof(ProductSettingModel)].As<PalUIProductSettingModel>(); } set { this["ProductSettingModel"] = value; } }
        public Object WeakConvertItemModel { get { return this[nameof(WeakConvertItemModel)]; } set { this[nameof(WeakConvertItemModel)] = value; } }
        public void UpdateProductSetting_TransportToStorage(bool bOn) { Invoke(nameof(UpdateProductSetting_TransportToStorage), bOn); }
        public void UpdateProductSetting() { Invoke(nameof(UpdateProductSetting)); }
        public bool TryGetConcreteModel(PalMapObjectConvertItemModel Model) { return Invoke<bool>(nameof(TryGetConcreteModel), Model); }
        public void StartProduction() { Invoke(nameof(StartProduction)); }
        public void Initialize(PalMapObjectConvertItemModel InModel) { Invoke(nameof(Initialize), InModel); }
        public Object GetBuildObjectName() { return Invoke<Object>(nameof(GetBuildObjectName)); }
        public EPalUIConvertItemRequestStartResponse CanStartProduction() { return Invoke<EPalUIConvertItemRequestStartResponse>(nameof(CanStartProduction)); }
        public void CancelProduct() { Invoke(nameof(CancelProduct)); }
    }
    public class PalUIDamageTextBase : PalUserWidget
    {
        public PalUIDamageTextBase(nint addr) : base(addr) { }
        public Object OnRequestCloseDelegate { get { return this[nameof(OnRequestCloseDelegate)]; } set { this[nameof(OnRequestCloseDelegate)] = value; } }
        public float DisplayTime { get { return this[nameof(DisplayTime)].GetValue<float>(); } set { this[nameof(DisplayTime)].SetValue<float>(value); } }
        public float displayTimer { get { return this[nameof(displayTimer)].GetValue<float>(); } set { this[nameof(displayTimer)].SetValue<float>(value); } }
        public EPalDamageTextSeq nowSeq { get { return (EPalDamageTextSeq)this[nameof(nowSeq)].GetValue<int>(); } set { this[nameof(nowSeq)].SetValue<int>((int)value); } }
        public Vector TargetLocation { get { return this[nameof(TargetLocation)].As<Vector>(); } set { this["TargetLocation"] = value; } }
        public void UpdatePosition(Vector targetWorldLocation) { Invoke(nameof(UpdatePosition), targetWorldLocation); }
        public void StartDisplay(float inDisplayTime) { Invoke(nameof(StartDisplay), inDisplayTime); }
        public void SetTargetWorldLocation(Vector NewLocation) { Invoke(nameof(SetTargetWorldLocation), NewLocation); }
        public void SetDamageValue(int InValue) { Invoke(nameof(SetDamageValue), InValue); }
        public void SetDamageColor(SlateColor inColor) { Invoke(nameof(SetDamageColor), inColor); }
        public void ResetTimer() { Invoke(nameof(ResetTimer)); }
        public void RequestCloseDelegate__DelegateSignature(PalUIDamageTextBase selfWidget) { Invoke(nameof(RequestCloseDelegate__DelegateSignature), selfWidget); }
        public void RequestClose() { Invoke(nameof(RequestClose)); }
        public void OnRequestClose() { Invoke(nameof(OnRequestClose)); }
    }
    public class PalUIDelayGaugeCalculator : Object
    {
        public PalUIDelayGaugeCalculator(nint addr) : base(addr) { }
        public Object OnStartDelayGaugeTimerDelegate { get { return this[nameof(OnStartDelayGaugeTimerDelegate)]; } set { this[nameof(OnStartDelayGaugeTimerDelegate)] = value; } }
        public Object OnEndDelayGaugeDelegate { get { return this[nameof(OnEndDelayGaugeDelegate)]; } set { this[nameof(OnEndDelayGaugeDelegate)] = value; } }
        public ProgressBar mainBar { get { return this[nameof(mainBar)].As<ProgressBar>(); } set { this["mainBar"] = value; } }
        public ProgressBar subBar { get { return this[nameof(subBar)].As<ProgressBar>(); } set { this["subBar"] = value; } }
        public float delayGaugeTimer { get { return this[nameof(delayGaugeTimer)].GetValue<float>(); } set { this[nameof(delayGaugeTimer)].SetValue<float>(value); } }
        public float delayGaugeStartTime { get { return this[nameof(delayGaugeStartTime)].GetValue<float>(); } set { this[nameof(delayGaugeStartTime)].SetValue<float>(value); } }
        public float delayGaugeProgressPerSecond { get { return this[nameof(delayGaugeProgressPerSecond)].GetValue<float>(); } set { this[nameof(delayGaugeProgressPerSecond)].SetValue<float>(value); } }
        public void Update(float DeltaTime) { Invoke(nameof(Update), DeltaTime); }
        public void StartDelayGaugeTimerDelegate__DelegateSignature() { Invoke(nameof(StartDelayGaugeTimerDelegate__DelegateSignature)); }
        public void Setup(ProgressBar inMainBar, ProgressBar inSubBar) { Invoke(nameof(Setup), inMainBar, inSubBar); }
        public void SetPercentForce(float Percent) { Invoke(nameof(SetPercentForce), Percent); }
        public void SetPercent(float Percent) { Invoke(nameof(SetPercent), Percent); }
        public void EndDelayGaugeDelegate__DelegateSignature() { Invoke(nameof(EndDelayGaugeDelegate__DelegateSignature)); }
    }
    public class PalDialogParameterBase : PalHUDDispatchParameterBase
    {
        public PalDialogParameterBase(nint addr) : base(addr) { }
        public EPalDialogType DialogType { get { return (EPalDialogType)this[nameof(DialogType)].GetValue<int>(); } set { this[nameof(DialogType)].SetValue<int>((int)value); } }
        public Object Message { get { return this[nameof(Message)]; } set { this[nameof(Message)] = value; } }
        public Object Callback { get { return this[nameof(Callback)]; } set { this[nameof(Callback)] = value; } }
        public Object CallbackWithParameter { get { return this[nameof(CallbackWithParameter)]; } set { this[nameof(CallbackWithParameter)] = value; } }
        public bool IsCloseWhenDamaged { get { return this[nameof(IsCloseWhenDamaged)].Flag; } set { this[nameof(IsCloseWhenDamaged)].Flag = value; } }
        public bool IsEnableShortcutConfirmInput { get { return this[nameof(IsEnableShortcutConfirmInput)].Flag; } set { this[nameof(IsEnableShortcutConfirmInput)].Flag = value; } }
        public void InvokeCallback(bool bResult) { Invoke(nameof(InvokeCallback), bResult); }
    }
    public class PalDialogParameterDialog : PalDialogParameterBase
    {
        public PalDialogParameterDialog(nint addr) : base(addr) { }
        public bool bDefaultNegative { get { return this[nameof(bDefaultNegative)].Flag; } set { this[nameof(bDefaultNegative)].Flag = value; } }
        public void SetParameters(Object InMessage, EPalDialogType InDialogType, bool bInNegativeDefault) { Invoke(nameof(SetParameters), InMessage, InDialogType, bInNegativeDefault); }
    }
    public class PalDialogParameter_RequestJoinGuild : PalDialogParameterDialog
    {
        public PalDialogParameter_RequestJoinGuild(nint addr) : base(addr) { }
        public Guid RequestPlayerUId { get { return this[nameof(RequestPlayerUId)].As<Guid>(); } set { this["RequestPlayerUId"] = value; } }
        public PalInstanceID RequestPlayerInstanceId { get { return this[nameof(RequestPlayerInstanceId)].As<PalInstanceID>(); } set { this["RequestPlayerInstanceId"] = value; } }
        public Guid TargetPlayerUId { get { return this[nameof(TargetPlayerUId)].As<Guid>(); } set { this["TargetPlayerUId"] = value; } }
        public PalInstanceID TargetPlayerInstanceId { get { return this[nameof(TargetPlayerInstanceId)].As<PalInstanceID>(); } set { this["TargetPlayerInstanceId"] = value; } }
    }
    public class PalDialogParameter_RequestMapObjectDismantle : PalDialogParameterDialog
    {
        public PalDialogParameter_RequestMapObjectDismantle(nint addr) : base(addr) { }
        public Guid MapObjectInstanceId { get { return this[nameof(MapObjectInstanceId)].As<Guid>(); } set { this["MapObjectInstanceId"] = value; } }
    }
    public class PalUIDialogBase : PalUserWidgetOverlayUI
    {
        public PalUIDialogBase(nint addr) : base(addr) { }
    }
    public class PalUIDismantling : PalUserWidgetStackableUI
    {
        public PalUIDismantling(nint addr) : base(addr) { }
        public void DismantleObjectSuccessed() { Invoke(nameof(DismantleObjectSuccessed)); }
        public void DismantleObjectFailed() { Invoke(nameof(DismantleObjectFailed)); }
    }
    public class PalUIDismantlingModel : Object
    {
        public PalUIDismantlingModel(nint addr) : base(addr) { }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
        public void Setup() { Invoke(nameof(Setup)); }
        public void OnUpdateInventory(PalItemContainer Container) { Invoke(nameof(OnUpdateInventory), Container); }
        public void FinishDismantling() { Invoke(nameof(FinishDismantling)); }
        public void Dispose() { Invoke(nameof(Dispose)); }
        public void DismantleObject(bool bContinuously) { Invoke(nameof(DismantleObject), bContinuously); }
    }
    public class PalUIDisplayCharacter : Actor
    {
        public PalUIDisplayCharacter(nint addr) : base(addr) { }
        public SceneComponent DefaultSceneRoot { get { return this[nameof(DefaultSceneRoot)].As<SceneComponent>(); } set { this["DefaultSceneRoot"] = value; } }
        public PalSkeletalMeshComponent PalSkeletalMeshComponent { get { return this[nameof(PalSkeletalMeshComponent)].As<PalSkeletalMeshComponent>(); } set { this["PalSkeletalMeshComponent"] = value; } }
        public void GetHairBaseColor(PalSkeletalMeshComponent TargetSkeletalMesh, LinearColor OutColor) { Invoke(nameof(GetHairBaseColor), TargetSkeletalMesh, OutColor); }
        public void GetEyeBaseColor(PalSkeletalMeshComponent TargetSkeletalMesh, LinearColor OutColor) { Invoke(nameof(GetEyeBaseColor), TargetSkeletalMesh, OutColor); }
        public void GetBrowBaseColor(PalSkeletalMeshComponent TargetSkeletalMesh, LinearColor OutColor) { Invoke(nameof(GetBrowBaseColor), TargetSkeletalMesh, OutColor); }
        public void GetBodyBaseColor(PalSkeletalMeshComponent TargetSkeletalMesh, LinearColor OutColor) { Invoke(nameof(GetBodyBaseColor), TargetSkeletalMesh, OutColor); }
        public void ApplyCharacterMakeInfoFromPlayerData() { Invoke(nameof(ApplyCharacterMakeInfoFromPlayerData)); }
        public void ApplyCharacterMakeInfo(PalPlayerDataCharacterMakeInfo MakeInfo) { Invoke(nameof(ApplyCharacterMakeInfo), MakeInfo); }
    }
    public class PalUIGameOver : PalUserWidgetOverlayUI
    {
        public PalUIGameOver(nint addr) : base(addr) { }
        public bool IsExistRespawnLocation() { return Invoke<bool>(nameof(IsExistRespawnLocation)); }
    }
    public class PalUIGuildMenu : PalUserWidgetOverlayUI
    {
        public PalUIGuildMenu(nint addr) : base(addr) { }
        public void RequestExitGuild() { Invoke(nameof(RequestExitGuild)); }
        public void RequestChangeGuildName(Object NewGuildName) { Invoke(nameof(RequestChangeGuildName), NewGuildName); }
        public void RequestChangeAdmin(Guid TargetPlayerUId) { Invoke(nameof(RequestChangeAdmin), TargetPlayerUId); }
        public void RequestBanPlayer(Guid TargetPlayerUId) { Invoke(nameof(RequestBanPlayer), TargetPlayerUId); }
        public void OnUpdatedMemberInfo_Binded(PalGroupGuildBase Guild, Guid PlayerUId, PalGuildPlayerInfo PlayerInfo) { Invoke(nameof(OnUpdatedMemberInfo_Binded), Guild, PlayerUId, PlayerInfo); }
        public void OnUpdatedMemberInfo(Guid PlayerUId, PalUIGuildMemberDisplayInfo PlayerInfo) { Invoke(nameof(OnUpdatedMemberInfo), PlayerUId, PlayerInfo); }
        public void OnUpdatedGuildName_Binded(Object NewGuildName) { Invoke(nameof(OnUpdatedGuildName_Binded), NewGuildName); }
        public void OnUpdatedGuildName(Object NewGuildName) { Invoke(nameof(OnUpdatedGuildName), NewGuildName); }
        public void OnRemovedMemberInfo(Guid PlayerUId) { Invoke(nameof(OnRemovedMemberInfo), PlayerUId); }
        public bool IsExistPlayer(Guid PlayerUId) { return Invoke<bool>(nameof(IsExistPlayer), PlayerUId); }
        public bool IsAdminLocalPlayer() { return Invoke<bool>(nameof(IsAdminLocalPlayer)); }
        public PalGroupGuildBase GetMyGuild() { return Invoke<PalGroupGuildBase>(nameof(GetMyGuild)); }
        public void GetGuildName(Object OutGuildName) { Invoke(nameof(GetGuildName), OutGuildName); }
        public void GetGuildMemberInfo(Object OutDisplayInfoMap) { Invoke(nameof(GetGuildMemberInfo), OutDisplayInfoMap); }
        public void GetAdminPlayerUId(Guid OutAdminPlayerUId) { Invoke(nameof(GetAdminPlayerUId), OutAdminPlayerUId); }
        public bool CanExitGuild() { return Invoke<bool>(nameof(CanExitGuild)); }
    }
    public class PalUIHUDLayoutBase : CommonActivatableWidget
    {
        public PalUIHUDLayoutBase(nint addr) : base(addr) { }
        public void VisibilityOverride(ESlateVisibility changedVisibility) { Invoke(nameof(VisibilityOverride), changedVisibility); }
        public void RemoveWorldHUD(PalUserWidgetWorldHUD Widget) { Invoke(nameof(RemoveWorldHUD), Widget); }
        public void RemoveHUD(PalUserWidget Widget) { Invoke(nameof(RemoveHUD), Widget); }
        public void AddWorldHUD(PalUserWidgetWorldHUD Widget) { Invoke(nameof(AddWorldHUD), Widget); }
        public void AddHUD(PalUserWidget Widget, int ZOrder) { Invoke(nameof(AddHUD), Widget, ZOrder); }
    }
    public class PalUIInframeRenderer : Actor
    {
        public PalUIInframeRenderer(nint addr) : base(addr) { }
        public PalStaticCharacterParameterComponent GetStaticParameteComponentFromActorClassr(Object TargetActorClass) { return Invoke<PalStaticCharacterParameterComponent>(nameof(GetStaticParameteComponentFromActorClassr), TargetActorClass); }
        public SkeletalMeshComponent GetSkeletalMeshComponentFromActorClass(Object TargetActorClass) { return Invoke<SkeletalMeshComponent>(nameof(GetSkeletalMeshComponentFromActorClass), TargetActorClass); }
        public void ClearOverrideMaterials(SkeletalMeshComponent TargetSkeletalMesh) { Invoke(nameof(ClearOverrideMaterials), TargetSkeletalMesh); }
    }
    public class PalUIInGameGeneralDispatchEventReciever : PalUserWidget
    {
        public PalUIInGameGeneralDispatchEventReciever(nint addr) : base(addr) { }
        public void OpenDismantlingUIFromRadialMenu(int LastSelectedIndex) { Invoke(nameof(OpenDismantlingUIFromRadialMenu), LastSelectedIndex); }
        public void OpenDismantlingUI() { Invoke(nameof(OpenDismantlingUI)); }
        public void OpenBuildingUIFromRadialMenu(Object BuildObjectId) { Invoke(nameof(OpenBuildingUIFromRadialMenu), BuildObjectId); }
        public void OpenBuildingUI(Object BuildObjectId) { Invoke(nameof(OpenBuildingUI), BuildObjectId); }
        public void CloseDismantlingUI() { Invoke(nameof(CloseDismantlingUI)); }
        public void CloseBuildingUI() { Invoke(nameof(CloseBuildingUI)); }
    }
    public class PalUIInGameInputListener : PalUserWidgetStackableUI
    {
        public PalUIInGameInputListener(nint addr) : base(addr) { }
        public void OpenBuildRadialMenuWithSelectedIndex(int SelectedIndex) { Invoke(nameof(OpenBuildRadialMenuWithSelectedIndex), SelectedIndex); }
        public void OpenBuildRadialMenu(Object BuildObjectId) { Invoke(nameof(OpenBuildRadialMenu), BuildObjectId); }
        public void OpenBuildMenu(int BuildObjectTypeA) { Invoke(nameof(OpenBuildMenu), BuildObjectTypeA); }
    }
    public class PalUIInGameMainMenuBuildModel : Object
    {
        public PalUIInGameMainMenuBuildModel(nint addr) : base(addr) { }
        public void Setup() { Invoke(nameof(Setup)); }
        public void OnUpdateInventory(PalItemContainer Container) { Invoke(nameof(OnUpdateInventory), Container); }
        public void Dispose() { Invoke(nameof(Dispose)); }
    }
    public class PalUIInGameMainMenuInventoryModel : Object
    {
        public PalUIInGameMainMenuInventoryModel(nint addr) : base(addr) { }
    }
    public class PalUIInGameMainMenuModel : Object
    {
        public PalUIInGameMainMenuModel(nint addr) : base(addr) { }
    }
    public class PalUIInputGuard : PalUserWidget
    {
        public PalUIInputGuard(nint addr) : base(addr) { }
        public void OnTriggerReleaseGuardInput() { Invoke(nameof(OnTriggerReleaseGuardInput)); }
    }
    public class PalUIInsideBaseCampCanvas : PalUserWidget
    {
        public PalUIInsideBaseCampCanvas(nint addr) : base(addr) { }
        public Object OnEnterPalBoxAreaDelegate { get { return this[nameof(OnEnterPalBoxAreaDelegate)]; } set { this[nameof(OnEnterPalBoxAreaDelegate)] = value; } }
        public Object OnLeavePalBoxAreaDelegate { get { return this[nameof(OnLeavePalBoxAreaDelegate)]; } set { this[nameof(OnLeavePalBoxAreaDelegate)] = value; } }
        public PalBaseCampTaskChecker taskChecker { get { return this[nameof(taskChecker)].As<PalBaseCampTaskChecker>(); } set { this["taskChecker"] = value; } }
        public float palboxAreaRange { get { return this[nameof(palboxAreaRange)].GetValue<float>(); } set { this[nameof(palboxAreaRange)].SetValue<float>(value); } }
        public Object allTaskCompletedLogClass { get { return this[nameof(allTaskCompletedLogClass)]; } set { this[nameof(allTaskCompletedLogClass)] = value; } }
        public Guid lastInsideBaseCampID { get { return this[nameof(lastInsideBaseCampID)].As<Guid>(); } set { this["lastInsideBaseCampID"] = value; } }
        public Object displayItemInfoMap { get { return this[nameof(displayItemInfoMap)]; } set { this[nameof(displayItemInfoMap)] = value; } }
        public PalBaseCampTaskCheckedData CachedTaskCheckData { get { return this[nameof(CachedTaskCheckData)].As<PalBaseCampTaskCheckedData>(); } set { this["CachedTaskCheckData"] = value; } }
        public void UnregisterTaskProgressEvent(PalBaseCampModel Model) { Invoke(nameof(UnregisterTaskProgressEvent), Model); }
        public void ResetCachedTaskCheckData() { Invoke(nameof(ResetCachedTaskCheckData)); }
        public void RemoveAllTaskCompletedLog() { Invoke(nameof(RemoveAllTaskCompletedLog)); }
        public void RegisterTaskProgressEvent() { Invoke(nameof(RegisterTaskProgressEvent)); }
        public void OnNotAvailableInsideBaseCampMapObjectConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnNotAvailableInsideBaseCampMapObjectConcreteModel), ConcreteModel); }
        public void OnLeavePalBoxAreaDelegate__DelegateSignature() { Invoke(nameof(OnLeavePalBoxAreaDelegate__DelegateSignature)); }
        public void OnEnterPalBoxAreaDelegate__DelegateSignature() { Invoke(nameof(OnEnterPalBoxAreaDelegate__DelegateSignature)); }
        public void OnAvailableInsideBaseCampMapObjectConcreteModel(PalMapObjectConcreteModelBase ConcreteModel) { Invoke(nameof(OnAvailableInsideBaseCampMapObjectConcreteModel), ConcreteModel); }
        public bool GetTaskData(PalBaseCampTaskDataSet outTaskData) { return Invoke<bool>(nameof(GetTaskData), outTaskData); }
        public PalBaseCampModel GetInsideBaseCampModel() { return Invoke<PalBaseCampModel>(nameof(GetInsideBaseCampModel)); }
        public void GetBaseCampPalSlots(Array<PalIndividualCharacterSlot> OutSlots) { Invoke(nameof(GetBaseCampPalSlots), OutSlots); }
        public int GetBaseCampPalBedCount() { return Invoke<int>(nameof(GetBaseCampPalBedCount)); }
        public bool CheckTask(PalBaseCampTaskCheckedData outCheckedData) { return Invoke<bool>(nameof(CheckTask), outCheckedData); }
        public void CheckItemNum(Object outItemNumMap, long outFoodNum) { Invoke(nameof(CheckItemNum), outItemNumMap, outFoodNum); }
        public void CheckInsidePalBox() { Invoke(nameof(CheckInsidePalBox)); }
    }
    public class PalUIInventoryEquipment : PalUserWidget
    {
        public PalUIInventoryEquipment(nint addr) : base(addr) { }
        public void SwapItemSlot(PalItemSlot SlotA, PalItemSlot SlotB) { Invoke(nameof(SwapItemSlot), SlotA, SlotB); }
        public void SwapEquipmentByLiftItem(EPalPlayerEquipItemSlotType slotType) { Invoke(nameof(SwapEquipmentByLiftItem), slotType); }
        public void RequestUpdatePlayerStatusPoint(Object AddPointMap) { Invoke(nameof(RequestUpdatePlayerStatusPoint), AddPointMap); }
        public void QuickSortInventory() { Invoke(nameof(QuickSortInventory)); }
    }
    public class PalUIInventoryModel : Object
    {
        public PalUIInventoryModel(nint addr) : base(addr) { }
        public Object OnUpdateContainerContentDelegate { get { return this[nameof(OnUpdateContainerContentDelegate)]; } set { this[nameof(OnUpdateContainerContentDelegate)] = value; } }
        public Object OnFinishedItemTrashDelegate { get { return this[nameof(OnFinishedItemTrashDelegate)]; } set { this[nameof(OnFinishedItemTrashDelegate)] = value; } }
        public Object OnFinishedItemDropDelegate { get { return this[nameof(OnFinishedItemDropDelegate)]; } set { this[nameof(OnFinishedItemDropDelegate)] = value; } }
        public PalItemContainerMultiHelper InventoryContainers { get { return this[nameof(InventoryContainers)].As<PalItemContainerMultiHelper>(); } set { this["InventoryContainers"] = value; } }
        public PalItemSlotId tmpLiftedItemSlotId { get { return this[nameof(tmpLiftedItemSlotId)].As<PalItemSlotId>(); } set { this["tmpLiftedItemSlotId"] = value; } }
        public PalItemAndNum tmpLiftedItemAndNum { get { return this[nameof(tmpLiftedItemAndNum)].As<PalItemAndNum>(); } set { this["tmpLiftedItemAndNum"] = value; } }
        public void UpdateContainerContentDelegate__DelegateSignature() { Invoke(nameof(UpdateContainerContentDelegate__DelegateSignature)); }
        public void TryMoveSlotToInventory(PalItemSlot fromSlot, bool tryAutoEquip) { Invoke(nameof(TryMoveSlotToInventory), fromSlot, tryAutoEquip); }
        public void TryMoveContainerToInventory(PalItemContainer fromContainer, bool tryAutoEquip) { Invoke(nameof(TryMoveContainerToInventory), fromContainer, tryAutoEquip); }
        public bool TryGetInventoryContainer(EPalPlayerInventoryType Type, PalItemContainer Container) { return Invoke<bool>(nameof(TryGetInventoryContainer), Type, Container); }
        public void TryFillSlotToTargetContainerFromInventory(PalContainerId ToContainerId) { Invoke(nameof(TryFillSlotToTargetContainerFromInventory), ToContainerId); }
        public void TryFillSlotToInventoryFromTargetContainer(PalContainerId FromContainerId) { Invoke(nameof(TryFillSlotToInventoryFromTargetContainer), FromContainerId); }
        public void TrashLiftUpItem() { Invoke(nameof(TrashLiftUpItem)); }
        public void TrashItemFromDropSlot() { Invoke(nameof(TrashItemFromDropSlot)); }
        public void Setup() { Invoke(nameof(Setup)); }
        public void SelectItemSlot(PalItemSlotId SlotID, EPalItemSlotPressType PressType) { Invoke(nameof(SelectItemSlot), SlotID, PressType); }
        public void ResetLiftItem() { Invoke(nameof(ResetLiftItem)); }
        public void RequestSortInventory() { Invoke(nameof(RequestSortInventory)); }
        public void OnUpdateContainerContent(PalItemContainer Container) { Invoke(nameof(OnUpdateContainerContent), Container); }
        public void OnFinishedTrashItemDialog(bool Result) { Invoke(nameof(OnFinishedTrashItemDialog), Result); }
        public void OnFinishedTrashItemAlert(bool Result) { Invoke(nameof(OnFinishedTrashItemAlert), Result); }
        public void OnFinishedDropItem(bool Result) { Invoke(nameof(OnFinishedDropItem), Result); }
        public bool IsExistItems(Array<PalStaticItemIdAndNum> RequiredItems) { return Invoke<bool>(nameof(IsExistItems), RequiredItems); }
        public void FinishedItemTrashDelegate__DelegateSignature(bool Result) { Invoke(nameof(FinishedItemTrashDelegate__DelegateSignature), Result); }
        public void FinishedItemDropDelegate__DelegateSignature(bool Result) { Invoke(nameof(FinishedItemDropDelegate__DelegateSignature), Result); }
        public void DropLiftUpItem() { Invoke(nameof(DropLiftUpItem)); }
        public void DropItemFromDropSlot() { Invoke(nameof(DropItemFromDropSlot)); }
        public void Dispose() { Invoke(nameof(Dispose)); }
        public bool CheckLiftItemTypeB(EPalItemTypeB checkType) { return Invoke<bool>(nameof(CheckLiftItemTypeB), checkType); }
        public bool CheckLiftItemTypeA(EPalItemTypeA checkType) { return Invoke<bool>(nameof(CheckLiftItemTypeA), checkType); }
    }
    public class PalUIItemBoxModel : Object
    {
        public PalUIItemBoxModel(nint addr) : base(addr) { }
    }
    public class PalUIItemPossessStatusIndicator : PalUserWidgetWorldHUD
    {
        public PalUIItemPossessStatusIndicator(nint addr) : base(addr) { }
    }
    public class PalUIItemPossessStatusIndicatorParameter : PalHUDDispatchParameterBase
    {
        public PalUIItemPossessStatusIndicatorParameter(nint addr) : base(addr) { }
        public PalIndividualCharacterHandle TargetCharacter { get { return this[nameof(TargetCharacter)].As<PalIndividualCharacterHandle>(); } set { this["TargetCharacter"] = value; } }
    }
    public class PalHUDDispatchParameter_ItemShop : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_ItemShop(nint addr) : base(addr) { }
        public PalShopBase Shop { get { return this[nameof(Shop)].As<PalShopBase>(); } set { this["Shop"] = value; } }
    }
    public class PalUIItemShopBase : PalUserWidgetOverlayUI
    {
        public PalUIItemShopBase(nint addr) : base(addr) { }
        public bool TrySteal(Guid buyProductID, int stealNum) { return Invoke<bool>(nameof(TrySteal), buyProductID, stealNum); }
        public bool TrySell(Array<PalItemSlot> SellItemSlots) { return Invoke<bool>(nameof(TrySell), SellItemSlots); }
        public bool TryBuy(Guid buyProductID, int BuyNum) { return Invoke<bool>(nameof(TryBuy), buyProductID, BuyNum); }
        public bool GetMyShop(PalShopBase OutShop) { return Invoke<bool>(nameof(GetMyShop), OutShop); }
    }
    public class PalUIJoinGameBase : PalUserWidgetOverlayUI
    {
        public PalUIJoinGameBase(nint addr) : base(addr) { }
        public bool bIsShowIgnoreVersionServer { get { return this[nameof(bIsShowIgnoreVersionServer)].Flag; } set { this[nameof(bIsShowIgnoreVersionServer)].Flag = value; } }
        public Array<Object> OfficialServerIPRangeList { get { return new Array<Object>(this[nameof(OfficialServerIPRangeList)].Address); } }
        public Array<PalUIServerDisplayData> CachedServerDisplayInfo { get { return new Array<PalUIServerDisplayData>(this[nameof(CachedServerDisplayInfo)].Address); } }
        public void RequestOfficialServerIPRange() { Invoke(nameof(RequestOfficialServerIPRange)); }
        public void RequestGetServerList(EPalUIServerListFilterType Type, Object Region, bool IsCleanCache, bool NextPage) { Invoke(nameof(RequestGetServerList), Type, Region, IsCleanCache, NextPage); }
        public void OnCompleteOfficialServerIPRange(Object ResponseBody, bool bResponseOK, int ResponseCode) { Invoke(nameof(OnCompleteOfficialServerIPRange), ResponseBody, bResponseOK, ResponseCode); }
        public void OnCompleteGetServerListEvent() { Invoke(nameof(OnCompleteGetServerListEvent)); }
        public void OnCompleteFindSessions(bool IsSuccess, Array<BlueprintSessionResult> Results, Object ErrorStr) { Invoke(nameof(OnCompleteFindSessions), IsSuccess, Results, ErrorStr); }
        public void ConnectServerByAddress(Object Address, int Port) { Invoke(nameof(ConnectServerByAddress), Address, Port); }
        public void ConnectServer(PalUIServerDisplayData ServerDisplayData) { Invoke(nameof(ConnectServer), ServerDisplayData); }
        public void CollectServerDisplayInfo(PalUIServerDataCollectInfo CollectInfo, Array<PalUIServerDisplayData> OutServerInfo) { Invoke(nameof(CollectServerDisplayInfo), CollectInfo, OutServerInfo); }
    }
    public class PalHUDDispatchParame_JoinGameInputCode : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParame_JoinGameInputCode(nint addr) : base(addr) { }
        public EPalUIJoinGameInputCodeType InputCodeType { get { return (EPalUIJoinGameInputCodeType)this[nameof(InputCodeType)].GetValue<int>(); } set { this[nameof(InputCodeType)].SetValue<int>((int)value); } }
        public PalUIServerDisplayData TargetServerDisplayInfo { get { return this[nameof(TargetServerDisplayInfo)].As<PalUIServerDisplayData>(); } set { this["TargetServerDisplayInfo"] = value; } }
    }
    public class PalUIJoinGameInputCodeBase : PalUserWidgetOverlayUI
    {
        public PalUIJoinGameInputCodeBase(nint addr) : base(addr) { }
        public Object CahcedInputInviteCode { get { return this[nameof(CahcedInputInviteCode)]; } set { this[nameof(CahcedInputInviteCode)] = value; } }
        public void VerifyPassword(Object InputPassword) { Invoke(nameof(VerifyPassword), InputPassword); }
        public void VerifyInviteCode(Object InputCode) { Invoke(nameof(VerifyInviteCode), InputCode); }
        public void OnNotifyVerifyPassword(bool IsMatchPassword) { Invoke(nameof(OnNotifyVerifyPassword), IsMatchPassword); }
        public void OnNotifyVerifyInviteCode(bool IsValidCode, bool IsRequirePassword) { Invoke(nameof(OnNotifyVerifyInviteCode), IsValidCode, IsRequirePassword); }
        public void OnCompletedJoinSession(bool IsSuccess, JoinSessionResultType Type) { Invoke(nameof(OnCompletedJoinSession), IsSuccess, Type); }
        public void OnCompletedFindSessions(bool IsSuccess, Array<BlueprintSessionResult> Results, Object ErrorStr) { Invoke(nameof(OnCompletedFindSessions), IsSuccess, Results, ErrorStr); }
    }
    public class PalUILiftSlotModel : Object
    {
        public PalUILiftSlotModel(nint addr) : base(addr) { }
        public Object OnUpdateDelegate { get { return this[nameof(OnUpdateDelegate)]; } set { this[nameof(OnUpdateDelegate)] = value; } }
        public Object OnUpdateHandleSlotDelegate { get { return this[nameof(OnUpdateHandleSlotDelegate)]; } set { this[nameof(OnUpdateHandleSlotDelegate)] = value; } }
        public Object OnUpdateIconDelegate { get { return this[nameof(OnUpdateIconDelegate)]; } set { this[nameof(OnUpdateIconDelegate)] = value; } }
        public Object OnUpdateCountDelegate { get { return this[nameof(OnUpdateCountDelegate)]; } set { this[nameof(OnUpdateCountDelegate)] = value; } }
        public Object OnFailedItemOperationDelegate { get { return this[nameof(OnFailedItemOperationDelegate)]; } set { this[nameof(OnFailedItemOperationDelegate)] = value; } }
        public PalItemSlotId ItemSourceSlotId { get { return this[nameof(ItemSourceSlotId)].As<PalItemSlotId>(); } set { this["ItemSourceSlotId"] = value; } }
        public PalItemAndNum ItemInfo { get { return this[nameof(ItemInfo)].As<PalItemAndNum>(); } set { this["ItemInfo"] = value; } }
        public PalIndividualCharacterSlot CharacterSlot { get { return this[nameof(CharacterSlot)].As<PalIndividualCharacterSlot>(); } set { this["CharacterSlot"] = value; } }
        public void SelectItemSlot(PalItemSlotId SlotID, EPalItemSlotPressType Type) { Invoke(nameof(SelectItemSlot), SlotID, Type); }
        public void SelectCharacterSlot(PalCharacterSlotId SlotID, EPalItemSlotPressType Type) { Invoke(nameof(SelectCharacterSlot), SlotID, Type); }
        public void ResetLiftItem() { Invoke(nameof(ResetLiftItem)); }
        public void OnUpdateLiftItemSourceSlot(PalItemSlot Slot) { Invoke(nameof(OnUpdateLiftItemSourceSlot), Slot); }
        public void OnUpdateLiftHandleSlot(PalIndividualCharacterSlot Slot, PalIndividualCharacterHandle LastHandle) { Invoke(nameof(OnUpdateLiftHandleSlot), Slot, LastHandle); }
        public void OnUpdateIconDelegate__DelegateSignature(Object IconTexture) { Invoke(nameof(OnUpdateIconDelegate__DelegateSignature), IconTexture); }
        public void OnUpdateHandleSlotDelegate__DelegateSignature(PalIndividualCharacterSlot TargetHandleSlot) { Invoke(nameof(OnUpdateHandleSlotDelegate__DelegateSignature), TargetHandleSlot); }
        public void OnUpdateDelegate__DelegateSignature() { Invoke(nameof(OnUpdateDelegate__DelegateSignature)); }
        public void OnUpdateCountDelegate__DelegateSignature(int Count) { Invoke(nameof(OnUpdateCountDelegate__DelegateSignature), Count); }
        public void OnFailedItemOperationDelegate__DelegateSignature() { Invoke(nameof(OnFailedItemOperationDelegate__DelegateSignature)); }
        public bool IsLift() { return Invoke<bool>(nameof(IsLift)); }
    }
    public class PalUILoadOutModel : Object
    {
        public PalUILoadOutModel(nint addr) : base(addr) { }
        public EPalPlayerInventoryType draggedTargetContainerType { get { return (EPalPlayerInventoryType)this[nameof(draggedTargetContainerType)].GetValue<int>(); } set { this[nameof(draggedTargetContainerType)].SetValue<int>((int)value); } }
        public bool TryGetContainer(EPalPlayerInventoryType targetType, PalItemContainer Container) { return Invoke<bool>(nameof(TryGetContainer), targetType, Container); }
        public void SelectItemSlot(PalItemSlotId SlotID, EPalItemSlotPressType PressType) { Invoke(nameof(SelectItemSlot), SlotID, PressType); }
        public bool CanSetItem(PalItemData ItemData) { return Invoke<bool>(nameof(CanSetItem), ItemData); }
    }
    public class PalUILocalWorldSelectBase : PalUserWidgetOverlayUI
    {
        public PalUILocalWorldSelectBase(nint addr) : base(addr) { }
        public Object LoadedBaseInfoMap { get { return this[nameof(LoadedBaseInfoMap)]; } set { this[nameof(LoadedBaseInfoMap)] = value; } }
        public bool SelectWorld(Object WorldSaveDirectoryName, Object WorldName, PalOptionWorldSaveData OptionWorldData) { return Invoke<bool>(nameof(SelectWorld), WorldSaveDirectoryName, WorldName, OptionWorldData); }
        public void GetWorldDisplayInfo(Object OutDisplayInfo) { Invoke(nameof(GetWorldDisplayInfo), OutDisplayInfo); }
        public Array<PalUILocalWorldDisplayData> GetSortedWorldDisplayInfoArray(Object DisplayInfoMap) { return Invoke<Array<PalUILocalWorldDisplayData>>(nameof(GetSortedWorldDisplayInfoArray), DisplayInfoMap); }
        public bool DeleteWorld(Object WorldSaveDirectoryName) { return Invoke<bool>(nameof(DeleteWorld), WorldSaveDirectoryName); }
    }
    public class PalUIManager : Object
    {
        public PalUIManager(nint addr) : base(addr) { }
    }
    public class PalUIManagerSubsystem : GameUIManagerSubsystem
    {
        public PalUIManagerSubsystem(nint addr) : base(addr) { }
    }
    public class PalMapObjectHPWorldHUDParameter : PalHUDDispatchParameterBase
    {
        public PalMapObjectHPWorldHUDParameter(nint addr) : base(addr) { }
        public PalMapObject MapObject { get { return this[nameof(MapObject)].As<PalMapObject>(); } set { this["MapObject"] = value; } }
    }
    public class PalUIMapObjectHPWorldHUD : PalUserWidgetWorldHUD
    {
        public PalUIMapObjectHPWorldHUD(nint addr) : base(addr) { }
    }
    public class PalUIMapObjectStatusIndicatorBase : PalUserWidgetWorldHUD
    {
        public PalUIMapObjectStatusIndicatorBase(nint addr) : base(addr) { }
        public EPalWorkSuitability GetWorkSuitability() { return Invoke<EPalWorkSuitability>(nameof(GetWorkSuitability)); }
    }
    public class PalUIMapObjectStatusIndicatorParameterBase : PalHUDDispatchParameterBase
    {
        public PalUIMapObjectStatusIndicatorParameterBase(nint addr) : base(addr) { }
        public PalMapObjectConcreteModelBase GetConcreteModel() { return Invoke<PalMapObjectConcreteModelBase>(nameof(GetConcreteModel)); }
    }
    public class PalUINPCHPGaugeCanvasBase : PalUserWidget
    {
        public PalUINPCHPGaugeCanvasBase(nint addr) : base(addr) { }
    }
    public class PalUIOffScreenLoupeBase : PalUserWidget
    {
        public PalUIOffScreenLoupeBase(nint addr) : base(addr) { }
        public float displayDotBorder { get { return this[nameof(displayDotBorder)].GetValue<float>(); } set { this[nameof(displayDotBorder)].SetValue<float>(value); } }
        public bool isWaitedClose { get { return this[nameof(isWaitedClose)].Flag; } set { this[nameof(isWaitedClose)].Flag = value; } }
        public bool isOverrideVisibility { get { return this[nameof(isOverrideVisibility)].Flag; } set { this[nameof(isOverrideVisibility)].Flag = value; } }
        public bool isRequestedDisplay { get { return this[nameof(isRequestedDisplay)].Flag; } set { this[nameof(isRequestedDisplay)].Flag = value; } }
        public ESlateVisibility overrideVisibility { get { return (ESlateVisibility)this[nameof(overrideVisibility)].GetValue<int>(); } set { this[nameof(overrideVisibility)].SetValue<int>((int)value); } }
        public Vector targetWorldLocation { get { return this[nameof(targetWorldLocation)].As<Vector>(); } set { this["targetWorldLocation"] = value; } }
        public Vector2D projectedScreenPosition { get { return this[nameof(projectedScreenPosition)].As<Vector2D>(); } set { this["projectedScreenPosition"] = value; } }
        public Vector2D calcedScreenPosition { get { return this[nameof(calcedScreenPosition)].As<Vector2D>(); } set { this["calcedScreenPosition"] = value; } }
        public Vector2D widgetSize { get { return this[nameof(widgetSize)].As<Vector2D>(); } set { this["widgetSize"] = value; } }
        public void SetOverrideVisibility(ESlateVisibility NewVisibility) { Invoke(nameof(SetOverrideVisibility), NewVisibility); }
        public void ResetOverrideVisibility() { Invoke(nameof(ResetOverrideVisibility)); }
        public void RequestHide() { Invoke(nameof(RequestHide)); }
        public void RequestDisplay() { Invoke(nameof(RequestDisplay)); }
        public void RequestClose() { Invoke(nameof(RequestClose)); }
        public void OnRequestedClose() { Invoke(nameof(OnRequestedClose)); }
        public bool IsEnableLoupe() { return Invoke<bool>(nameof(IsEnableLoupe)); }
        public void GetTargetWorldLocation(Vector outVector) { Invoke(nameof(GetTargetWorldLocation), outVector); }
        public void GetTargetWidgetSize(Vector2D outVector) { Invoke(nameof(GetTargetWidgetSize), outVector); }
        public void CloseSelf() { Invoke(nameof(CloseSelf)); }
        public void CalcScreenPosition() { Invoke(nameof(CalcScreenPosition)); }
    }
    public class PalUIOtomoListModel : Object
    {
        public PalUIOtomoListModel(nint addr) : base(addr) { }
        public Object OnSelectSlotDelegate { get { return this[nameof(OnSelectSlotDelegate)]; } set { this[nameof(OnSelectSlotDelegate)] = value; } }
        public Object OnUpdateSlotDelegate { get { return this[nameof(OnUpdateSlotDelegate)]; } set { this[nameof(OnUpdateSlotDelegate)] = value; } }
        public void UpdateSlotDelegate__DelegateSignature(PalUIOtomoListModel Model) { Invoke(nameof(UpdateSlotDelegate__DelegateSignature), Model); }
        public void SelectSlotDelegate__DelegateSignature(PalUIOtomoListModel Model, int SlotIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectSlotDelegate__DelegateSignature), Model, SlotIndex, PressType); }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public void GetCurrentPageSlots(Array<PalIndividualCharacterSlot> OutSlots) { Invoke(nameof(GetCurrentPageSlots), OutSlots); }
        public PalContainerId GetContainerId() { return Invoke<PalContainerId>(nameof(GetContainerId)); }
    }
    public class PalUIPalBoxBase : PalUserWidgetOverlayUI
    {
        public PalUIPalBoxBase(nint addr) : base(addr) { }
        public void TryMoveToOtomo(PalIndividualCharacterSlot MoveSlot) { Invoke(nameof(TryMoveToOtomo), MoveSlot); }
        public void TryMoveToBox(PalIndividualCharacterSlot MoveSlot) { Invoke(nameof(TryMoveToBox), MoveSlot); }
        public void TryMoveToBaseCamp(PalIndividualCharacterSlot MoveSlot) { Invoke(nameof(TryMoveToBaseCamp), MoveSlot); }
        public void TryLoosePal(PalIndividualCharacterSlot targetSlot) { Invoke(nameof(TryLoosePal), targetSlot); }
        public void SetPagePalBoxList(int newPage) { Invoke(nameof(SetPagePalBoxList), newPage); }
        public void SetBaseCampId(Guid BaseCampId) { Invoke(nameof(SetBaseCampId), BaseCampId); }
        public void SelectCharacterSlot(PalIndividualCharacterSlot targetSlot, EPalItemSlotPressType PressType) { Invoke(nameof(SelectCharacterSlot), targetSlot, PressType); }
        public void RequestSortBox(EPalCharacterContainerSortType SortType) { Invoke(nameof(RequestSortBox), SortType); }
        public void OnUpdateWorkerCapacity(PalIndividualCharacterContainer Container) { Invoke(nameof(OnUpdateWorkerCapacity), Container); }
        public void OnUpdatePageWorkerList(Array<PalIndividualCharacterSlot> slotList) { Invoke(nameof(OnUpdatePageWorkerList), slotList); }
        public void OnUpdatePagePalBoxList(int nowPage, Array<PalIndividualCharacterSlot> slotList) { Invoke(nameof(OnUpdatePagePalBoxList), nowPage, slotList); }
        public int GetBoxMaxPageNum() { return Invoke<int>(nameof(GetBoxMaxPageNum)); }
        public void ChangePrevPagePalBoxList() { Invoke(nameof(ChangePrevPagePalBoxList)); }
        public void ChangeNextPagePalBoxList() { Invoke(nameof(ChangeNextPagePalBoxList)); }
        public void CancelLift() { Invoke(nameof(CancelLift)); }
    }
    public class PalUIPalBoxModel : Object
    {
        public PalUIPalBoxModel(nint addr) : base(addr) { }
        public Object OnUpdatePageDelegate { get { return this[nameof(OnUpdatePageDelegate)]; } set { this[nameof(OnUpdatePageDelegate)] = value; } }
        public int CurrentPageIndex { get { return this[nameof(CurrentPageIndex)].GetValue<int>(); } set { this[nameof(CurrentPageIndex)].SetValue<int>(value); } }
        public void UpdatePageDelegate__DelegateSignature(PalUIPalBoxModel Model) { Invoke(nameof(UpdatePageDelegate__DelegateSignature), Model); }
        public void ToPrevPage() { Invoke(nameof(ToPrevPage)); }
        public void ToNextPage() { Invoke(nameof(ToNextPage)); }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public int GetWholePageCount() { return Invoke<int>(nameof(GetWholePageCount)); }
        public int GetSlotCountInPage() { return Invoke<int>(nameof(GetSlotCountInPage)); }
        public Array<PalIndividualCharacterSlot> GetCurrentPageSlots() { return Invoke<Array<PalIndividualCharacterSlot>>(nameof(GetCurrentPageSlots)); }
    }
    public class PalUIPalBoxTerminalManageModel : Object
    {
        public PalUIPalBoxTerminalManageModel(nint addr) : base(addr) { }
        public Object PalBoxClass { get { return this[nameof(PalBoxClass)]; } set { this[nameof(PalBoxClass)] = value; } }
        public PalUIPalBoxModel PalBox { get { return this[nameof(PalBox)].As<PalUIPalBoxModel>(); } set { this["PalBox"] = value; } }
        public Object BaseCampWorkersClass { get { return this[nameof(BaseCampWorkersClass)]; } set { this[nameof(BaseCampWorkersClass)] = value; } }
        public PalUIBaseCampWorkersModel BaseCampWorkers { get { return this[nameof(BaseCampWorkers)].As<PalUIBaseCampWorkersModel>(); } set { this["BaseCampWorkers"] = value; } }
        public Object BaseCampPartyClass { get { return this[nameof(BaseCampPartyClass)]; } set { this[nameof(BaseCampPartyClass)] = value; } }
        public PalUIBaseCampPartyModel BaseCampParty { get { return this[nameof(BaseCampParty)].As<PalUIBaseCampPartyModel>(); } set { this["BaseCampParty"] = value; } }
        public void MoveSlotToWorker(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToWorker), Slot); }
        public void MoveSlotToPosses(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToPosses), Slot); }
        public void MoveSlotToParty(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToParty), Slot); }
        public void MoveSlotToLost(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToLost), Slot); }
        public void Initialize(Guid BaseCampId) { Invoke(nameof(Initialize), BaseCampId); }
    }
    public class PalUIPalCharacterRankUpModel : Object
    {
        public PalUIPalCharacterRankUpModel(nint addr) : base(addr) { }
        public Object OnUpdateTargetSlotDelegate { get { return this[nameof(OnUpdateTargetSlotDelegate)]; } set { this[nameof(OnUpdateTargetSlotDelegate)] = value; } }
        public Object OnUpdateResourceSlotDelegate { get { return this[nameof(OnUpdateResourceSlotDelegate)]; } set { this[nameof(OnUpdateResourceSlotDelegate)] = value; } }
        public Object OnUpdateSelectModeDelegate { get { return this[nameof(OnUpdateSelectModeDelegate)]; } set { this[nameof(OnUpdateSelectModeDelegate)] = value; } }
        public PalContainerId LocalContainerId { get { return this[nameof(LocalContainerId)].As<PalContainerId>(); } set { this["LocalContainerId"] = value; } }
        public Object PalStorageModelClass { get { return this[nameof(PalStorageModelClass)]; } set { this[nameof(PalStorageModelClass)] = value; } }
        public PalUIPalStorageModel PalStorageModel { get { return this[nameof(PalStorageModel)].As<PalUIPalStorageModel>(); } set { this["PalStorageModel"] = value; } }
        public EPalUIPalCharacterRankUpSelectMode SelectMode { get { return (EPalUIPalCharacterRankUpSelectMode)this[nameof(SelectMode)].GetValue<int>(); } set { this[nameof(SelectMode)].SetValue<int>((int)value); } }
        public bool ToggleResourceCharacter(PalIndividualCharacterHandle Handle) { return Invoke<bool>(nameof(ToggleResourceCharacter), Handle); }
        public void Setup(PalHUDDispatchParameter_CharacterRankUp Parameter) { Invoke(nameof(Setup), Parameter); }
        public void SelectTargetCharacter(PalIndividualCharacterHandle Handle) { Invoke(nameof(SelectTargetCharacter), Handle); }
        public void SelectResourcesAuto(EPalUIPalCharacterRankUpSelectResourceType SelectType) { Invoke(nameof(SelectResourcesAuto), SelectType); }
        public bool SelectResourceCharacterTo(PalIndividualCharacterHandle Handle, int ToResourceSlotIndex) { return Invoke<bool>(nameof(SelectResourceCharacterTo), Handle, ToResourceSlotIndex); }
        public void OnUpdateTargetSlot(PalIndividualCharacterReferenceSlot Slot, PalInstanceID LastIndividualId) { Invoke(nameof(OnUpdateTargetSlot), Slot, LastIndividualId); }
        public void OnUpdateTargetCharacterRank(int nowRank, int oldRank) { Invoke(nameof(OnUpdateTargetCharacterRank), nowRank, oldRank); }
        public void OnUpdateResourceSlot(PalIndividualCharacterReferenceSlot Slot, PalInstanceID LastIndividualId) { Invoke(nameof(OnUpdateResourceSlot), Slot, LastIndividualId); }
        public void OnClickTargetCharacterSlot() { Invoke(nameof(OnClickTargetCharacterSlot)); }
        public void OnClickResourceCharacterSlot(int SlotIndex) { Invoke(nameof(OnClickResourceCharacterSlot), SlotIndex); }
        public void ModelDelegate__DelegateSignature(PalUIPalCharacterRankUpModel Model) { Invoke(nameof(ModelDelegate__DelegateSignature), Model); }
        public bool IsSelectableSlotInternal(PalIndividualCharacterSlot Slot) { return Invoke<bool>(nameof(IsSelectableSlotInternal), Slot); }
        public void InvokeRankUp() { Invoke(nameof(InvokeRankUp)); }
        public PalIndividualCharacterReferenceSlot GetTargetSlot() { return Invoke<PalIndividualCharacterReferenceSlot>(nameof(GetTargetSlot)); }
        public PalIndividualCharacterReferenceSlot GetSlot(int SlotIndex) { return Invoke<PalIndividualCharacterReferenceSlot>(nameof(GetSlot), SlotIndex); }
        public void GetResourceSlots(Array<PalIndividualCharacterSlot> Slots) { Invoke(nameof(GetResourceSlots), Slots); }
        public void Dispose() { Invoke(nameof(Dispose)); }
        public PalIndividualCharacterParameter CreatePredicateTargetCharacterParameter() { return Invoke<PalIndividualCharacterParameter>(nameof(CreatePredicateTargetCharacterParameter)); }
        public void ClearSelected() { Invoke(nameof(ClearSelected)); }
        public void ClearResourceCharacters() { Invoke(nameof(ClearResourceCharacters)); }
        public EPalUIPalCharacterRankUpRequestResult CanInvokeRankUp() { return Invoke<EPalUIPalCharacterRankUpRequestResult>(nameof(CanInvokeRankUp)); }
    }
    public class PalHUDDispatchParameter_CharacterRankUp : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_CharacterRankUp(nint addr) : base(addr) { }
        public PalMapObjectRankUpCharacterModel ConcreteModel { get { return this[nameof(ConcreteModel)].As<PalMapObjectRankUpCharacterModel>(); } set { this["ConcreteModel"] = value; } }
    }
    public class PalUIPaldex : PalUserWidgetOverlayUI
    {
        public PalUIPaldex(nint addr) : base(addr) { }
        public Object DisplayInfoMap { get { return this[nameof(DisplayInfoMap)]; } set { this[nameof(DisplayInfoMap)] = value; } }
        public Array<PalUIPaldex_DisplayInfo> displayInfoArray { get { return new Array<PalUIPaldex_DisplayInfo>(this[nameof(displayInfoArray)].Address); } }
        public void CreateDisplayInfo() { Invoke(nameof(CreateDisplayInfo)); }
    }
    public class PalUIPalFarmSelectCropModel : Object
    {
        public PalUIPalFarmSelectCropModel(nint addr) : base(addr) { }
    }
    public class PalUIPalFoodBoxModel : Object
    {
        public PalUIPalFoodBoxModel(nint addr) : base(addr) { }
    }
    public class PalHUDDispatchParameter_PalShop : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_PalShop(nint addr) : base(addr) { }
        public PalShopBase Shop { get { return this[nameof(Shop)].As<PalShopBase>(); } set { this["Shop"] = value; } }
    }
    public class PalUIPalShopBase : PalUserWidgetOverlayUI
    {
        public PalUIPalShopBase(nint addr) : base(addr) { }
        public void UpdateLocalLostPalProduct() { Invoke(nameof(UpdateLocalLostPalProduct)); }
        public bool TrySell(Array<PalIndividualCharacterSlot> SellPalSlots) { return Invoke<bool>(nameof(TrySell), SellPalSlots); }
        public bool TryBuy(Guid buyProductID) { return Invoke<bool>(nameof(TryBuy), buyProductID); }
        public void RequestCollectLocalLostPalData() { Invoke(nameof(RequestCollectLocalLostPalData)); }
        public bool GetPalStorageSlots(PalIndividualCharacterContainer OutContainer) { return Invoke<bool>(nameof(GetPalStorageSlots), OutContainer); }
        public bool GetMyShop(PalShopBase OutShop) { return Invoke<bool>(nameof(GetMyShop), OutShop); }
    }
    public class PalUIPalStorageManageModel : Object
    {
        public PalUIPalStorageManageModel(nint addr) : base(addr) { }
        public Guid OwnerBaseCampId { get { return this[nameof(OwnerBaseCampId)].As<Guid>(); } set { this["OwnerBaseCampId"] = value; } }
        public Object PalStorageClass { get { return this[nameof(PalStorageClass)]; } set { this[nameof(PalStorageClass)] = value; } }
        public PalUIPalStorageModel PalStorage { get { return this[nameof(PalStorage)].As<PalUIPalStorageModel>(); } set { this["PalStorage"] = value; } }
        public Object PalStorageManageRightClass { get { return this[nameof(PalStorageManageRightClass)]; } set { this[nameof(PalStorageManageRightClass)] = value; } }
        public PalUIPalStorageManageRightModel PalStorageManageRight { get { return this[nameof(PalStorageManageRight)].As<PalUIPalStorageManageRightModel>(); } set { this["PalStorageManageRight"] = value; } }
        public void MoveSlotToWorker(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToWorker), Slot); }
        public void MoveSlotToPosses(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToPosses), Slot); }
        public void MoveSlotToParty(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToParty), Slot); }
        public void MoveSlotToLost(PalIndividualCharacterSlot Slot) { Invoke(nameof(MoveSlotToLost), Slot); }
        public void Initialize(Guid InOwnerBaseCampId) { Invoke(nameof(Initialize), InOwnerBaseCampId); }
    }
    public class PalUIPalStorageManageRightModel : Object
    {
        public PalUIPalStorageManageRightModel(nint addr) : base(addr) { }
        public Object OnUpdatePageDelegate { get { return this[nameof(OnUpdatePageDelegate)]; } set { this[nameof(OnUpdatePageDelegate)] = value; } }
        public Guid OwnerBaseCampId { get { return this[nameof(OwnerBaseCampId)].As<Guid>(); } set { this["OwnerBaseCampId"] = value; } }
        public EPalPalStorageManageRightType CurrentPageType { get { return (EPalPalStorageManageRightType)this[nameof(CurrentPageType)].GetValue<int>(); } set { this[nameof(CurrentPageType)].SetValue<int>((int)value); } }
        public Object BaseCampWorkerListClass { get { return this[nameof(BaseCampWorkerListClass)]; } set { this[nameof(BaseCampWorkerListClass)] = value; } }
        public PalUIBaseCampWorkerListModel BaseCampWorkerList { get { return this[nameof(BaseCampWorkerList)].As<PalUIBaseCampWorkerListModel>(); } set { this["BaseCampWorkerList"] = value; } }
        public Object OtomoListClass { get { return this[nameof(OtomoListClass)]; } set { this[nameof(OtomoListClass)] = value; } }
        public PalUIOtomoListModel OtomoList { get { return this[nameof(OtomoList)].As<PalUIOtomoListModel>(); } set { this["OtomoList"] = value; } }
        public void UpdatePageDelegate__DelegateSignature(PalUIPalStorageManageRightModel Model) { Invoke(nameof(UpdatePageDelegate__DelegateSignature), Model); }
        public void ToPrevPage() { Invoke(nameof(ToPrevPage)); }
        public void ToNextPage() { Invoke(nameof(ToNextPage)); }
        public bool CanMoveToPrev() { return Invoke<bool>(nameof(CanMoveToPrev)); }
        public bool CanMoveToNext() { return Invoke<bool>(nameof(CanMoveToNext)); }
    }
    public class PalUIPalStorageModel : Object
    {
        public PalUIPalStorageModel(nint addr) : base(addr) { }
        public Object OnUpdatePageDelegate { get { return this[nameof(OnUpdatePageDelegate)]; } set { this[nameof(OnUpdatePageDelegate)] = value; } }
        public int CurrentPageIndex { get { return this[nameof(CurrentPageIndex)].GetValue<int>(); } set { this[nameof(CurrentPageIndex)].SetValue<int>(value); } }
        public PalUICharacterDisplayModel DisplayModel { get { return this[nameof(DisplayModel)].As<PalUICharacterDisplayModel>(); } set { this["DisplayModel"] = value; } }
        public void UpdatePageDelegate__DelegateSignature(PalUIPalStorageModel Model) { Invoke(nameof(UpdatePageDelegate__DelegateSignature), Model); }
        public void ToPrevPage() { Invoke(nameof(ToPrevPage)); }
        public void ToPage(int PageIndex, bool bForce) { Invoke(nameof(ToPage), PageIndex, bForce); }
        public void ToNextPage() { Invoke(nameof(ToNextPage)); }
        public void SelectHandleSlot(int DisplayIndex, EPalItemSlotPressType PressType) { Invoke(nameof(SelectHandleSlot), DisplayIndex, PressType); }
        public void OnOperatedByOuter() { Invoke(nameof(OnOperatedByOuter)); }
        public int GetWholePageCount() { return Invoke<int>(nameof(GetWholePageCount)); }
        public PalContainerId GetTargetContainerId() { return Invoke<PalContainerId>(nameof(GetTargetContainerId)); }
        public bool CanMoveToPrev() { return Invoke<bool>(nameof(CanMoveToPrev)); }
        public bool CanMoveToNext() { return Invoke<bool>(nameof(CanMoveToNext)); }
    }
    public class PalUIPlayerEquipment : PalUserWidgetOverlayUI
    {
        public PalUIPlayerEquipment(nint addr) : base(addr) { }
        public void SwapItemSlot(PalItemSlot SlotA, PalItemSlot SlotB) { Invoke(nameof(SwapItemSlot), SlotA, SlotB); }
        public void SwapEquipment(EPalPlayerEquipItemSlotType slotType, PalItemSlot fromSlot) { Invoke(nameof(SwapEquipment), slotType, fromSlot); }
        public void SetDisableEquipmentHeadMeshFlag(bool isDisable) { Invoke(nameof(SetDisableEquipmentHeadMeshFlag), isDisable); }
        public void RemoveItemSlot(PalItemSlot targetSlot, PalItemSlot toSlot) { Invoke(nameof(RemoveItemSlot), targetSlot, toSlot); }
        public void RemoveEquipment(EPalPlayerEquipItemSlotType slotType, PalItemSlot toSlot) { Invoke(nameof(RemoveEquipment), slotType, toSlot); }
    }
    public class PalUIPlayerRadialMenuBase : PalUserWidget
    {
        public PalUIPlayerRadialMenuBase(nint addr) : base(addr) { }
        public void SelectedFeed(PalItemSlotId itemSlotId, int itemNum) { Invoke(nameof(SelectedFeed), itemSlotId, itemNum); }
        public void OpenOtomoFeedInventory() { Invoke(nameof(OpenOtomoFeedInventory)); }
    }
    public class PalUIProductSettingModel : Object
    {
        public PalUIProductSettingModel(nint addr) : base(addr) { }
        public Object OnUpdateRecipeDelegate { get { return this[nameof(OnUpdateRecipeDelegate)]; } set { this[nameof(OnUpdateRecipeDelegate)] = value; } }
        public Object OnUpdateProductNumDelegate { get { return this[nameof(OnUpdateProductNumDelegate)]; } set { this[nameof(OnUpdateProductNumDelegate)] = value; } }
        public Object OnUpdateDelegate { get { return this[nameof(OnUpdateDelegate)]; } set { this[nameof(OnUpdateDelegate)] = value; } }
        public Object TargetMapObjectName { get { return this[nameof(TargetMapObjectName)]; } set { this[nameof(TargetMapObjectName)] = value; } }
        public Object SelectedRecipeId { get { return this[nameof(SelectedRecipeId)]; } set { this[nameof(SelectedRecipeId)] = value; } }
        public Object FocusedRecipeId { get { return this[nameof(FocusedRecipeId)]; } set { this[nameof(FocusedRecipeId)] = value; } }
        public int ProductNum { get { return this[nameof(ProductNum)].GetValue<int>(); } set { this[nameof(ProductNum)].SetValue<int>(value); } }
        public Object WeakEnergyModule { get { return this[nameof(WeakEnergyModule)]; } set { this[nameof(WeakEnergyModule)] = value; } }
        public void UpdateSettingDelegate__DelegateSignature(PalUIProductSettingModel Model) { Invoke(nameof(UpdateSettingDelegate__DelegateSignature), Model); }
        public bool TryGetEnergyModule(PalMapObjectEnergyModule Module) { return Invoke<bool>(nameof(TryGetEnergyModule), Module); }
        public void SetProductNumByInput(int InputNum) { Invoke(nameof(SetProductNumByInput), InputNum); }
        public void SetMaxProduction() { Invoke(nameof(SetMaxProduction)); }
        public void SetInfiniteProduction() { Invoke(nameof(SetInfiniteProduction)); }
        public void SetFocusedRecipe(Object RecipeID) { Invoke(nameof(SetFocusedRecipe), RecipeID); }
        public void SelectRecipe(Object RecipeID) { Invoke(nameof(SelectRecipe), RecipeID); }
        public void ResetProductNum() { Invoke(nameof(ResetProductNum)); }
        public void OnUpdateInventory(PalItemContainerMultiHelper IInventoryContainers) { Invoke(nameof(OnUpdateInventory), IInventoryContainers); }
        public void NotifyUpdateForce() { Invoke(nameof(NotifyUpdateForce)); }
        public bool IsProductNumInfinite() { return Invoke<bool>(nameof(IsProductNumInfinite)); }
        public void IncreaseProductNum() { Invoke(nameof(IncreaseProductNum)); }
        public void GetRequiredMaterialInfos(Array<PalStaticItemIdAndNum> RequiredMaterialInfos) { Invoke(nameof(GetRequiredMaterialInfos), RequiredMaterialInfos); }
        public Object GetRecipeId() { return Invoke<Object>(nameof(GetRecipeId)); }
        public PalItemRecipe GetRecipe() { return Invoke<PalItemRecipe>(nameof(GetRecipe)); }
        public int GetProductNum() { return Invoke<int>(nameof(GetProductNum)); }
        public void DecreaseProductNum() { Invoke(nameof(DecreaseProductNum)); }
        public float CalcWorkAmount() { return Invoke<float>(nameof(CalcWorkAmount)); }
        public int CalcMaxProductableNum() { return Invoke<int>(nameof(CalcMaxProductableNum)); }
        public int CalcConsumeEnergy() { return Invoke<int>(nameof(CalcConsumeEnergy)); }
    }
    public class PalUIRadialMenuWidgetBase : PalUserWidget
    {
        public PalUIRadialMenuWidgetBase(nint addr) : base(addr) { }
        public Object OnChangeSelectedIndex { get { return this[nameof(OnChangeSelectedIndex)]; } set { this[nameof(OnChangeSelectedIndex)] = value; } }
        public float IgnoreMouseLength { get { return this[nameof(IgnoreMouseLength)].GetValue<float>(); } set { this[nameof(IgnoreMouseLength)].SetValue<float>(value); } }
        public int menuNum { get { return this[nameof(menuNum)].GetValue<int>(); } set { this[nameof(menuNum)].SetValue<int>(value); } }
        public int shiftDegree { get { return this[nameof(shiftDegree)].GetValue<int>(); } set { this[nameof(shiftDegree)].SetValue<int>(value); } }
        public float detectPadAxisBorder { get { return this[nameof(detectPadAxisBorder)].GetValue<float>(); } set { this[nameof(detectPadAxisBorder)].SetValue<float>(value); } }
        public float nowArrowRadian { get { return this[nameof(nowArrowRadian)].GetValue<float>(); } set { this[nameof(nowArrowRadian)].SetValue<float>(value); } }
        public int nowSelectedIndex { get { return this[nameof(nowSelectedIndex)].GetValue<int>(); } set { this[nameof(nowSelectedIndex)].SetValue<int>(value); } }
        public Array<float> menuAreaStartRadian { get { return new Array<float>(this[nameof(menuAreaStartRadian)].Address); } }
        public Array<float> menuAreaEndRadian { get { return new Array<float>(this[nameof(menuAreaEndRadian)].Address); } }
        public void UpdateSelectedIndex_ForPad() { Invoke(nameof(UpdateSelectedIndex_ForPad)); }
        public void UpdateSelectedIndex_ForMouse(Vector2D MousePosition, Vector2D CenterPosition) { Invoke(nameof(UpdateSelectedIndex_ForMouse), MousePosition, CenterPosition); }
        public void UpdateSelectedIndex_ForceAxis(Vector2D Axis) { Invoke(nameof(UpdateSelectedIndex_ForceAxis), Axis); }
        public void SetSelectedIndexForce(int Index) { Invoke(nameof(SetSelectedIndexForce), Index); }
        public float RecalculateRadian(float inRadian) { return Invoke<float>(nameof(RecalculateRadian), inRadian); }
        public void ClearSelectedIndex() { Invoke(nameof(ClearSelectedIndex)); }
        public void ChangeSelectedIndexDelegate__DelegateSignature(int newIndex, int prevIndex) { Invoke(nameof(ChangeSelectedIndexDelegate__DelegateSignature), newIndex, prevIndex); }
        public void CalculateRadialMenuArea(float parentDegreeAngle) { Invoke(nameof(CalculateRadialMenuArea), parentDegreeAngle); }
        public void BuildRadialMenuWidget() { Invoke(nameof(BuildRadialMenuWidget)); }
    }
    public class PalUIRecoverPalBase : PalUserWidgetOverlayUI
    {
        public PalUIRecoverPalBase(nint addr) : base(addr) { }
        public void SelectCharacterSlot(PalIndividualCharacterSlot targetSlot, EPalItemSlotPressType PressType) { Invoke(nameof(SelectCharacterSlot), targetSlot, PressType); }
    }
    public class PalUIRecoverPalStatusIndicator : PalUIMapObjectStatusIndicatorBase
    {
        public PalUIRecoverPalStatusIndicator(nint addr) : base(addr) { }
    }
    public class PalUIRecoverPalStatusIndicatorParameter : PalUIMapObjectStatusIndicatorParameterBase
    {
        public PalUIRecoverPalStatusIndicatorParameter(nint addr) : base(addr) { }
        public bool TryGetConcreteModel(PalMapObjectRecoverOtomoModel ConcreteModel) { return Invoke<bool>(nameof(TryGetConcreteModel), ConcreteModel); }
    }
    public class PalHUDDispatchParameter_RepairBench : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_RepairBench(nint addr) : base(addr) { }
        public PalMapObjectRepairItemModel Model { get { return this[nameof(Model)].As<PalMapObjectRepairItemModel>(); } set { this["Model"] = value; } }
    }
    public class PalUIRepairItemBase : PalUserWidgetOverlayUI
    {
        public PalUIRepairItemBase(nint addr) : base(addr) { }
        public PalMapObjectRepairItemModel RepairItemModel { get { return this[nameof(RepairItemModel)].As<PalMapObjectRepairItemModel>(); } set { this["RepairItemModel"] = value; } }
        public void RequestRepair(Array<PalItemSlot> TargetItemSlotArray) { Invoke(nameof(RequestRepair), TargetItemSlotArray); }
        public void OnRecievedRepairResult(bool IsSuccess) { Invoke(nameof(OnRecievedRepairResult), IsSuccess); }
        public void CollectRepairInfo(Array<PalItemSlot> TargetItemSlotArray, Array<PalStaticItemIdAndNum> OutRequiredMaterials, bool OutCanRepair) { Invoke(nameof(CollectRepairInfo), TargetItemSlotArray, OutRequiredMaterials, OutCanRepair); }
        public void CollectRepairableSlot(Array<PalItemSlot> OutRepairableSlots) { Invoke(nameof(CollectRepairableSlot), OutRepairableSlots); }
    }
    public class PalHUDDispatchParameter_SelectItemInventory : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_SelectItemInventory(nint addr) : base(addr) { }
        public Object TitleText { get { return this[nameof(TitleText)]; } set { this[nameof(TitleText)] = value; } }
        public Array<EPalPlayerInventoryType> showInventoryTypes { get { return new Array<EPalPlayerInventoryType>(this[nameof(showInventoryTypes)].Address); } }
        public Array<EPalItemTypeA> showItemTypesA { get { return new Array<EPalItemTypeA>(this[nameof(showItemTypesA)].Address); } }
        public Array<EPalItemTypeB> showItemTypesB { get { return new Array<EPalItemTypeB>(this[nameof(showItemTypesB)].Address); } }
        public bool shouldSelectNum { get { return this[nameof(shouldSelectNum)].Flag; } set { this[nameof(shouldSelectNum)].Flag = value; } }
        public Object Callback { get { return this[nameof(Callback)]; } set { this[nameof(Callback)] = value; } }
        public void InvokeCallback(PalItemSlotId itemSlotId, int itemNum) { Invoke(nameof(InvokeCallback), itemSlotId, itemNum); }
    }
    public class PalUISelectItemInventoryBase : PalUserWidgetOverlayUI
    {
        public PalUISelectItemInventoryBase(nint addr) : base(addr) { }
    }
    public class PalUISelectNumParameter : PalHUDDispatchParameterBase
    {
        public PalUISelectNumParameter(nint addr) : base(addr) { }
        public Object complateCallBack { get { return this[nameof(complateCallBack)]; } set { this[nameof(complateCallBack)] = value; } }
        public Object changedNumCallBacl { get { return this[nameof(changedNumCallBacl)]; } set { this[nameof(changedNumCallBacl)] = value; } }
        public int MinNum { get { return this[nameof(MinNum)].GetValue<int>(); } set { this[nameof(MinNum)].SetValue<int>(value); } }
        public int MaxNum { get { return this[nameof(MaxNum)].GetValue<int>(); } set { this[nameof(MaxNum)].SetValue<int>(value); } }
        public int defaultNum { get { return this[nameof(defaultNum)].GetValue<int>(); } set { this[nameof(defaultNum)].SetValue<int>(value); } }
        public Vector2D Position { get { return this[nameof(Position)].As<Vector2D>(); } set { this["Position"] = value; } }
        public void InvokeComplateCallback(EPalUISelectNumResult Result, int selectedNum) { Invoke(nameof(InvokeComplateCallback), Result, selectedNum); }
        public void InvokeChangedNumCallback(int selectedNum) { Invoke(nameof(InvokeChangedNumCallback), selectedNum); }
    }
    public class PalUISelectNumWidgetBase : PalUserWidgetOverlayUI
    {
        public PalUISelectNumWidgetBase(nint addr) : base(addr) { }
    }
    public class PalUIShopInventoryModel : PalUIInventoryModel
    {
        public PalUIShopInventoryModel(nint addr) : base(addr) { }
    }
    public class PalUIStatusModel : Object
    {
        public PalUIStatusModel(nint addr) : base(addr) { }
        public Object OnChangeSelectedIndexDelegate { get { return this[nameof(OnChangeSelectedIndexDelegate)]; } set { this[nameof(OnChangeSelectedIndexDelegate)] = value; } }
        public Array<PalIndividualCharacterHandle> palHandles { get { return new Array<PalIndividualCharacterHandle>(this[nameof(palHandles)].Address); } }
        public void OnClickedPalIcon(int Index) { Invoke(nameof(OnClickedPalIcon), Index); }
        public void Initialize(Array<PalIndividualCharacterHandle> Handles) { Invoke(nameof(Initialize), Handles); }
        public byte GetNowSelectedIndex() { return Invoke<byte>(nameof(GetNowSelectedIndex)); }
        public int GetDisplaySpeed(int Index) { return Invoke<int>(nameof(GetDisplaySpeed), Index); }
        public int GetDisplayShotAttack(int Index) { return Invoke<int>(nameof(GetDisplayShotAttack), Index); }
        public EPalStatusPhysicalHealthType GetDisplayPhysicalHealthType(int Index) { return Invoke<EPalStatusPhysicalHealthType>(nameof(GetDisplayPhysicalHealthType), Index); }
        public bool GetDisplayPassiveSkillList(int Index, Array<Object> OutArray) { return Invoke<bool>(nameof(GetDisplayPassiveSkillList), Index, OutArray); }
        public byte GetDisplayPalNum() { return Invoke<byte>(nameof(GetDisplayPalNum)); }
        public PalIndividualCharacterHandle GetDisplayPalHandle(byte Index) { return Invoke<PalIndividualCharacterHandle>(nameof(GetDisplayPalHandle), Index); }
        public int GetDisplayNowExp(int Index) { return Invoke<int>(nameof(GetDisplayNowExp), Index); }
        public void GetDisplayNickName(int Index, Object outName) { Invoke(nameof(GetDisplayNickName), Index, outName); }
        public int GetDisplayNextExp(int Index) { return Invoke<int>(nameof(GetDisplayNextExp), Index); }
        public int GetDisplayMeleeAttack(int Index) { return Invoke<int>(nameof(GetDisplayMeleeAttack), Index); }
        public float GetDisplayMaxHunger(int Index) { return Invoke<float>(nameof(GetDisplayMaxHunger), Index); }
        public FixedPoint64 GetDisplayMaxHP(int Index) { return Invoke<FixedPoint64>(nameof(GetDisplayMaxHP), Index); }
        public int GetDisplayLevel(int Index) { return Invoke<int>(nameof(GetDisplayLevel), Index); }
        public float GetDisplayHunger(int Index) { return Invoke<float>(nameof(GetDisplayHunger), Index); }
        public FixedPoint64 GetDisplayHP(int Index) { return Invoke<FixedPoint64>(nameof(GetDisplayHP), Index); }
        public EPalElementType GetDisplayElementType2(int Index) { return Invoke<EPalElementType>(nameof(GetDisplayElementType2), Index); }
        public EPalElementType GetDisplayElementType1(int Index) { return Invoke<EPalElementType>(nameof(GetDisplayElementType1), Index); }
        public int GetDisplayEatingHabits(int Index) { return Invoke<int>(nameof(GetDisplayEatingHabits), Index); }
        public int GetDisplayDefence(int Index) { return Invoke<int>(nameof(GetDisplayDefence), Index); }
        public Object GetDisplayDefaultName(int Index) { return Invoke<Object>(nameof(GetDisplayDefaultName), Index); }
        public Object GetDisplayCoopActionName(int Index) { return Invoke<Object>(nameof(GetDisplayCoopActionName), Index); }
        public Object GetDisplayActiveSkillName(int Index, int skillIndex) { return Invoke<Object>(nameof(GetDisplayActiveSkillName), Index, skillIndex); }
        public void ChangeNickname(int Index, Object newNickName) { Invoke(nameof(ChangeNickname), Index, newNickName); }
        public void ChangeIndex(byte Index) { Invoke(nameof(ChangeIndex), Index); }
        public void ChangedIndex__DelegateSignature() { Invoke(nameof(ChangedIndex__DelegateSignature)); }
    }
    public class PalUITechnologyDetailButton : PalUserWidget
    {
        public PalUITechnologyDetailButton(nint addr) : base(addr) { }
    }
    public class PalUIRecipeTechnologyDetailButton : PalUITechnologyDetailButton
    {
        public PalUIRecipeTechnologyDetailButton(nint addr) : base(addr) { }
    }
    public class PalUITitleBase : PalUserWidgetStackableUI
    {
        public PalUITitleBase(nint addr) : base(addr) { }
    }
    public class PalGaugeInterpolationCalculatorUtility : BlueprintFunctionLibrary
    {
        public PalGaugeInterpolationCalculatorUtility(nint addr) : base(addr) { }
        public void TickGaugeInterpolation(Object WorldContextObject, PalGaugeInterpolationCalculator Target, float DeltaTime) { Invoke(nameof(TickGaugeInterpolation), WorldContextObject, Target, DeltaTime); }
        public void SetGaugeInterpolationTargetValue(PalGaugeInterpolationCalculator Target, float TargetValue) { Invoke(nameof(SetGaugeInterpolationTargetValue), Target, TargetValue); }
    }
    public class PalUIUtility : BlueprintFunctionLibrary
    {
        public PalUIUtility(nint addr) : base(addr) { }
        public void SetVisibilityHUD(Object WorldContextObject, bool IsVisible) { Invoke(nameof(SetVisibilityHUD), WorldContextObject, IsVisible); }
        public void SetNumberToSeparatedTextBlock(Object WorldContextObject, Array<int> numberArray, Array<PalTextBlockBase> textBlockArray, float topZeroTextOpacity) { Invoke(nameof(SetNumberToSeparatedTextBlock), WorldContextObject, numberArray, textBlockArray, topZeroTextOpacity); }
        public void SetEnableCommonUIInput(Object WorldContextObject, bool isEnable) { Invoke(nameof(SetEnableCommonUIInput), WorldContextObject, isEnable); }
        public void SetCustomSlateNavigation(Object WorldContextObject, PalSlateNavigationSetting NavigationSetting) { Invoke(nameof(SetCustomSlateNavigation), WorldContextObject, NavigationSetting); }
        public void ResetSlateNavigation(Object WorldContextObject) { Invoke(nameof(ResetSlateNavigation), WorldContextObject); }
        public bool IsShiftDown_ForUI() { return Invoke<bool>(nameof(IsShiftDown_ForUI)); }
        public bool IsRightShiftDown_ForUI() { return Invoke<bool>(nameof(IsRightShiftDown_ForUI)); }
        public bool IsRightControlDown_ForUI() { return Invoke<bool>(nameof(IsRightControlDown_ForUI)); }
        public bool IsRightAltDown_ForUI() { return Invoke<bool>(nameof(IsRightAltDown_ForUI)); }
        public bool IsLeftShiftDown_ForUI() { return Invoke<bool>(nameof(IsLeftShiftDown_ForUI)); }
        public bool IsLeftControlDown_ForUI() { return Invoke<bool>(nameof(IsLeftControlDown_ForUI)); }
        public bool IsLeftAltDown_ForUI() { return Invoke<bool>(nameof(IsLeftAltDown_ForUI)); }
        public bool IsControlDown_ForUI() { return Invoke<bool>(nameof(IsControlDown_ForUI)); }
        public bool IsAltDown_ForUI() { return Invoke<bool>(nameof(IsAltDown_ForUI)); }
        public void GetWorkSuitabilityNameWithMaterialSubType(Object WorldContextObject, EPalWorkSuitability WorkSuitability, EPalMapObjectMaterialSubType MaterialSubType, Object outName) { Invoke(nameof(GetWorkSuitabilityNameWithMaterialSubType), WorldContextObject, WorkSuitability, MaterialSubType, outName); }
        public void GetWorkSuitabilityName(Object WorldContextObject, EPalWorkSuitability WorkSuitability, Object outName) { Invoke(nameof(GetWorkSuitabilityName), WorldContextObject, WorkSuitability, outName); }
        public void GetWorkSickName(Object WorldContextObject, EPalBaseCampWorkerSickType SickType, Object outName) { Invoke(nameof(GetWorkSickName), WorldContextObject, SickType, outName); }
        public bool GetWorkNameFromHandle(Object WorldContextObject, PalIndividualCharacterHandle targetHandle, Object outName) { return Invoke<bool>(nameof(GetWorkNameFromHandle), WorldContextObject, targetHandle, outName); }
        public void GetWorkName(Object WorldContextObject, EPalWorkType WorkType, Object outName) { Invoke(nameof(GetWorkName), WorldContextObject, WorkType, outName); }
        public bool GetWorkingDetailNameFromHandle(Object WorldContextObject, PalIndividualCharacterHandle targetHandle, Object outName) { return Invoke<bool>(nameof(GetWorkingDetailNameFromHandle), WorldContextObject, targetHandle, outName); }
        public void GetWorkingDetailName(Object WorldContextObject, EPalWorkType WorkType, Object outName) { Invoke(nameof(GetWorkingDetailName), WorldContextObject, WorkType, outName); }
        public void GetWorkerComment(Object WorldContextObject, PalIndividualCharacterHandle targetHandle, Object outName) { Invoke(nameof(GetWorkerComment), WorldContextObject, targetHandle, outName); }
        public void GetWazaName(Object WorldContextObject, EPalWazaID WazaID, Object outName) { Invoke(nameof(GetWazaName), WorldContextObject, WazaID, outName); }
        public void GetWazaDesc(Object WorldContextObject, EPalWazaID WazaID, Object outDesc) { Invoke(nameof(GetWazaDesc), WorldContextObject, WazaID, outDesc); }
        public void GetWaitForWorkableDetailName(Object WorldContextObject, EPalWorkType WorkType, Object outName) { Invoke(nameof(GetWaitForWorkableDetailName), WorldContextObject, WorkType, outName); }
        public bool GetUIInputActionRowHandle(Object WorldContextObject, Object ActionName, DataTableRowHandle outHandle) { return Invoke<bool>(nameof(GetUIInputActionRowHandle), WorldContextObject, ActionName, outHandle); }
        public void GetUIDisplayPalCondition(Object WorldContextObject, Array<EPalUIConditionType> OutArray, PalIndividualCharacterHandle targetHandle) { Invoke(nameof(GetUIDisplayPalCondition), WorldContextObject, OutArray, targetHandle); }
        public void GetTechnologyDescription(Object WorldContextObject, Object technologyName, Object OutDescription) { Invoke(nameof(GetTechnologyDescription), WorldContextObject, technologyName, OutDescription); }
        public int GetPlayerInframeRenderTargetResolution() { return Invoke<int>(nameof(GetPlayerInframeRenderTargetResolution)); }
        public void GetPassiveSkillName(Object WorldContextObject, Object PassiveSkillId, Object outName) { Invoke(nameof(GetPassiveSkillName), WorldContextObject, PassiveSkillId, outName); }
        public void GetPartnerSkillName(Object WorldContextObject, Object CharacterID, Object OutText) { Invoke(nameof(GetPartnerSkillName), WorldContextObject, CharacterID, OutText); }
        public void GetPalShortDescription(Object WorldContextObject, Object CharacterID, Object outName) { Invoke(nameof(GetPalShortDescription), WorldContextObject, CharacterID, outName); }
        public bool GetPalRestrictItemID(Object WorldContextObject, Object CharacterID, Object ItemId) { return Invoke<bool>(nameof(GetPalRestrictItemID), WorldContextObject, CharacterID, ItemId); }
        public void GetPalLongDescription(Object WorldContextObject, Object CharacterID, Object outName) { Invoke(nameof(GetPalLongDescription), WorldContextObject, CharacterID, outName); }
        public void GetPalGenusCategoryName(Object WorldContextObject, EPalGenusCategoryType GenusCategory, Object outName) { Invoke(nameof(GetPalGenusCategoryName), WorldContextObject, GenusCategory, outName); }
        public void GetPalFirstActivatedInfo(Object WorldContextObject, Object CharacterID, Object outName) { Invoke(nameof(GetPalFirstActivatedInfo), WorldContextObject, CharacterID, outName); }
        public void GetPalElementTypeName(Object WorldContextObject, EPalElementType ElementType, Object outName) { Invoke(nameof(GetPalElementTypeName), WorldContextObject, ElementType, outName); }
        public int GetPalConditionUrgency(Object WorldContextObject, EPalUIConditionType Condition) { return Invoke<int>(nameof(GetPalConditionUrgency), WorldContextObject, Condition); }
        public void GetPalConditionName(Object WorldContextObject, EPalUIConditionType ConditionType, Object outName) { Invoke(nameof(GetPalConditionName), WorldContextObject, ConditionType, outName); }
        public void GetPalConditionDesc(Object WorldContextObject, EPalUIConditionType ConditionType, Object outDesc) { Invoke(nameof(GetPalConditionDesc), WorldContextObject, ConditionType, outDesc); }
        public SlateBrush GetMappedKeyIcon(Object WorldContextObject, Object InputActionName, ECommonInputType InputType, EPalKeyConfigAxisFilterType FilterType) { return Invoke<SlateBrush>(nameof(GetMappedKeyIcon), WorldContextObject, InputActionName, InputType, FilterType); }
        public void GetMapObjectOperationResultText(Object WorldContextObject, EPalMapObjectOperationResult operationType, Object outName) { Invoke(nameof(GetMapObjectOperationResultText), WorldContextObject, operationType, outName); }
        public Object GetMapObjectNameTextId(Object WorldContextObject, Object MapObjectName) { return Invoke<Object>(nameof(GetMapObjectNameTextId), WorldContextObject, MapObjectName); }
        public void GetMapObjectName(Object WorldContextObject, Object MapObjectName, Object outName) { Invoke(nameof(GetMapObjectName), WorldContextObject, MapObjectName, outName); }
        public SlateBrush GetKeyIconByKey(Object WorldContextObject, Key Key, ECommonInputType InputType) { return Invoke<SlateBrush>(nameof(GetKeyIconByKey), WorldContextObject, Key, InputType); }
        public void GetItemTypeAName(Object WorldContextObject, EPalItemTypeA itemTypeA, Object outName) { Invoke(nameof(GetItemTypeAName), WorldContextObject, itemTypeA, outName); }
        public void GetItemName(Object WorldContextObject, Object StaticItemId, Object outName) { Invoke(nameof(GetItemName), WorldContextObject, StaticItemId, outName); }
        public void GetItemDescription(Object WorldContextObject, Object StaticItemId, Object outName) { Invoke(nameof(GetItemDescription), WorldContextObject, StaticItemId, outName); }
        public void GetInventoryCategoryName(Object WorldContextObject, EPalPlayerInventoryType inventoryType, Object outName) { Invoke(nameof(GetInventoryCategoryName), WorldContextObject, inventoryType, outName); }
        public void GetFormatedFirstActivatedInfoText(Object WorldContextObject, PalCharacter Character, Object outFormatedText) { Invoke(nameof(GetFormatedFirstActivatedInfoText), WorldContextObject, Character, outFormatedText); }
        public void GetBuildObjectDesc(Object WorldContextObject, Object buildObjectName, Object outDesc) { Invoke(nameof(GetBuildObjectDesc), WorldContextObject, buildObjectName, outDesc); }
        public void GetBuildObjectCategoryBName(Object WorldContextObject, EPalBuildObjectTypeB TypeB, Object outName) { Invoke(nameof(GetBuildObjectCategoryBName), WorldContextObject, TypeB, outName); }
        public void GetBuildObjectCategoryAName(Object WorldContextObject, EPalBuildObjectTypeA TypeA, Object outName) { Invoke(nameof(GetBuildObjectCategoryAName), WorldContextObject, TypeA, outName); }
        public void GetBaseCampEventName(Object WorldContextObject, EPalBaseCampWorkerEventType EventType, Object outName) { Invoke(nameof(GetBaseCampEventName), WorldContextObject, EventType, outName); }
        public void GetAllTagFromText(Object WorldContextObject, Object targetText, Array<Object> outTagArray) { Invoke(nameof(GetAllTagFromText), WorldContextObject, targetText, outTagArray); }
        public PalUserWidget FindOwningActivatableWidget(Object WorldContextObject, Widget Widget) { return Invoke<PalUserWidget>(nameof(FindOwningActivatableWidget), WorldContextObject, Widget); }
        public float ConvertReviveTimerToUIDisplayRemainReviveTime(Object WorldContextObject, float ReviveTimer) { return Invoke<float>(nameof(ConvertReviveTimerToUIDisplayRemainReviveTime), WorldContextObject, ReviveTimer); }
    }
    public class PalUIWorkerSimpleDetailCanvas : PalUserWidget
    {
        public PalUIWorkerSimpleDetailCanvas(nint addr) : base(addr) { }
        public void UnbindWorkerEvent(PalIndividualCharacterHandle workerHandle) { Invoke(nameof(UnbindWorkerEvent), workerHandle); }
        public void UnbindBaseCampEvent(PalBaseCampModel targetCampModel) { Invoke(nameof(UnbindBaseCampEvent), targetCampModel); }
        public void OnRequestOpenDetail(Actor TargetActor) { Invoke(nameof(OnRequestOpenDetail), TargetActor); }
        public void OnRequestCloseDetail() { Invoke(nameof(OnRequestCloseDetail)); }
        public void OnEndInteractWorker(Actor Actor, Object InteractiveObject) { Invoke(nameof(OnEndInteractWorker), Actor, InteractiveObject); }
        public void OnBeginInteractWorker(Actor Actor, Object InteractiveObject) { Invoke(nameof(OnBeginInteractWorker), Actor, InteractiveObject); }
        public void OnAddedNewWorker(PalIndividualCharacterHandle workerHandle) { Invoke(nameof(OnAddedNewWorker), workerHandle); }
        public PalBaseCampModel GetInsideBaseCampModel() { return Invoke<PalBaseCampModel>(nameof(GetInsideBaseCampModel)); }
        public void BindWorkerEvent(PalIndividualCharacterHandle workerHandle) { Invoke(nameof(BindWorkerEvent), workerHandle); }
        public void BindBaseCampEvent(PalBaseCampModel targetCampModel) { Invoke(nameof(BindBaseCampEvent), targetCampModel); }
    }
    public class PalUIWorldHUDWidgetCanvas : PalUserWidget
    {
        public PalUIWorldHUDWidgetCanvas(nint addr) : base(addr) { }
        public void RemoveWidget(PalUserWidgetWorldHUD Widget) { Invoke(nameof(RemoveWidget), Widget); }
        public void AddWidget(PalUserWidgetWorldHUD Widget) { Invoke(nameof(AddWidget), Widget); }
    }
    public class PalHUDDispatchParameter_WorldMap : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_WorldMap(nint addr) : base(addr) { }
        public bool CanFastTravel { get { return this[nameof(CanFastTravel)].Flag; } set { this[nameof(CanFastTravel)].Flag = value; } }
        public bool ForRespawn { get { return this[nameof(ForRespawn)].Flag; } set { this[nameof(ForRespawn)].Flag = value; } }
        public bool IsInitSelect { get { return this[nameof(IsInitSelect)].Flag; } set { this[nameof(IsInitSelect)].Flag = value; } }
    }
    public class PalUIWorldMap : PalUserWidgetOverlayUI
    {
        public PalUIWorldMap(nint addr) : base(addr) { }
        public void RegisterRespawnLocation(Vector RespawnLocation) { Invoke(nameof(RegisterRespawnLocation), RespawnLocation); }
        public void Debug_SetLocation(Vector Location) { Invoke(nameof(Debug_SetLocation), Location); }
        public void CreateWorldMapData(EPalWorldMapType worldMapType) { Invoke(nameof(CreateWorldMapData), worldMapType); }
    }
    public class PalHUDDispatchParameter_WorldSetting : PalHUDDispatchParameterBase
    {
        public PalHUDDispatchParameter_WorldSetting(nint addr) : base(addr) { }
        public bool IsNewWorld { get { return this[nameof(IsNewWorld)].Flag; } set { this[nameof(IsNewWorld)].Flag = value; } }
        public Object WorldSaveDirectoryName { get { return this[nameof(WorldSaveDirectoryName)]; } set { this[nameof(WorldSaveDirectoryName)] = value; } }
        public Object WorldName { get { return this[nameof(WorldName)]; } set { this[nameof(WorldName)] = value; } }
    }
    public class PalUIWorldSettingBase : PalUserWidgetOverlayUI
    {
        public PalUIWorldSettingBase(nint addr) : base(addr) { }
        public PalOptionWorldSettings OriginalSetting { get { return this[nameof(OriginalSetting)].As<PalOptionWorldSettings>(); } set { this["OriginalSetting"] = value; } }
        public void OnCompletedSaveSetting(bool IsSuccess) { Invoke(nameof(OnCompletedSaveSetting), IsSuccess); }
        public bool CompleteSetting(PalOptionWorldSettings NewSetting) { return Invoke<bool>(nameof(CompleteSetting), NewSetting); }
    }
    public class PalUniqueRideWeaponBase : PalWeaponBase
    {
        public PalUniqueRideWeaponBase(nint addr) : base(addr) { }
        public void ShootOneBulletByDefault() { Invoke(nameof(ShootOneBulletByDefault)); }
        public void ShootOneBullet(Object bulletClass, NiagaraSystem MuzzleEffect, Vector MuzzleLocation, Rotator MuzzleRotate, float BulrAngle, Object AmmoClass, Transform AmmoEject) { Invoke(nameof(ShootOneBullet), bulletClass, MuzzleEffect, MuzzleLocation, MuzzleRotate, BulrAngle, AmmoClass, AmmoEject); }
        public void OnUniqueShoot() { Invoke(nameof(OnUniqueShoot)); }
        public void OnCancellShooting() { Invoke(nameof(OnCancellShooting)); }
        public void OnActionCompleted(PalActionComponent ActionComp) { Invoke(nameof(OnActionCompleted), ActionComp); }
        public void OnActionBegin(PalActionBase action) { Invoke(nameof(OnActionBegin), action); }
        public Rotator GetMuzzleRotation() { return Invoke<Rotator>(nameof(GetMuzzleRotation)); }
        public Vector GetMuzzleLocation() { return Invoke<Vector>(nameof(GetMuzzleLocation)); }
        public NiagaraSystem GetMuzzleEffect() { return Invoke<NiagaraSystem>(nameof(GetMuzzleEffect)); }
        public Vector GetCommonTargetLocation() { return Invoke<Vector>(nameof(GetCommonTargetLocation)); }
        public float GetBulrAngle() { return Invoke<float>(nameof(GetBulrAngle)); }
        public Object GetBulletClass() { return Invoke<Object>(nameof(GetBulletClass)); }
        public Transform GetAmmoEjectTransform() { return Invoke<Transform>(nameof(GetAmmoEjectTransform)); }
        public Object GetAmmoClass() { return Invoke<Object>(nameof(GetAmmoClass)); }
        public void GetAllMeshComponent(Array<MeshComponent> OutMesh) { Invoke(nameof(GetAllMeshComponent), OutMesh); }
        public bool CanUse() { return Invoke<bool>(nameof(CanUse)); }
    }
    public class PalUniqueSkillModule : Object
    {
        public PalUniqueSkillModule(nint addr) : base(addr) { }
        public PalCharacter ActionCharacter { get { return this[nameof(ActionCharacter)].As<PalCharacter>(); } set { this["ActionCharacter"] = value; } }
        public Actor ActionTarget { get { return this[nameof(ActionTarget)].As<Actor>(); } set { this["ActionTarget"] = value; } }
        public void TickModule(float DeltaTime) { Invoke(nameof(TickModule), DeltaTime); }
        public void SetActionTarget(Actor Target) { Invoke(nameof(SetActionTarget), Target); }
        public void SetActionCharacter(PalCharacter Character) { Invoke(nameof(SetActionCharacter), Character); }
        public void OnEndModule() { Invoke(nameof(OnEndModule)); }
        public void OnBeginModule() { Invoke(nameof(OnBeginModule)); }
        public Actor GetActionTarget() { return Invoke<Actor>(nameof(GetActionTarget)); }
        public PalCharacter GetActionCharacter() { return Invoke<PalCharacter>(nameof(GetActionCharacter)); }
    }
    public class PalWidgetTimerGaugeParameter : PalHUDDispatchParameterBase
    {
        public PalWidgetTimerGaugeParameter(nint addr) : base(addr) { }
        public TimerHandle TimerHandle { get { return this[nameof(TimerHandle)].As<TimerHandle>(); } set { this["TimerHandle"] = value; } }
        public float Time { get { return this[nameof(Time)].GetValue<float>(); } set { this[nameof(Time)].SetValue<float>(value); } }
        public Object bindActionName { get { return this[nameof(bindActionName)]; } set { this[nameof(bindActionName)] = value; } }
        public bool IsHide { get { return this[nameof(IsHide)].Flag; } set { this[nameof(IsHide)].Flag = value; } }
    }
    public class PalUserWidgetTimerGaugeBase : PalUserWidgetWorldHUD
    {
        public PalUserWidgetTimerGaugeBase(nint addr) : base(addr) { }
        public TimerHandle targetTimerHandle { get { return this[nameof(targetTimerHandle)].As<TimerHandle>(); } set { this["targetTimerHandle"] = value; } }
        public float Time { get { return this[nameof(Time)].GetValue<float>(); } set { this[nameof(Time)].SetValue<float>(value); } }
        public void VisibilityForceHidden(ESlateVisibility changedVisibility) { Invoke(nameof(VisibilityForceHidden), changedVisibility); }
        public void SetGaugeText(Object Text) { Invoke(nameof(SetGaugeText), Text); }
        public void SetGaugePercent(float Percent) { Invoke(nameof(SetGaugePercent), Percent); }
    }
    public class PalUtility : BlueprintFunctionLibrary
    {
        public PalUtility(nint addr) : base(addr) { }
        public void UpdatePlayerCharacterParameter(PalCharacter Character) { Invoke(nameof(UpdatePlayerCharacterParameter), Character); }
        public void UpdateLocalPlayerParameter(Object WorldContextObject) { Invoke(nameof(UpdateLocalPlayerParameter), WorldContextObject); }
        public void UnlockBaseCampLevelAchievement(Object WorldContextObject, int Level) { Invoke(nameof(UnlockBaseCampLevelAchievement), WorldContextObject, Level); }
        public void UnlockAchievement(Object WorldContextObject, Object AchievementId, int Progress) { Invoke(nameof(UnlockAchievement), WorldContextObject, AchievementId, Progress); }
        public bool TryGetHeadWorldPosition(PalCharacter Character, Vector OutLocation) { return Invoke<bool>(nameof(TryGetHeadWorldPosition), Character, OutLocation); }
        public Object ToPointerAddress(Object Obj) { return Invoke<Object>(nameof(ToPointerAddress), Obj); }
        public void TeleportToPlayerByIndex(PalPlayerController Controller, int PlayerIndex) { Invoke(nameof(TeleportToPlayerByIndex), Controller, PlayerIndex); }
        public void TeleportInitLocation(PalPlayerCharacter Target) { Invoke(nameof(TeleportInitLocation), Target); }
        public bool TeleportAroundLoccation(PalCharacter Target, Vector Location, Quat Rotation) { return Invoke<bool>(nameof(TeleportAroundLoccation), Target, Location, Rotation); }
        public bool Teleport(PalCharacter Target, Vector Location, Quat Rotation, bool bNoCheck, bool bAroundCheck) { return Invoke<bool>(nameof(Teleport), Target, Location, Rotation, bNoCheck, bAroundCheck); }
        public bool SynchronizedGroup(Object WorldContextObject, PalIndividualCharacterHandle FromHandle, PalIndividualCharacterHandle ToHandle) { return Invoke<bool>(nameof(SynchronizedGroup), WorldContextObject, FromHandle, ToHandle); }
        public Object SteamLanguageNameToCultureName(Object WorldContextObject, Object SteamLanguageName) { return Invoke<Object>(nameof(SteamLanguageNameToCultureName), WorldContextObject, SteamLanguageName); }
        public bool SphereOverlapLimitVolume(Object WorldContextObject, EPalLimitVolumeFlag LimitVolumeFlag, Vector Center, float Radius) { return Invoke<bool>(nameof(SphereOverlapLimitVolume), WorldContextObject, LimitVolumeFlag, Center, Radius); }
        public void SpectatorOn(Object WorldContextObject) { Invoke(nameof(SpectatorOn), WorldContextObject); }
        public void SpectatorOff(Object WorldContextObject) { Invoke(nameof(SpectatorOff), WorldContextObject); }
        public Controller SpawnControllerAndPossess(Object ControllerClass, Pawn ControlActor) { return Invoke<Controller>(nameof(SpawnControllerAndPossess), ControllerClass, ControlActor); }
        public bool SpawnActorBroadcast(Object WorldContextObject, Object actorClass, Actor NetworkOwner, Actor Owner, Object Name, Transform SpawnTransform, Object Controller, Guid SpawnGUID, Object SpawnDelegate) { return Invoke<bool>(nameof(SpawnActorBroadcast), WorldContextObject, actorClass, NetworkOwner, Owner, Name, SpawnTransform, Controller, SpawnGUID, SpawnDelegate); }
        public void SortActorListByLabel(Array<Actor> ActorList) { Invoke(nameof(SortActorListByLabel), ActorList); }
        public void ShowUI(Object WorldContextObject, EPalWidgetBlueprintType WBPType, PalHUDDispatchParameterBase Parameter) { Invoke(nameof(ShowUI), WorldContextObject, WBPType, Parameter); }
        public void SetYawApplyRate(Actor Actor, float Rate, Object flagName) { Invoke(nameof(SetYawApplyRate), Actor, Rate, flagName); }
        public void SetVoiceID(Actor TargetActor, int VoiceID) { Invoke(nameof(SetVoiceID), TargetActor, VoiceID); }
        public void SetVisibleComponentInDataLayer(Object WorldContextObject, DataLayerInstance TargetDataLayer, bool bEnable) { Invoke(nameof(SetVisibleComponentInDataLayer), WorldContextObject, TargetDataLayer, bEnable); }
        public void SetUnRidingCharacterCollision(PalCharacter Character) { Invoke(nameof(SetUnRidingCharacterCollision), Character); }
        public Transform SetTransformQuat(Transform TargetTransform, Quat NewQuat) { return Invoke<Transform>(nameof(SetTransformQuat), TargetTransform, NewQuat); }
        public TimerHandle SetTimerWithGaugeWidget(Object Object, PalTimerGaugeWidgetCreateInfo createInfo) { return Invoke<TimerHandle>(nameof(SetTimerWithGaugeWidget), Object, createInfo); }
        public void SetTelemetry(Object WorldContextObject, Object Key, Object Value, Object Namespace) { Invoke(nameof(SetTelemetry), WorldContextObject, Key, Value, Namespace); }
        public void SetStatusPoint(PalIndividualCharacterHandle Handle, Object StatusName, int Point) { Invoke(nameof(SetStatusPoint), Handle, StatusName, Point); }
        public void SetSpeedCollisionEnable(Actor Actor, bool bEnable) { Invoke(nameof(SetSpeedCollisionEnable), Actor, bEnable); }
        public void SetRidingCharacterCollision(PalCharacter Character) { Invoke(nameof(SetRidingCharacterCollision), Character); }
        public void SetPassword(Object WorldContextObject, Object Password) { Invoke(nameof(SetPassword), WorldContextObject, Password); }
        public void SetOtomoCollisionProfile(PalCharacter Character) { Invoke(nameof(SetOtomoCollisionProfile), Character); }
        public void SetOpacityForCharacter(Actor Character, float opacityIntensity) { Invoke(nameof(SetOpacityForCharacter), Character, opacityIntensity); }
        public void SetMoveDisableFlag(Actor Actor, bool isDisable, Object flagName) { Invoke(nameof(SetMoveDisableFlag), Actor, isDisable, flagName); }
        public void SetHPByRateToHandle(PalIndividualCharacterHandle Handle, float Rate) { Invoke(nameof(SetHPByRateToHandle), Handle, Rate); }
        public void SetHPByRateToCharacter(PalCharacter Character, float Rate) { Invoke(nameof(SetHPByRateToCharacter), Character, Rate); }
        public void SetFolderPathForBP(Actor TargetActor, Object FolderName) { Invoke(nameof(SetFolderPathForBP), TargetActor, FolderName); }
        public void SetEnableSkyCreator(Object WorldContextObject, bool bEnable) { Invoke(nameof(SetEnableSkyCreator), WorldContextObject, bEnable); }
        public void SetEnableCameraFade(Actor Character, bool bIsEnable) { Invoke(nameof(SetEnableCameraFade), Character, bIsEnable); }
        public void SetCoopFlag(PalCharacter Trainer, PalCharacter Otomo, bool bIsEnable) { Invoke(nameof(SetCoopFlag), Trainer, Otomo, bIsEnable); }
        public void SetCharacterRagdollForNooseTrap(PalCharacter Character) { Invoke(nameof(SetCharacterRagdollForNooseTrap), Character); }
        public void SetCharacterRagdollForLiftup(PalCharacter Character) { Invoke(nameof(SetCharacterRagdollForLiftup), Character); }
        public void SetCharacterRagdoll(PalCharacter Character, bool IsKeepGravity, bool KeepRootCollision) { Invoke(nameof(SetCharacterRagdoll), Character, IsKeepGravity, KeepRootCollision); }
        public void SetCharacterLocationAtMainMeshFoot(PalCharacter Character, Vector Location) { Invoke(nameof(SetCharacterLocationAtMainMeshFoot), Character, Location); }
        public void SetBodyPartsGenerateOverlapEvents(PalCharacter Character, bool isEnable) { Invoke(nameof(SetBodyPartsGenerateOverlapEvents), Character, isEnable); }
        public void SetBodyPartsCollisionProfile(PalCharacter Character, Object ProfileName) { Invoke(nameof(SetBodyPartsCollisionProfile), Character, ProfileName); }
        public void SetBodyPartsCollisionEnable(PalCharacter Character, bool bEnable) { Invoke(nameof(SetBodyPartsCollisionEnable), Character, bEnable); }
        public void SetActorQuat(Actor TargetActor, Quat NewQuat) { Invoke(nameof(SetActorQuat), TargetActor, NewQuat); }
        public void SendSystemToPlayerChat(Object WorldContextObject, Object Message, Guid ReceiverPlayerUId) { Invoke(nameof(SendSystemToPlayerChat), WorldContextObject, Message, ReceiverPlayerUId); }
        public void SendSystemAnnounce(Object WorldContextObject, Object Message) { Invoke(nameof(SendSystemAnnounce), WorldContextObject, Message); }
        public Object SelectText(Object A, Object B, bool bPickA) { return Invoke<Object>(nameof(SelectText), A, B, bPickA); }
        public float RSign(float V) { return Invoke<float>(nameof(RSign), V); }
        public bool RideTo(Actor RiderActor, Actor RidePal, bool bIsSkipAnimation) { return Invoke<bool>(nameof(RideTo), RiderActor, RidePal, bIsSkipAnimation); }
        public void ReturnOtomoPalToHolder(Controller TargetController) { Invoke(nameof(ReturnOtomoPalToHolder), TargetController); }
        public void ResetBodyPartsCollisionProfileToDefault(PalCharacter Character) { Invoke(nameof(ResetBodyPartsCollisionProfileToDefault), Character); }
        public void RemoveAroundInfoCollectorComponent(PalCharacter Target) { Invoke(nameof(RemoveAroundInfoCollectorComponent), Target); }
        public void RefreshRagdollSkeletalMesh(PalCharacter Character) { Invoke(nameof(RefreshRagdollSkeletalMesh), Character); }
        public void RefreshParameterForCharacterAndHoldOtomo(PalCharacter Character) { Invoke(nameof(RefreshParameterForCharacterAndHoldOtomo), Character); }
        public bool ProjectWorldToScreenBehindCamera(PlayerController Player, Vector WorldPosition, Vector2D ScreenPosition, bool bTargetBehindCamera, bool bPlayerViewportRelative) { return Invoke<bool>(nameof(ProjectWorldToScreenBehindCamera), Player, WorldPosition, ScreenPosition, bTargetBehindCamera, bPlayerViewportRelative); }
        public void ProcessDeadAction(PalCharacter Character) { Invoke(nameof(ProcessDeadAction), Character); }
        public void ProcessDamageAndPlayEffectsByDamageInfo(Actor Attacker, Actor Defender, PalDamageInfo DamageInfo, bool bIsEnableHitEffect) { Invoke(nameof(ProcessDamageAndPlayEffectsByDamageInfo), Attacker, Defender, DamageInfo, bIsEnableHitEffect); }
        public void ProcessDamageAndPlayEffects(Actor Attacker, Actor Defender, PalMakeDamageInfo MakeDamageInfo) { Invoke(nameof(ProcessDamageAndPlayEffects), Attacker, Defender, MakeDamageInfo); }
        public bool PointOvelapLimitVolume(Object WorldContextObject, EPalLimitVolumeFlag LimitVolumeFlag, Vector Location) { return Invoke<bool>(nameof(PointOvelapLimitVolume), WorldContextObject, LimitVolumeFlag, Location); }
        public void PlayWorldCameraShake(Object WorldContextObject, Object Shake, Vector Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter) { Invoke(nameof(PlayWorldCameraShake), WorldContextObject, Shake, Epicenter, InnerRadius, OuterRadius, Falloff, bOrientShakeTowardsEpicenter); }
        public void PlayMontageByMinLength(Character Character, AnimMontage Montange, float MinLength) { Invoke(nameof(PlayMontageByMinLength), Character, Montange, MinLength); }
        public void PlayMontageByFixLength(Character Character, AnimMontage Montange, float FixLength) { Invoke(nameof(PlayMontageByFixLength), Character, Montange, FixLength); }
        public bool PlayActionByWazaID(Actor actionActor, Actor TargetActor, EPalWazaID WazaID) { return Invoke<bool>(nameof(PlayActionByWazaID), actionActor, TargetActor, WazaID); }
        public bool PlayAction(Actor actionActor, Actor TargetActor, EPalActionType ActionType) { return Invoke<bool>(nameof(PlayAction), actionActor, TargetActor, ActionType); }
        public void Play2MontageByFixLength(Character Character, AnimMontage Montange, float FixLength, AnimMontage LoopMontange) { Invoke(nameof(Play2MontageByFixLength), Character, Montange, FixLength, LoopMontange); }
        public void PalCaptureSuccess(PalPlayerCharacter AttackerPlayer, PalCharacter Monster) { Invoke(nameof(PalCaptureSuccess), AttackerPlayer, Monster); }
        public bool PalAIMoveToTargetLocation(PalAIController Controller, Vector Goal) { return Invoke<bool>(nameof(PalAIMoveToTargetLocation), Controller, Goal); }
        public bool PalAIMoveToTargetActor(PalAIController Controller, Actor Target) { return Invoke<bool>(nameof(PalAIMoveToTargetActor), Controller, Target); }
        public bool NotContainsAny(Array<Object> SourceArray, Array<Object> FindElms) { return Invoke<bool>(nameof(NotContainsAny), SourceArray, FindElms); }
        public FixedPoint64 NextPointCalculate(FixedPoint64 CurrentPoint, FixedPoint64 CurrentMax, FixedPoint64 NextMax) { return Invoke<FixedPoint64>(nameof(NextPointCalculate), CurrentPoint, CurrentMax, NextMax); }
        public PalDamageInfo MakeDamageInfoByWazaType(Actor Attacker, Actor Defencer, SceneComponent AttackerHitComponent, SceneComponent DefenderHitComponent, Vector HitLocation, Array<int> FoliageIndex, EPalWazaID WazaType, EPalBlowVelocityOwner BlowOwner, Vector NativeBlowVelocity, int referenceIndex, float DamageRatePerCollision) { return Invoke<PalDamageInfo>(nameof(MakeDamageInfoByWazaType), Attacker, Defencer, AttackerHitComponent, DefenderHitComponent, HitLocation, FoliageIndex, WazaType, BlowOwner, NativeBlowVelocity, referenceIndex, DamageRatePerCollision); }
        public PalDamageInfo MakeDamageInfo(PalMakeDamageInfo MakeDamageInfo) { return Invoke<PalDamageInfo>(nameof(MakeDamageInfo), MakeDamageInfo); }
        public bool LotteryInt(int ProbabilityPercentage) { return Invoke<bool>(nameof(LotteryInt), ProbabilityPercentage); }
        public bool LotteryFloat(float ProbabilityPercentage) { return Invoke<bool>(nameof(LotteryFloat), ProbabilityPercentage); }
        public void LoadIconToImageDelegate__DelegateSignature(Image ImageWidget, Texture2D Texture) { Invoke(nameof(LoadIconToImageDelegate__DelegateSignature), ImageWidget, Texture); }
        public void LoadIconToImage(Object WorldContextObject, Object TexturePath, Image TargetImage, Object Callback) { Invoke(nameof(LoadIconToImage), WorldContextObject, TexturePath, TargetImage, Callback); }
        public bool LineTraceToTarget_ForAIAttack(Actor SelfActor, Actor Target) { return Invoke<bool>(nameof(LineTraceToTarget_ForAIAttack), SelfActor, Target); }
        public void KillCharacter_NotDamageToEquipItem(PalCharacter Character) { Invoke(nameof(KillCharacter_NotDamageToEquipItem), Character); }
        public void JudgePalCapture_TryAllPhase(PalIndividualCharacterHandle targetHandle, PalIndividualCharacterHandle throwCharacterHandle, int captureItemLevel, Array<bool> outJudgeFlagArray, bool Robbery) { Invoke(nameof(JudgePalCapture_TryAllPhase), targetHandle, throwCharacterHandle, captureItemLevel, outJudgeFlagArray, Robbery); }
        public bool JudgePalCapture(Actor Pal) { return Invoke<bool>(nameof(JudgePalCapture), Pal); }
        public bool IsXSX(Object WorldContextObject) { return Invoke<bool>(nameof(IsXSX), WorldContextObject); }
        public bool IsXB1(Object WorldContextObject) { return Invoke<bool>(nameof(IsXB1), WorldContextObject); }
        public bool IsWorldOwner(Object WorldContextObject) { return Invoke<bool>(nameof(IsWorldOwner), WorldContextObject); }
        public bool IsWinGDK(Object WorldContextObject) { return Invoke<bool>(nameof(IsWinGDK), WorldContextObject); }
        public bool IsWindows(Object WorldContextObject) { return Invoke<bool>(nameof(IsWindows), WorldContextObject); }
        public bool IsWildNPC(Actor Actor) { return Invoke<bool>(nameof(IsWildNPC), Actor); }
        public bool IsValidInstanceID(PalInstanceID ID) { return Invoke<bool>(nameof(IsValidInstanceID), ID); }
        public bool IsValid_ThreadSafe(Object Object) { return Invoke<bool>(nameof(IsValid_ThreadSafe), Object); }
        public bool IsUGCFilter() { return Invoke<bool>(nameof(IsUGCFilter)); }
        public bool IsUGCBlocked(Object WorldContextObject) { return Invoke<bool>(nameof(IsUGCBlocked), WorldContextObject); }
        public bool IsSteamDeck(Object WorldContextObject) { return Invoke<bool>(nameof(IsSteamDeck), WorldContextObject); }
        public bool IsSneakAttackSuccessByLocation(Vector HitLocation, Actor Defender) { return Invoke<bool>(nameof(IsSneakAttackSuccessByLocation), HitLocation, Defender); }
        public bool IsSleepTimeForWildLife(PalAIController Controller, float sleepStartHours, float sleepEndHours) { return Invoke<bool>(nameof(IsSleepTimeForWildLife), Controller, sleepStartHours, sleepEndHours); }
        public bool IsServerPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<bool>(nameof(IsServerPlayerUID), WorldContextObject, PlayerUId); }
        public bool IsServer(Object WorldContextObject) { return Invoke<bool>(nameof(IsServer), WorldContextObject); }
        public bool IsPointOnBase(Object WorldContextObject, Vector Point, Array<Actor> IgnoreActors, byte DrawDebugType, float DrawDebugDuration) { return Invoke<bool>(nameof(IsPointOnBase), WorldContextObject, Point, IgnoreActors, DrawDebugType, DrawDebugDuration); }
        public bool IsPointInDoor(Object WorldContextObject, Vector Point, Array<Actor> IgnoreActors, byte DrawDebugType, float DrawDebugDuration) { return Invoke<bool>(nameof(IsPointInDoor), WorldContextObject, Point, IgnoreActors, DrawDebugType, DrawDebugDuration); }
        public bool IsPlayerControlActor(Actor CheckActor) { return Invoke<bool>(nameof(IsPlayerControlActor), CheckActor); }
        public bool IsPIEUsingPlayerStart() { return Invoke<bool>(nameof(IsPIEUsingPlayerStart)); }
        public bool IsPalMonster(Actor Actor) { return Invoke<bool>(nameof(IsPalMonster), Actor); }
        public bool IsPalCharacter(Actor Actor) { return Invoke<bool>(nameof(IsPalCharacter), Actor); }
        public bool IsOtomo(Actor Actor) { return Invoke<bool>(nameof(IsOtomo), Actor); }
        public bool IsOpenListenServer(Object WorldContextObject) { return Invoke<bool>(nameof(IsOpenListenServer), WorldContextObject); }
        public bool IsNearTwoPoint(Vector point1, Vector point2, float Distance, bool ignoreHeight) { return Invoke<bool>(nameof(IsNearTwoPoint), point1, point2, Distance, ignoreHeight); }
        public bool IsNearTwoActorWithRootRadius(Actor actor1, Actor actor2, float Distance, bool ignoreHeight) { return Invoke<bool>(nameof(IsNearTwoActorWithRootRadius), actor1, actor2, Distance, ignoreHeight); }
        public bool IsNearTwoActorWithRadius(Actor actor1, Actor actor2, float Distance, bool ignoreHeight) { return Invoke<bool>(nameof(IsNearTwoActorWithRadius), actor1, actor2, Distance, ignoreHeight); }
        public bool IsNearTwoActor(Actor actor1, Actor actor2, float Distance, bool ignoreHeight) { return Invoke<bool>(nameof(IsNearTwoActor), actor1, actor2, Distance, ignoreHeight); }
        public bool IsMultiplayRestricted(Object WorldContextObject) { return Invoke<bool>(nameof(IsMultiplayRestricted), WorldContextObject); }
        public bool IsMultiplayer(Object WorldContextObject) { return Invoke<bool>(nameof(IsMultiplayer), WorldContextObject); }
        public bool IsLocalPlayerCampPal(Actor Actor) { return Invoke<bool>(nameof(IsLocalPlayerCampPal), Actor); }
        public bool IsLocalControlActorOrPalmi(Actor CheckActor) { return Invoke<bool>(nameof(IsLocalControlActorOrPalmi), CheckActor); }
        public bool IsLocalControlActor(Actor CheckActor) { return Invoke<bool>(nameof(IsLocalControlActor), CheckActor); }
        public bool IsLive(Actor Actor) { return Invoke<bool>(nameof(IsLive), Actor); }
        public bool IsInClientConnection(Object WorldContextObject) { return Invoke<bool>(nameof(IsInClientConnection), WorldContextObject); }
        public bool IsIgnoreNetworkVersionCheck(Object WorldContextObject) { return Invoke<bool>(nameof(IsIgnoreNetworkVersionCheck), WorldContextObject); }
        public bool IsHairAttachAccessory(Object WorldContextObject, Object EquipmentArmorName) { return Invoke<bool>(nameof(IsHairAttachAccessory), WorldContextObject, EquipmentArmorName); }
        public bool IsGDK(Object WorldContextObject) { return Invoke<bool>(nameof(IsGDK), WorldContextObject); }
        public bool IsFriend(Actor ActorA, Actor ActorB) { return Invoke<bool>(nameof(IsFriend), ActorA, ActorB); }
        public bool IsForceQuitOnDisconnect(Object WorldContextObject) { return Invoke<bool>(nameof(IsForceQuitOnDisconnect), WorldContextObject); }
        public bool IsExistsInDoor(Actor TargetActor, byte DrawDebugType, float DrawDebugDuration) { return Invoke<bool>(nameof(IsExistsInDoor), TargetActor, DrawDebugType, DrawDebugDuration); }
        public bool IsEnemy(Actor ActorA, Actor ActorB) { return Invoke<bool>(nameof(IsEnemy), ActorA, ActorB); }
        public bool IsEnableBotLocationFlag(Object WorldContextObject) { return Invoke<bool>(nameof(IsEnableBotLocationFlag), WorldContextObject); }
        public bool IsElementWeak(EPalElementType AttackType, EPalElementType defenceType) { return Invoke<bool>(nameof(IsElementWeak), AttackType, defenceType); }
        public bool IsElementStrong(EPalElementType AttackType, EPalElementType defenceType) { return Invoke<bool>(nameof(IsElementStrong), AttackType, defenceType); }
        public bool IsEditorPreviewActor(Actor Actor) { return Invoke<bool>(nameof(IsEditorPreviewActor), Actor); }
        public bool IsEditorBuild() { return Invoke<bool>(nameof(IsEditorBuild)); }
        public bool IsDying(Actor Actor) { return Invoke<bool>(nameof(IsDying), Actor); }
        public bool IsDevelopmentBuild() { return Invoke<bool>(nameof(IsDevelopmentBuild)); }
        public bool IsDestructionByCompleteBuilt(Object WorldContextObject) { return Invoke<bool>(nameof(IsDestructionByCompleteBuilt), WorldContextObject); }
        public bool IsDedicatedServer(Object WorldContextObject) { return Invoke<bool>(nameof(IsDedicatedServer), WorldContextObject); }
        public bool IsDead(Actor Actor) { return Invoke<bool>(nameof(IsDead), Actor); }
        public bool IsClientDedicatedServer(Object WorldContextObject) { return Invoke<bool>(nameof(IsClientDedicatedServer), WorldContextObject); }
        public bool IsCanPlaySinglePlay() { return Invoke<bool>(nameof(IsCanPlaySinglePlay)); }
        public bool IsCanPlayInviteCode() { return Invoke<bool>(nameof(IsCanPlayInviteCode)); }
        public bool IsCanPlayDedicatedServer(Object WorldContextObject) { return Invoke<bool>(nameof(IsCanPlayDedicatedServer), WorldContextObject); }
        public bool IsCanOpenExternalWebSite() { return Invoke<bool>(nameof(IsCanOpenExternalWebSite)); }
        public bool IsBuildBotBaseCamp(Object WorldContextObject) { return Invoke<bool>(nameof(IsBuildBotBaseCamp), WorldContextObject); }
        public bool IsBotMode(Object WorldContextObject) { return Invoke<bool>(nameof(IsBotMode), WorldContextObject); }
        public bool IsBotEnterDungeon(Object WorldContextObject) { return Invoke<bool>(nameof(IsBotEnterDungeon), WorldContextObject); }
        public bool IsBaseCampPal(Actor Actor) { return Invoke<bool>(nameof(IsBaseCampPal), Actor); }
        public bool IsApplicablePowerOnlyToDamageValue(Actor Reciever) { return Invoke<bool>(nameof(IsApplicablePowerOnlyToDamageValue), Reciever); }
        public bool IsApplicableDamage(Object Causer, Actor Receiver, PrimitiveComponent ReceivedComponent) { return Invoke<bool>(nameof(IsApplicableDamage), Causer, Receiver, ReceivedComponent); }
        public bool IsAllLevelLoaded(Object WorldContextObject) { return Invoke<bool>(nameof(IsAllLevelLoaded), WorldContextObject); }
        public bool IsAliveFriendPlayers_ByUId(Object WorldContextObject, Guid PlayerUId) { return Invoke<bool>(nameof(IsAliveFriendPlayers_ByUId), WorldContextObject, PlayerUId); }
        public bool IsAIAttackAbleByPlayerCamera(Actor SelfActor, Actor TargetActor) { return Invoke<bool>(nameof(IsAIAttackAbleByPlayerCamera), SelfActor, TargetActor); }
        public bool InWazaMaxRange(PalCharacter Attacker, EPalWazaID Waza, Vector TargetLocation, float TargetRadius) { return Invoke<bool>(nameof(InWazaMaxRange), Attacker, Waza, TargetLocation, TargetRadius); }
        public void InitializeHumanBoneInfo(PalAnimInstance AnimInstance) { Invoke(nameof(InitializeHumanBoneInfo), AnimInstance); }
        public bool InFanShapAndDitance(Actor SelfActor, Actor TargetActor, float Degree, float Distance) { return Invoke<bool>(nameof(InFanShapAndDitance), SelfActor, TargetActor, Degree, Distance); }
        public bool InFanShapAimTarget(Actor SelfActor, Actor TargetActor, float Degree) { return Invoke<bool>(nameof(InFanShapAimTarget), SelfActor, TargetActor, Degree); }
        public bool InFanShap_TargetLocation(Actor SelfActor, Vector TargetLocation, float Degree) { return Invoke<bool>(nameof(InFanShap_TargetLocation), SelfActor, TargetLocation, Degree); }
        public bool InFanShap_PlayerCamera(Actor SelfActor, PalPlayerCharacter Player, float Degree) { return Invoke<bool>(nameof(InFanShap_PlayerCamera), SelfActor, Player, Degree); }
        public bool InFanShap(Actor SelfActor, Actor TargetActor, float Degree) { return Invoke<bool>(nameof(InFanShap), SelfActor, TargetActor, Degree); }
        public bool InConeShapAndDitance_PreThreshold_Actor(Actor SelfActor, Actor TargetActor, float Threshold, float Distance) { return Invoke<bool>(nameof(InConeShapAndDitance_PreThreshold_Actor), SelfActor, TargetActor, Threshold, Distance); }
        public bool InConeShapAndDitance_PreThreshold(Vector SelfLocation, Rotator SelfRotator, Vector TargetLocation, float Threshold, float Distance) { return Invoke<bool>(nameof(InConeShapAndDitance_PreThreshold), SelfLocation, SelfRotator, TargetLocation, Threshold, Distance); }
        public bool InConeShapAndDitance_Actor(Actor SelfActor, Actor TargetActor, float Degree, float Distance) { return Invoke<bool>(nameof(InConeShapAndDitance_Actor), SelfActor, TargetActor, Degree, Distance); }
        public bool InConeShapAndDitance(Vector SelfLocation, Rotator SelfRotator, Vector TargetLocation, float Degree, float Distance) { return Invoke<bool>(nameof(InConeShapAndDitance), SelfLocation, SelfRotator, TargetLocation, Degree, Distance); }
        public void HeadBillboardEffectSetTransform(PalCharacter Character, SceneComponent Effect, Vector AddOffset) { Invoke(nameof(HeadBillboardEffectSetTransform), Character, Effect, AddOffset); }
        public bool HasAliveFriendPlayers(Actor My) { return Invoke<bool>(nameof(HasAliveFriendPlayers), My); }
        public void GiveExpToAroundPlayerCharacter(Object WorldContextObject, Vector Center, float Radius, float Exp, bool bCallDelegate) { Invoke(nameof(GiveExpToAroundPlayerCharacter), WorldContextObject, Center, Radius, Exp, bCallDelegate); }
        public void GiveExpToAroundCharacter(Object WorldContextObject, Vector Center, float Radius, float Exp, Object CharacterClass, bool bCallDelegate) { Invoke(nameof(GiveExpToAroundCharacter), WorldContextObject, Center, Radius, Exp, CharacterClass, bCallDelegate); }
        public PalWorldSecuritySystem GetWorldSecuritySystem(Object WorldContextObject) { return Invoke<PalWorldSecuritySystem>(nameof(GetWorldSecuritySystem), WorldContextObject); }
        public PalWorldObjectRecordWorldSubsystem GetWorldObjectRecorder(Object WorldContextObject) { return Invoke<PalWorldObjectRecordWorldSubsystem>(nameof(GetWorldObjectRecorder), WorldContextObject); }
        public float GetWorkSpeed(PalCharacter Character) { return Invoke<float>(nameof(GetWorkSpeed), Character); }
        public PalWorkProgressManager GetWorkProgressManager(Object WorldContextObject) { return Invoke<PalWorkProgressManager>(nameof(GetWorkProgressManager), WorldContextObject); }
        public void GetWeakElementType(EPalElementType type1, EPalElementType type2, Array<EPalElementType> OutArray) { Invoke(nameof(GetWeakElementType), type1, type2, OutArray); }
        public int GetWeakCount_ForUI(EPalElementType AttackElementType, EPalElementType defenceTypeA, EPalElementType defenceTypeB, EPalAttackType AttackType, EPalBodyPartsType BodyPartsType) { return Invoke<int>(nameof(GetWeakCount_ForUI), AttackElementType, defenceTypeA, defenceTypeB, AttackType, BodyPartsType); }
        public int GetWeakCount(EPalElementType AttackElementType, EPalElementType defenceTypeA, EPalElementType defenceTypeB) { return Invoke<int>(nameof(GetWeakCount), AttackElementType, defenceTypeA, defenceTypeB); }
        public PalWazaDatabase GetWazaDatabase(Object WorldContextObject) { return Invoke<PalWazaDatabase>(nameof(GetWazaDatabase), WorldContextObject); }
        public PalVisualEffectDataBase GetVisualEffectDatabase(Object WorldContextObject) { return Invoke<PalVisualEffectDataBase>(nameof(GetVisualEffectDatabase), WorldContextObject); }
        public PalTutorialManager GetTutorialManager(Object WorldContextObject) { return Invoke<PalTutorialManager>(nameof(GetTutorialManager), WorldContextObject); }
        public void GetTribeIDNameFromParameter(Object WorldContextObject, PalIndividualCharacterParameter IndividualParameter, Object outTribeIDName) { Invoke(nameof(GetTribeIDNameFromParameter), WorldContextObject, IndividualParameter, outTribeIDName); }
        public void GetTribeIDNameFromCharacterID(Object WorldContextObject, Object CharacterID, Object outTribeIDName) { Invoke(nameof(GetTribeIDNameFromCharacterID), WorldContextObject, CharacterID, outTribeIDName); }
        public EPalTribeID GetTribeIDFromCharacterID(Object WorldContextObject, Object CharacterID) { return Invoke<EPalTribeID>(nameof(GetTribeIDFromCharacterID), WorldContextObject, CharacterID); }
        public Quat GetTransformQuat(Transform SourceTransform) { return Invoke<Quat>(nameof(GetTransformQuat), SourceTransform); }
        public PalPlayerController GetTrainerPlayerController_ForServer(Actor Monster) { return Invoke<PalPlayerController>(nameof(GetTrainerPlayerController_ForServer), Monster); }
        public PalPlayerCharacter GetTrainerPlayer(Actor Monster) { return Invoke<PalPlayerCharacter>(nameof(GetTrainerPlayer), Monster); }
        public PalTimeManager GetTimeManager(Object WorldContextObject) { return Invoke<PalTimeManager>(nameof(GetTimeManager), WorldContextObject); }
        public PalTechnologyData GetTechnologyDataByPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<PalTechnologyData>(nameof(GetTechnologyDataByPlayerUID), WorldContextObject, PlayerUId); }
        public int GetStatusPoint(PalIndividualCharacterHandle Handle, Object StatusName) { return Invoke<int>(nameof(GetStatusPoint), Handle, StatusName); }
        public void GetStatUnitResult(Object WorldContextObject, float FrameTime, float GameThreadTime, float RenderThreadTime, float GPUTime) { Invoke(nameof(GetStatUnitResult), WorldContextObject, FrameTime, GameThreadTime, RenderThreadTime, GPUTime); }
        public SignificanceManager GetSignificanceManager(Object WorldContextObject) { return Invoke<SignificanceManager>(nameof(GetSignificanceManager), WorldContextObject); }
        public PalShopManager GetShopManager(Object WorldContextObject) { return Invoke<PalShopManager>(nameof(GetShopManager), WorldContextObject); }
        public Object GetServerWorldDisplayName(Object WorldContextObject) { return Invoke<Object>(nameof(GetServerWorldDisplayName), WorldContextObject); }
        public PalSaveGameManager GetSaveGameManager(Object WorldContextObject) { return Invoke<PalSaveGameManager>(nameof(GetSaveGameManager), WorldContextObject); }
        public float GetSafeZero(float Value) { return Invoke<float>(nameof(GetSafeZero), Value); }
        public float GetRTTJitter(Object WorldContextObject) { return Invoke<float>(nameof(GetRTTJitter), WorldContextObject); }
        public Transform GetRelativeTransformFromRoot(SceneComponent SceneComponent) { return Invoke<Transform>(nameof(GetRelativeTransformFromRoot), SceneComponent); }
        public PalPlayerRecordData GetRecordDataByPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<PalPlayerRecordData>(nameof(GetRecordDataByPlayerUID), WorldContextObject, PlayerUId); }
        public PalRCONSubsystem GetRCONSubsystem(Object WorldContextObject) { return Invoke<PalRCONSubsystem>(nameof(GetRCONSubsystem), WorldContextObject); }
        public float GetRangeToGround(Actor Actor) { return Invoke<float>(nameof(GetRangeToGround), Actor); }
        public void GetRandomPointList(int pointNum, int maxLoopCount, float minXPos, float maxXPos, float minYPos, float maxYPos, float SizeX, float SizeY, RandomStream RandomStream, Array<Vector2D> outPointArray) { Invoke(nameof(GetRandomPointList), pointNum, maxLoopCount, minXPos, maxXPos, minYPos, maxYPos, SizeX, SizeY, RandomStream, outPointArray); }
        public Guid GetPlayerUIDByActor(Actor playerActor) { return Invoke<Guid>(nameof(GetPlayerUIDByActor), playerActor); }
        public PalPlayerState GetPlayerStateByPlayer(PalPlayerCharacter Player) { return Invoke<PalPlayerState>(nameof(GetPlayerStateByPlayer), Player); }
        public PalPlayerState GetPlayerState(Actor Player) { return Invoke<PalPlayerState>(nameof(GetPlayerState), Player); }
        public PalPlayerManager GetPlayerManager(Object WorldContextObject) { return Invoke<PalPlayerManager>(nameof(GetPlayerManager), WorldContextObject); }
        public Array<Object> GetPlayerListDisplayMessages(Object WorldContextObject) { return Invoke<Array<Object>>(nameof(GetPlayerListDisplayMessages), WorldContextObject); }
        public Object GetPlayerListDisplayMessage(Object WorldContextObject) { return Invoke<Object>(nameof(GetPlayerListDisplayMessage), WorldContextObject); }
        public Guid GetPlayerGUIDByPlayerUIDOrSteamId(Object WorldContextObject, Object PlayerUIdORSteamId) { return Invoke<Guid>(nameof(GetPlayerGUIDByPlayerUIDOrSteamId), WorldContextObject, PlayerUIdORSteamId); }
        public int GetPlayerEquipmentShield(Object WorldContextObject, Guid PlayerUId) { return Invoke<int>(nameof(GetPlayerEquipmentShield), WorldContextObject, PlayerUId); }
        public void GetPlayerEquipmentPassiveList(Object WorldContextObject, Guid PlayerUId, Array<Object> outPassiveList) { Invoke(nameof(GetPlayerEquipmentPassiveList), WorldContextObject, PlayerUId, outPassiveList); }
        public int GetPlayerEquipmentHP(Object WorldContextObject, Guid PlayerUId) { return Invoke<int>(nameof(GetPlayerEquipmentHP), WorldContextObject, PlayerUId); }
        public int GetPlayerEquipmentDefense(Object WorldContextObject, Guid PlayerUId) { return Invoke<int>(nameof(GetPlayerEquipmentDefense), WorldContextObject, PlayerUId); }
        public PalPlayerDataStorage GetPlayerDataStorage(Object WorldContextObject) { return Invoke<PalPlayerDataStorage>(nameof(GetPlayerDataStorage), WorldContextObject); }
        public PalPlayerController GetPlayerControllerByPlayerId(Object WorldContextObject, int PlayerId) { return Invoke<PalPlayerController>(nameof(GetPlayerControllerByPlayerId), WorldContextObject, PlayerId); }
        public Pawn GetPlayerControlledPawn(Object WorldContextObject) { return Invoke<Pawn>(nameof(GetPlayerControlledPawn), WorldContextObject); }
        public PalCharacter GetPlayerControlledCharacter(Object WorldContextObject) { return Invoke<PalCharacter>(nameof(GetPlayerControlledCharacter), WorldContextObject); }
        public PalPlayerCharacter GetPlayerCharacterByPlayerIndex(Object WorldContextObject, int PlayerIndex) { return Invoke<PalPlayerCharacter>(nameof(GetPlayerCharacterByPlayerIndex), WorldContextObject, PlayerIndex); }
        public Character GetPlayerCharacterByPlayerId(Object WorldContextObject, int PlayerId) { return Invoke<Character>(nameof(GetPlayerCharacterByPlayerId), WorldContextObject, PlayerId); }
        public PalPlayerCharacter GetPlayerCharacter(Object WorldContextObject) { return Invoke<PalPlayerCharacter>(nameof(GetPlayerCharacter), WorldContextObject); }
        public EPalSupportedPlatformType GetPlatformType(Object WorldContextObject) { return Invoke<EPalSupportedPlatformType>(nameof(GetPlatformType), WorldContextObject); }
        public Object GetPhysicsRootBoneName(Actor Character) { return Invoke<Object>(nameof(GetPhysicsRootBoneName), Character); }
        public Object GetPhysicsBoneName(Actor Character, EPalPhysicsBoneType boneType) { return Invoke<Object>(nameof(GetPhysicsBoneName), Character, boneType); }
        public int GetPhysicsBoneIndex(Actor Character, EPalPhysicsBoneType boneType) { return Invoke<int>(nameof(GetPhysicsBoneIndex), Character, boneType); }
        public byte GetPhysicalSurfaceTypeByActor(Actor SelfActor, Object SocketName, Vector OffsetSt, Vector OffsetEd, bool bHit) { return Invoke<byte>(nameof(GetPhysicalSurfaceTypeByActor), SelfActor, SocketName, OffsetSt, OffsetEd, bHit); }
        public byte GetPhysicalSurfaceType(Object WorldContextObject, Vector RayStart, Vector RayEnd, bool bHit) { return Invoke<byte>(nameof(GetPhysicalSurfaceType), WorldContextObject, RayStart, RayEnd, bHit); }
        public Object GetPassword(Object WorldContextObject) { return Invoke<Object>(nameof(GetPassword), WorldContextObject); }
        public PalPassiveSkillManager GetPassiveSkillManager(Object WorldContextObject) { return Invoke<PalPassiveSkillManager>(nameof(GetPassiveSkillManager), WorldContextObject); }
        public PalPlayerDataPalStorage GetPalStorageDataByPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<PalPlayerDataPalStorage>(nameof(GetPalStorageDataByPlayerUID), WorldContextObject, PlayerUId); }
        public PalObjectCollector GetPalObjectCollector(Object WorldContextObject) { return Invoke<PalObjectCollector>(nameof(GetPalObjectCollector), WorldContextObject); }
        public void GetPalMonsters(Object WorldContextObject, Array<PalCharacter> OutCharacters) { Invoke(nameof(GetPalMonsters), WorldContextObject, OutCharacters); }
        public PalPlayerCharacter GetPalmi(Object WorldContextObject) { return Invoke<PalPlayerCharacter>(nameof(GetPalmi), WorldContextObject); }
        public void GetPalIconInfoByCharacterID(Object WorldContextObject, PalDataTableRowName_PalMonsterData CharacterID, Object outIcon, bool outIsRare, bool outIsBoss) { Invoke(nameof(GetPalIconInfoByCharacterID), WorldContextObject, CharacterID, outIcon, outIsRare, outIsBoss); }
        public PalGameWorldSettings GetPalGameWorldSettings() { return Invoke<PalGameWorldSettings>(nameof(GetPalGameWorldSettings)); }
        public PalGameStateInGame GetPalGameStateInGame(Object WorldContextObject) { return Invoke<PalGameStateInGame>(nameof(GetPalGameStateInGame), WorldContextObject); }
        public PalGameState GetPalGameState(Object WorldContextObject) { return Invoke<PalGameState>(nameof(GetPalGameState), WorldContextObject); }
        public PalGameMode GetPalGameMode(Object WorldContextObject) { return Invoke<PalGameMode>(nameof(GetPalGameMode), WorldContextObject); }
        public PalGameInstance GetPalGameInstance(Object WorldContextObject) { return Invoke<PalGameInstance>(nameof(GetPalGameInstance), WorldContextObject); }
        public PalDebugSetting GetPalDebugSetting() { return Invoke<PalDebugSetting>(nameof(GetPalDebugSetting)); }
        public PalCheatManager GetPalCheatManager(Object WorldContextObject) { return Invoke<PalCheatManager>(nameof(GetPalCheatManager), WorldContextObject); }
        public void GetPalCharacters(Object WorldContextObject, Array<PalCharacter> OutCharacters) { Invoke(nameof(GetPalCharacters), WorldContextObject, OutCharacters); }
        public Array<int> GetOverlapFoliageIndexByComponent(PrimitiveComponent AttackComponent, PrimitiveComponent FolageComponent) { return Invoke<Array<int>>(nameof(GetOverlapFoliageIndexByComponent), AttackComponent, FolageComponent); }
        public float GetOutPacketLoss(Object WorldContextObject) { return Invoke<float>(nameof(GetOutPacketLoss), WorldContextObject); }
        public PalOtomoHolderComponentBase GetOtomoHolderComponent(Object WorldContextObject) { return Invoke<PalOtomoHolderComponentBase>(nameof(GetOtomoHolderComponent), WorldContextObject); }
        public PalOtomoHolderComponentBase GetOtomoHolderByOtomoPal(Actor OtomoPal) { return Invoke<PalOtomoHolderComponentBase>(nameof(GetOtomoHolderByOtomoPal), OtomoPal); }
        public PalOptionWorldSettings GetOptionWorldSettings(Object WorldContextObject) { return Invoke<PalOptionWorldSettings>(nameof(GetOptionWorldSettings), WorldContextObject); }
        public PalOptionSubsystem GetOptionSubsystem(Object WorldContextObject) { return Invoke<PalOptionSubsystem>(nameof(GetOptionSubsystem), WorldContextObject); }
        public PalOptionGraphicsSettings GetOptionGraphicsSettings(Object WorldContextObject) { return Invoke<PalOptionGraphicsSettings>(nameof(GetOptionGraphicsSettings), WorldContextObject); }
        public bool GetOffFromPal(Actor RiderActor, bool bIsSkipAnimation, bool bNoAnimCancel) { return Invoke<bool>(nameof(GetOffFromPal), RiderActor, bIsSkipAnimation, bNoAnimCancel); }
        public int GetNumPlayers(Object WorldContextObject) { return Invoke<int>(nameof(GetNumPlayers), WorldContextObject); }
        public PalNPCManager GetNPCManager(Object WorldContextObject) { return Invoke<PalNPCManager>(nameof(GetNPCManager), WorldContextObject); }
        public PalNetworkTransmitter GetNetworkTransmitterByPlayerId(Object WorldContextObject, int PlayerId) { return Invoke<PalNetworkTransmitter>(nameof(GetNetworkTransmitterByPlayerId), WorldContextObject, PlayerId); }
        public PalNetworkTransmitter GetNetworkTransmitterByPlayerCharacter(PalPlayerCharacter Player) { return Invoke<PalNetworkTransmitter>(nameof(GetNetworkTransmitterByPlayerCharacter), Player); }
        public PalNetworkTransmitter GetNetworkTransmitter(Object WorldContextObject) { return Invoke<PalNetworkTransmitter>(nameof(GetNetworkTransmitter), WorldContextObject); }
        public float GetNearstPlayerDistance2D(Object WorldContextObject, Vector Location) { return Invoke<float>(nameof(GetNearstPlayerDistance2D), WorldContextObject, Location); }
        public PalCharacter GetNearestEnemyByLocation_FrontPlayerCamera(Vector Location, PalCharacter myCharacter, PalPlayerCharacter Player, float InDegree, float InDistance, float InHeight) { return Invoke<PalCharacter>(nameof(GetNearestEnemyByLocation_FrontPlayerCamera), Location, myCharacter, Player, InDegree, InDistance, InHeight); }
        public PalCharacter GetNearestEnemyByLocation(Vector Location, PalCharacter myCharacter, float OutMinRange) { return Invoke<PalCharacter>(nameof(GetNearestEnemyByLocation), Location, myCharacter, OutMinRange); }
        public PalMapObject GetNearestEnemyBuildObject(Actor Character) { return Invoke<PalMapObject>(nameof(GetNearestEnemyBuildObject), Character); }
        public float GetMontageSectionLengthDefault(AnimMontage Montange) { return Invoke<float>(nameof(GetMontageSectionLengthDefault), Montange); }
        public float GetMontageSectionLength(AnimMontage Montange, Object SectionName) { return Invoke<float>(nameof(GetMontageSectionLength), Montange, SectionName); }
        public void GetMontageNotifyStates(AnimMontage Montange, Array<AnimNotifyState> outStates, Object SectionName) { Invoke(nameof(GetMontageNotifyStates), Montange, outStates, SectionName); }
        public PalMoneyData GetMoneyDataByPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<PalMoneyData>(nameof(GetMoneyDataByPlayerUID), WorldContextObject, PlayerUId); }
        public PalMasterDataTables GetMasterDataTables(Object WorldContextObject) { return Invoke<PalMasterDataTables>(nameof(GetMasterDataTables), WorldContextObject); }
        public PalMapObjectManager GetMapObjectManager(Object WorldContextObject) { return Invoke<PalMapObjectManager>(nameof(GetMapObjectManager), WorldContextObject); }
        public SkeletalMeshComponent GetMainMeshByActor(Actor Actor) { return Invoke<SkeletalMeshComponent>(nameof(GetMainMeshByActor), Actor); }
        public PalLogManager GetLogManager(Object WorldContextObject) { return Invoke<PalLogManager>(nameof(GetLogManager), WorldContextObject); }
        public PalLocationManager GetLocationManager(Object WorldContextObject) { return Invoke<PalLocationManager>(nameof(GetLocationManager), WorldContextObject); }
        public PalWorldMapUIData GetLocalWorldMapData(Object WorldContextObject) { return Invoke<PalWorldMapUIData>(nameof(GetLocalWorldMapData), WorldContextObject); }
        public PalTechnologyData GetLocalTechnologyData(Object WorldContextObject) { return Invoke<PalTechnologyData>(nameof(GetLocalTechnologyData), WorldContextObject); }
        public PalPlayerRecordData GetLocalRecordData(Object WorldContextObject) { return Invoke<PalPlayerRecordData>(nameof(GetLocalRecordData), WorldContextObject); }
        public Guid GetLocalPlayerUID(Object WorldContextObject) { return Invoke<Guid>(nameof(GetLocalPlayerUID), WorldContextObject); }
        public PalPlayerState GetLocalPlayerState(Object WorldContextObject) { return Invoke<PalPlayerState>(nameof(GetLocalPlayerState), WorldContextObject); }
        public int GetLocalPlayerID(Object WorldContextObject) { return Invoke<int>(nameof(GetLocalPlayerID), WorldContextObject); }
        public PlayerController GetLocalPlayerController(Object WorldContextObject) { return Invoke<PlayerController>(nameof(GetLocalPlayerController), WorldContextObject); }
        public PalPlayerDataPalStorage GetLocalPalStorageData(Object WorldContextObject) { return Invoke<PalPlayerDataPalStorage>(nameof(GetLocalPalStorageData), WorldContextObject); }
        public PalPlayerInput GetLocalPalPlayerInput(Object WorldContextObject) { return Invoke<PalPlayerInput>(nameof(GetLocalPalPlayerInput), WorldContextObject); }
        public PalMoneyData GetLocalMoneyData(Object WorldContextObject) { return Invoke<PalMoneyData>(nameof(GetLocalMoneyData), WorldContextObject); }
        public PalPlayerInventoryData GetLocalInventoryData(Object WorldContextObject) { return Invoke<PalPlayerInventoryData>(nameof(GetLocalInventoryData), WorldContextObject); }
        public PalItemIDManager GetItemIDManager(Object WorldContextObject) { return Invoke<PalItemIDManager>(nameof(GetItemIDManager), WorldContextObject); }
        public PalItemContainerManager GetItemContainerManager(Object WorldContextObject) { return Invoke<PalItemContainerManager>(nameof(GetItemContainerManager), WorldContextObject); }
        public PalPlayerInventoryData GetInventoryDataByPlayerUID(Object WorldContextObject, Guid PlayerUId) { return Invoke<PalPlayerInventoryData>(nameof(GetInventoryDataByPlayerUID), WorldContextObject, PlayerUId); }
        public PalInvaderManager GetInvaderManager(Object WorldContextObject) { return Invoke<PalInvaderManager>(nameof(GetInvaderManager), WorldContextObject); }
        public float GetInPacketLoss(Object WorldContextObject) { return Invoke<float>(nameof(GetInPacketLoss), WorldContextObject); }
        public bool GetInitializedPlayerSaveParemter(Object WorldContextObject, int Level, PalIndividualCharacterSaveParameter outParameter) { return Invoke<bool>(nameof(GetInitializedPlayerSaveParemter), WorldContextObject, Level, outParameter); }
        public bool GetInitializedCharacterSaveParemter_DebugDefaultParamSetup(Object WorldContextObject, Object CharacterID, Object UniqueNPCID, int Level, Guid OwnerPlayerUId, PalIndividualCharacterSaveParameter outParameter, bool DisableRandomPassiveSkilll, Array<EPalWazaID> WazaList, Array<Object> PassiveSkillList, int Rank, bool RarePalAble) { return Invoke<bool>(nameof(GetInitializedCharacterSaveParemter_DebugDefaultParamSetup), WorldContextObject, CharacterID, UniqueNPCID, Level, OwnerPlayerUId, outParameter, DisableRandomPassiveSkilll, WazaList, PassiveSkillList, Rank, RarePalAble); }
        public bool GetInitializedCharacterSaveParemter(Object WorldContextObject, Object CharacterID, Object UniqueNPCID, int Level, Guid OwnerPlayerUId, PalIndividualCharacterSaveParameter outParameter, bool DisableRandomPassiveSkill, bool RarePalAble) { return Invoke<bool>(nameof(GetInitializedCharacterSaveParemter), WorldContextObject, CharacterID, UniqueNPCID, Level, OwnerPlayerUId, outParameter, DisableRandomPassiveSkill, RarePalAble); }
        public PalInstanceID GetIndividualIDByActor(Actor Actor) { return Invoke<PalInstanceID>(nameof(GetIndividualIDByActor), Actor); }
        public PalInstanceID GetIndividualID(PalIndividualCharacterHandle Handle) { return Invoke<PalInstanceID>(nameof(GetIndividualID), Handle); }
        public PalIndividualCharacterParameter GetIndividualCharacterParameterByActor(Actor Actor) { return Invoke<PalIndividualCharacterParameter>(nameof(GetIndividualCharacterParameterByActor), Actor); }
        public PalIndividualCharacterHandle GetIndividualCharacterHandleByActor(Actor Actor) { return Invoke<PalIndividualCharacterHandle>(nameof(GetIndividualCharacterHandleByActor), Actor); }
        public PalIncidentSystem GetIncidentSystem(Object WorldContextObject) { return Invoke<PalIncidentSystem>(nameof(GetIncidentSystem), WorldContextObject); }
        public void GetHumanNPCs(Object WorldContextObject, Array<PalCharacter> OutCharacters) { Invoke(nameof(GetHumanNPCs), WorldContextObject, OutCharacters); }
        public PalHUDService GetHUDService(Object WorldContextObject) { return Invoke<PalHUDService>(nameof(GetHUDService), WorldContextObject); }
        public Object GetHairAttachAccessorySocketName(Object WorldContextObject, Object HairEquipmentName, Object BodyTypeName) { return Invoke<Object>(nameof(GetHairAttachAccessorySocketName), WorldContextObject, HairEquipmentName, BodyTypeName); }
        public PalGroupManager GetGroupManager(Object WorldContextObject) { return Invoke<PalGroupManager>(nameof(GetGroupManager), WorldContextObject); }
        public PalGameSetting GetGameSetting(Object WorldContextObject) { return Invoke<PalGameSetting>(nameof(GetGameSetting), WorldContextObject); }
        public PalFunnelCharacterManager GetFunnelCharacterManager(Object WorldContextObject) { return Invoke<PalFunnelCharacterManager>(nameof(GetFunnelCharacterManager), WorldContextObject); }
        public Vector GetFloorLocationByActor(Actor TargetActor) { return Invoke<Vector>(nameof(GetFloorLocationByActor), TargetActor); }
        public Vector GetFloorHitLocationByActor(Actor TargetActor) { return Invoke<Vector>(nameof(GetFloorHitLocationByActor), TargetActor); }
        public Object GetFirstLine(Object SourceString) { return Invoke<Object>(nameof(GetFirstLine), SourceString); }
        public PalExpDatabase GetExpDatabase(Object WorldContextObject) { return Invoke<PalExpDatabase>(nameof(GetExpDatabase), WorldContextObject); }
        public Vector GetExclamationMarkLocation(PalCharacter TargetCharacter) { return Invoke<Vector>(nameof(GetExclamationMarkLocation), TargetCharacter); }
        public PalEventNotifySystem GetEventNotifySystem(Object WorldContextObject) { return Invoke<PalEventNotifySystem>(nameof(GetEventNotifySystem), WorldContextObject); }
        public byte GetEngineCollisionChannelByPalTraceType(EPalTraceTypeQuery Type) { return Invoke<byte>(nameof(GetEngineCollisionChannelByPalTraceType), Type); }
        public byte GetEngineCollisionChannelByPalObjectType(EPalObjectTypeQuery Type) { return Invoke<byte>(nameof(GetEngineCollisionChannelByPalObjectType), Type); }
        public byte GetEngineCollisionChannel(EPalObjectTypeQuery channnel) { return Invoke<byte>(nameof(GetEngineCollisionChannel), channnel); }
        public Array<PalCharacter> GetEnemiesByLocation(Object WorldContextObject, Vector Location, PalCharacter myCharacter, float minDistance, float MaxDistance) { return Invoke<Array<PalCharacter>>(nameof(GetEnemiesByLocation), WorldContextObject, Location, myCharacter, minDistance, MaxDistance); }
        public float GetElementMultiplay(Object WorldContextObject, EPalElementType AttackElementType, EPalElementType defenceTypeA, EPalElementType defenceTypeB) { return Invoke<float>(nameof(GetElementMultiplay), WorldContextObject, AttackElementType, defenceTypeA, defenceTypeB); }
        public EHumanBone GetEHumanBoneFromBoneName(Object BoneName) { return Invoke<EHumanBone>(nameof(GetEHumanBoneFromBoneName), BoneName); }
        public Object GetDisplayVersion(Object WorldContextObject) { return Invoke<Object>(nameof(GetDisplayVersion), WorldContextObject); }
        public Vector GetDiffVelocity(Actor A, Actor B) { return Invoke<Vector>(nameof(GetDiffVelocity), A, B); }
        public Object GetDefaultObjectByBlueprint(Object bp) { return Invoke<Object>(nameof(GetDefaultObjectByBlueprint), bp); }
        public Object GetDefaultObject(Object ObjectClass) { return Invoke<Object>(nameof(GetDefaultObject), ObjectClass); }
        public int GetDebugEnemySpawnCountForBot(Object WorldContextObject) { return Invoke<int>(nameof(GetDebugEnemySpawnCountForBot), WorldContextObject); }
        public int GetDebugBotBaseCampWorkerCount(Object WorldContextObject) { return Invoke<int>(nameof(GetDebugBotBaseCampWorkerCount), WorldContextObject); }
        public Object GetDebugBotBaseCampMode(Object WorldContextObject) { return Invoke<Object>(nameof(GetDebugBotBaseCampMode), WorldContextObject); }
        public PalDeathPenaltyManager GetDeathPenaltyManager(Object WorldContextObject) { return Invoke<PalDeathPenaltyManager>(nameof(GetDeathPenaltyManager), WorldContextObject); }
        public PalDeadBodyManager GetDeadBodyManager(Object WorldContextObject) { return Invoke<PalDeadBodyManager>(nameof(GetDeadBodyManager), WorldContextObject); }
        public PalDatabaseCharacterParameter GetDatabaseCharacterParameter(Object WorldContextObject) { return Invoke<PalDatabaseCharacterParameter>(nameof(GetDatabaseCharacterParameter), WorldContextObject); }
        public PalDamagePopUpManager GetDamagePopUpManager(Object WorldContextObject) { return Invoke<PalDamagePopUpManager>(nameof(GetDamagePopUpManager), WorldContextObject); }
        public EPalWorkSuitability GetCurrentWorkSuitability(PalCharacter Character) { return Invoke<EPalWorkSuitability>(nameof(GetCurrentWorkSuitability), Character); }
        public PalCoopSkillSearchSystem GetCoopSkillSearchSystem(Object WorldContextObject) { return Invoke<PalCoopSkillSearchSystem>(nameof(GetCoopSkillSearchSystem), WorldContextObject); }
        public Controller GetController(Object WorldContextObject, Actor Actor) { return Invoke<Controller>(nameof(GetController), WorldContextObject, Actor); }
        public bool GetClipboard(Object String) { return Invoke<bool>(nameof(GetClipboard), String); }
        public Object GetClassFromBlueprintAsset(AssetData Asset) { return Invoke<Object>(nameof(GetClassFromBlueprintAsset), Asset); }
        public float GetCharacterRadius(Actor Actor) { return Invoke<float>(nameof(GetCharacterRadius), Actor); }
        public PalCharacterParameterStorageSubsystem GetCharacterParameterStorageSubsystem(Object WorldContextObject) { return Invoke<PalCharacterParameterStorageSubsystem>(nameof(GetCharacterParameterStorageSubsystem), WorldContextObject); }
        public PalCharacterManager GetCharacterManager(Object WorldContextObject) { return Invoke<PalCharacterManager>(nameof(GetCharacterManager), WorldContextObject); }
        public bool GetCharacterMakeInfoFromLocalPlayer(Object WorldContextObject, PalPlayerDataCharacterMakeInfo OutMakeInfo) { return Invoke<bool>(nameof(GetCharacterMakeInfoFromLocalPlayer), WorldContextObject, OutMakeInfo); }
        public PalCharacterImportanceManager GetCharacterImportanceManager(Object WorldContextObject) { return Invoke<PalCharacterImportanceManager>(nameof(GetCharacterImportanceManager), WorldContextObject); }
        public Object GetCharacterIDReplacedName(Object originalID) { return Invoke<Object>(nameof(GetCharacterIDReplacedName), originalID); }
        public Object GetCharacterIDFromTribeID(EPalTribeID TribeID) { return Invoke<Object>(nameof(GetCharacterIDFromTribeID), TribeID); }
        public Object GetCharacterIDFromCharacter(PalCharacter Character) { return Invoke<Object>(nameof(GetCharacterIDFromCharacter), Character); }
        public PalCharacterContainerManager GetCharacterContainerManager(Object WorldContextObject) { return Invoke<PalCharacterContainerManager>(nameof(GetCharacterContainerManager), WorldContextObject); }
        public void GetCharacterApartFromPlayer(Object WorldContextObject, Array<PalCharacter> OutCharacters) { Invoke(nameof(GetCharacterApartFromPlayer), WorldContextObject, OutCharacters); }
        public void GetCalculatedCaptureRate(Object WorldContextObject, float baseRate, Array<float> outCalculatedRateArray) { Invoke(nameof(GetCalculatedCaptureRate), WorldContextObject, baseRate, outCalculatedRateArray); }
        public ProjectileMovementComponent GetBulletProjectileComponent(Object bulletClass) { return Invoke<ProjectileMovementComponent>(nameof(GetBulletProjectileComponent), bulletClass); }
        public PalBulletCreator GetBulletCreator(Object WorldContextObject) { return Invoke<PalBulletCreator>(nameof(GetBulletCreator), WorldContextObject); }
        public PalBossBattleManager GetBossBattleManager(Object WorldContextObject) { return Invoke<PalBossBattleManager>(nameof(GetBossBattleManager), WorldContextObject); }
        public Object GetBoneNameFromEHumanBone(EHumanBone humanBone) { return Invoke<Object>(nameof(GetBoneNameFromEHumanBone), humanBone); }
        public EPalBodyPartsType GetBodyPartsType(ActorComponent Component) { return Invoke<EPalBodyPartsType>(nameof(GetBodyPartsType), Component); }
        public Transform GetBodyLocation(Actor Character, EPalBodyLocationType bodyLocationType) { return Invoke<Transform>(nameof(GetBodyLocation), Character, bodyLocationType); }
        public PalBattleManager GetBattleManager(Object WorldContextObject) { return Invoke<PalBattleManager>(nameof(GetBattleManager), WorldContextObject); }
        public PalBaseCampManager GetBaseCampManager(Object WorldContextObject) { return Invoke<PalBaseCampManager>(nameof(GetBaseCampManager), WorldContextObject); }
        public PalAudioSettingSystem GetAudioSettingSystem(Object WorldContextObject) { return Invoke<PalAudioSettingSystem>(nameof(GetAudioSettingSystem), WorldContextObject); }
        public Vector GetAttackTargetLocation(Actor Attacker, Actor TargetActor) { return Invoke<Vector>(nameof(GetAttackTargetLocation), Attacker, TargetActor); }
        public bool GetAttachInformationByBodyLocation(Actor Character, EPalBodyLocationType bodyLocationType, SceneComponent AttachComponent, Object attachBoneName, Transform attachRelativeTransform) { return Invoke<bool>(nameof(GetAttachInformationByBodyLocation), Character, bodyLocationType, AttachComponent, attachBoneName, attachRelativeTransform); }
        public PalAssetStreamableManager GetAssetStreamableManager(Object WorldContextObject) { return Invoke<PalAssetStreamableManager>(nameof(GetAssetStreamableManager), WorldContextObject); }
        public bool GetArrivableLocation(Object WorldContextObject, Vector StartLocation, Vector TargetLocation, float OffsetZUp, float OffsetZUnder, EPalTraceTypeQuery TraceTypeQuery, float Range, Vector OutLocation, float OutDistance, byte DrawDebugType) { return Invoke<bool>(nameof(GetArrivableLocation), WorldContextObject, StartLocation, TargetLocation, OffsetZUp, OffsetZUnder, TraceTypeQuery, Range, OutLocation, OutDistance, DrawDebugType); }
        public void GetAllPlayerStates(Object WorldContextObject, Array<PalPlayerState> OutPlayerStates) { Invoke(nameof(GetAllPlayerStates), WorldContextObject, OutPlayerStates); }
        public void GetAllPlayerCharacters(Object WorldContextObject, Array<PalCharacter> OutPlayers) { Invoke(nameof(GetAllPlayerCharacters), WorldContextObject, OutPlayers); }
        public void GetAllControlledCharacters(Object WorldContextObject, Array<PalCharacter> OutCharacters) { Invoke(nameof(GetAllControlledCharacters), WorldContextObject, OutCharacters); }
        public Object GetAkComponentAttachName(Actor Character) { return Invoke<Object>(nameof(GetAkComponentAttachName), Character); }
        public Object GetAdminPasswordForCmdline(Object WorldContextObject) { return Invoke<Object>(nameof(GetAdminPasswordForCmdline), WorldContextObject); }
        public Quat GetActorQuat(Actor SourceActor) { return Invoke<Quat>(nameof(GetActorQuat), SourceActor); }
        public void GetActorByGrid(Object WorldContextObject, Object actorClass, Vector2D minPoint, Vector2D maxPoint, int gridXMax, int gridYMax, int gridXNum, int gridYNum, Array<Actor> OutActors) { Invoke(nameof(GetActorByGrid), WorldContextObject, actorClass, minPoint, maxPoint, gridXMax, gridYMax, gridXNum, gridYNum, OutActors); }
        public Array<PalKeyAction> GetActionsByKey(Object WorldContextObject, Key Key) { return Invoke<Array<PalKeyAction>>(nameof(GetActionsByKey), WorldContextObject, Key); }
        public void GeneralTurnToActor_WithMovementRotationSpeed(Actor TurnActor, Actor GoalDirectionActor, float DeltaTime) { Invoke(nameof(GeneralTurnToActor_WithMovementRotationSpeed), TurnActor, GoalDirectionActor, DeltaTime); }
        public void GeneralTurnToActor(Actor TurnActor, Actor TargetActor, float LerpSpeed, float DeltaTime) { Invoke(nameof(GeneralTurnToActor), TurnActor, TargetActor, LerpSpeed, DeltaTime); }
        public void GeneralTurnLinearToActor(Actor TurnActor, Actor TargetActor, float LerpSpeed, float DeltaTime) { Invoke(nameof(GeneralTurnLinearToActor), TurnActor, TargetActor, LerpSpeed, DeltaTime); }
        public void GeneralTurnLinear(Actor TurnActor, Vector GoalDirection, float AngleDegreeSpeed, float DeltaTime) { Invoke(nameof(GeneralTurnLinear), TurnActor, GoalDirection, AngleDegreeSpeed, DeltaTime); }
        public void GeneralTurn_WithMovementRotationSpeed(Actor TurnActor, Vector GoalDirection, float DeltaTime) { Invoke(nameof(GeneralTurn_WithMovementRotationSpeed), TurnActor, GoalDirection, DeltaTime); }
        public void GeneralTurn(Actor TurnActor, Vector GoalDirection, float LerpSpeed, float DeltaTime) { Invoke(nameof(GeneralTurn), TurnActor, GoalDirection, LerpSpeed, DeltaTime); }
        public PalCharacter FindRiderByRidingActor(Actor RidingActor) { return Invoke<PalCharacter>(nameof(FindRiderByRidingActor), RidingActor); }
        public PalCharacter FindOwnerPalCharacter(Object startObject) { return Invoke<PalCharacter>(nameof(FindOwnerPalCharacter), startObject); }
        public Actor FindOwnerActor(Object startObject) { return Invoke<Actor>(nameof(FindOwnerActor), startObject); }
        public Actor FindHomingTarget_ForPlayer(PalPlayerCharacter Player, float MinRange, float MaxRange, float InFrontDegree) { return Invoke<Actor>(nameof(FindHomingTarget_ForPlayer), Player, MinRange, MaxRange, InFrontDegree); }
        public Object EnumToLocalizedText(Object WorldContextObject, Object EnumStr, EPalLocalizeTextCategory TextCategory, Object TextIdPrefix) { return Invoke<Object>(nameof(EnumToLocalizedText), WorldContextObject, EnumStr, TextCategory, TextIdPrefix); }
        public void EmitSoundForAIListener(Object SoundFName, Actor EmitterCharacter, Vector EmitLocation, float VolumeRate) { Invoke(nameof(EmitSoundForAIListener), SoundFName, EmitterCharacter, EmitLocation, VolumeRate); }
        public void Editor_AddCharacterToImportanceManager(PalCharacter Character) { Invoke(nameof(Editor_AddCharacterToImportanceManager), Character); }
        public void DropItem_FromOtomoCutMeat(Actor Otomo, Actor Trainer) { Invoke(nameof(DropItem_FromOtomoCutMeat), Otomo, Trainer); }
        public void DropItem_FromEnemyDeath(Actor EnemyActor, Actor LastAttacker) { Invoke(nameof(DropItem_FromEnemyDeath), EnemyActor, LastAttacker); }
        public void DropCharactersCircularly_ServerInternal(Object WorldContextObject, Array<PalIndividualCharacterHandle> IndividualHandles, Vector Location, PalDropCharacterExtraParameter ExtraParameter) { Invoke(nameof(DropCharactersCircularly_ServerInternal), WorldContextObject, IndividualHandles, Location, ExtraParameter); }
        public void DropCharacter_ServerInternal(Object WorldContextObject, PalInstanceID IndividualId, Vector DropLocation, Guid RequestPlayerUId) { Invoke(nameof(DropCharacter_ServerInternal), WorldContextObject, IndividualId, DropLocation, RequestPlayerUId); }
        public void DialogWithParameter(Object WorldContextObject, PalDialogParameterDialog Parameter) { Invoke(nameof(DialogWithParameter), WorldContextObject, Parameter); }
        public void Dialog(Object WorldContextObject, Object Message, EPalDialogType DialogType, Object Callback, bool bNegativeDefault) { Invoke(nameof(Dialog), WorldContextObject, Message, DialogType, Callback, bNegativeDefault); }
        public void DestroyActorIncludingAttachedActors(Actor Actor) { Invoke(nameof(DestroyActorIncludingAttachedActors), Actor); }
        public Vector CutVectorByLength(Vector Vector, float Length) { return Invoke<Vector>(nameof(CutVectorByLength), Vector, Length); }
        public Vector CutVectorByAngle(Vector Target, Vector BaseAxis, float maxAngleDegree) { return Invoke<Vector>(nameof(CutVectorByAngle), Target, BaseAxis, maxAngleDegree); }
        public void CreateUNKO(PalCharacter Character, int Count) { Invoke(nameof(CreateUNKO), Character, Count); }
        public byte ConvertToTraceTypeQuery(EPalTraceTypeQuery Type) { return Invoke<byte>(nameof(ConvertToTraceTypeQuery), Type); }
        public byte ConvertToPhysicalSurface(EPalPhysicalSurface Type) { return Invoke<byte>(nameof(ConvertToPhysicalSurface), Type); }
        public byte ConvertToObjectTypeQuery(EPalObjectTypeQuery Type) { return Invoke<byte>(nameof(ConvertToObjectTypeQuery), Type); }
        public Object Convert_PalInstanceIDToString(PalInstanceID ID) { return Invoke<Object>(nameof(Convert_PalInstanceIDToString), ID); }
        public bool ContainsOnlyIn(Array<Object> SourceArray, Array<Object> TargetElms, Object Target) { return Invoke<bool>(nameof(ContainsOnlyIn), SourceArray, TargetElms, Target); }
        public bool ContainsAny(Array<Object> SourceArray, Array<Object> FindElms) { return Invoke<bool>(nameof(ContainsAny), SourceArray, FindElms); }
        public bool ClipboardCopy(Object String) { return Invoke<bool>(nameof(ClipboardCopy), String); }
        public void ClearCharacterRagdoll(PalCharacter Character) { Invoke(nameof(ClearCharacterRagdoll), Character); }
        public bool CanUseTargetMedicine(Object WorldContextObject, PalIndividualCharacterParameter IndividualParameter, PalStaticItemDataBase Item) { return Invoke<bool>(nameof(CanUseTargetMedicine), WorldContextObject, IndividualParameter, Item); }
        public bool CanSpawnDashEffect(Actor dashActor) { return Invoke<bool>(nameof(CanSpawnDashEffect), dashActor); }
        public bool CanNooseTrap(Actor Actor) { return Invoke<bool>(nameof(CanNooseTrap), Actor); }
        public bool CanAdjustActorToFloor(Actor TargetActor, float UpOffset, Vector OutLocation) { return Invoke<bool>(nameof(CanAdjustActorToFloor), TargetActor, UpOffset, OutLocation); }
        public void CalcSceneComponentBounds(Array<SceneComponent> SceneComps, Box OutBounds) { Invoke(nameof(CalcSceneComponentBounds), SceneComps, OutBounds); }
        public Rotator CalcRotationGeneralTurnLinear(Vector InForwardDirection, Vector InRightDirection, float CurrentYaw, Vector InGoalDirection, float AngleDegreeSpeed, float DeltaTime, float YawRate) { return Invoke<Rotator>(nameof(CalcRotationGeneralTurnLinear), InForwardDirection, InRightDirection, CurrentYaw, InGoalDirection, AngleDegreeSpeed, DeltaTime, YawRate); }
        public int CalcRemainBattleTime(DateTime TimeLimit) { return Invoke<int>(nameof(CalcRemainBattleTime), TimeLimit); }
        public int CalcNPCWeaponDamage(PalWeaponBase weapon) { return Invoke<int>(nameof(CalcNPCWeaponDamage), weapon); }
        public int CalcDamageCharacter(PalDamageInfo DamageInfo, Actor Defender, PalCalcCharacterDamageInfo CharacterDamageInfo) { return Invoke<int>(nameof(CalcDamageCharacter), DamageInfo, Defender, CharacterDamageInfo); }
        public int CalcDamage(PalDamageInfo DamageInfo, Actor Defender) { return Invoke<int>(nameof(CalcDamage), DamageInfo, Defender); }
        public float CalcCaptureRateByStatus(Actor TargetPal) { return Invoke<float>(nameof(CalcCaptureRateByStatus), TargetPal); }
        public Vector CalcBlowVelocity(EPalBlowVelocityOwner VelocityType, Actor Attacker, SceneComponent HitComponent, Vector HitLocation, Actor Defender, Vector NativeVelocity) { return Invoke<Vector>(nameof(CalcBlowVelocity), VelocityType, Attacker, HitComponent, HitLocation, Defender, NativeVelocity); }
        public bool BoxOvelapLimitVolume(Object WorldContextObject, EPalLimitVolumeFlag LimitVolumeFlag, Vector BoxPos, Vector BoxExtent, Quat Rot) { return Invoke<bool>(nameof(BoxOvelapLimitVolume), WorldContextObject, LimitVolumeFlag, BoxPos, BoxExtent, Rot); }
        public void ApplyGuildColorForCharacter(LinearColor Color, PalCharacter Character) { Invoke(nameof(ApplyGuildColorForCharacter), Color, Character); }
        public float AngleBetweenVector(Vector A, Vector B, bool IsDegree) { return Invoke<float>(nameof(AngleBetweenVector), A, B, IsDegree); }
        public float Angle180from360Degree(float Degree) { return Invoke<float>(nameof(Angle180from360Degree), Degree); }
        public void AlertWithCallback(Object WorldContextObject, Object Message, Object Callback) { Invoke(nameof(AlertWithCallback), WorldContextObject, Message, Callback); }
        public void Alert(Object WorldContextObject, Object Message) { Invoke(nameof(Alert), WorldContextObject, Message); }
        public Actor AdjustActorToFloor(Actor TargetActor, float UpOffset) { return Invoke<Actor>(nameof(AdjustActorToFloor), TargetActor, UpOffset); }
        public void AddForceWithMassScale(PalCharacter TargetCharacter, Vector Force, Object BoneName, bool IsImplus) { Invoke(nameof(AddForceWithMassScale), TargetCharacter, Force, BoneName, IsImplus); }
        public void AddDownForceAllRigidBody(PalCharacter TargetCharacter, float Rate) { Invoke(nameof(AddDownForceAllRigidBody), TargetCharacter, Rate); }
    }
    public class PalVenderDataComponent : ActorComponent
    {
        public PalVenderDataComponent(nint addr) : base(addr) { }
        public Object OnRegisteredItemShopDelegate { get { return this[nameof(OnRegisteredItemShopDelegate)]; } set { this[nameof(OnRegisteredItemShopDelegate)] = value; } }
        public Object OnRegisteredPalShopDelegate { get { return this[nameof(OnRegisteredPalShopDelegate)]; } set { this[nameof(OnRegisteredPalShopDelegate)] = value; } }
        public Guid MyShopID { get { return this[nameof(MyShopID)].As<Guid>(); } set { this["MyShopID"] = value; } }
        public int ItemShopRestockMinute { get { return this[nameof(ItemShopRestockMinute)].GetValue<int>(); } set { this[nameof(ItemShopRestockMinute)].SetValue<int>(value); } }
        public EPalShopLotteryType itemShopLotteryType { get { return (EPalShopLotteryType)this[nameof(itemShopLotteryType)].GetValue<int>(); } set { this[nameof(itemShopLotteryType)].SetValue<int>((int)value); } }
        public PalDataTableRowName_ItemShopLotteryData itemShopSimpleLotteryTableName { get { return this[nameof(itemShopSimpleLotteryTableName)].As<PalDataTableRowName_ItemShopLotteryData>(); } set { this["itemShopSimpleLotteryTableName"] = value; } }
        public Object itemShopBiomeLotteryTableMap { get { return this[nameof(itemShopBiomeLotteryTableMap)]; } set { this[nameof(itemShopBiomeLotteryTableMap)] = value; } }
        public int PalShopRestockMinute { get { return this[nameof(PalShopRestockMinute)].GetValue<int>(); } set { this[nameof(PalShopRestockMinute)].SetValue<int>(value); } }
        public EPalShopLotteryType palShopLotteryType { get { return (EPalShopLotteryType)this[nameof(palShopLotteryType)].GetValue<int>(); } set { this[nameof(palShopLotteryType)].SetValue<int>((int)value); } }
        public PalDataTableRowName_PalShopCreateData palShopSimpleLotteryTableName { get { return this[nameof(palShopSimpleLotteryTableName)].As<PalDataTableRowName_PalShopCreateData>(); } set { this["palShopSimpleLotteryTableName"] = value; } }
        public Object palShopBiomeLotteryTableMap { get { return this[nameof(palShopBiomeLotteryTableMap)]; } set { this[nameof(palShopBiomeLotteryTableMap)] = value; } }
        public PalShopBase MyItemShop { get { return this[nameof(MyItemShop)].As<PalShopBase>(); } set { this["MyItemShop"] = value; } }
        public PalShopBase MyPalShop { get { return this[nameof(MyPalShop)].As<PalShopBase>(); } set { this["MyPalShop"] = value; } }
        public bool TryGetPalShop(PalShopBase OutShop) { return Invoke<bool>(nameof(TryGetPalShop), OutShop); }
        public bool TryGetItemShop(PalShopBase OutShop) { return Invoke<bool>(nameof(TryGetItemShop), OutShop); }
        public void SetupShopData() { Invoke(nameof(SetupShopData)); }
        public void RegisteredPalShopDelegate__DelegateSignature() { Invoke(nameof(RegisteredPalShopDelegate__DelegateSignature)); }
        public void RegisteredItemShopDelegate__DelegateSignature() { Invoke(nameof(RegisteredItemShopDelegate__DelegateSignature)); }
        public void OnRep_MyPalShop() { Invoke(nameof(OnRep_MyPalShop)); }
        public void OnRep_MyItemShop() { Invoke(nameof(OnRep_MyItemShop)); }
        public bool IsValidPalShop() { return Invoke<bool>(nameof(IsValidPalShop)); }
        public bool IsValidItemShop() { return Invoke<bool>(nameof(IsValidItemShop)); }
    }
    public class PalVisualEffectBase : Object
    {
        public PalVisualEffectBase(nint addr) : base(addr) { }
        public bool bIsEndVisualEffect { get { return this[nameof(bIsEndVisualEffect)].Flag; } set { this[nameof(bIsEndVisualEffect)].Flag = value; } }
        public bool bCanDeleteInstance { get { return this[nameof(bCanDeleteInstance)].Flag; } set { this[nameof(bCanDeleteInstance)].Flag = value; } }
        public Object OnCompleteDelegate { get { return this[nameof(OnCompleteDelegate)]; } set { this[nameof(OnCompleteDelegate)] = value; } }
        public Array<EPalVisualEffectID> ConflictIDList { get { return new Array<EPalVisualEffectID>(this[nameof(ConflictIDList)].Address); } }
        public EPalVisualEffectID VisualEffectID { get { return (EPalVisualEffectID)this[nameof(VisualEffectID)].GetValue<int>(); } set { this[nameof(VisualEffectID)].SetValue<int>((int)value); } }
        public PalVisualEffectDynamicParameter DynamicParameter { get { return this[nameof(DynamicParameter)].As<PalVisualEffectDynamicParameter>(); } set { this["DynamicParameter"] = value; } }
        public void TickVisualEffect(float DeltaTime) { Invoke(nameof(TickVisualEffect), DeltaTime); }
        public void TerminatingTickVisualEffect(float DeltaTime) { Invoke(nameof(TerminatingTickVisualEffect), DeltaTime); }
        public void OnEndVisualEffect() { Invoke(nameof(OnEndVisualEffect)); }
        public void OnDeleteInstance() { Invoke(nameof(OnDeleteInstance)); }
        public void OnComplete__DelegateSignature(PalVisualEffectBase VisualEffect) { Invoke(nameof(OnComplete__DelegateSignature), VisualEffect); }
        public void OnBreakVisualEffect(bool bByConflict) { Invoke(nameof(OnBreakVisualEffect), bByConflict); }
        public void OnBeginVisualEffect() { Invoke(nameof(OnBeginVisualEffect)); }
        public bool IsEndVisualEffect() { return Invoke<bool>(nameof(IsEndVisualEffect)); }
        public Actor GetOwner() { return Invoke<Actor>(nameof(GetOwner)); }
        public Array<MaterialInstanceDynamic> GetMainMeshMaterials() { return Invoke<Array<MaterialInstanceDynamic>>(nameof(GetMainMeshMaterials)); }
        public SkeletalMeshComponent GetMainMesh() { return Invoke<SkeletalMeshComponent>(nameof(GetMainMesh)); }
        public float GetFloatParameter(Object Name, float DefaultValue) { return Invoke<float>(nameof(GetFloatParameter), Name, DefaultValue); }
        public Array<EPalVisualEffectID> GetConflictIDList() { return Invoke<Array<EPalVisualEffectID>>(nameof(GetConflictIDList)); }
        public PalCharacter GetCharacter() { return Invoke<PalCharacter>(nameof(GetCharacter)); }
        public void GetAllMesh(Array<SceneComponent> OutComponent) { Invoke(nameof(GetAllMesh), OutComponent); }
        public bool CanDeleteInstance() { return Invoke<bool>(nameof(CanDeleteInstance)); }
    }
    public class PalVisualEffectComponent : ActorComponent
    {
        public PalVisualEffectComponent(nint addr) : base(addr) { }
        public Object VisualEffectClass_OverrideMap { get { return this[nameof(VisualEffectClass_OverrideMap)]; } set { this[nameof(VisualEffectClass_OverrideMap)] = value; } }
        public Object OnAddVisualEffectDelegate { get { return this[nameof(OnAddVisualEffectDelegate)]; } set { this[nameof(OnAddVisualEffectDelegate)] = value; } }
        public Object OnRemoveVisualEffectDelegate { get { return this[nameof(OnRemoveVisualEffectDelegate)]; } set { this[nameof(OnRemoveVisualEffectDelegate)] = value; } }
        public Object OnCompleteVisualEffectDelegate { get { return this[nameof(OnCompleteVisualEffectDelegate)]; } set { this[nameof(OnCompleteVisualEffectDelegate)] = value; } }
        public Array<PalVisualEffectBase> ExecutionVisualEffects { get { return new Array<PalVisualEffectBase>(this[nameof(ExecutionVisualEffects)].Address); } }
        public Array<PalVisualEffectBase> TerminatingVisualEffects { get { return new Array<PalVisualEffectBase>(this[nameof(TerminatingVisualEffects)].Address); } }
        public void RemoveVisualEffectForActor_Local(Actor Actor, EPalVisualEffectID VisualEffectID) { Invoke(nameof(RemoveVisualEffectForActor_Local), Actor, VisualEffectID); }
        public void RemoveVisualEffectForActor(Actor Actor, EPalVisualEffectID VisualEffectID) { Invoke(nameof(RemoveVisualEffectForActor), Actor, VisualEffectID); }
        public void RemoveVisualEffectByConflict_ToServer(EPalVisualEffectID VisualEffectID, int issuerID) { Invoke(nameof(RemoveVisualEffectByConflict_ToServer), VisualEffectID, issuerID); }
        public void RemoveVisualEffectByConflict_ToALL(EPalVisualEffectID VisualEffectID, int issuerID) { Invoke(nameof(RemoveVisualEffectByConflict_ToALL), VisualEffectID, issuerID); }
        public void RemoveVisualEffect_ToServer(EPalVisualEffectID VisualEffectID, int issuerID) { Invoke(nameof(RemoveVisualEffect_ToServer), VisualEffectID, issuerID); }
        public void RemoveVisualEffect_ToALL(EPalVisualEffectID VisualEffectID, int issuerID) { Invoke(nameof(RemoveVisualEffect_ToALL), VisualEffectID, issuerID); }
        public void RemoveVisualEffect_Local(EPalVisualEffectID VisualEffectID) { Invoke(nameof(RemoveVisualEffect_Local), VisualEffectID); }
        public void RemoveVisualEffect(EPalVisualEffectID VisualEffectID) { Invoke(nameof(RemoveVisualEffect), VisualEffectID); }
        public void RemoveConflictVisualEffect(EPalVisualEffectID VisualEffectID) { Invoke(nameof(RemoveConflictVisualEffect), VisualEffectID); }
        public void OnRemoveVisualEffect__DelegateSignature(PalVisualEffectComponent VisualEffectComponent, EPalVisualEffectID VisualEffectID) { Invoke(nameof(OnRemoveVisualEffect__DelegateSignature), VisualEffectComponent, VisualEffectID); }
        public void OnCompleteVisualEffect__DelegateSignature(PalVisualEffectComponent VisualEffectComponent, EPalVisualEffectID VisualEffectID, PalVisualEffectBase VisualEffect) { Invoke(nameof(OnCompleteVisualEffect__DelegateSignature), VisualEffectComponent, VisualEffectID, VisualEffect); }
        public void OnAddVisualEffect__DelegateSignature(PalVisualEffectComponent VisualEffectComponent, EPalVisualEffectID VisualEffectID, PalVisualEffectBase VisualEffect) { Invoke(nameof(OnAddVisualEffect__DelegateSignature), VisualEffectComponent, VisualEffectID, VisualEffect); }
        public void BeginPlay() { Invoke(nameof(BeginPlay)); }
        public PalVisualEffectBase AddVisualEffectForActor_Local(Actor Actor, EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter) { return Invoke<PalVisualEffectBase>(nameof(AddVisualEffectForActor_Local), Actor, VisualEffectID, Parameter); }
        public PalVisualEffectBase AddVisualEffectForActor(Actor Actor, EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter) { return Invoke<PalVisualEffectBase>(nameof(AddVisualEffectForActor), Actor, VisualEffectID, Parameter); }
        public void AddVisualEffect_ToServer(EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter, int issuerID) { Invoke(nameof(AddVisualEffect_ToServer), VisualEffectID, Parameter, issuerID); }
        public void AddVisualEffect_ToALL(EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter, int issuerID) { Invoke(nameof(AddVisualEffect_ToALL), VisualEffectID, Parameter, issuerID); }
        public PalVisualEffectBase AddVisualEffect_Local(EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter) { return Invoke<PalVisualEffectBase>(nameof(AddVisualEffect_Local), VisualEffectID, Parameter); }
        public PalVisualEffectBase AddVisualEffect(EPalVisualEffectID VisualEffectID, PalVisualEffectDynamicParameter Parameter) { return Invoke<PalVisualEffectBase>(nameof(AddVisualEffect), VisualEffectID, Parameter); }
    }
    public class PalVisualEffectDataBase : Object
    {
        public PalVisualEffectDataBase(nint addr) : base(addr) { }
        public Object VisualEffectClassDataReference { get { return this[nameof(VisualEffectClassDataReference)]; } set { this[nameof(VisualEffectClassDataReference)] = value; } }
        public MaterialParameterCollection MosaicMaterialParameterCollection { get { return this[nameof(MosaicMaterialParameterCollection)].As<MaterialParameterCollection>(); } set { this["MosaicMaterialParameterCollection"] = value; } }
        public Object VisualEffectClassDataAsset { get { return this[nameof(VisualEffectClassDataAsset)]; } set { this[nameof(VisualEffectClassDataAsset)] = value; } }
        public Object GetMosaicKeyName() { return Invoke<Object>(nameof(GetMosaicKeyName)); }
    }
    public class PalWazaDatabase : Object
    {
        public PalWazaDatabase(nint addr) : base(addr) { }
        public DataTable WazaDataTable { get { return this[nameof(WazaDataTable)].As<DataTable>(); } set { this["WazaDataTable"] = value; } }
        public Object AdditionalEffectToStatusID { get { return this[nameof(AdditionalEffectToStatusID)]; } set { this[nameof(AdditionalEffectToStatusID)] = value; } }
        public DataTable WazaMasterLevel_DataTable { get { return this[nameof(WazaMasterLevel_DataTable)].As<DataTable>(); } set { this["WazaMasterLevel_DataTable"] = value; } }
        public DataTable WazaMasterTamago_DataTable { get { return this[nameof(WazaMasterTamago_DataTable)].As<DataTable>(); } set { this["WazaMasterTamago_DataTable"] = value; } }
        public bool IsExistMasterrableWaza_BetweenLevel(Object CharacterID, int StartLevel, int EndLevel) { return Invoke<bool>(nameof(IsExistMasterrableWaza_BetweenLevel), CharacterID, StartLevel, EndLevel); }
        public void GetMasterrableWaza_BetweenLevel(Object CharacterID, int StartLevel, int EndLevel, Object OutMap) { Invoke(nameof(GetMasterrableWaza_BetweenLevel), CharacterID, StartLevel, EndLevel, OutMap); }
        public bool FindWazaForBP(EPalWazaID Type, PalWazaDatabaseRaw OutData) { return Invoke<bool>(nameof(FindWazaForBP), Type, OutData); }
    }
    public class PalWeaponFilter : PalHitFilter
    {
        public PalWeaponFilter(nint addr) : base(addr) { }
        public float BlowSpeed { get { return this[nameof(BlowSpeed)].GetValue<float>(); } set { this[nameof(BlowSpeed)].SetValue<float>(value); } }
        public float BlowUpRate { get { return this[nameof(BlowUpRate)].GetValue<float>(); } set { this[nameof(BlowUpRate)].SetValue<float>(value); } }
        public float DamageRate { get { return this[nameof(DamageRate)].GetValue<float>(); } set { this[nameof(DamageRate)].SetValue<float>(value); } }
        public bool IsBlow { get { return this[nameof(IsBlow)].Flag; } set { this[nameof(IsBlow)].Flag = value; } }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
    }
    public class PalWidgetAnimationArray : Object
    {
        public PalWidgetAnimationArray(nint addr) : base(addr) { }
        public UserWidget TargetWidget { get { return this[nameof(TargetWidget)].As<UserWidget>(); } set { this["TargetWidget"] = value; } }
        public Object AnimationMap { get { return this[nameof(AnimationMap)]; } set { this[nameof(AnimationMap)] = value; } }
        public float multiplyTimeScale { get { return this[nameof(multiplyTimeScale)].GetValue<float>(); } set { this[nameof(multiplyTimeScale)].SetValue<float>(value); } }
        public void StopAnimation(Object animationName) { Invoke(nameof(StopAnimation), animationName); }
        public void StopAllAnimation() { Invoke(nameof(StopAllAnimation)); }
        public void SetTimeScale(float TimeScale) { Invoke(nameof(SetTimeScale), TimeScale); }
        public void PlayOneShotReverse(Object animationName) { Invoke(nameof(PlayOneShotReverse), animationName); }
        public void PlayOneShotPingPong(Object animationName) { Invoke(nameof(PlayOneShotPingPong), animationName); }
        public void PlayOneshot(Object animationName) { Invoke(nameof(PlayOneshot), animationName); }
        public void PlayLoopReverse(Object animationName) { Invoke(nameof(PlayLoopReverse), animationName); }
        public void PlayLoopPingPong(Object animationName) { Invoke(nameof(PlayLoopPingPong), animationName); }
        public void PlayLoop(Object animationName) { Invoke(nameof(PlayLoop), animationName); }
        public void PauseAnimation(Object animationName) { Invoke(nameof(PauseAnimation), animationName); }
        public void Initialize(UserWidget inTargetWidget) { Invoke(nameof(Initialize), inTargetWidget); }
        public void GetAnimationNameArray(Array<Object> OutArray) { Invoke(nameof(GetAnimationNameArray), OutArray); }
    }
    public class PalWildDrinkWaterSpot : Object
    {
        public PalWildDrinkWaterSpot(nint addr) : base(addr) { }
        public bool IsReserved { get { return this[nameof(IsReserved)].Flag; } set { this[nameof(IsReserved)].Flag = value; } }
        public Vector SpotActorLocation { get { return this[nameof(SpotActorLocation)].As<Vector>(); } set { this["SpotActorLocation"] = value; } }
        public Array<Vector> PalGoalLocations { get { return new Array<Vector>(this[nameof(PalGoalLocations)].Address); } }
        public bool SetAssignPointToMember(Array<Actor> MemberList) { return Invoke<bool>(nameof(SetAssignPointToMember), MemberList); }
        public Vector GetActorLocation() { return Invoke<Vector>(nameof(GetActorLocation)); }
    }
    public class PalWildPalDrinkWaterSpotProvider : Object
    {
        public PalWildPalDrinkWaterSpotProvider(nint addr) : base(addr) { }
        public Object DrinkWaterSpotList { get { return this[nameof(DrinkWaterSpotList)]; } set { this[nameof(DrinkWaterSpotList)] = value; } }
        public bool RequestReservation(Actor LeaderPal, Vector WildPalSpawnerCenter, int MemberNum, Guid OutSpotID) { return Invoke<bool>(nameof(RequestReservation), LeaderPal, WildPalSpawnerCenter, MemberNum, OutSpotID); }
        public PalWildDrinkWaterSpot FindSpot(Guid SpotID) { return Invoke<PalWildDrinkWaterSpot>(nameof(FindSpot), SpotID); }
        public void CancelReservation(Guid SpotID) { Invoke(nameof(CancelReservation), SpotID); }
        public void AddDrinkWaterSpot(Vector ActorLocation, Array<Vector> GoalLocations) { Invoke(nameof(AddDrinkWaterSpot), ActorLocation, GoalLocations); }
    }
    public class PalWildSpawnerDataTable : Object
    {
        public PalWildSpawnerDataTable(nint addr) : base(addr) { }
        public Array<PalSpawnerGroupInfo> CreateGroupList(Array<PalWildSpawnerDatabaseRow> DataList) { return Invoke<Array<PalSpawnerGroupInfo>>(nameof(CreateGroupList), DataList); }
    }
    public class PalWindController : Info
    {
        public PalWindController(nint addr) : base(addr) { }
        public FloatInterval WindDirectionChangeInterval { get { return this[nameof(WindDirectionChangeInterval)].As<FloatInterval>(); } set { this["WindDirectionChangeInterval"] = value; } }
        public float WindDirectionResponse { get { return this[nameof(WindDirectionResponse)].GetValue<float>(); } set { this[nameof(WindDirectionResponse)].SetValue<float>(value); } }
        public FloatInterval WindSpeedInterval { get { return this[nameof(WindSpeedInterval)].As<FloatInterval>(); } set { this["WindSpeedInterval"] = value; } }
        public FloatInterval WindSpeedChangeInterval { get { return this[nameof(WindSpeedChangeInterval)].As<FloatInterval>(); } set { this["WindSpeedChangeInterval"] = value; } }
        public float LastChangedDirectionTime { get { return this[nameof(LastChangedDirectionTime)].GetValue<float>(); } set { this[nameof(LastChangedDirectionTime)].SetValue<float>(value); } }
        public float LastChangedSpeedTime { get { return this[nameof(LastChangedSpeedTime)].GetValue<float>(); } set { this[nameof(LastChangedSpeedTime)].SetValue<float>(value); } }
        public void UpdateNiagaraParameterCollection(PalWindInfo WindInfo) { Invoke(nameof(UpdateNiagaraParameterCollection), WindInfo); }
        public void OnActorSpawned(Actor InActor) { Invoke(nameof(OnActorSpawned), InActor); }
    }
    public class PalWorkAssign : Object
    {
        public PalWorkAssign(nint addr) : base(addr) { }
        public PalWorkAssignHandleId HandleId { get { return this[nameof(HandleId)].As<PalWorkAssignHandleId>(); } set { this["HandleId"] = value; } }
        public PalInstanceID AssignedIndividualId { get { return this[nameof(AssignedIndividualId)].As<PalInstanceID>(); } set { this["AssignedIndividualId"] = value; } }
        public EPalWorkWorkerState State { get { return (EPalWorkWorkerState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public bool bFixed { get { return this[nameof(bFixed)].Flag; } set { this[nameof(bFixed)].Flag = value; } }
        public EPalWorkWorkerWorkingState WorkingState { get { return (EPalWorkWorkerWorkingState)this[nameof(WorkingState)].GetValue<int>(); } set { this[nameof(WorkingState)].SetValue<int>((int)value); } }
        public Vector LocalRandomWorkLocation { get { return this[nameof(LocalRandomWorkLocation)].As<Vector>(); } set { this["LocalRandomWorkLocation"] = value; } }
        public bool IsWorking() { return Invoke<bool>(nameof(IsWorking)); }
        public bool IsWorkable() { return Invoke<bool>(nameof(IsWorkable)); }
        public bool IsFixed() { return Invoke<bool>(nameof(IsFixed)); }
        public bool IsAssignedIndividualId(PalInstanceID IndividualId) { return Invoke<bool>(nameof(IsAssignedIndividualId), IndividualId); }
        public bool IsAssigned() { return Invoke<bool>(nameof(IsAssigned)); }
        public EPalWorkWorkerWorkingState GetWorkingState() { return Invoke<EPalWorkWorkerWorkingState>(nameof(GetWorkingState)); }
        public Guid GetWorkId() { return Invoke<Guid>(nameof(GetWorkId)); }
        public PalWorkBase GetWork() { return Invoke<PalWorkBase>(nameof(GetWork)); }
        public EPalWorkWorkerState GetState() { return Invoke<EPalWorkWorkerState>(nameof(GetState)); }
        public int GetLocationIndex() { return Invoke<int>(nameof(GetLocationIndex)); }
        public PalWorkAssignHandleId GetId() { return Invoke<PalWorkAssignHandleId>(nameof(GetId)); }
        public PalIndividualCharacterParameter GetAssignedIndividualParameter() { return Invoke<PalIndividualCharacterParameter>(nameof(GetAssignedIndividualParameter)); }
        public PalInstanceID GetAssignedIndividualId() { return Invoke<PalInstanceID>(nameof(GetAssignedIndividualId)); }
        public PalIndividualCharacterHandle GetAssignedIndividualHandle() { return Invoke<PalIndividualCharacterHandle>(nameof(GetAssignedIndividualHandle)); }
    }
    public class PalWorkBase : Object
    {
        public PalWorkBase(nint addr) : base(addr) { }
        public Object OnDisposeDelegate { get { return this[nameof(OnDisposeDelegate)]; } set { this[nameof(OnDisposeDelegate)] = value; } }
        public Object OnFinishWorkInServerDelegate { get { return this[nameof(OnFinishWorkInServerDelegate)]; } set { this[nameof(OnFinishWorkInServerDelegate)] = value; } }
        public Object OnReflectFinishWorkDelegate { get { return this[nameof(OnReflectFinishWorkDelegate)]; } set { this[nameof(OnReflectFinishWorkDelegate)] = value; } }
        public Object OnUpdateAssignedCharacterDelegate { get { return this[nameof(OnUpdateAssignedCharacterDelegate)]; } set { this[nameof(OnUpdateAssignedCharacterDelegate)] = value; } }
        public Object OnUpdateCurrentStateDelegate { get { return this[nameof(OnUpdateCurrentStateDelegate)]; } set { this[nameof(OnUpdateCurrentStateDelegate)] = value; } }
        public Object OnRequiredAssignWorkDelegate { get { return this[nameof(OnRequiredAssignWorkDelegate)]; } set { this[nameof(OnRequiredAssignWorkDelegate)] = value; } }
        public Object OnAssignWorkDelegate { get { return this[nameof(OnAssignWorkDelegate)]; } set { this[nameof(OnAssignWorkDelegate)] = value; } }
        public Object OnUnassignWorkDelegate { get { return this[nameof(OnUnassignWorkDelegate)]; } set { this[nameof(OnUnassignWorkDelegate)] = value; } }
        public Object OnStartWorkDelegate { get { return this[nameof(OnStartWorkDelegate)]; } set { this[nameof(OnStartWorkDelegate)] = value; } }
        public Object OnEndWorkDelegate { get { return this[nameof(OnEndWorkDelegate)]; } set { this[nameof(OnEndWorkDelegate)] = value; } }
        public PalBoundsTransform WorkableBounds { get { return this[nameof(WorkableBounds)].As<PalBoundsTransform>(); } set { this["WorkableBounds"] = value; } }
        public Object AssignDefineDataId { get { return this[nameof(AssignDefineDataId)]; } set { this[nameof(AssignDefineDataId)] = value; } }
        public EPalWorkType OverrideWorkType { get { return (EPalWorkType)this[nameof(OverrideWorkType)].GetValue<int>(); } set { this[nameof(OverrideWorkType)].SetValue<int>((int)value); } }
        public Array<PalWorkAssignLocalLocation> AssignLocations { get { return new Array<PalWorkAssignLocalLocation>(this[nameof(AssignLocations)].Address); } }
        public Guid BaseCampIdBelongTo { get { return this[nameof(BaseCampIdBelongTo)].As<Guid>(); } set { this["BaseCampIdBelongTo"] = value; } }
        public Guid OwnerMapObjectModelId { get { return this[nameof(OwnerMapObjectModelId)].As<Guid>(); } set { this["OwnerMapObjectModelId"] = value; } }
        public Guid OwnerMapObjectConcreteModelId { get { return this[nameof(OwnerMapObjectConcreteModelId)].As<Guid>(); } set { this["OwnerMapObjectConcreteModelId"] = value; } }
        public EPalWorkBehaviourType BehaviourType { get { return (EPalWorkBehaviourType)this[nameof(BehaviourType)].GetValue<int>(); } set { this[nameof(BehaviourType)].SetValue<int>((int)value); } }
        public EPalWorkAssignableFixedType AssignableFixedType { get { return (EPalWorkAssignableFixedType)this[nameof(AssignableFixedType)].GetValue<int>(); } set { this[nameof(AssignableFixedType)].SetValue<int>((int)value); } }
        public bool bAssignableOtomo { get { return this[nameof(bAssignableOtomo)].Flag; } set { this[nameof(bAssignableOtomo)].Flag = value; } }
        public bool bCanTriggerWorkerEvent { get { return this[nameof(bCanTriggerWorkerEvent)].Flag; } set { this[nameof(bCanTriggerWorkerEvent)].Flag = value; } }
        public bool bCanStealAssign { get { return this[nameof(bCanStealAssign)].Flag; } set { this[nameof(bCanStealAssign)].Flag = value; } }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public EPalWorkProgressState CurrentState { get { return (EPalWorkProgressState)this[nameof(CurrentState)].GetValue<int>(); } set { this[nameof(CurrentState)].SetValue<int>((int)value); } }
        public PalWorkProgressTransformBase Transform { get { return this[nameof(Transform)].As<PalWorkProgressTransformBase>(); } set { this["Transform"] = value; } }
        public PalFastWorkAssignRepInfoArray AssignRepInfoArray { get { return this[nameof(AssignRepInfoArray)].As<PalFastWorkAssignRepInfoArray>(); } set { this["AssignRepInfoArray"] = value; } }
        public bool bGroupRaycastStartOffsetOrigin { get { return this[nameof(bGroupRaycastStartOffsetOrigin)].Flag; } set { this[nameof(bGroupRaycastStartOffsetOrigin)].Flag = value; } }
        public void WorkAssignUpdateDelegate__DelegateSignature(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(WorkAssignUpdateDelegate__DelegateSignature), Work, IndividualId); }
        public void WorkAssignRequirementDelegate__DelegateSignature(PalWorkBase Work, PalWorkAssignRequirementParameter RequirementParameter) { Invoke(nameof(WorkAssignRequirementDelegate__DelegateSignature), Work, RequirementParameter); }
        public void OnRep_CurrentState() { Invoke(nameof(OnRep_CurrentState)); }
        public void NotifyWorkDelegate__DelegateSignature(PalWorkBase Work) { Invoke(nameof(NotifyWorkDelegate__DelegateSignature), Work); }
        public void IssueNotifierLog_WorkStart(PalCharacterParameterComponent CharacterParameter) { Invoke(nameof(IssueNotifierLog_WorkStart), CharacterParameter); }
        public bool IsExistAssignableSlot(PalIndividualCharacterHandle AssignIndividualHandle, bool bByFixedAssign) { return Invoke<bool>(nameof(IsExistAssignableSlot), AssignIndividualHandle, bByFixedAssign); }
        public bool IsAssignedCharacter(PalIndividualCharacterHandle IndividualHandle) { return Invoke<bool>(nameof(IsAssignedCharacter), IndividualHandle); }
        public bool IsAssignableFixedOnly() { return Invoke<bool>(nameof(IsAssignableFixedOnly)); }
        public Object GetWorkName() { return Invoke<Object>(nameof(GetWorkName)); }
        public Guid GetWorkId() { return Invoke<Guid>(nameof(GetWorkId)); }
        public void GetWorkAssignInfo(Array<PalWorkAssignInfo> OutWorkAssignInfo) { Invoke(nameof(GetWorkAssignInfo), OutWorkAssignInfo); }
        public void GetWorkableElementTypeNames(Array<Object> outElementNames) { Invoke(nameof(GetWorkableElementTypeNames), outElementNames); }
        public Guid GetId() { return Invoke<Guid>(nameof(GetId)); }
        public void GetGenusCategorieNames(Array<Object> outGenusCategorieNames) { Invoke(nameof(GetGenusCategorieNames), outGenusCategorieNames); }
        public void GetAssignedCharacters(Array<PalIndividualCharacterSlot> IndividualSlots) { Invoke(nameof(GetAssignedCharacters), IndividualSlots); }
        public EPalWorkAssignableFixedType GetAssignableFixedType() { return Invoke<EPalWorkAssignableFixedType>(nameof(GetAssignableFixedType)); }
    }
    public class PalWorkBootUp : PalWorkBase
    {
        public PalWorkBootUp(nint addr) : base(addr) { }
        public Object OnBootUpInServerDelegate { get { return this[nameof(OnBootUpInServerDelegate)]; } set { this[nameof(OnBootUpInServerDelegate)] = value; } }
    }
    public class PalWorkDefense : PalWorkBase
    {
        public PalWorkDefense(nint addr) : base(addr) { }
        public Object DefenseAIActionClass { get { return this[nameof(DefenseAIActionClass)]; } set { this[nameof(DefenseAIActionClass)] = value; } }
        public Object DefenseWaitActionClass { get { return this[nameof(DefenseWaitActionClass)]; } set { this[nameof(DefenseWaitActionClass)] = value; } }
        public EPalWorkDefenseCombatType DefenseCombatType { get { return (EPalWorkDefenseCombatType)this[nameof(DefenseCombatType)].GetValue<int>(); } set { this[nameof(DefenseCombatType)].SetValue<int>((int)value); } }
        public Object WeakDefenseModel { get { return this[nameof(WeakDefenseModel)]; } set { this[nameof(WeakDefenseModel)] = value; } }
        public Object WeakDefenseBulletLauncherModel { get { return this[nameof(WeakDefenseBulletLauncherModel)]; } set { this[nameof(WeakDefenseBulletLauncherModel)] = value; } }
    }
    public class PalWorkTypeUtility : BlueprintFunctionLibrary
    {
        public PalWorkTypeUtility(nint addr) : base(addr) { }
    }
    public class PalWorkDefine : BlueprintFunctionLibrary
    {
        public PalWorkDefine(nint addr) : base(addr) { }
    }
    public class PalWorkUtility : BlueprintFunctionLibrary
    {
        public PalWorkUtility(nint addr) : base(addr) { }
        public bool BP_TryGetWorkLocation(PalWorkBase Target, Vector OutLocation) { return Invoke<bool>(nameof(BP_TryGetWorkLocation), Target, OutLocation); }
        public Vector BP_GetWorkLocation(PalWorkBase Target) { return Invoke<Vector>(nameof(BP_GetWorkLocation), Target); }
    }
    public class PalAIActionWorkerInterruptInterface : Interface
    {
        public PalAIActionWorkerInterruptInterface(nint addr) : base(addr) { }
        public bool IsInterruptibleBySleep() { return Invoke<bool>(nameof(IsInterruptibleBySleep)); }
        public bool IsInterruptibleByRecoverHungry() { return Invoke<bool>(nameof(IsInterruptibleByRecoverHungry)); }
    }
    public class PalWorkFacingComponent : ArrowComponent
    {
        public PalWorkFacingComponent(nint addr) : base(addr) { }
    }
    public class PalWorkForLevelObject : PalWorkBase
    {
        public PalWorkForLevelObject(nint addr) : base(addr) { }
    }
    public class PalWorkAssign_LevelObject : PalWorkAssign
    {
        public PalWorkAssign_LevelObject(nint addr) : base(addr) { }
        public Guid TargetMapObjectModelId { get { return this[nameof(TargetMapObjectModelId)].As<Guid>(); } set { this["TargetMapObjectModelId"] = value; } }
    }
    public class PalWorkMonsterFarm : PalWorkBase
    {
        public PalWorkMonsterFarm(nint addr) : base(addr) { }
        public FloatInterval ActionIntervalSeconds { get { return this[nameof(ActionIntervalSeconds)].As<FloatInterval>(); } set { this["ActionIntervalSeconds"] = value; } }
    }
    public class PalWorkAssign_MonsterFarm : PalWorkAssign
    {
        public PalWorkAssign_MonsterFarm(nint addr) : base(addr) { }
        public FloatCounter ActionIntervalTimer { get { return this[nameof(ActionIntervalTimer)].As<FloatCounter>(); } set { this["ActionIntervalTimer"] = value; } }
        public Vector WalkTargetLocation { get { return this[nameof(WalkTargetLocation)].As<Vector>(); } set { this["WalkTargetLocation"] = value; } }
        public PalStaticItemIdAndNum SpawnItemInfoPerAction { get { return this[nameof(SpawnItemInfoPerAction)].As<PalStaticItemIdAndNum>(); } set { this["SpawnItemInfoPerAction"] = value; } }
        public int SpawnActionWholeCount { get { return this[nameof(SpawnActionWholeCount)].GetValue<int>(); } set { this[nameof(SpawnActionWholeCount)].SetValue<int>(value); } }
        public int SpawnActionCurrentCount { get { return this[nameof(SpawnActionCurrentCount)].GetValue<int>(); } set { this[nameof(SpawnActionCurrentCount)].SetValue<int>(value); } }
    }
    public class PalWorkOnlyJoin : PalWorkBase
    {
        public PalWorkOnlyJoin(nint addr) : base(addr) { }
    }
    public class PalWorkOnlyJoinAndWalkAround : PalWorkBase
    {
        public PalWorkOnlyJoinAndWalkAround(nint addr) : base(addr) { }
    }
    public class PalWorkAssign_OnlyJoinAndWalkAround : PalWorkAssign
    {
        public PalWorkAssign_OnlyJoinAndWalkAround(nint addr) : base(addr) { }
        public Vector TargetLocation { get { return this[nameof(TargetLocation)].As<Vector>(); } set { this["TargetLocation"] = value; } }
    }
    public class PalWorkProgress : PalWorkBase
    {
        public PalWorkProgress(nint addr) : base(addr) { }
        public Object OnUpdateWorkAmountInServerDelegate { get { return this[nameof(OnUpdateWorkAmountInServerDelegate)]; } set { this[nameof(OnUpdateWorkAmountInServerDelegate)] = value; } }
        public Object OnReflectWorkAmountDelegate { get { return this[nameof(OnReflectWorkAmountDelegate)]; } set { this[nameof(OnReflectWorkAmountDelegate)] = value; } }
        public float RequiredWorkAmount { get { return this[nameof(RequiredWorkAmount)].GetValue<float>(); } set { this[nameof(RequiredWorkAmount)].SetValue<float>(value); } }
        public float CurrentWorkAmount { get { return this[nameof(CurrentWorkAmount)].GetValue<float>(); } set { this[nameof(CurrentWorkAmount)].SetValue<float>(value); } }
        public float CurrentWorkAmountByLocalPlayer { get { return this[nameof(CurrentWorkAmountByLocalPlayer)].GetValue<float>(); } set { this[nameof(CurrentWorkAmountByLocalPlayer)].SetValue<float>(value); } }
        public Array<Guid> WorkingPlayerUIds { get { return new Array<Guid>(this[nameof(WorkingPlayerUIds)].Address); } }
        public int WorkExp { get { return this[nameof(WorkExp)].GetValue<int>(); } set { this[nameof(WorkExp)].SetValue<int>(value); } }
        public float AutoWorkSelfAmountBySec { get { return this[nameof(AutoWorkSelfAmountBySec)].GetValue<float>(); } set { this[nameof(AutoWorkSelfAmountBySec)].SetValue<float>(value); } }
        public bool bNotAllowReactionOnWorkComplete { get { return this[nameof(bNotAllowReactionOnWorkComplete)].Flag; } set { this[nameof(bNotAllowReactionOnWorkComplete)].Flag = value; } }
        public float ProgressTimeSinceLastTick { get { return this[nameof(ProgressTimeSinceLastTick)].GetValue<float>(); } set { this[nameof(ProgressTimeSinceLastTick)].SetValue<float>(value); } }
        public void OnRep_CurrentWorkAmount() { Invoke(nameof(OnRep_CurrentWorkAmount)); }
        public void NotifyWorkProgressDelegate__DelegateSignature(PalWorkProgress WorkProgress) { Invoke(nameof(NotifyWorkProgressDelegate__DelegateSignature), WorkProgress); }
        public bool IsCompleted() { return Invoke<bool>(nameof(IsCompleted)); }
        public float GetRequiredWorkAmount() { return Invoke<float>(nameof(GetRequiredWorkAmount)); }
        public int GetRemainWorkPredicateTime() { return Invoke<int>(nameof(GetRemainWorkPredicateTime)); }
        public float GetRemainWorkAmount() { return Invoke<float>(nameof(GetRemainWorkAmount)); }
        public float GetProgressRate() { return Invoke<float>(nameof(GetProgressRate)); }
        public float GetCurrentWorkAmount() { return Invoke<float>(nameof(GetCurrentWorkAmount)); }
    }
    public class PalWorkProgressManager : PalWorldSubsystem
    {
        public PalWorkProgressManager(nint addr) : base(addr) { }
        public Object WorkMap_InServer { get { return this[nameof(WorkMap_InServer)]; } set { this[nameof(WorkMap_InServer)] = value; } }
        public Object WorkAssignDefineMap { get { return this[nameof(WorkAssignDefineMap)]; } set { this[nameof(WorkAssignDefineMap)] = value; } }
        public PalWorkAssignDefineData NotWorkableAssignDefine { get { return this[nameof(NotWorkableAssignDefine)].As<PalWorkAssignDefineData>(); } set { this["NotWorkableAssignDefine"] = value; } }
        public PalWorkAssignDefineData BuildAssignDefine { get { return this[nameof(BuildAssignDefine)].As<PalWorkAssignDefineData>(); } set { this["BuildAssignDefine"] = value; } }
        public Array<byte> SearchWorkObjectObjectTypes { get { return new Array<byte>(this[nameof(SearchWorkObjectObjectTypes)].Address); } }
        public Object WorkCompleteActionMap { get { return this[nameof(WorkCompleteActionMap)]; } set { this[nameof(WorkCompleteActionMap)] = value; } }
        public Object LevelObjectWorkIdMap { get { return this[nameof(LevelObjectWorkIdMap)]; } set { this[nameof(LevelObjectWorkIdMap)] = value; } }
        public Array<PalWorkBase> MoveCheckWorkList_InServer_Async { get { return new Array<PalWorkBase>(this[nameof(MoveCheckWorkList_InServer_Async)].Address); } }
        public Array<PalWorkBase> MovedWorkList_InServer_Async { get { return new Array<PalWorkBase>(this[nameof(MovedWorkList_InServer_Async)].Address); } }
        public int MoveCheckProcessIndex { get { return this[nameof(MoveCheckProcessIndex)].GetValue<int>(); } set { this[nameof(MoveCheckProcessIndex)].SetValue<int>(value); } }
        public int MoveCheckMaxNumPerFrame { get { return this[nameof(MoveCheckMaxNumPerFrame)].GetValue<int>(); } set { this[nameof(MoveCheckMaxNumPerFrame)].SetValue<int>(value); } }
        public int WorkTickInvokeMaxNumInOneTick { get { return this[nameof(WorkTickInvokeMaxNumInOneTick)].GetValue<int>(); } set { this[nameof(WorkTickInvokeMaxNumInOneTick)].SetValue<int>(value); } }
        public Object WorkTypeAssignPriorityMap { get { return this[nameof(WorkTypeAssignPriorityMap)]; } set { this[nameof(WorkTypeAssignPriorityMap)] = value; } }
        public void WorkDelegate__DelegateSignature(PalWorkBase Work) { Invoke(nameof(WorkDelegate__DelegateSignature), Work); }
        public PalWorkBase GetWorkByAssignId(PalWorkAssignHandleId WorkAssignId) { return Invoke<PalWorkBase>(nameof(GetWorkByAssignId), WorkAssignId); }
        public PalWorkAssign GetWorkAssign(PalWorkAssignHandleId WorkAssignId) { return Invoke<PalWorkAssign>(nameof(GetWorkAssign), WorkAssignId); }
        public PalWorkBase GetWork(Guid WorkId) { return Invoke<PalWorkBase>(nameof(GetWork), WorkId); }
    }
    public class PalWorkProgressTransformBase : Object
    {
        public PalWorkProgressTransformBase(nint addr) : base(addr) { }
    }
    public class PalWorkProgressTransformStatic : PalWorkProgressTransformBase
    {
        public PalWorkProgressTransformStatic(nint addr) : base(addr) { }
        public Transform Transform { get { return this[nameof(Transform)].As<Transform>(); } set { this["Transform"] = value; } }
    }
    public class PalWorkProgressTransformMapObject : PalWorkProgressTransformBase
    {
        public PalWorkProgressTransformMapObject(nint addr) : base(addr) { }
        public Guid MapObjectInstanceId { get { return this[nameof(MapObjectInstanceId)].As<Guid>(); } set { this["MapObjectInstanceId"] = value; } }
        public Transform TransformCache { get { return this[nameof(TransformCache)].As<Transform>(); } set { this["TransformCache"] = value; } }
        public bool bCached { get { return this[nameof(bCached)].Flag; } set { this[nameof(bCached)].Flag = value; } }
        public bool bShouldSearchForFoliage { get { return this[nameof(bShouldSearchForFoliage)].Flag; } set { this[nameof(bShouldSearchForFoliage)].Flag = value; } }
    }
    public class PalWorkProgressTransformCharacter : PalWorkProgressTransformBase
    {
        public PalWorkProgressTransformCharacter(nint addr) : base(addr) { }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public Transform TransformCache { get { return this[nameof(TransformCache)].As<Transform>(); } set { this["TransformCache"] = value; } }
    }
    public class PalWorkProgressUtility : BlueprintFunctionLibrary
    {
        public PalWorkProgressUtility(nint addr) : base(addr) { }
        public float WorkAmountToManMonth(Object WorldContextObject, float WorkAmount) { return Invoke<float>(nameof(WorkAmountToManMonth), WorldContextObject, WorkAmount); }
    }
    public class PalWorkProgressWorkableCheckInterface : Interface
    {
        public PalWorkProgressWorkableCheckInterface(nint addr) : base(addr) { }
    }
    public class PalWorkRemoveMapObjectEffect : PalWorkBase
    {
        public PalWorkRemoveMapObjectEffect(nint addr) : base(addr) { }
        public EPalStatusID TargetEffectType { get { return (EPalStatusID)this[nameof(TargetEffectType)].GetValue<int>(); } set { this[nameof(TargetEffectType)].SetValue<int>((int)value); } }
    }
    public class PalWorkRepair : PalWorkBase
    {
        public PalWorkRepair(nint addr) : base(addr) { }
        public Guid ConnectToModelInstanceId { get { return this[nameof(ConnectToModelInstanceId)].As<Guid>(); } set { this["ConnectToModelInstanceId"] = value; } }
        public Array<PalMapObjectModel> ConnectedModels { get { return new Array<PalMapObjectModel>(this[nameof(ConnectedModels)].Address); } }
    }
    public class PalWorkReviveCharacter : PalWorkBase
    {
        public PalWorkReviveCharacter(nint addr) : base(addr) { }
        public PalInstanceID TargetIndividualId { get { return this[nameof(TargetIndividualId)].As<PalInstanceID>(); } set { this["TargetIndividualId"] = value; } }
    }
    public class PalWorkSuitabilityUtility : BlueprintFunctionLibrary
    {
        public PalWorkSuitabilityUtility(nint addr) : base(addr) { }
    }
    public class PalWorkTransportItemInBaseCamp : PalWorkBase
    {
        public PalWorkTransportItemInBaseCamp(nint addr) : base(addr) { }
        public EPalWorkTransportItemType TransportType { get { return (EPalWorkTransportItemType)this[nameof(TransportType)].GetValue<int>(); } set { this[nameof(TransportType)].SetValue<int>((int)value); } }
        public float ApproachFailedTimeout { get { return this[nameof(ApproachFailedTimeout)].GetValue<float>(); } set { this[nameof(ApproachFailedTimeout)].SetValue<float>(value); } }
    }
    public class PalWorkEffectComponent : NiagaraComponent
    {
        public PalWorkEffectComponent(nint addr) : base(addr) { }
        public int LocationIndex { get { return this[nameof(LocationIndex)].GetValue<int>(); } set { this[nameof(LocationIndex)].SetValue<int>(value); } }
        public bool bActiveFX { get { return this[nameof(bActiveFX)].Flag; } set { this[nameof(bActiveFX)].Flag = value; } }
        public void OnWorkStarted(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnWorkStarted), Work, IndividualId); }
        public void OnWorkEnded(PalWorkBase Work, PalInstanceID IndividualId) { Invoke(nameof(OnWorkEnded), Work, IndividualId); }
        public void OnRep_ActiveFX() { Invoke(nameof(OnRep_ActiveFX)); }
    }
    public class PalWorldMapCapture : Actor
    {
        public PalWorldMapCapture(nint addr) : base(addr) { }
        public SceneCaptureComponent2D SceneCaptureComponent { get { return this[nameof(SceneCaptureComponent)].As<SceneCaptureComponent2D>(); } set { this["SceneCaptureComponent"] = value; } }
        public Texture2D worldMapTexture { get { return this[nameof(worldMapTexture)].As<Texture2D>(); } set { this["worldMapTexture"] = value; } }
        public TextureRenderTarget2D worldMapDetailRenderTexture { get { return this[nameof(worldMapDetailRenderTexture)].As<TextureRenderTarget2D>(); } set { this["worldMapDetailRenderTexture"] = value; } }
        public Texture2D worldMapHeightTexture { get { return this[nameof(worldMapHeightTexture)].As<Texture2D>(); } set { this["worldMapHeightTexture"] = value; } }
        public Texture2D GetWorldMapHeightMap() { return Invoke<Texture2D>(nameof(GetWorldMapHeightMap)); }
        public TextureRenderTarget2D GetRenderedWorldMapTexture() { return Invoke<TextureRenderTarget2D>(nameof(GetRenderedWorldMapTexture)); }
        public bool CreateWorldMapTexture() { return Invoke<bool>(nameof(CreateWorldMapTexture)); }
        public void CaptureWorldMapTexture_Perspective() { Invoke(nameof(CaptureWorldMapTexture_Perspective)); }
        public void CaptureWorldMapTexture_Ortho() { Invoke(nameof(CaptureWorldMapTexture_Ortho)); }
    }
    public class PalWorldMapUIData : Object
    {
        public PalWorldMapUIData(nint addr) : base(addr) { }
        public Object OnUnlockedMap { get { return this[nameof(OnUnlockedMap)]; } set { this[nameof(OnUnlockedMap)] = value; } }
        public TextureRenderTarget2D MaskRenderTarget { get { return this[nameof(MaskRenderTarget)].As<TextureRenderTarget2D>(); } set { this["MaskRenderTarget"] = value; } }
        public Texture2D MaskTexture { get { return this[nameof(MaskTexture)].As<Texture2D>(); } set { this["MaskTexture"] = value; } }
        public Array<byte> cachedTextureRawData { get { return new Array<byte>(this[nameof(cachedTextureRawData)].Address); } }
        public Object unlockedRegionMap { get { return this[nameof(unlockedRegionMap)]; } set { this[nameof(unlockedRegionMap)] = value; } }
        public DataTable worldMapDataTable { get { return this[nameof(worldMapDataTable)].As<DataTable>(); } set { this["worldMapDataTable"] = value; } }
        public Object currentPlayMapName { get { return this[nameof(currentPlayMapName)]; } set { this[nameof(currentPlayMapName)] = value; } }
        public bool UnlockMap(Object regionId, int PlayerId) { return Invoke<bool>(nameof(UnlockMap), regionId, PlayerId); }
        public void UnlockedMapDelegate__DelegateSignature(Object unlockedRegionId, int PlayerId) { Invoke(nameof(UnlockedMapDelegate__DelegateSignature), unlockedRegionId, PlayerId); }
        public bool IsUnlockedMap(Object regionId) { return Invoke<bool>(nameof(IsUnlockedMap), regionId); }
        public void GetUnlockedMapData(Object outMapData) { Invoke(nameof(GetUnlockedMapData), outMapData); }
        public bool GetCurrentPlayMapUIData(PalWorldMapUIDataTableRow OutData) { return Invoke<bool>(nameof(GetCurrentPlayMapUIData), OutData); }
        public Object GetCurrentPlayMapName() { return Invoke<Object>(nameof(GetCurrentPlayMapName)); }
    }
    public class PalWorldObjectRecorderBase : Object
    {
        public PalWorldObjectRecorderBase(nint addr) : base(addr) { }
    }
    public class PalWorldObjectRecordWorldSubsystem : PalWorldSubsystem
    {
        public PalWorldObjectRecordWorldSubsystem(nint addr) : base(addr) { }
        public Object RecorderMap { get { return this[nameof(RecorderMap)]; } set { this[nameof(RecorderMap)] = value; } }
        public PalWorldObjectRecorderBase BP_GetRecorder(Object WorldContextObject, Object TargetClass) { return Invoke<PalWorldObjectRecorderBase>(nameof(BP_GetRecorder), WorldContextObject, TargetClass); }
    }
    public class PalWorldObjectRecord_MapObjectSpawnerInStage : PalWorldObjectRecorderBase
    {
        public PalWorldObjectRecord_MapObjectSpawnerInStage(nint addr) : base(addr) { }
        public Object RecordDataMapByStageInstanceId { get { return this[nameof(RecordDataMapByStageInstanceId)]; } set { this[nameof(RecordDataMapByStageInstanceId)] = value; } }
    }
    public class PalWorldPartitionLoadingRangeVolume : Actor
    {
        public PalWorldPartitionLoadingRangeVolume(nint addr) : base(addr) { }
        public Object LoadingRangeMap { get { return this[nameof(LoadingRangeMap)]; } set { this[nameof(LoadingRangeMap)] = value; } }
        public void SetOverrideLoadingRange(bool Enable) { Invoke(nameof(SetOverrideLoadingRange), Enable); }
    }
    public class PalWorldSecurityCrimeInstance : Object
    {
        public PalWorldSecurityCrimeInstance(nint addr) : base(addr) { }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public Object CrimeId { get { return this[nameof(CrimeId)]; } set { this[nameof(CrimeId)] = value; } }
        public Guid TargetId { get { return this[nameof(TargetId)].As<Guid>(); } set { this["TargetId"] = value; } }
    }
    public class PalWorldSecurityDefine : BlueprintFunctionLibrary
    {
        public PalWorldSecurityDefine(nint addr) : base(addr) { }
    }
    public class PalWorldSecurityLawBase : Object
    {
        public PalWorldSecurityLawBase(nint addr) : base(addr) { }
        public PalDataTableRowName_CrimeMasterData CrimeId { get { return this[nameof(CrimeId)].As<PalDataTableRowName_CrimeMasterData>(); } set { this["CrimeId"] = value; } }
        public bool bInvalid { get { return this[nameof(bInvalid)].Flag; } set { this[nameof(bInvalid)].Flag = value; } }
        public float CrimeStateMaintainDurationBase { get { return this[nameof(CrimeStateMaintainDurationBase)].GetValue<float>(); } set { this[nameof(CrimeStateMaintainDurationBase)].SetValue<float>(value); } }
        public bool bNotUseReleaseTimer { get { return this[nameof(bNotUseReleaseTimer)].Flag; } set { this[nameof(bNotUseReleaseTimer)].Flag = value; } }
    }
    public class PalWorldSecurityLawTrigger : PalWorldSecurityLawBase
    {
        public PalWorldSecurityLawTrigger(nint addr) : base(addr) { }
    }
    public class PalWorldSecurityLawTrigger_ItemMove : PalWorldSecurityLawTrigger
    {
        public PalWorldSecurityLawTrigger_ItemMove(nint addr) : base(addr) { }
        public void OnNotifiedEvent(PalItemOperationInfo_Move EventInfo) { Invoke(nameof(OnNotifiedEvent), EventInfo); }
        public bool Condition(PalItemOperationInfo_Move EventInfo) { return Invoke<bool>(nameof(Condition), EventInfo); }
    }
    public class PalWorldSecurityLawTrigger_CharacterDamaged : PalWorldSecurityLawTrigger
    {
        public PalWorldSecurityLawTrigger_CharacterDamaged(nint addr) : base(addr) { }
        public void OnNotifiedEvent(PalDamageResult DamageResult) { Invoke(nameof(OnNotifiedEvent), DamageResult); }
        public bool Condition(PalDamageResult DamageResult, PalIndividualCharacterHandle CriminalHandle) { return Invoke<bool>(nameof(Condition), DamageResult, CriminalHandle); }
    }
    public class PalWorldSecurityLawTrigger_AreaInvasion : PalWorldSecurityLawTrigger
    {
        public PalWorldSecurityLawTrigger_AreaInvasion(nint addr) : base(addr) { }
        public void OnNotifiedEventEnd(Actor InvasionActor, Guid AreaInstanceId) { Invoke(nameof(OnNotifiedEventEnd), InvasionActor, AreaInstanceId); }
        public void OnNotifiedEvent(Actor InvasionActor, Guid AreaInstanceId) { Invoke(nameof(OnNotifiedEvent), InvasionActor, AreaInstanceId); }
        public bool Condition(Actor InvasionActor, PalIndividualCharacterHandle CriminalHandle) { return Invoke<bool>(nameof(Condition), InvasionActor, CriminalHandle); }
    }
    public class PalLawUtility : BlueprintFunctionLibrary
    {
        public PalLawUtility(nint addr) : base(addr) { }
        public bool IsEqualsGroupIndividualIdAndSlotIds(Object WorldContextObject, PalInstanceID IndividualId, Array<PalItemSlotId> SlotIds, bool IgnoreNoBelongSlot) { return Invoke<bool>(nameof(IsEqualsGroupIndividualIdAndSlotIds), WorldContextObject, IndividualId, SlotIds, IgnoreNoBelongSlot); }
        public bool ExistOtherGroupFromSlotIds(Object WorldContextObject, PalInstanceID IndividualId, Array<PalItemSlotId> SlotIds, bool IgnoreNoBelongSlot, Guid OutGroupId) { return Invoke<bool>(nameof(ExistOtherGroupFromSlotIds), WorldContextObject, IndividualId, SlotIds, IgnoreNoBelongSlot, OutGroupId); }
    }
    public class PalWorldSecuritySystem : PalWorldSubsystem
    {
        public PalWorldSecuritySystem(nint addr) : base(addr) { }
        public Object OnReportCriminalDelegate { get { return this[nameof(OnReportCriminalDelegate)]; } set { this[nameof(OnReportCriminalDelegate)] = value; } }
        public Object OnReleaseWantedDelegate { get { return this[nameof(OnReleaseWantedDelegate)]; } set { this[nameof(OnReleaseWantedDelegate)] = value; } }
        public Object OnRegisterdAreaTriggerDelegate { get { return this[nameof(OnRegisterdAreaTriggerDelegate)]; } set { this[nameof(OnRegisterdAreaTriggerDelegate)] = value; } }
        public Object LawClassDirectoryPath { get { return this[nameof(LawClassDirectoryPath)]; } set { this[nameof(LawClassDirectoryPath)] = value; } }
        public Array<PalWorldSecurityLawBase> Laws { get { return new Array<PalWorldSecurityLawBase>(this[nameof(Laws)].Address); } }
        public Guid GroupID { get { return this[nameof(GroupID)].As<Guid>(); } set { this["GroupID"] = value; } }
        public Object IndividualCrimeStateMap { get { return this[nameof(IndividualCrimeStateMap)]; } set { this[nameof(IndividualCrimeStateMap)] = value; } }
        public Object IndividualWantedStateMap { get { return this[nameof(IndividualWantedStateMap)]; } set { this[nameof(IndividualWantedStateMap)] = value; } }
        public Object CrimeInstanceMap { get { return this[nameof(CrimeInstanceMap)]; } set { this[nameof(CrimeInstanceMap)] = value; } }
        public Array<Object> WeakTriggerAreaList { get { return new Array<Object>(this[nameof(WeakTriggerAreaList)].Address); } }
        public Object CriminalMap { get { return this[nameof(CriminalMap)]; } set { this[nameof(CriminalMap)] = value; } }
        public void ReportCriminalDelegate__DelegateSignature(PalIndividualCharacterHandle CriminalHandle, PalWorldSecurityWantedStateInfo WantedStateInfo) { Invoke(nameof(ReportCriminalDelegate__DelegateSignature), CriminalHandle, WantedStateInfo); }
        public void ReportCriminal(PalIndividualCharacterHandle CriminalHandle, PalIndividualCharacterHandle ReporterHandle) { Invoke(nameof(ReportCriminal), CriminalHandle, ReporterHandle); }
        public void ReleaseWantedDelegate__DelegateSignature(PalIndividualCharacterHandle CriminalHandle) { Invoke(nameof(ReleaseWantedDelegate__DelegateSignature), CriminalHandle); }
        public void ReleaseWanted(PalIndividualCharacterHandle CriminalHandle) { Invoke(nameof(ReleaseWanted), CriminalHandle); }
        public void ReleaseCrime(PalIndividualCharacterHandle CriminalHandle, Guid CrimeInstanceId) { Invoke(nameof(ReleaseCrime), CriminalHandle, CrimeInstanceId); }
        public void RegisterdAreaTriggerDelegate__DelegateSignature(PalTriggerAreaBase TriggerBase) { Invoke(nameof(RegisterdAreaTriggerDelegate__DelegateSignature), TriggerBase); }
        public PalTriggerAreaBase GetNearestTriggerArea(Vector Location) { return Invoke<PalTriggerAreaBase>(nameof(GetNearestTriggerArea), Location); }
        public Object GetCrimeIdByCrimeInstanceId(Guid CrimeInstanceId) { return Invoke<Object>(nameof(GetCrimeIdByCrimeInstanceId), CrimeInstanceId); }
    }
    public class PalWorldSecurityUtility : BlueprintFunctionLibrary
    {
        public PalWorldSecurityUtility(nint addr) : base(addr) { }
        public bool IsWantedCharacter(PalCharacter Target) { return Invoke<bool>(nameof(IsWantedCharacter), Target); }
        public bool IsCriminalCharacter(PalCharacter Target) { return Invoke<bool>(nameof(IsCriminalCharacter), Target); }
        public bool FindCriminalsInSight(PalCharacter Target, Array<PalCharacter> Criminals) { return Invoke<bool>(nameof(FindCriminalsInSight), Target, Criminals); }
    }
    public class PalWorldSettings : WorldSettings
    {
        public PalWorldSettings(nint addr) : base(addr) { }
        public Object DungeonWorldSubsystemClass { get { return this[nameof(DungeonWorldSubsystemClass)]; } set { this[nameof(DungeonWorldSubsystemClass)] = value; } }
        public Vector DungeonCreateInitialLocation { get { return this[nameof(DungeonCreateInitialLocation)].As<Vector>(); } set { this["DungeonCreateInitialLocation"] = value; } }
        public DataLayerAsset FieldEnvironmentDataLayerAsset { get { return this[nameof(FieldEnvironmentDataLayerAsset)].As<DataLayerAsset>(); } set { this["FieldEnvironmentDataLayerAsset"] = value; } }
        public Object AudioWorldSubsystemClass { get { return this[nameof(AudioWorldSubsystemClass)]; } set { this[nameof(AudioWorldSubsystemClass)] = value; } }
        public bool bIsPalTimerEnabled { get { return this[nameof(bIsPalTimerEnabled)].Flag; } set { this[nameof(bIsPalTimerEnabled)].Flag = value; } }
        public Object OptionWorldSubsystemClass { get { return this[nameof(OptionWorldSubsystemClass)]; } set { this[nameof(OptionWorldSubsystemClass)] = value; } }
        public Object TimeManagerClass { get { return this[nameof(TimeManagerClass)]; } set { this[nameof(TimeManagerClass)] = value; } }
        public Object InvaderManagerClass { get { return this[nameof(InvaderManagerClass)]; } set { this[nameof(InvaderManagerClass)] = value; } }
        public Object IncidentSystemClass { get { return this[nameof(IncidentSystemClass)]; } set { this[nameof(IncidentSystemClass)] = value; } }
        public Object FunnelCharacterManagerClass { get { return this[nameof(FunnelCharacterManagerClass)]; } set { this[nameof(FunnelCharacterManagerClass)] = value; } }
        public bool bRequestCharacterMake { get { return this[nameof(bRequestCharacterMake)].Flag; } set { this[nameof(bRequestCharacterMake)].Flag = value; } }
    }
    public class PalGameSystemNeedWorldSync : Interface
    {
        public PalGameSystemNeedWorldSync(nint addr) : base(addr) { }
    }
    public class PaRichTextDecorator_KeyGuideIcon : RichTextBlockDecorator
    {
        public PaRichTextDecorator_KeyGuideIcon(nint addr) : base(addr) { }
        public Object GetTextStringInternal(Object WorldContextObject, Object ID) { return Invoke<Object>(nameof(GetTextStringInternal), WorldContextObject, ID); }
        public Widget CreateWidget(Object KeyGuideActionName, float IconScale, int OverrideType) { return Invoke<Widget>(nameof(CreateWidget), KeyGuideActionName, IconScale, OverrideType); }
    }
    public class ReactivePropertyFloatUtility : Object
    {
        public ReactivePropertyFloatUtility(nint addr) : base(addr) { }
        public void BindProperty(ReactivePropertyFloat Property, Object Delegate) { Invoke(nameof(BindProperty), Property, Delegate); }
    }
    public enum EPalBossType : int
    {
        None = 0,
        GrassBoss = 1,
        ElectricBoss = 2,
        ForestBoss = 3,
        SnowBoss = 4,
        DesertBoss = 5,
        EPalBossType_MAX = 6,
    }
    public enum EPalBossBattleState : int
    {
        Open = 0,
        PreBattle = 1,
        InBattle = 2,
        AfterBattle = 3,
        EPalBossBattleState_MAX = 4,
    }
    public class PalDamageInfo : Object
    {
        public PalDamageInfo(nint addr) : base(addr) { }
        public int NativeDamageValue { get { return this[nameof(NativeDamageValue)].GetValue<int>(); } set { this[nameof(NativeDamageValue)].SetValue<int>(value); } }
        public EPalWazaCategory Category { get { return (EPalWazaCategory)this[nameof(Category)].GetValue<int>(); } set { this[nameof(Category)].SetValue<int>((int)value); } }
        public bool IsBlowAttack { get { return this[nameof(IsBlowAttack)].Flag; } set { this[nameof(IsBlowAttack)].Flag = value; } }
        public bool IsLeanBack { get { return this[nameof(IsLeanBack)].Flag; } set { this[nameof(IsLeanBack)].Flag = value; } }
        public Vector BlowVelocity { get { return this[nameof(BlowVelocity)].As<Vector>(); } set { this["BlowVelocity"] = value; } }
        public EPalBodyPartsType BodyPartsType { get { return (EPalBodyPartsType)this[nameof(BodyPartsType)].GetValue<int>(); } set { this[nameof(BodyPartsType)].SetValue<int>((int)value); } }
        public int AttackerLevel { get { return this[nameof(AttackerLevel)].GetValue<int>(); } set { this[nameof(AttackerLevel)].SetValue<int>(value); } }
        public EPalElementType AttackElementType { get { return (EPalElementType)this[nameof(AttackElementType)].GetValue<int>(); } set { this[nameof(AttackElementType)].SetValue<int>((int)value); } }
        public Guid AttackerGroupID { get { return this[nameof(AttackerGroupID)].As<Guid>(); } set { this["AttackerGroupID"] = value; } }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
        public Actor OverrideNetworkOwner { get { return this[nameof(OverrideNetworkOwner)].As<Actor>(); } set { this["OverrideNetworkOwner"] = value; } }
        public EPalAttackType AttackType { get { return (EPalAttackType)this[nameof(AttackType)].GetValue<int>(); } set { this[nameof(AttackType)].SetValue<int>((int)value); } }
        public Vector HitLocation { get { return this[nameof(HitLocation)].As<Vector>(); } set { this["HitLocation"] = value; } }
        public Object FoliageModelId { get { return this[nameof(FoliageModelId)]; } set { this[nameof(FoliageModelId)] = value; } }
        public Array<PalFoliageInstanceId> FoliageInstanceIds { get { return new Array<PalFoliageInstanceId>(this[nameof(FoliageInstanceIds)].Address); } }
        public EPalAdditionalEffectType EffectType1 { get { return (EPalAdditionalEffectType)this[nameof(EffectType1)].GetValue<int>(); } set { this[nameof(EffectType1)].SetValue<int>((int)value); } }
        public int EffectValue1 { get { return this[nameof(EffectValue1)].GetValue<int>(); } set { this[nameof(EffectValue1)].SetValue<int>(value); } }
        public float EffectValueEx1 { get { return this[nameof(EffectValueEx1)].GetValue<float>(); } set { this[nameof(EffectValueEx1)].SetValue<float>(value); } }
        public EPalAdditionalEffectType EffectType2 { get { return (EPalAdditionalEffectType)this[nameof(EffectType2)].GetValue<int>(); } set { this[nameof(EffectType2)].SetValue<int>((int)value); } }
        public int EffectValue2 { get { return this[nameof(EffectValue2)].GetValue<int>(); } set { this[nameof(EffectValue2)].SetValue<int>(value); } }
        public float EffectValueEx2 { get { return this[nameof(EffectValueEx2)].GetValue<float>(); } set { this[nameof(EffectValueEx2)].SetValue<float>(value); } }
        public float SneakAttackRate { get { return this[nameof(SneakAttackRate)].GetValue<float>(); } set { this[nameof(SneakAttackRate)].SetValue<float>(value); } }
        public bool PlaySneakAttackEffect { get { return this[nameof(PlaySneakAttackEffect)].Flag; } set { this[nameof(PlaySneakAttackEffect)].Flag = value; } }
        public float DamageRatePerCollision { get { return this[nameof(DamageRatePerCollision)].GetValue<float>(); } set { this[nameof(DamageRatePerCollision)].SetValue<float>(value); } }
        public Array<PalSpecialAttackRateInfo> SpecialAttackRateInfos { get { return new Array<PalSpecialAttackRateInfo>(this[nameof(SpecialAttackRateInfos)].Address); } }
        public EPalDamageAnimationReactionType DamageReactionAnimationType { get { return (EPalDamageAnimationReactionType)this[nameof(DamageReactionAnimationType)].GetValue<int>(); } set { this[nameof(DamageReactionAnimationType)].SetValue<int>((int)value); } }
        public bool bAttackableToFriend { get { return this[nameof(bAttackableToFriend)].Flag; } set { this[nameof(bAttackableToFriend)].Flag = value; } }
        public bool NoDamage { get { return this[nameof(NoDamage)].Flag; } set { this[nameof(NoDamage)].Flag = value; } }
        public bool IgnoreShield { get { return this[nameof(IgnoreShield)].Flag; } set { this[nameof(IgnoreShield)].Flag = value; } }
        public bool UIDamageTextOverride_DoubleRegist { get { return this[nameof(UIDamageTextOverride_DoubleRegist)].Flag; } set { this[nameof(UIDamageTextOverride_DoubleRegist)].Flag = value; } }
        public EPalPlayerDamageCameraShakeCategory CameraShake { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(CameraShake)].GetValue<int>(); } set { this[nameof(CameraShake)].SetValue<int>((int)value); } }
        public EPalSizeType ForceRagdollSize { get { return (EPalSizeType)this[nameof(ForceRagdollSize)].GetValue<int>(); } set { this[nameof(ForceRagdollSize)].SetValue<int>((int)value); } }
        public bool bApplyNativeDamageValue { get { return this[nameof(bApplyNativeDamageValue)].Flag; } set { this[nameof(bApplyNativeDamageValue)].Flag = value; } }
        public bool IgnorePlayerEquipItemDamage { get { return this[nameof(IgnorePlayerEquipItemDamage)].Flag; } set { this[nameof(IgnorePlayerEquipItemDamage)].Flag = value; } }
    }
    public enum EPalSizeType : int
    {
        None = 0,
        XS = 1,
        S = 2,
        M = 3,
        L = 4,
        XL = 5,
        EPalSizeType_MAX = 6,
    }
    public enum EPalPlayerDamageCameraShakeCategory : int
    {
        None = 0,
        Waza_S = 1,
        Waza_M = 2,
        Waza_L = 3,
        Gun_S = 4,
        Gun_M = 5,
        Gun_L = 6,
        Melee = 7,
        EPalPlayerDamageCameraShakeCategory_MAX = 8,
    }
    public enum EPalDamageAnimationReactionType : int
    {
        None = 0,
        Small = 1,
        Big = 2,
        EPalDamageAnimationReactionType_MAX = 3,
    }
    public class PalSpecialAttackRateInfo : Object
    {
        public PalSpecialAttackRateInfo(nint addr) : base(addr) { }
        public EPalSpecialAttackRateType Type { get { return (EPalSpecialAttackRateType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public float Rate { get { return this[nameof(Rate)].GetValue<float>(); } set { this[nameof(Rate)].SetValue<float>(value); } }
    }
    public enum EPalSpecialAttackRateType : int
    {
        None = 0,
        vsWood = 1,
        vsStone = 2,
        EPalSpecialAttackRateType_MAX = 3,
    }
    public enum EPalAdditionalEffectType : int
    {
        None = 0,
        Stun = 1,
        Sleep = 2,
        Poison = 3,
        Burn = 4,
        Wetness = 5,
        Freeze = 6,
        Electrical = 7,
        Muddy = 8,
        IvyCling = 9,
        Darkness = 10,
        AttackUp = 11,
        DefenseUp = 12,
        Recovery = 13,
        Trap_LegHold = 14,
        EPalAdditionalEffectType_MAX = 15,
    }
    public class PalFoliageInstanceId : Object
    {
        public PalFoliageInstanceId(nint addr) : base(addr) { }
        public Guid Guid { get { return this[nameof(Guid)].As<Guid>(); } set { this["Guid"] = value; } }
    }
    public enum EPalAttackType : int
    {
        Waza = 0,
        Weapon = 1,
        Turret = 2,
        SlipDamage = 3,
        Mine = 4,
        EPalAttackType_MAX = 5,
    }
    public enum EPalElementType : int
    {
        None = 0,
        Normal = 1,
        Fire = 2,
        Water = 3,
        Leaf = 4,
        Electricity = 5,
        Ice = 6,
        Earth = 7,
        Dark = 8,
        Dragon = 9,
        MAX = 10,
    }
    public enum EPalBodyPartsType : int
    {
        Weak = 0,
        Normal = 1,
        Strong = 2,
        Invincible = 3,
        EPalBodyPartsType_MAX = 4,
    }
    public enum EPalWazaCategory : int
    {
        Melee = 0,
        Shot = 1,
        Support = 2,
        EPalWazaCategory_MAX = 3,
    }
    public class PalMapObjectDisposeOptions : Object
    {
        public PalMapObjectDisposeOptions(nint addr) : base(addr) { }
    }
    public enum EPalHUDDisplayType : int
    {
        Undefined = 0,
        DamegeReact = 1,
        InteractOn = 2,
        InteractOff = 3,
        EPalHUDDisplayType_MAX = 4,
    }
    public enum EPalMapObjectGetModelOutPinType : int
    {
        Success = 0,
        Failed = 1,
        EPalMapObjectGetModelOutPinType_MAX = 2,
    }
    public enum EPalMapObjectChangeMeshFXType : int
    {
        None = 0,
        RockDestroyProgress = 1,
        EPalMapObjectChangeMeshFXType_MAX = 2,
    }
    public class PalMapObjectMeshVisibleData : Object
    {
        public PalMapObjectMeshVisibleData(nint addr) : base(addr) { }
        public ComponentReference MeshComponentRef { get { return this[nameof(MeshComponentRef)].As<ComponentReference>(); } set { this["MeshComponentRef"] = value; } }
        public float VisibleHpPercentageThreshold { get { return this[nameof(VisibleHpPercentageThreshold)].GetValue<float>(); } set { this[nameof(VisibleHpPercentageThreshold)].SetValue<float>(value); } }
    }
    public enum EPalMapObjectDamagableType : int
    {
        AllRecieve = 0,
        OtherGroup = 1,
        NoDamage = 2,
        EPalMapObjectDamagableType_MAX = 3,
    }
    public enum EPalMapObjectDestroyFXType : int
    {
        None = 0,
        Normal = 1,
        NormalWood = 2,
        NormalRock = 3,
        NormalMetal = 4,
        FoliageTree = 5,
        Pickup = 6,
        Pickup_Wood = 7,
        Pickup_Stone = 8,
        Pickup_Berry = 9,
        LowTree = 10,
        Rock = 11,
        EPalMapObjectDestroyFXType_MAX = 12,
    }
    public enum EPalBuildObjectState : int
    {
        Init = 0,
        Simulation = 1,
        Building = 2,
        Available = 3,
        NotAvailable = 4,
        EPalBuildObjectState_MAX = 5,
    }
    public enum EPalInteractiveObjectIndicatorType : int
    {
        None = 0,
        Build = 1,
        BuildCancel = 2,
        Work = 3,
        Open = 4,
        OpenCraftMenu = 5,
        OpenConverterMenu = 6,
        OpenBaseCampMenu = 7,
        OpenBaseCampTaskMenu = 8,
        OpenPalBoxMenu = 9,
        OpenPalRankUp = 10,
        Collect = 11,
        Pickup = 12,
        SelectCrop = 13,
        Seeding = 14,
        Watering = 15,
        Harvest = 16,
        OpenPalMedicalBedMenu = 17,
        SleepPlayerBed = 18,
        GetupPlayerBed = 19,
        OpenDetailMenu = 20,
        SelectRecipe = 21,
        PickupProduct = 22,
        Mining = 23,
        UnlockFastTravel = 24,
        FastTravel = 25,
        UnuseFastTravel = 26,
        Obtain = 27,
        SetEgg = 28,
        StoreAll = 29,
        ObtainAll = 30,
        RecoveryAllOtomo = 31,
        Liftup = 32,
        MoveToWorker = 33,
        MoveToPalBox = 34,
        OpenWorkerMenu = 35,
        CoopAction = 36,
        Talk = 37,
        EnterDungeon = 38,
        ExitDungeon = 39,
        EntryBossBattle = 40,
        EntryBossBattleFullMember = 41,
        StartBossBattle = 42,
        Resuscitation = 43,
        Repair = 44,
        StatusOperator_Player = 45,
        StatusOperator_Pal = 46,
        Ignition = 47,
        OpenDoor = 48,
        CloseDoor = 49,
        OpenMenu_SecuritySetting = 50,
        InputPassword = 51,
        InputPassword_CannotTry = 52,
        SelectRepairTarget = 53,
        CancelWork = 54,
        WaitForReplication = 55,
        RequestJoinGuild = 56,
        Signboard = 57,
        OpenCaptureCage = 58,
        ChangeBaseCampBattleType_AttackToEnemyInBaseCamp = 59,
        ChangeBaseCampBattleType_NoBattle = 60,
        Uninteractable = 61,
        Test_Warp = 62,
        DevTest_2 = 63,
        DevTest_3 = 64,
        DevTest_4 = 65,
        DevTest_5 = 66,
        EPalInteractiveObjectIndicatorType_MAX = 67,
    }
    public class PalBuildObjectMeshDefaultSetting : Object
    {
        public PalBuildObjectMeshDefaultSetting(nint addr) : base(addr) { }
        public Object ProfileName { get { return this[nameof(ProfileName)]; } set { this[nameof(ProfileName)] = value; } }
    }
    public enum EPalBuildObjectInstallStrategy : int
    {
        Normal = 0,
        WallV2 = 1,
        SinkableNormal = 2,
        Foundation = 3,
        Roof = 4,
        Stairs = 5,
        GroundWall = 6,
        BaseCampPoint = 7,
        AttachToWall = 8,
        AttachToCeil = 9,
        PalStorage = 10,
        Floor = 11,
        Wall = 12,
        Undefined = 13,
        EPalBuildObjectInstallStrategy_MAX = 14,
    }
    public class PalInstanceID : Object
    {
        public PalInstanceID(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public Object DebugName { get { return this[nameof(DebugName)]; } set { this[nameof(DebugName)] = value; } }
    }
    public enum EPalPassiveSkillEffectType : int
    {
        no = 0,
        MaxHP = 1,
        MeleeAttack = 2,
        ShotAttack = 3,
        Defense = 4,
        Support = 5,
        CraftSpeed = 6,
        MoveSpeed = 7,
        Homing = 8,
        Explosive = 9,
        BulletSpeed = 10,
        BulletAccuracy = 11,
        Recoil = 12,
        ElementFire = 13,
        ElementWater = 14,
        ElementLeaf = 15,
        ElementElectricity = 16,
        ElementIce = 17,
        ElementEarth = 18,
        ElementDark = 19,
        ElementDragon = 20,
        ElementResist_Normal = 21,
        ElementResist_Fire = 22,
        ElementResist_Water = 23,
        ElementResist_Leaf = 24,
        ElementResist_Electricity = 25,
        ElementResist_Ice = 26,
        ElementResist_Earth = 27,
        ElementResist_Dark = 28,
        ElementResist_Dragon = 29,
        ElementBoost_Normal = 30,
        ElementBoost_Fire = 31,
        ElementBoost_Water = 32,
        ElementBoost_Leaf = 33,
        ElementBoost_Electricity = 34,
        ElementBoost_Ice = 35,
        ElementBoost_Earth = 36,
        ElementBoost_Dark = 37,
        ElementBoost_Dragon = 38,
        ElementAddItemDrop_Normal = 39,
        ElementAddItemDrop_Fire = 40,
        ElementAddItemDrop_Water = 41,
        ElementAddItemDrop_Leaf = 42,
        ElementAddItemDrop_Electricity = 43,
        ElementAddItemDrop_Ice = 44,
        ElementAddItemDrop_Earth = 45,
        ElementAddItemDrop_Dark = 46,
        ElementAddItemDrop_Dragon = 47,
        CollectItem = 48,
        Mute = 49,
        Logging = 50,
        Mining = 51,
        GainItemDrop = 52,
        LifeSteal = 53,
        TemperatureResist_Heat = 54,
        TemperatureResist_Cold = 55,
        TemperatureInvalid_Heat = 56,
        TemperatureInvalid_Cold = 57,
        MaxInventoryWeight = 58,
        FullStomatch_Decrease = 59,
        Sanity_Decrease = 60,
        BodyPartsWeakDamage = 61,
        EPalPassiveSkillEffectType_MAX = 62,
    }
    public class PalPassiveSkillEffect : Object
    {
        public PalPassiveSkillEffect(nint addr) : base(addr) { }
        public EPalPassiveSkillEffectType Type { get { return (EPalPassiveSkillEffectType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public float Value { get { return this[nameof(Value)].GetValue<float>(); } set { this[nameof(Value)].SetValue<float>(value); } }
        public Array<Object> Flags { get { return new Array<Object>(this[nameof(Flags)].Address); } }
    }
    public class BulletHoleDecalInfo : Object
    {
        public BulletHoleDecalInfo(nint addr) : base(addr) { }
        public Array<MaterialInterface> BulletHoleDecals { get { return new Array<MaterialInterface>(this[nameof(BulletHoleDecals)].Address); } }
        public Vector Decal_Size { get { return this[nameof(Decal_Size)].As<Vector>(); } set { this["Decal_Size"] = value; } }
        public float Decal_Size_RandomMin { get { return this[nameof(Decal_Size_RandomMin)].GetValue<float>(); } set { this[nameof(Decal_Size_RandomMin)].SetValue<float>(value); } }
        public float Decal_Size_RandomMax { get { return this[nameof(Decal_Size_RandomMax)].GetValue<float>(); } set { this[nameof(Decal_Size_RandomMax)].SetValue<float>(value); } }
    }
    public enum EPalCharacterCompleteDelegatePriority : int
    {
        SetTrainer = 0,
        Default = 1,
        PostDefault = 2,
        EPalCharacterCompleteDelegatePriority_MAX = 3,
    }
    public enum EPalCharacterImportanceType : int
    {
        Undefined = 0,
        AllUpdate = 1,
        Nearest = 2,
        Near = 3,
        MidInSight = 4,
        FarInSight = 5,
        MidOutSight = 6,
        FarOutSight = 7,
        Farthest = 8,
        EPalCharacterImportanceType_MAX = 9,
    }
    public class FixedPoint : Object
    {
        public FixedPoint(nint addr) : base(addr) { }
        public int Value { get { return this[nameof(Value)].GetValue<int>(); } set { this[nameof(Value)].SetValue<int>(value); } }
    }
    public class FlagContainer : Object
    {
        public FlagContainer(nint addr) : base(addr) { }
        public Object Flags { get { return this[nameof(Flags)]; } set { this[nameof(Flags)] = value; } }
    }
    public enum EPalDungeonEnemySpawnerRankType : int
    {
        None = 0,
        Normal = 1,
        Boss = 2,
        EPalDungeonEnemySpawnerRankType_MAX = 3,
    }
    public class PalChatMessage : Object
    {
        public PalChatMessage(nint addr) : base(addr) { }
        public EPalChatCategory Category { get { return (EPalChatCategory)this[nameof(Category)].GetValue<int>(); } set { this[nameof(Category)].SetValue<int>((int)value); } }
        public Object Sender { get { return this[nameof(Sender)]; } set { this[nameof(Sender)] = value; } }
        public Guid SenderPlayerUId { get { return this[nameof(SenderPlayerUId)].As<Guid>(); } set { this["SenderPlayerUId"] = value; } }
        public Object Message { get { return this[nameof(Message)]; } set { this[nameof(Message)] = value; } }
        public Guid ReceiverPlayerUId { get { return this[nameof(ReceiverPlayerUId)].As<Guid>(); } set { this["ReceiverPlayerUId"] = value; } }
    }
    public enum EPalChatCategory : int
    {
        None = 0,
        Global = 1,
        Guild = 2,
        Say = 3,
        EPalChatCategory_MAX = 4,
    }
    public class GameDateTime : Object
    {
        public GameDateTime(nint addr) : base(addr) { }
        public long Ticks { get { return this[nameof(Ticks)].GetValue<long>(); } set { this[nameof(Ticks)].SetValue<long>(value); } }
    }
    public enum EPalCheckSpawnResultType : int
    {
        Ignore = 0,
        Spawn = 1,
        Despawn = 2,
        EPalCheckSpawnResultType_MAX = 3,
    }
    public class PalSpawnerGroupInfo : Object
    {
        public PalSpawnerGroupInfo(nint addr) : base(addr) { }
        public int Weight { get { return this[nameof(Weight)].GetValue<int>(); } set { this[nameof(Weight)].SetValue<int>(value); } }
        public EPalOneDayTimeType OnlyTime { get { return (EPalOneDayTimeType)this[nameof(OnlyTime)].GetValue<int>(); } set { this[nameof(OnlyTime)].SetValue<int>((int)value); } }
        public EPalWeatherConditionType OnlyWeather { get { return (EPalWeatherConditionType)this[nameof(OnlyWeather)].GetValue<int>(); } set { this[nameof(OnlyWeather)].SetValue<int>((int)value); } }
        public Array<PalSpawnerOneTribeInfo> PalList { get { return new Array<PalSpawnerOneTribeInfo>(this[nameof(PalList)].Address); } }
    }
    public class PalSpawnerOneTribeInfo : Object
    {
        public PalSpawnerOneTribeInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData PalID { get { return this[nameof(PalID)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalID"] = value; } }
        public PalDataTableRowName_PalHumanData NPCID { get { return this[nameof(NPCID)].As<PalDataTableRowName_PalHumanData>(); } set { this["NPCID"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int Level_Max { get { return this[nameof(Level_Max)].GetValue<int>(); } set { this[nameof(Level_Max)].SetValue<int>(value); } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
        public int Num_Max { get { return this[nameof(Num_Max)].GetValue<int>(); } set { this[nameof(Num_Max)].SetValue<int>(value); } }
    }
    public class PalDataTableRowName_PalHumanData : Object
    {
        public PalDataTableRowName_PalHumanData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_PalMonsterData : Object
    {
        public PalDataTableRowName_PalMonsterData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalWeatherConditionType : int
    {
        Undefined = 0,
        Sun = 1,
        Cloud = 2,
        Rain = 3,
        Thunder = 4,
        Snow = 5,
        Fog = 6,
        Storm = 7,
        Snowstorm = 8,
        EPalWeatherConditionType_MAX = 9,
    }
    public enum EPalOneDayTimeType : int
    {
        Undefined = 0,
        Day = 1,
        Night = 2,
        EPalOneDayTimeType_MAX = 3,
    }
    public enum EPalSpwnerImportanceType : int
    {
        Undefined = 0,
        AllUpdate = 1,
        Near = 2,
        Mid = 3,
        Far = 4,
        EPalSpwnerImportanceType_MAX = 5,
    }
    public enum EPalSpawnRadiusType : int
    {
        S = 0,
        M = 1,
        L = 2,
        NPC = 3,
        Override = 4,
        EPalSpawnRadiusType_MAX = 5,
    }
    public class PalPlayerDataCharacterMakeInfo : Object
    {
        public PalPlayerDataCharacterMakeInfo(nint addr) : base(addr) { }
        public Object BodyMeshName { get { return this[nameof(BodyMeshName)]; } set { this[nameof(BodyMeshName)] = value; } }
        public Object HeadMeshName { get { return this[nameof(HeadMeshName)]; } set { this[nameof(HeadMeshName)] = value; } }
        public Object HairMeshName { get { return this[nameof(HairMeshName)]; } set { this[nameof(HairMeshName)] = value; } }
        public Object EquipmentBodyMeshName { get { return this[nameof(EquipmentBodyMeshName)]; } set { this[nameof(EquipmentBodyMeshName)] = value; } }
        public Object EquipmentHeadMeshName { get { return this[nameof(EquipmentHeadMeshName)]; } set { this[nameof(EquipmentHeadMeshName)] = value; } }
        public bool DisableEquipmentHeadFlag { get { return this[nameof(DisableEquipmentHeadFlag)].Flag; } set { this[nameof(DisableEquipmentHeadFlag)].Flag = value; } }
        public float ArmVolume { get { return this[nameof(ArmVolume)].GetValue<float>(); } set { this[nameof(ArmVolume)].SetValue<float>(value); } }
        public float TorsoVolume { get { return this[nameof(TorsoVolume)].GetValue<float>(); } set { this[nameof(TorsoVolume)].SetValue<float>(value); } }
        public float LegVolume { get { return this[nameof(LegVolume)].GetValue<float>(); } set { this[nameof(LegVolume)].SetValue<float>(value); } }
        public LinearColor HairColor { get { return this[nameof(HairColor)].As<LinearColor>(); } set { this["HairColor"] = value; } }
        public LinearColor BrowColor { get { return this[nameof(BrowColor)].As<LinearColor>(); } set { this["BrowColor"] = value; } }
        public LinearColor BodyColor { get { return this[nameof(BodyColor)].As<LinearColor>(); } set { this["BodyColor"] = value; } }
        public LinearColor BodySubsurfaceColor { get { return this[nameof(BodySubsurfaceColor)].As<LinearColor>(); } set { this["BodySubsurfaceColor"] = value; } }
        public LinearColor EyeColor { get { return this[nameof(EyeColor)].As<LinearColor>(); } set { this["EyeColor"] = value; } }
        public Object EyeMaterialName { get { return this[nameof(EyeMaterialName)]; } set { this[nameof(EyeMaterialName)] = value; } }
        public int VoiceID { get { return this[nameof(VoiceID)].GetValue<int>(); } set { this[nameof(VoiceID)].SetValue<int>(value); } }
    }
    public enum EPalBattleBGMType : int
    {
        None = 0,
        Cute = 1,
        Cool = 2,
        Strong = 3,
        Human_Common = 4,
        Human_Villain = 5,
        FieldBoss = 6,
        Legend = 7,
        TowerBoss = 8,
        EPalBattleBGMType_MAX = 9,
    }
    public enum EPalCharacterMovementCustomMode : int
    {
        None = 0,
        Fatigue = 1,
        Sprint = 2,
        Sliding = 3,
        Glider = 4,
        Climbing = 5,
        Riding = 6,
        Rolling = 7,
        EPalCharacterMovementCustomMode_MAX = 8,
    }
    public enum EPalPlayerBattleFinishType : int
    {
        Undefined = 0,
        Escape = 1,
        Victory = 2,
        Capture = 3,
        EPalPlayerBattleFinishType_MAX = 4,
    }
    public class PalDamageResult : Object
    {
        public PalDamageResult(nint addr) : base(addr) { }
        public int Damage { get { return this[nameof(Damage)].GetValue<int>(); } set { this[nameof(Damage)].SetValue<int>(value); } }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
        public Actor Defender { get { return this[nameof(Defender)].As<Actor>(); } set { this["Defender"] = value; } }
        public Vector BlowVelocity { get { return this[nameof(BlowVelocity)].As<Vector>(); } set { this["BlowVelocity"] = value; } }
        public Vector HitLocation { get { return this[nameof(HitLocation)].As<Vector>(); } set { this["HitLocation"] = value; } }
        public EPalDamageAnimationReactionType DamageReactionAnimationType { get { return (EPalDamageAnimationReactionType)this[nameof(DamageReactionAnimationType)].GetValue<int>(); } set { this[nameof(DamageReactionAnimationType)].SetValue<int>((int)value); } }
        public bool IgnoreShield { get { return this[nameof(IgnoreShield)].Flag; } set { this[nameof(IgnoreShield)].Flag = value; } }
        public bool IsPlayedLeanBack { get { return this[nameof(IsPlayedLeanBack)].Flag; } set { this[nameof(IsPlayedLeanBack)].Flag = value; } }
        public EPalPlayerDamageCameraShakeCategory CameraShake { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(CameraShake)].GetValue<int>(); } set { this[nameof(CameraShake)].SetValue<int>((int)value); } }
        public bool IgnorePlayerEquipItemDamage { get { return this[nameof(IgnorePlayerEquipItemDamage)].Flag; } set { this[nameof(IgnorePlayerEquipItemDamage)].Flag = value; } }
    }
    public enum EPalStepAxisType : int
    {
        Forward = 0,
        Back = 1,
        Right = 2,
        Left = 3,
        ForwardRight = 4,
        ForwardLeft = 5,
        BackRight = 6,
        BackLeft = 7,
        EPalStepAxisType_MAX = 8,
    }
    public class PalOptionKeyboardSettings : Object
    {
        public PalOptionKeyboardSettings(nint addr) : base(addr) { }
        public bool bIsDashHold { get { return this[nameof(bIsDashHold)].Flag; } set { this[nameof(bIsDashHold)].Flag = value; } }
        public float MouseSensitivity { get { return this[nameof(MouseSensitivity)].GetValue<float>(); } set { this[nameof(MouseSensitivity)].SetValue<float>(value); } }
        public float MouseAimSensitivity { get { return this[nameof(MouseAimSensitivity)].GetValue<float>(); } set { this[nameof(MouseAimSensitivity)].SetValue<float>(value); } }
        public bool bIsReverseYaw { get { return this[nameof(bIsReverseYaw)].Flag; } set { this[nameof(bIsReverseYaw)].Flag = value; } }
        public bool bIsReversePitch { get { return this[nameof(bIsReversePitch)].Flag; } set { this[nameof(bIsReversePitch)].Flag = value; } }
        public bool bEnableAimAssist { get { return this[nameof(bEnableAimAssist)].Flag; } set { this[nameof(bEnableAimAssist)].Flag = value; } }
        public bool bShowChat { get { return this[nameof(bShowChat)].Flag; } set { this[nameof(bShowChat)].Flag = value; } }
    }
    public class PalOptionPadSettings : Object
    {
        public PalOptionPadSettings(nint addr) : base(addr) { }
        public bool bIsDashHold { get { return this[nameof(bIsDashHold)].Flag; } set { this[nameof(bIsDashHold)].Flag = value; } }
        public float LeftStickThreshold { get { return this[nameof(LeftStickThreshold)].GetValue<float>(); } set { this[nameof(LeftStickThreshold)].SetValue<float>(value); } }
        public float RightStickSensitivity { get { return this[nameof(RightStickSensitivity)].GetValue<float>(); } set { this[nameof(RightStickSensitivity)].SetValue<float>(value); } }
        public float RightStickAimSensitivity { get { return this[nameof(RightStickAimSensitivity)].GetValue<float>(); } set { this[nameof(RightStickAimSensitivity)].SetValue<float>(value); } }
        public float RightStickThreshold { get { return this[nameof(RightStickThreshold)].GetValue<float>(); } set { this[nameof(RightStickThreshold)].SetValue<float>(value); } }
        public bool bIsRightStickReverseYaw { get { return this[nameof(bIsRightStickReverseYaw)].Flag; } set { this[nameof(bIsRightStickReverseYaw)].Flag = value; } }
        public bool bIsRightStickReversePitch { get { return this[nameof(bIsRightStickReversePitch)].Flag; } set { this[nameof(bIsRightStickReversePitch)].Flag = value; } }
        public bool bEnableVibration { get { return this[nameof(bEnableVibration)].Flag; } set { this[nameof(bEnableVibration)].Flag = value; } }
        public bool bEnableAimAssist { get { return this[nameof(bEnableAimAssist)].Flag; } set { this[nameof(bEnableAimAssist)].Flag = value; } }
    }
    public enum EWeaponNotifyType : int
    {
        None = 0,
        Shoot = 1,
        ThrowRequest = 2,
        RequestReload = 3,
        ShootComplated = 4,
        EWeaponNotifyType_MAX = 5,
    }
    public enum EPalLiftupRequestResult : int
    {
        Success = 0,
        FailedNotExistsLiftupComponent = 1,
        FailedInvalidPlayerIdInController = 2,
        FailedInvalidDefaultCharacterInController = 3,
        FailedDisabledLiftup = 4,
        FailedInvalidRequestPlayerId = 5,
        FailedAlreadyLiftingActor = 6,
        FailedCharacterParameter = 7,
        FailedIndividualCharacterParameter = 8,
        FailedAlreadyLocked = 9,
        FailedSleeping = 10,
        EPalLiftupRequestResult_MAX = 11,
    }
    public class PalLogAdditionalData : Object
    {
        public PalLogAdditionalData(nint addr) : base(addr) { }
        public Array<Object> softTextures { get { return new Array<Object>(this[nameof(softTextures)].Address); } }
        public EPalLogContentToneType logToneType { get { return (EPalLogContentToneType)this[nameof(logToneType)].GetValue<int>(); } set { this[nameof(logToneType)].SetValue<int>((int)value); } }
        public Object DefaultFontStyleName { get { return this[nameof(DefaultFontStyleName)]; } set { this[nameof(DefaultFontStyleName)] = value; } }
        public Object overrideWidgetClass { get { return this[nameof(overrideWidgetClass)]; } set { this[nameof(overrideWidgetClass)] = value; } }
        public PalStaticItemIdAndNum ItemIDAndNum { get { return this[nameof(ItemIDAndNum)].As<PalStaticItemIdAndNum>(); } set { this["ItemIDAndNum"] = value; } }
    }
    public class PalStaticItemIdAndNum : Object
    {
        public PalStaticItemIdAndNum(nint addr) : base(addr) { }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public enum EPalLogContentToneType : int
    {
        Normal = 0,
        Negative = 1,
        Positive = 2,
        EPalLogContentToneType_MAX = 3,
    }
    public enum EPalLogPriority : int
    {
        None = 0,
        Normal = 1,
        Important = 2,
        VeryImportant = 3,
        EPalLogPriority_MAX = 4,
    }
    public class DelegateTickFunction : TickFunction
    {
        public DelegateTickFunction(nint addr) : base(addr) { }
    }
    public class PalUIPalCaptureInfo : Object
    {
        public PalUIPalCaptureInfo(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public int CaptureCount { get { return this[nameof(CaptureCount)].GetValue<int>(); } set { this[nameof(CaptureCount)].SetValue<int>(value); } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public Array<Object> PassiveSkillNameList { get { return new Array<Object>(this[nameof(PassiveSkillNameList)].Address); } }
        public bool IsRarePal { get { return this[nameof(IsRarePal)].Flag; } set { this[nameof(IsRarePal)].Flag = value; } }
        public bool IsUnlockedPaldeck { get { return this[nameof(IsUnlockedPaldeck)].Flag; } set { this[nameof(IsUnlockedPaldeck)].Flag = value; } }
    }
    public class PalDebugOtomoPalInfo : Object
    {
        public PalDebugOtomoPalInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData PalName { get { return this[nameof(PalName)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalName"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public Array<EPalWazaID> WazaList { get { return new Array<EPalWazaID>(this[nameof(WazaList)].Address); } }
        public Array<PalDataTableRowName_PassiveSkillData> PassiveSkill { get { return new Array<PalDataTableRowName_PassiveSkillData>(this[nameof(PassiveSkill)].Address); } }
    }
    public class PalDataTableRowName_PassiveSkillData : Object
    {
        public PalDataTableRowName_PassiveSkillData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalWazaID : int
    {
        None = 0,
        Human_Punch = 1,
        WorkAttack = 2,
        Throw = 3,
        Scratch = 4,
        EnergyShot = 5,
        Unique_Anubis_LowRoundKick = 6,
        Unique_Anubis_GroundPunch = 7,
        Unique_Anubis_Tackle = 8,
        Unique_Deer_PushupHorn = 9,
        HyperBeam = 10,
        PowerShot = 11,
        PowerBall = 12,
        Unique_Garm_Bite = 13,
        Intimidate = 14,
        Unique_Boar_Tackle = 15,
        Unique_PinkCat_CatPunch = 16,
        Unique_FlowerDinosaur_Whip = 17,
        Unique_SheepBall_Roll = 18,
        Unique_ChickenPal_ChickenPeck = 19,
        Unique_Gorilla_GroundPunch = 20,
        Unique_Grassmammoth_Earthquake = 21,
        AirCanon = 22,
        Unique_GrassPanda_MusclePunch = 23,
        Unique_RobinHood_BowSnipe = 24,
        Unique_Alpaca_Tackle = 25,
        Unique_KingAlpaca_BodyPress = 26,
        Unique_Werewolf_Scratch = 27,
        Unique_FengyunDeeper_CloudTempest = 28,
        Unique_Baphomet_SwallowKite = 29,
        Unique_HerculesBeetle_BeetleTackle = 30,
        Unique_HawkBird_Storm = 31,
        Unique_Eagle_GlidingNail = 32,
        SelfDestruct = 33,
        SelfDestruct_Bee = 34,
        SelfExplosion = 35,
        FireBlast = 36,
        Flamethrower = 37,
        FireBall = 38,
        FlareArrow = 39,
        FireSeed = 40,
        Unique_Horus_FlareBird = 41,
        FlareTornado = 42,
        Inferno = 43,
        Unique_FireKirin_Tackle = 44,
        Unique_AmaterasuWolf_FireCharge = 45,
        Unique_VolcanicMonster_MagmaAttack = 46,
        Unique_FlameBuffalo_FlameHorn = 47,
        WaterGun = 48,
        WaterWave = 49,
        HydroPump = 50,
        WaterBall = 51,
        TidalWave = 52,
        AquaJet = 53,
        BubbleShot = 54,
        AcidRain = 55,
        Unique_BluePlatypus_Toboggan = 56,
        WindCutter = 57,
        GrassTornado = 58,
        SolarBeam = 59,
        SeedMachinegun = 60,
        SeedMine = 61,
        RootAttack = 62,
        SpecialCutter = 63,
        Unique_QueenBee_SpinLance = 64,
        ThunderRain = 65,
        ThunderBall = 66,
        LineThunder = 67,
        CrossThunder = 68,
        ThreeThunder = 69,
        ElecWave = 70,
        Thunderbolt = 71,
        ThunderFunnel = 72,
        SpreadPulse = 73,
        LockonLaser = 74,
        LightningStrike = 75,
        Unique_ElecPanda_ElecScratch = 76,
        Unique_Kirin_LightningTackle = 77,
        IceMissile = 78,
        BlizzardLance = 79,
        SnowStorm = 80,
        IcicleThrow = 81,
        Unique_IceHorse_IceBladeAttack = 82,
        IceBlade = 83,
        SandTornado = 84,
        ThrowRock = 85,
        RockLance = 86,
        MudShot = 87,
        StoneShotgun = 88,
        Unique_DrillGame_ShellAttack = 89,
        DarkLaser = 90,
        DarkWave = 91,
        ShadowBall = 92,
        Psychokinesis = 93,
        PoisonShot = 94,
        GhostFlame = 95,
        Unique_DarkCrow_TelePoke = 96,
        DragonMeteor = 97,
        DragonBreath = 98,
        DragonWave = 99,
        DragonCanon = 100,
        Unique_FairyDragon_FairyTornado = 101,
        Funnel_DreamDemon = 102,
        Funnel_RaijinDaughter = 103,
        StardustArrow = 104,
        Tremor = 105,
        FrostBreath = 106,
        DiamondFall = 107,
        BeamSlicer = 108,
        Commet = 109,
        DarkBall = 110,
        DarkFog = 111,
        PoisonFog = 112,
        DarkLegion = 113,
        Unique_BirdDragon_FireBreath = 114,
        Unique_BlackMetalDragon_FirePunch = 115,
        Unique_DarkScorpion_Pierce = 116,
        Unique_GhostBeast_Tossin = 117,
        Unique_JetDragon_JumpBeam = 118,
        Unique_ThunderBird_ThunderStorm = 119,
        Unique_Yeti_SnowBall = 120,
        Unique_NaughtyCat_CatPress = 121,
        Unique_IceDeer_IceHorn = 122,
        Unique_KingBahamut_AirCrash = 123,
        Unique_Manticore_InfernoStrike = 124,
        Unique_SoldierBee_NeedleLance = 125,
        Unique_ThunderDog_InazumaShorai = 126,
        Unique_BlackCentaur_TwoSpearRushes = 127,
        Unique_BlackGriffon_TackleLaser = 128,
        Unique_SakuraSaurus_SideTackle = 129,
        Unique_ThunderDragonMan_ThunderSwordAttack = 130,
        Unique_RedArmorBird_TriplePeck = 131,
        Unique_CaptainPenguin_BodySlide = 132,
        Unique_Ronin_Iai = 133,
        Unique_GrassRabbitMan_GrassRoundKick = 134,
        Unique_SaintCentaur_OneSpearRushes = 135,
        Unique_Umihebi_WindingTackle = 136,
        Unique_WeaselDragon_FlyingTackle = 137,
        Unique_WhiteTiger_IceScratch = 138,
        Unique_Baphomet_Dark_DarkKite = 139,
        Unique_BirdDragon_Ice_IceBreath = 140,
        Unique_FireKirin_Dark_DarkTossin = 141,
        Unique_VolcanicMonster_Ice_IceAttack = 142,
        Unique_IceHorse_Dark_DarkBladeAttack = 143,
        Unique_Yeti_Grass_GrassBall = 144,
        Unique_GrassPanda_Electric_ElectricPunch = 145,
        Reserve_53 = 146,
        Reserve_54 = 147,
        Reserve_55 = 148,
        Reserve_56 = 149,
        Reserve_57 = 150,
        Reserve_58 = 151,
        Reserve_59 = 152,
        Reserve_60 = 153,
        Reserve_61 = 154,
        Reserve_62 = 155,
        Reserve_63 = 156,
        Reserve_64 = 157,
        Reserve_65 = 158,
        Reserve_66 = 159,
        Reserve_67 = 160,
        Reserve_68 = 161,
        Reserve_69 = 162,
        Reserve_70 = 163,
        Reserve_71 = 164,
        Reserve_72 = 165,
        Reserve_73 = 166,
        Reserve_74 = 167,
        Reserve_75 = 168,
        Reserve_76 = 169,
        Reserve_77 = 170,
        Reserve_78 = 171,
        Reserve_79 = 172,
        Reserve_80 = 173,
        Reserve_81 = 174,
        Reserve_82 = 175,
        Reserve_83 = 176,
        Reserve_84 = 177,
        Reserve_85 = 178,
        Reserve_86 = 179,
        Reserve_87 = 180,
        Reserve_88 = 181,
        Reserve_89 = 182,
        Reserve_90 = 183,
        Reserve_91 = 184,
        Reserve_92 = 185,
        Reserve_93 = 186,
        Reserve_94 = 187,
        Reserve_95 = 188,
        Reserve_96 = 189,
        Reserve_97 = 190,
        Reserve_98 = 191,
        Reserve_99 = 192,
        Reserve_100 = 193,
        MAX = 194,
    }
    public class PalLogInfo_DropPal : Object
    {
        public PalLogInfo_DropPal(nint addr) : base(addr) { }
        public Object NickName { get { return this[nameof(NickName)]; } set { this[nameof(NickName)] = value; } }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
    }
    public class PalPlayerInfoForMap : Object
    {
        public PalPlayerInfoForMap(nint addr) : base(addr) { }
        public Object PlayerName { get { return this[nameof(PlayerName)]; } set { this[nameof(PlayerName)] = value; } }
        public Transform Transform { get { return this[nameof(Transform)].As<Transform>(); } set { this["Transform"] = value; } }
    }
    public enum EPalPlayerJoinResult : int
    {
        Success = 0,
        FailedInvalidLoginPlayerId = 1,
        FailedInvalidLoginPlayerCharacterHandle = 2,
        FailedDuplicateAccountCreation = 3,
        EPalPlayerJoinResult_MAX = 4,
    }
    public enum EPalGuildJoinRequestResult : int
    {
        Failed_RefuseByRespondent = 0,
        Failed_CancelByApplicant = 1,
        Failed_OverBaseCampNum_Applicant = 2,
        Failed_OverBaseCampNum_Respondent = 3,
        Continuation_CheckLoseAuthority = 4,
        Succcess_MergePalBox_Applicant = 5,
        Succcess_MergePalBox_Respondent = 6,
        Succcess_NoMerge_Applicant = 7,
        Succcess_NoMerge_Respondent = 8,
        EPalGuildJoinRequestResult_MAX = 9,
    }
    public class PalGuildPlayerInfo : Object
    {
        public PalGuildPlayerInfo(nint addr) : base(addr) { }
        public EPalGuildPlayerStatus Status { get { return (EPalGuildPlayerStatus)this[nameof(Status)].GetValue<int>(); } set { this[nameof(Status)].SetValue<int>((int)value); } }
        public DateTime LastOnlineRealTime { get { return this[nameof(LastOnlineRealTime)].As<DateTime>(); } set { this["LastOnlineRealTime"] = value; } }
        public Object PlayerName { get { return this[nameof(PlayerName)]; } set { this[nameof(PlayerName)] = value; } }
    }
    public enum EPalGuildPlayerStatus : int
    {
        Logout = 0,
        Online = 1,
        EPalGuildPlayerStatus_MAX = 2,
    }
    public class PalPlayerInitializeParameter : Object
    {
        public PalPlayerInitializeParameter(nint addr) : base(addr) { }
        public PalIndividualCharacterSaveParameter InitParam { get { return this[nameof(InitParam)].As<PalIndividualCharacterSaveParameter>(); } set { this["InitParam"] = value; } }
    }
    public class PalIndividualCharacterSaveParameter : Object
    {
        public PalIndividualCharacterSaveParameter(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public Object UniqueNPCID { get { return this[nameof(UniqueNPCID)]; } set { this[nameof(UniqueNPCID)] = value; } }
        public EPalGenderType Gender { get { return (EPalGenderType)this[nameof(Gender)].GetValue<int>(); } set { this[nameof(Gender)].SetValue<int>((int)value); } }
        public Object CharacterClass { get { return this[nameof(CharacterClass)]; } set { this[nameof(CharacterClass)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public int Rank_HP { get { return this[nameof(Rank_HP)].GetValue<int>(); } set { this[nameof(Rank_HP)].SetValue<int>(value); } }
        public int Rank_Attack { get { return this[nameof(Rank_Attack)].GetValue<int>(); } set { this[nameof(Rank_Attack)].SetValue<int>(value); } }
        public int Rank_Defence { get { return this[nameof(Rank_Defence)].GetValue<int>(); } set { this[nameof(Rank_Defence)].SetValue<int>(value); } }
        public int Rank_CraftSpeed { get { return this[nameof(Rank_CraftSpeed)].GetValue<int>(); } set { this[nameof(Rank_CraftSpeed)].SetValue<int>(value); } }
        public int Exp { get { return this[nameof(Exp)].GetValue<int>(); } set { this[nameof(Exp)].SetValue<int>(value); } }
        public Object NickName { get { return this[nameof(NickName)]; } set { this[nameof(NickName)] = value; } }
        public bool IsRarePal { get { return this[nameof(IsRarePal)].Flag; } set { this[nameof(IsRarePal)].Flag = value; } }
        public Array<EPalWazaID> EquipWaza { get { return new Array<EPalWazaID>(this[nameof(EquipWaza)].Address); } }
        public Array<EPalWazaID> MasteredWaza { get { return new Array<EPalWazaID>(this[nameof(MasteredWaza)].Address); } }
        public FixedPoint64 HP { get { return this[nameof(HP)].As<FixedPoint64>(); } set { this["HP"] = value; } }
        public int Talent_HP { get { return this[nameof(Talent_HP)].GetValue<int>(); } set { this[nameof(Talent_HP)].SetValue<int>(value); } }
        public int Talent_Melee { get { return this[nameof(Talent_Melee)].GetValue<int>(); } set { this[nameof(Talent_Melee)].SetValue<int>(value); } }
        public int Talent_Shot { get { return this[nameof(Talent_Shot)].GetValue<int>(); } set { this[nameof(Talent_Shot)].SetValue<int>(value); } }
        public int Talent_Defense { get { return this[nameof(Talent_Defense)].GetValue<int>(); } set { this[nameof(Talent_Defense)].SetValue<int>(value); } }
        public float FullStomach { get { return this[nameof(FullStomach)].GetValue<float>(); } set { this[nameof(FullStomach)].SetValue<float>(value); } }
        public EPalStatusPhysicalHealthType PhysicalHealth { get { return (EPalStatusPhysicalHealthType)this[nameof(PhysicalHealth)].GetValue<int>(); } set { this[nameof(PhysicalHealth)].SetValue<int>((int)value); } }
        public EPalBaseCampWorkerSickType WorkerSick { get { return (EPalBaseCampWorkerSickType)this[nameof(WorkerSick)].GetValue<int>(); } set { this[nameof(WorkerSick)].SetValue<int>((int)value); } }
        public Array<Object> PassiveSkillList { get { return new Array<Object>(this[nameof(PassiveSkillList)].Address); } }
        public int DyingTimer { get { return this[nameof(DyingTimer)].GetValue<int>(); } set { this[nameof(DyingTimer)].SetValue<int>(value); } }
        public FixedPoint64 MP { get { return this[nameof(MP)].As<FixedPoint64>(); } set { this["MP"] = value; } }
        public bool IsPlayer { get { return this[nameof(IsPlayer)].Flag; } set { this[nameof(IsPlayer)].Flag = value; } }
        public DateTime OwnedTime { get { return this[nameof(OwnedTime)].As<DateTime>(); } set { this["OwnedTime"] = value; } }
        public Guid OwnerPlayerUId { get { return this[nameof(OwnerPlayerUId)].As<Guid>(); } set { this["OwnerPlayerUId"] = value; } }
        public Array<Guid> OldOwnerPlayerUIds { get { return new Array<Guid>(this[nameof(OldOwnerPlayerUIds)].Address); } }
        public FixedPoint64 MaxHP { get { return this[nameof(MaxHP)].As<FixedPoint64>(); } set { this["MaxHP"] = value; } }
        public int Support { get { return this[nameof(Support)].GetValue<int>(); } set { this[nameof(Support)].SetValue<int>(value); } }
        public int CraftSpeed { get { return this[nameof(CraftSpeed)].GetValue<int>(); } set { this[nameof(CraftSpeed)].SetValue<int>(value); } }
        public Array<PalWorkSuitabilityInfo> CraftSpeeds { get { return new Array<PalWorkSuitabilityInfo>(this[nameof(CraftSpeeds)].Address); } }
        public FixedPoint64 ShieldHP { get { return this[nameof(ShieldHP)].As<FixedPoint64>(); } set { this["ShieldHP"] = value; } }
        public FixedPoint64 ShieldMaxHP { get { return this[nameof(ShieldMaxHP)].As<FixedPoint64>(); } set { this["ShieldMaxHP"] = value; } }
        public FixedPoint64 MaxMP { get { return this[nameof(MaxMP)].As<FixedPoint64>(); } set { this["MaxMP"] = value; } }
        public FixedPoint64 MaxSP { get { return this[nameof(MaxSP)].As<FixedPoint64>(); } set { this["MaxSP"] = value; } }
        public EPalStatusHungerType HungerType { get { return (EPalStatusHungerType)this[nameof(HungerType)].GetValue<int>(); } set { this[nameof(HungerType)].SetValue<int>((int)value); } }
        public float SanityValue { get { return this[nameof(SanityValue)].GetValue<float>(); } set { this[nameof(SanityValue)].SetValue<float>(value); } }
        public EPalBaseCampWorkerEventType BaseCampWorkerEventType { get { return (EPalBaseCampWorkerEventType)this[nameof(BaseCampWorkerEventType)].GetValue<int>(); } set { this[nameof(BaseCampWorkerEventType)].SetValue<int>((int)value); } }
        public float BaseCampWorkerEventProgressTime { get { return this[nameof(BaseCampWorkerEventProgressTime)].GetValue<float>(); } set { this[nameof(BaseCampWorkerEventProgressTime)].SetValue<float>(value); } }
        public PalContainerId ItemContainerId { get { return this[nameof(ItemContainerId)].As<PalContainerId>(); } set { this["ItemContainerId"] = value; } }
        public PalContainerId EquipItemContainerId { get { return this[nameof(EquipItemContainerId)].As<PalContainerId>(); } set { this["EquipItemContainerId"] = value; } }
        public PalCharacterSlotId SlotID { get { return this[nameof(SlotID)].As<PalCharacterSlotId>(); } set { this["SlotID"] = value; } }
        public float MaxFullStomach { get { return this[nameof(MaxFullStomach)].GetValue<float>(); } set { this[nameof(MaxFullStomach)].SetValue<float>(value); } }
        public float FullStomachDecreaseRate_Tribe { get { return this[nameof(FullStomachDecreaseRate_Tribe)].GetValue<float>(); } set { this[nameof(FullStomachDecreaseRate_Tribe)].SetValue<float>(value); } }
        public int UnusedStatusPoint { get { return this[nameof(UnusedStatusPoint)].GetValue<int>(); } set { this[nameof(UnusedStatusPoint)].SetValue<int>(value); } }
        public Array<PalGotStatusPoint> GotStatusPointList { get { return new Array<PalGotStatusPoint>(this[nameof(GotStatusPointList)].Address); } }
        public FloatContainer DecreaseFullStomachRates { get { return this[nameof(DecreaseFullStomachRates)].As<FloatContainer>(); } set { this["DecreaseFullStomachRates"] = value; } }
        public FloatContainer AffectSanityRates { get { return this[nameof(AffectSanityRates)].As<FloatContainer>(); } set { this["AffectSanityRates"] = value; } }
        public FloatContainer CraftSpeedRates { get { return this[nameof(CraftSpeedRates)].As<FloatContainer>(); } set { this["CraftSpeedRates"] = value; } }
        public Vector LastJumpedLocation { get { return this[nameof(LastJumpedLocation)].As<Vector>(); } set { this["LastJumpedLocation"] = value; } }
        public Object FoodWithStatusEffect { get { return this[nameof(FoodWithStatusEffect)]; } set { this[nameof(FoodWithStatusEffect)] = value; } }
        public int Tiemr_FoodWithStatusEffect { get { return this[nameof(Tiemr_FoodWithStatusEffect)].GetValue<int>(); } set { this[nameof(Tiemr_FoodWithStatusEffect)].SetValue<int>(value); } }
        public EPalWorkSuitability CurrentWorkSuitability { get { return (EPalWorkSuitability)this[nameof(CurrentWorkSuitability)].GetValue<int>(); } set { this[nameof(CurrentWorkSuitability)].SetValue<int>((int)value); } }
        public bool bAppliedDeathPenarty { get { return this[nameof(bAppliedDeathPenarty)].Flag; } set { this[nameof(bAppliedDeathPenarty)].Flag = value; } }
        public float PalReviveTimer { get { return this[nameof(PalReviveTimer)].GetValue<float>(); } set { this[nameof(PalReviveTimer)].SetValue<float>(value); } }
        public int VoiceID { get { return this[nameof(VoiceID)].GetValue<int>(); } set { this[nameof(VoiceID)].SetValue<int>(value); } }
        public PalIndividualCharacterCacheParameter Dynamic { get { return this[nameof(Dynamic)].As<PalIndividualCharacterCacheParameter>(); } set { this["Dynamic"] = value; } }
    }
    public class PalIndividualCharacterCacheParameter : Object
    {
        public PalIndividualCharacterCacheParameter(nint addr) : base(addr) { }
        public Guid GroupID { get { return this[nameof(GroupID)].As<Guid>(); } set { this["GroupID"] = value; } }
        public bool bSleeping { get { return this[nameof(bSleeping)].Flag; } set { this[nameof(bSleeping)].Flag = value; } }
        public Guid InvaderTargetBaseCampId { get { return this[nameof(InvaderTargetBaseCampId)].As<Guid>(); } set { this["InvaderTargetBaseCampId"] = value; } }
        public EPalInvaderType InvaderType { get { return (EPalInvaderType)this[nameof(InvaderType)].GetValue<int>(); } set { this[nameof(InvaderType)].SetValue<int>((int)value); } }
    }
    public enum EPalInvaderType : int
    {
        None = 0,
        InvaderEnemy = 1,
        VisitorNPC = 2,
        EPalInvaderType_MAX = 3,
    }
    public enum EPalWorkSuitability : int
    {
        None = 0,
        EmitFlame = 1,
        Watering = 2,
        Seeding = 3,
        GenerateElectricity = 4,
        Handcraft = 5,
        Collection = 6,
        Deforest = 7,
        Mining = 8,
        OilExtraction = 9,
        ProductMedicine = 10,
        Cool = 11,
        Transport = 12,
        MonsterFarm = 13,
        Anyone = 14,
        MAX = 15,
    }
    public class FloatContainer : Object
    {
        public FloatContainer(nint addr) : base(addr) { }
        public Array<FloatContainer_FloatPair> Values { get { return new Array<FloatContainer_FloatPair>(this[nameof(Values)].Address); } }
    }
    public class FloatContainer_FloatPair : Object
    {
        public FloatContainer_FloatPair(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
        public float Value { get { return this[nameof(Value)].GetValue<float>(); } set { this[nameof(Value)].SetValue<float>(value); } }
    }
    public class PalGotStatusPoint : Object
    {
        public PalGotStatusPoint(nint addr) : base(addr) { }
        public Object StatusName { get { return this[nameof(StatusName)]; } set { this[nameof(StatusName)] = value; } }
        public int StatusPoint { get { return this[nameof(StatusPoint)].GetValue<int>(); } set { this[nameof(StatusPoint)].SetValue<int>(value); } }
    }
    public class PalCharacterSlotId : Object
    {
        public PalCharacterSlotId(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
    }
    public class PalContainerId : Object
    {
        public PalContainerId(nint addr) : base(addr) { }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
    }
    public enum EPalBaseCampWorkerEventType : int
    {
        None = 0,
        Escape = 1,
        OverworkDeath = 2,
        Sick = 3,
        DodgeWork = 4,
        DodgeWork_Short = 5,
        DodgeWork_Sleep = 6,
        EatTooMuch = 7,
        Trantrum = 8,
        FightWithFriend = 9,
        TurnFoodBox = 10,
        DestroyBuilding = 11,
        EPalBaseCampWorkerEventType_MAX = 12,
    }
    public enum EPalStatusHungerType : int
    {
        Default = 0,
        Hunger = 1,
        Starvation = 2,
        EPalStatusHungerType_MAX = 3,
    }
    public class FixedPoint64 : Object
    {
        public FixedPoint64(nint addr) : base(addr) { }
        public long Value { get { return this[nameof(Value)].GetValue<long>(); } set { this[nameof(Value)].SetValue<long>(value); } }
    }
    public class PalWorkSuitabilityInfo : Object
    {
        public PalWorkSuitabilityInfo(nint addr) : base(addr) { }
        public EPalWorkSuitability WorkSuitability { get { return (EPalWorkSuitability)this[nameof(WorkSuitability)].GetValue<int>(); } set { this[nameof(WorkSuitability)].SetValue<int>((int)value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
    }
    public enum EPalBaseCampWorkerSickType : int
    {
        None = 0,
        Cold = 1,
        Sprain = 2,
        Bulimia = 3,
        GastricUlcer = 4,
        Fracture = 5,
        Weakness = 6,
        DepressionSprain = 7,
        DisturbingElement = 8,
        EPalBaseCampWorkerSickType_MAX = 9,
    }
    public enum EPalStatusPhysicalHealthType : int
    {
        Healthful = 0,
        MinorInjury = 1,
        Severe = 2,
        Dying = 3,
        DeadBody = 4,
        CloudCemetery = 5,
        EPalStatusPhysicalHealthType_MAX = 6,
    }
    public enum EPalGenderType : int
    {
        None = 0,
        Male = 1,
        Female = 2,
        EPalGenderType_MAX = 3,
    }
    public class PalPlayerAccountInitData : Object
    {
        public PalPlayerAccountInitData(nint addr) : base(addr) { }
        public Object CharacterName { get { return this[nameof(CharacterName)]; } set { this[nameof(CharacterName)] = value; } }
        public PalPlayerDataCharacterMakeInfo CharacterMakeData { get { return this[nameof(CharacterMakeData)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["CharacterMakeData"] = value; } }
    }
    public class PalRandomIncidentSpawnMonsterData : TableRowBase
    {
        public PalRandomIncidentSpawnMonsterData(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData CharacterID { get { return this[nameof(CharacterID)].As<PalDataTableRowName_PalMonsterData>(); } set { this["CharacterID"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int Group { get { return this[nameof(Group)].GetValue<int>(); } set { this[nameof(Group)].SetValue<int>(value); } }
        public bool IsSquad { get { return this[nameof(IsSquad)].Flag; } set { this[nameof(IsSquad)].Flag = value; } }
        public Vector2D SpawnLocation { get { return this[nameof(SpawnLocation)].As<Vector2D>(); } set { this["SpawnLocation"] = value; } }
        public float SpawnRadius { get { return this[nameof(SpawnRadius)].GetValue<float>(); } set { this[nameof(SpawnRadius)].SetValue<float>(value); } }
        public float RotZ_Degree { get { return this[nameof(RotZ_Degree)].GetValue<float>(); } set { this[nameof(RotZ_Degree)].SetValue<float>(value); } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object DefaultActionClass { get { return this[nameof(DefaultActionClass)]; } set { this[nameof(DefaultActionClass)] = value; } }
    }
    public class PalRandomIncidentSpawnNPCData : TableRowBase
    {
        public PalRandomIncidentSpawnNPCData(nint addr) : base(addr) { }
        public PalDataTableRowName_PalHumanData CharacterID { get { return this[nameof(CharacterID)].As<PalDataTableRowName_PalHumanData>(); } set { this["CharacterID"] = value; } }
        public PalDataTableRowName_NPCUniqueData UniqueNPCID { get { return this[nameof(UniqueNPCID)].As<PalDataTableRowName_NPCUniqueData>(); } set { this["UniqueNPCID"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int Group { get { return this[nameof(Group)].GetValue<int>(); } set { this[nameof(Group)].SetValue<int>(value); } }
        public bool IsSquad { get { return this[nameof(IsSquad)].Flag; } set { this[nameof(IsSquad)].Flag = value; } }
        public Vector2D SpawnLocation { get { return this[nameof(SpawnLocation)].As<Vector2D>(); } set { this["SpawnLocation"] = value; } }
        public float SpawnRadius { get { return this[nameof(SpawnRadius)].GetValue<float>(); } set { this[nameof(SpawnRadius)].SetValue<float>(value); } }
        public float RotZ_Degree { get { return this[nameof(RotZ_Degree)].GetValue<float>(); } set { this[nameof(RotZ_Degree)].SetValue<float>(value); } }
        public Object WalkPathName { get { return this[nameof(WalkPathName)]; } set { this[nameof(WalkPathName)] = value; } }
        public float WalkRadius { get { return this[nameof(WalkRadius)].GetValue<float>(); } set { this[nameof(WalkRadius)].SetValue<float>(value); } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object DefaultAIActionClass { get { return this[nameof(DefaultAIActionClass)]; } set { this[nameof(DefaultAIActionClass)] = value; } }
    }
    public class PalDataTableRowName_NPCUniqueData : Object
    {
        public PalDataTableRowName_NPCUniqueData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalItemId : Object
    {
        public PalItemId(nint addr) : base(addr) { }
        public Object StaticId { get { return this[nameof(StaticId)]; } set { this[nameof(StaticId)] = value; } }
        public PalDynamicItemId DynamicId { get { return this[nameof(DynamicId)].As<PalDynamicItemId>(); } set { this["DynamicId"] = value; } }
    }
    public class PalDynamicItemId : Object
    {
        public PalDynamicItemId(nint addr) : base(addr) { }
        public Guid CreatedWorldId { get { return this[nameof(CreatedWorldId)].As<Guid>(); } set { this["CreatedWorldId"] = value; } }
        public Guid LocalIdInCreatedWorld { get { return this[nameof(LocalIdInCreatedWorld)].As<Guid>(); } set { this["LocalIdInCreatedWorld"] = value; } }
    }
    public class PalDataTableRowName_SoundID : Object
    {
        public PalDataTableRowName_SoundID(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalSoundOptions : Object
    {
        public PalSoundOptions(nint addr) : base(addr) { }
        public int FadeInTime { get { return this[nameof(FadeInTime)].GetValue<int>(); } set { this[nameof(FadeInTime)].SetValue<int>(value); } }
    }
    public enum EPalShooterFlagContainerPriority : int
    {
        Weapon = 0,
        Ball = 1,
        EPalShooterFlagContainerPriority_MAX = 2,
    }
    public class PalItemData : Object
    {
        public PalItemData(nint addr) : base(addr) { }
        public PalStaticItemDataBase StaticData { get { return this[nameof(StaticData)].As<PalStaticItemDataBase>(); } set { this["StaticData"] = value; } }
        public PalDynamicItemDataBase DynamicData { get { return this[nameof(DynamicData)].As<PalDynamicItemDataBase>(); } set { this["DynamicData"] = value; } }
    }
    public enum EWeaponPlaySoundType : int
    {
        None = 0,
        OnStartAim = 1,
        OnEndAim = 2,
        OnAttach = 3,
        OnDetach = 4,
        OnThrow = 5,
        EWeaponPlaySoundType_MAX = 6,
    }
    public enum EPalWeaponType : int
    {
        None = 0,
        ThrowObject = 1,
        Handgun = 2,
        AssaultRifle = 3,
        Shotgun = 4,
        SniperRifle = 5,
        RocketLauncher = 6,
        MeleeWeapon = 7,
        Bow = 8,
        BowGun = 9,
        FlameThrower = 10,
        GatlingGun = 11,
        Liftup = 12,
        LaserRifle = 13,
        MAX = 14,
    }
    public enum EWeaponCoopType : int
    {
        None = 0,
        RapidFireWeapon = 1,
        NearRangeWeapon = 2,
        FarRangeWeapon = 3,
        SupportWeapon = 4,
        EWeaponCoopType_MAX = 5,
    }
    public enum EPalCharacterStatusOperationResult : int
    {
        Success = 0,
        FailedNotValidIndividualHandle = 1,
        FailedNotValidIndividualParameter = 2,
        FailedNotValidPlayerState = 3,
        FailedNotValidPlayerRecordData = 4,
        FailedNotValidPlayerInventoryData = 5,
        FailedNotValidOtomoHolder = 6,
        FailedGetPlayerRankMasterData = 7,
        FailedGetCharacterUpgradeMasterData = 8,
        FailedNotFoundOtomo = 9,
        FailedAlreadyMaxRank = 10,
        FailedAlreadyResetStatus = 11,
        FailedCalcRequiredRelicNum = 12,
        FailedLackRelicNum = 13,
        FailedCalcRequiredUpgradeItemNum = 14,
        FailedLackUpgradeItemNum = 15,
        FailedLackMoneyNum = 16,
        FailedItemOperation = 17,
        EPalCharacterStatusOperationResult_MAX = 18,
    }
    public class PalDeadInfo : Object
    {
        public PalDeadInfo(nint addr) : base(addr) { }
        public int LastDamage { get { return this[nameof(LastDamage)].GetValue<int>(); } set { this[nameof(LastDamage)].SetValue<int>(value); } }
        public Actor LastAttacker { get { return this[nameof(LastAttacker)].As<Actor>(); } set { this["LastAttacker"] = value; } }
        public Actor SelfActor { get { return this[nameof(SelfActor)].As<Actor>(); } set { this["SelfActor"] = value; } }
        public Vector BlowVelocity { get { return this[nameof(BlowVelocity)].As<Vector>(); } set { this["BlowVelocity"] = value; } }
        public Vector HitLocation { get { return this[nameof(HitLocation)].As<Vector>(); } set { this["HitLocation"] = value; } }
        public EPalWazaID SelfDestructWaza { get { return (EPalWazaID)this[nameof(SelfDestructWaza)].GetValue<int>(); } set { this[nameof(SelfDestructWaza)].SetValue<int>((int)value); } }
    }
    public class PalItemOperationInfo_Move : Object
    {
        public PalItemOperationInfo_Move(nint addr) : base(addr) { }
        public PalInstanceID ExecutorIndividualId { get { return this[nameof(ExecutorIndividualId)].As<PalInstanceID>(); } set { this["ExecutorIndividualId"] = value; } }
        public Array<PalItemId> ItemIds { get { return new Array<PalItemId>(this[nameof(ItemIds)].Address); } }
        public Array<PalItemSlotId> FromSlotIds { get { return new Array<PalItemSlotId>(this[nameof(FromSlotIds)].Address); } }
        public PalContainerId ToContainerId { get { return this[nameof(ToContainerId)].As<PalContainerId>(); } set { this["ToContainerId"] = value; } }
        public Array<PalItemSlotId> ToSlotIds { get { return new Array<PalItemSlotId>(this[nameof(ToSlotIds)].Address); } }
    }
    public class PalItemSlotId : Object
    {
        public PalItemSlotId(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
    }
    public enum EPalGroupOperationResult : int
    {
        Success = 0,
        FailedNotFoundNetworkTransmitter = 1,
        FailedCreateNewGroup = 2,
        FailedNotFoundGroup = 3,
        FailedNotFoundGuild = 4,
        FailedNotFoundOrganization = 5,
        FailedNotFoundCharacterHandle = 6,
        FailedNotFoundCharacterParameter = 7,
        FailedNotFoundPlayerCharacterHandle = 8,
        FailedAlreadyBelongToGroup = 9,
        FailedNotImplementExitNoPlayerCharacter = 10,
        FailedAlreadyExist = 11,
        FailedPlayerAlreadyBelongingToGuild = 12,
        FailedBaseCampAlreadyBelongingToGuild = 13,
        FailedPlayerNotBelongingToGuild = 14,
        FailedGuildMaxPlayerNum = 15,
        FailedBelongingToIndependentGuildOtherPlayer = 16,
        FailedPermissionDeniedByNotAdmin = 17,
        FailedAdminCannotExitGuild = 18,
        FailedDisposeStaticOrganization = 19,
        FailedOverBaseCamp = 20,
        FailedBaseCampNotBelongingToGuild = 21,
        FailedNotFoundBaseCamp = 22,
        FailedBaseCampOperation = 23,
        FailedNotImplement = 24,
        EPalGroupOperationResult_MAX = 25,
    }
    public enum EPalMapObjectRankUpCharacterResult : int
    {
        Success = 0,
        FailedNotValidIndividualHandle = 1,
        FailedNotValidIndividualParameter = 2,
        FailedNotValidPlayerState = 3,
        FailedNotValidPlayerPalStorage = 4,
        FailedNotExistsResourceCharacterInPalStorage = 5,
        EPalMapObjectRankUpCharacterResult_MAX = 6,
    }
    public enum EPalUISelectNumResult : int
    {
        Canceled = 0,
        Complate = 1,
        EPalUISelectNumResult_MAX = 2,
    }
    public class SkillEffectSpawnParameter : Object
    {
        public SkillEffectSpawnParameter(nint addr) : base(addr) { }
        public float TimeOffset { get { return this[nameof(TimeOffset)].GetValue<float>(); } set { this[nameof(TimeOffset)].SetValue<float>(value); } }
        public Object SkillEffectClass { get { return this[nameof(SkillEffectClass)]; } set { this[nameof(SkillEffectClass)] = value; } }
        public Vector SpawnOffset { get { return this[nameof(SpawnOffset)].As<Vector>(); } set { this["SpawnOffset"] = value; } }
        public bool bAttachToOwner { get { return this[nameof(bAttachToOwner)].Flag; } set { this[nameof(bAttachToOwner)].Flag = value; } }
        public Object AttachSocketName { get { return this[nameof(AttachSocketName)]; } set { this[nameof(AttachSocketName)] = value; } }
        public EPalBodyLocationType AttachLocationType { get { return (EPalBodyLocationType)this[nameof(AttachLocationType)].GetValue<int>(); } set { this[nameof(AttachLocationType)].SetValue<int>((int)value); } }
    }
    public enum EPalBodyLocationType : int
    {
        None = 0,
        Head = 1,
        Mouth = 2,
        BulletMuzzle = 3,
        BodyCenter = 4,
        JumpEffect = 5,
        EPalBodyLocationType_MAX = 6,
    }
    public class PalPassiveAbilitySkills : Object
    {
        public PalPassiveAbilitySkills(nint addr) : base(addr) { }
        public Array<PalPassiveAbilitySkillParameters> AllAbilityPassiveSkills { get { return new Array<PalPassiveAbilitySkillParameters>(this[nameof(AllAbilityPassiveSkills)].Address); } }
    }
    public class PalPassiveAbilitySkillParameters : Object
    {
        public PalPassiveAbilitySkillParameters(nint addr) : base(addr) { }
        public float DelayTime { get { return this[nameof(DelayTime)].GetValue<float>(); } set { this[nameof(DelayTime)].SetValue<float>(value); } }
        public EPalWorkType WorkType { get { return (EPalWorkType)this[nameof(WorkType)].GetValue<int>(); } set { this[nameof(WorkType)].SetValue<int>((int)value); } }
        public Array<PalDataTableRowName_MapObjectData> MapObjectId { get { return new Array<PalDataTableRowName_MapObjectData>(this[nameof(MapObjectId)].Address); } }
        public Array<PalDataTableRowName_ItemData> ItemId { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(ItemId)].Address); } }
        public bool AssignOthers { get { return this[nameof(AssignOthers)].Flag; } set { this[nameof(AssignOthers)].Flag = value; } }
        public EPalElementType TargetElementType { get { return (EPalElementType)this[nameof(TargetElementType)].GetValue<int>(); } set { this[nameof(TargetElementType)].SetValue<int>((int)value); } }
    }
    public class PalDataTableRowName_ItemData : Object
    {
        public PalDataTableRowName_ItemData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_MapObjectData : Object
    {
        public PalDataTableRowName_MapObjectData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalWorkType : int
    {
        None = 0,
        CommonTemp = 1,
        ReviveCharacter = 2,
        Architecture = 3,
        RepairBuildObject = 4,
        FarmHarvest = 5,
        HarvestLevelObject = 6,
        TransportFoodItemInBaseCamp = 7,
        Seeding = 8,
        Watering = 9,
        Cooking = 10,
        TransportDisposableItemInBaseCamp = 11,
        ConvertItem = 12,
        ProductItem = 13,
        Smelting = 14,
        ProductMedicine = 15,
        TransportItemInBaseCamp = 16,
        CollectResourcePickable = 17,
        ProductResource_Deforest = 18,
        ProductResource_Mining = 19,
        ProductResource_Deforest_OnFacility = 20,
        ProductResource_Mining_OnFacility = 21,
        GenerateEnergy = 22,
        Ignition = 23,
        Defense = 24,
        BreedFarm = 25,
        MonsterFarm = 26,
        ExtinguishBurn = 27,
        Cool = 28,
        Attack = 29,
        CollectItemToStorage = 30,
        TransportItem = 31,
        CollectResource = 32,
        GrowupPromotion = 33,
        EPalWorkType_MAX = 34,
    }
    public class PalPassiveAbilitySkillStatus : Object
    {
        public PalPassiveAbilitySkillStatus(nint addr) : base(addr) { }
        public EPalPassiveAbilitySkillState State { get { return (EPalPassiveAbilitySkillState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
        public Array<Object> Flags { get { return new Array<Object>(this[nameof(Flags)].Address); } }
        public EPalPassiveTriggerType TriggerType { get { return (EPalPassiveTriggerType)this[nameof(TriggerType)].GetValue<int>(); } set { this[nameof(TriggerType)].SetValue<int>((int)value); } }
    }
    public enum EPalPassiveTriggerType : int
    {
        None = 0,
        ActiveOtomo = 1,
        Worker = 2,
        Ride = 4,
        Reserve = 8,
        InOtomo = 16,
        Always = 32,
        EPalPassiveTriggerType_MAX = 33,
    }
    public enum EPalPassiveAbilitySkillState : int
    {
        None = 0,
        Active = 1,
        ActivateDelay = 2,
        Inactive = 3,
        ActivateLocked = 4,
        EPalPassiveAbilitySkillState_MAX = 5,
    }
    public class PalNetArchive : Object
    {
        public PalNetArchive(nint addr) : base(addr) { }
        public Array<byte> Bytes { get { return new Array<byte>(this[nameof(Bytes)].Address); } }
    }
    public class ActionDynamicParameter : Object
    {
        public ActionDynamicParameter(nint addr) : base(addr) { }
        public Actor ActionTarget { get { return this[nameof(ActionTarget)].As<Actor>(); } set { this["ActionTarget"] = value; } }
        public Transform StartTransform { get { return this[nameof(StartTransform)].As<Transform>(); } set { this["StartTransform"] = value; } }
        public Vector ActionVelocity { get { return this[nameof(ActionVelocity)].As<Vector>(); } set { this["ActionVelocity"] = value; } }
        public int GeneralPurposeIndex { get { return this[nameof(GeneralPurposeIndex)].GetValue<int>(); } set { this[nameof(GeneralPurposeIndex)].SetValue<int>(value); } }
        public Vector DummyTargetLocation { get { return this[nameof(DummyTargetLocation)].As<Vector>(); } set { this["DummyTargetLocation"] = value; } }
        public Guid ActionID { get { return this[nameof(ActionID)].As<Guid>(); } set { this["ActionID"] = value; } }
        public bool bIsAdjustTransform { get { return this[nameof(bIsAdjustTransform)].Flag; } set { this[nameof(bIsAdjustTransform)].Flag = value; } }
        public PalNetArchive Blackboard { get { return this[nameof(Blackboard)].As<PalNetArchive>(); } set { this["Blackboard"] = value; } }
        public int NetRandSeed { get { return this[nameof(NetRandSeed)].GetValue<int>(); } set { this[nameof(NetRandSeed)].SetValue<int>(value); } }
    }
    public enum EPalActionType : int
    {
        None = 0,
        Sleep = 1,
        WakeUp = 2,
        Death = 3,
        Revive = 4,
        Menace = 5,
        Eat = 6,
        Stan = 7,
        KnockBack = 8,
        BlowAway = 9,
        GeneralAttack = 10,
        MeleeSkill = 11,
        ShootSkill = 12,
        JumpAction = 13,
        RollingAction = 14,
        FullRideAction = 15,
        Turn90R = 16,
        Turn90L = 17,
        Turn180R = 18,
        Turn180L = 19,
        TurnToTarget = 20,
        DiscoverySomething = 21,
        ForwardWalk = 22,
        BackwardWalk = 23,
        Provocation = 24,
        CommonWork = 25,
        Architecture = 26,
        Deforest = 27,
        Mining = 28,
        Feeding = 29,
        GrowupPromotion = 30,
        Watering = 31,
        WateringOneshot = 32,
        Harvest = 33,
        GenerateEnergy = 34,
        GenerateEnergyFire = 35,
        GenerateEnergyElectric = 36,
        Cooking = 37,
        Happy = 38,
        IdleInSpa = 39,
        Ignition = 40,
        TransportItem = 41,
        Cool = 42,
        SpawnItem = 43,
        Resuscitation = 44,
        Liftup = 45,
        BeLiftup = 46,
        Throw = 47,
        BeThrown = 48,
        HumanFeeding = 49,
        HumanFeeding_DoMotion = 50,
        GetupUtubuse_orRight = 51,
        GetupAomuke_orRight = 52,
        WaitLoadingAction = 53,
        HumanPetting = 54,
        PalPetting = 55,
        Talk = 56,
        Listen_A = 57,
        Listen_B = 58,
        ChairSit = 59,
        ChairSitMeal = 60,
        ChairSitDrink = 61,
        ChairSitMeat = 62,
        GroundSit = 63,
        SpawnOtomoPal = 64,
        PartnerSkill = 65,
        CommandPal = 66,
        ReturnOtomoPal = 67,
        Step_Forward = 68,
        Step_Back = 69,
        Step_Left = 70,
        Step_Right = 71,
        ElectricShock = 72,
        UnlockCagePalLock = 73,
        CutPalMeat = 74,
        Grappling = 75,
        PalRandomRest = 76,
        EPalActionType_MAX = 77,
    }
    public class PalAIActionDynamicParameter : Object
    {
        public PalAIActionDynamicParameter(nint addr) : base(addr) { }
        public Actor GeneralActor1 { get { return this[nameof(GeneralActor1)].As<Actor>(); } set { this["GeneralActor1"] = value; } }
        public Vector GeneralVector1 { get { return this[nameof(GeneralVector1)].As<Vector>(); } set { this["GeneralVector1"] = value; } }
        public Vector GeneralVector2 { get { return this[nameof(GeneralVector2)].As<Vector>(); } set { this["GeneralVector2"] = value; } }
        public int GeneralIndex1 { get { return this[nameof(GeneralIndex1)].GetValue<int>(); } set { this[nameof(GeneralIndex1)].SetValue<int>(value); } }
        public bool GeneralBool1 { get { return this[nameof(GeneralBool1)].Flag; } set { this[nameof(GeneralBool1)].Flag = value; } }
        public int GeneralInteger1 { get { return this[nameof(GeneralInteger1)].GetValue<int>(); } set { this[nameof(GeneralInteger1)].SetValue<int>(value); } }
        public int GeneralInteger2 { get { return this[nameof(GeneralInteger2)].GetValue<int>(); } set { this[nameof(GeneralInteger2)].SetValue<int>(value); } }
        public EPalWazaID SelfDestructWaza { get { return (EPalWazaID)this[nameof(SelfDestructWaza)].GetValue<int>(); } set { this[nameof(SelfDestructWaza)].SetValue<int>((int)value); } }
    }
    public enum EPalMovementSpeedType : int
    {
        SlowWalk = 0,
        Walk = 1,
        Run = 2,
        TransportMove = 3,
        EPalMovementSpeedType_MAX = 4,
    }
    public enum EPalAIActionCategory : int
    {
        Undefined = 0,
        Call = 1,
        Coop = 2,
        NullAction = 3,
        EPalAIActionCategory_MAX = 4,
    }
    public enum EPalBiologicalGradeComparedResult : int
    {
        Greater = 0,
        Equal = 1,
        Smaller = 2,
        EPalBiologicalGradeComparedResult_MAX = 3,
    }
    public enum EPalAIResponseType : int
    {
        Ignore = 0,
        Escape = 1,
        Battle = 2,
        Special = 3,
        EPalAIResponseType_MAX = 4,
    }
    public enum EPalAISightJudgementType : int
    {
        None = 0,
        AimedByPlayer = 1,
        EPalAISightJudgementType_MAX = 2,
    }
    public class ReserveMontage : Object
    {
        public ReserveMontage(nint addr) : base(addr) { }
        public AnimMontage Montage { get { return this[nameof(Montage)].As<AnimMontage>(); } set { this["Montage"] = value; } }
        public float PlayRate { get { return this[nameof(PlayRate)].GetValue<float>(); } set { this[nameof(PlayRate)].SetValue<float>(value); } }
        public float StartTime { get { return this[nameof(StartTime)].GetValue<float>(); } set { this[nameof(StartTime)].SetValue<float>(value); } }
    }
    public class GeneralAnimationParameter : Object
    {
        public GeneralAnimationParameter(nint addr) : base(addr) { }
        public float MoveSpeed { get { return this[nameof(MoveSpeed)].GetValue<float>(); } set { this[nameof(MoveSpeed)].SetValue<float>(value); } }
        public float MoveSpeedXY { get { return this[nameof(MoveSpeedXY)].GetValue<float>(); } set { this[nameof(MoveSpeedXY)].SetValue<float>(value); } }
        public Vector Velocity { get { return this[nameof(Velocity)].As<Vector>(); } set { this["Velocity"] = value; } }
        public Vector InputVelocity { get { return this[nameof(InputVelocity)].As<Vector>(); } set { this["InputVelocity"] = value; } }
        public Vector ClimbingVelocity { get { return this[nameof(ClimbingVelocity)].As<Vector>(); } set { this["ClimbingVelocity"] = value; } }
        public bool bIsInAir { get { return this[nameof(bIsInAir)].Flag; } set { this[nameof(bIsInAir)].Flag = value; } }
        public bool bIsSliding { get { return this[nameof(bIsSliding)].Flag; } set { this[nameof(bIsSliding)].Flag = value; } }
        public bool bIsSwimming { get { return this[nameof(bIsSwimming)].Flag; } set { this[nameof(bIsSwimming)].Flag = value; } }
        public float RangeForGround { get { return this[nameof(RangeForGround)].GetValue<float>(); } set { this[nameof(RangeForGround)].SetValue<float>(value); } }
        public bool bIsNearGround { get { return this[nameof(bIsNearGround)].Flag; } set { this[nameof(bIsNearGround)].Flag = value; } }
        public Object GeneralAnimSequenceMap { get { return this[nameof(GeneralAnimSequenceMap)]; } set { this[nameof(GeneralAnimSequenceMap)] = value; } }
        public Object GeneralBlendSpaceMap { get { return this[nameof(GeneralBlendSpaceMap)]; } set { this[nameof(GeneralBlendSpaceMap)] = value; } }
        public float FootIKRootOffset { get { return this[nameof(FootIKRootOffset)].GetValue<float>(); } set { this[nameof(FootIKRootOffset)].SetValue<float>(value); } }
        public Object FootIKOffset { get { return this[nameof(FootIKOffset)]; } set { this[nameof(FootIKOffset)] = value; } }
        public float MoveSpeedPlusByRotateYaw { get { return this[nameof(MoveSpeedPlusByRotateYaw)].GetValue<float>(); } set { this[nameof(MoveSpeedPlusByRotateYaw)].SetValue<float>(value); } }
        public float YawSpeed { get { return this[nameof(YawSpeed)].GetValue<float>(); } set { this[nameof(YawSpeed)].SetValue<float>(value); } }
        public float AdditiveAnimationRate { get { return this[nameof(AdditiveAnimationRate)].GetValue<float>(); } set { this[nameof(AdditiveAnimationRate)].SetValue<float>(value); } }
        public bool DisableUpperOverrideFlag { get { return this[nameof(DisableUpperOverrideFlag)].Flag; } set { this[nameof(DisableUpperOverrideFlag)].Flag = value; } }
        public bool bTransportingObject { get { return this[nameof(bTransportingObject)].Flag; } set { this[nameof(bTransportingObject)].Flag = value; } }
    }
    public enum EPalFootType : int
    {
        None = 0,
        ForeFootLeft = 1,
        ForeFootRight = 2,
        HindFootLeft = 3,
        HindFootRight = 4,
        MAX = 5,
    }
    public enum EPalGeneralBlendSpaceType : int
    {
        None = 0,
        GeneralMove = 1,
        RidingMove = 2,
        FlyingMove = 3,
        FlyingRidingMove = 4,
        TransportingObjectMove = 5,
        EPalGeneralBlendSpaceType_MAX = 6,
    }
    public enum EPalGeneralAnimSequenceType : int
    {
        None = 0,
        JumpStart = 1,
        JumpLoop = 2,
        JumpEnd = 3,
        EPalGeneralAnimSequenceType_MAX = 4,
    }
    public enum EPalBlowVelocityOwner : int
    {
        None = 0,
        AttackCharacter = 1,
        HitComponent = 2,
        HitLocation = 3,
        EPalBlowVelocityOwner_MAX = 4,
    }
    public enum EPalBaseCampState : int
    {
        NotAvailable = 0,
        Normal = 1,
        EPalBaseCampState_MAX = 2,
    }
    public class PalBaseCampSignificanceInfo : Object
    {
        public PalBaseCampSignificanceInfo(nint addr) : base(addr) { }
        public float DistanceInRangeFromPlayer { get { return this[nameof(DistanceInRangeFromPlayer)].GetValue<float>(); } set { this[nameof(DistanceInRangeFromPlayer)].SetValue<float>(value); } }
        public float TickInterval { get { return this[nameof(TickInterval)].GetValue<float>(); } set { this[nameof(TickInterval)].SetValue<float>(value); } }
    }
    public enum EPalBaseCampModuleEnergyState : int
    {
        Providable = 0,
        Waiting = 1,
        EPalBaseCampModuleEnergyState_MAX = 2,
    }
    public class PalBaseCampItemExistsInfo : Object
    {
        public PalBaseCampItemExistsInfo(nint addr) : base(addr) { }
        public Guid MapObjectModelInstanceId { get { return this[nameof(MapObjectModelInstanceId)].As<Guid>(); } set { this["MapObjectModelInstanceId"] = value; } }
        public int itemNum { get { return this[nameof(itemNum)].GetValue<int>(); } set { this[nameof(itemNum)].SetValue<int>(value); } }
    }
    public class PalBaseCampItemContainerInfo : Object
    {
        public PalBaseCampItemContainerInfo(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public EPalBaseCampItemContainerType Type { get { return (EPalBaseCampItemContainerType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
    }
    public enum EPalBaseCampItemContainerType : int
    {
        HomeChest = 0,
        Chest = 1,
        Other = 2,
        EPalBaseCampItemContainerType_MAX = 3,
    }
    public class PalBaseCampPassiveEffectMapObjectInfo : Object
    {
        public PalBaseCampPassiveEffectMapObjectInfo(nint addr) : base(addr) { }
        public Array<Guid> ConcreteModelInstanceIds { get { return new Array<Guid>(this[nameof(ConcreteModelInstanceIds)].Address); } }
    }
    public enum EPalBaseCampPassiveEffectWorkHardType : int
    {
        Normal = 0,
        Hard = 1,
        VeryHard = 2,
        EPalBaseCampPassiveEffectWorkHardType_MAX = 3,
    }
    public class PalWorkAssignRequirementParameter : Object
    {
        public PalWorkAssignRequirementParameter(nint addr) : base(addr) { }
    }
    public class PalBaseCampWorkCollectionStashInfo : Object
    {
        public PalBaseCampWorkCollectionStashInfo(nint addr) : base(addr) { }
        public GameDateTime StashAtTime { get { return this[nameof(StashAtTime)].As<GameDateTime>(); } set { this["StashAtTime"] = value; } }
    }
    public class PalOptionWorldSettings : Object
    {
        public PalOptionWorldSettings(nint addr) : base(addr) { }
        public EPalOptionWorldDifficulty Difficulty { get { return (EPalOptionWorldDifficulty)this[nameof(Difficulty)].GetValue<int>(); } set { this[nameof(Difficulty)].SetValue<int>((int)value); } }
        public float DayTimeSpeedRate { get { return this[nameof(DayTimeSpeedRate)].GetValue<float>(); } set { this[nameof(DayTimeSpeedRate)].SetValue<float>(value); } }
        public float NightTimeSpeedRate { get { return this[nameof(NightTimeSpeedRate)].GetValue<float>(); } set { this[nameof(NightTimeSpeedRate)].SetValue<float>(value); } }
        public float ExpRate { get { return this[nameof(ExpRate)].GetValue<float>(); } set { this[nameof(ExpRate)].SetValue<float>(value); } }
        public float PalCaptureRate { get { return this[nameof(PalCaptureRate)].GetValue<float>(); } set { this[nameof(PalCaptureRate)].SetValue<float>(value); } }
        public float PalSpawnNumRate { get { return this[nameof(PalSpawnNumRate)].GetValue<float>(); } set { this[nameof(PalSpawnNumRate)].SetValue<float>(value); } }
        public float PalDamageRateAttack { get { return this[nameof(PalDamageRateAttack)].GetValue<float>(); } set { this[nameof(PalDamageRateAttack)].SetValue<float>(value); } }
        public float PalDamageRateDefense { get { return this[nameof(PalDamageRateDefense)].GetValue<float>(); } set { this[nameof(PalDamageRateDefense)].SetValue<float>(value); } }
        public float PlayerDamageRateAttack { get { return this[nameof(PlayerDamageRateAttack)].GetValue<float>(); } set { this[nameof(PlayerDamageRateAttack)].SetValue<float>(value); } }
        public float PlayerDamageRateDefense { get { return this[nameof(PlayerDamageRateDefense)].GetValue<float>(); } set { this[nameof(PlayerDamageRateDefense)].SetValue<float>(value); } }
        public float PlayerStomachDecreaceRate { get { return this[nameof(PlayerStomachDecreaceRate)].GetValue<float>(); } set { this[nameof(PlayerStomachDecreaceRate)].SetValue<float>(value); } }
        public float PlayerStaminaDecreaceRate { get { return this[nameof(PlayerStaminaDecreaceRate)].GetValue<float>(); } set { this[nameof(PlayerStaminaDecreaceRate)].SetValue<float>(value); } }
        public float PlayerAutoHPRegeneRate { get { return this[nameof(PlayerAutoHPRegeneRate)].GetValue<float>(); } set { this[nameof(PlayerAutoHPRegeneRate)].SetValue<float>(value); } }
        public float PlayerAutoHpRegeneRateInSleep { get { return this[nameof(PlayerAutoHpRegeneRateInSleep)].GetValue<float>(); } set { this[nameof(PlayerAutoHpRegeneRateInSleep)].SetValue<float>(value); } }
        public float PalStomachDecreaceRate { get { return this[nameof(PalStomachDecreaceRate)].GetValue<float>(); } set { this[nameof(PalStomachDecreaceRate)].SetValue<float>(value); } }
        public float PalStaminaDecreaceRate { get { return this[nameof(PalStaminaDecreaceRate)].GetValue<float>(); } set { this[nameof(PalStaminaDecreaceRate)].SetValue<float>(value); } }
        public float PalAutoHPRegeneRate { get { return this[nameof(PalAutoHPRegeneRate)].GetValue<float>(); } set { this[nameof(PalAutoHPRegeneRate)].SetValue<float>(value); } }
        public float PalAutoHpRegeneRateInSleep { get { return this[nameof(PalAutoHpRegeneRateInSleep)].GetValue<float>(); } set { this[nameof(PalAutoHpRegeneRateInSleep)].SetValue<float>(value); } }
        public float BuildObjectDamageRate { get { return this[nameof(BuildObjectDamageRate)].GetValue<float>(); } set { this[nameof(BuildObjectDamageRate)].SetValue<float>(value); } }
        public float BuildObjectDeteriorationDamageRate { get { return this[nameof(BuildObjectDeteriorationDamageRate)].GetValue<float>(); } set { this[nameof(BuildObjectDeteriorationDamageRate)].SetValue<float>(value); } }
        public float CollectionDropRate { get { return this[nameof(CollectionDropRate)].GetValue<float>(); } set { this[nameof(CollectionDropRate)].SetValue<float>(value); } }
        public float CollectionObjectHpRate { get { return this[nameof(CollectionObjectHpRate)].GetValue<float>(); } set { this[nameof(CollectionObjectHpRate)].SetValue<float>(value); } }
        public float CollectionObjectRespawnSpeedRate { get { return this[nameof(CollectionObjectRespawnSpeedRate)].GetValue<float>(); } set { this[nameof(CollectionObjectRespawnSpeedRate)].SetValue<float>(value); } }
        public float EnemyDropItemRate { get { return this[nameof(EnemyDropItemRate)].GetValue<float>(); } set { this[nameof(EnemyDropItemRate)].SetValue<float>(value); } }
        public EPalOptionWorldDeathPenalty DeathPenalty { get { return (EPalOptionWorldDeathPenalty)this[nameof(DeathPenalty)].GetValue<int>(); } set { this[nameof(DeathPenalty)].SetValue<int>((int)value); } }
        public bool bEnablePlayerToPlayerDamage { get { return this[nameof(bEnablePlayerToPlayerDamage)].Flag; } set { this[nameof(bEnablePlayerToPlayerDamage)].Flag = value; } }
        public bool bEnableFriendlyFire { get { return this[nameof(bEnableFriendlyFire)].Flag; } set { this[nameof(bEnableFriendlyFire)].Flag = value; } }
        public bool bEnableInvaderEnemy { get { return this[nameof(bEnableInvaderEnemy)].Flag; } set { this[nameof(bEnableInvaderEnemy)].Flag = value; } }
        public bool bActiveUNKO { get { return this[nameof(bActiveUNKO)].Flag; } set { this[nameof(bActiveUNKO)].Flag = value; } }
        public bool bEnableAimAssistPad { get { return this[nameof(bEnableAimAssistPad)].Flag; } set { this[nameof(bEnableAimAssistPad)].Flag = value; } }
        public bool bEnableAimAssistKeyboard { get { return this[nameof(bEnableAimAssistKeyboard)].Flag; } set { this[nameof(bEnableAimAssistKeyboard)].Flag = value; } }
        public int DropItemMaxNum { get { return this[nameof(DropItemMaxNum)].GetValue<int>(); } set { this[nameof(DropItemMaxNum)].SetValue<int>(value); } }
        public int DropItemMaxNum_UNKO { get { return this[nameof(DropItemMaxNum_UNKO)].GetValue<int>(); } set { this[nameof(DropItemMaxNum_UNKO)].SetValue<int>(value); } }
        public int BaseCampMaxNum { get { return this[nameof(BaseCampMaxNum)].GetValue<int>(); } set { this[nameof(BaseCampMaxNum)].SetValue<int>(value); } }
        public int BaseCampWorkerMaxNum { get { return this[nameof(BaseCampWorkerMaxNum)].GetValue<int>(); } set { this[nameof(BaseCampWorkerMaxNum)].SetValue<int>(value); } }
        public float DropItemAliveMaxHours { get { return this[nameof(DropItemAliveMaxHours)].GetValue<float>(); } set { this[nameof(DropItemAliveMaxHours)].SetValue<float>(value); } }
        public bool bAutoResetGuildNoOnlinePlayers { get { return this[nameof(bAutoResetGuildNoOnlinePlayers)].Flag; } set { this[nameof(bAutoResetGuildNoOnlinePlayers)].Flag = value; } }
        public float AutoResetGuildTimeNoOnlinePlayers { get { return this[nameof(AutoResetGuildTimeNoOnlinePlayers)].GetValue<float>(); } set { this[nameof(AutoResetGuildTimeNoOnlinePlayers)].SetValue<float>(value); } }
        public int GuildPlayerMaxNum { get { return this[nameof(GuildPlayerMaxNum)].GetValue<int>(); } set { this[nameof(GuildPlayerMaxNum)].SetValue<int>(value); } }
        public float PalEggDefaultHatchingTime { get { return this[nameof(PalEggDefaultHatchingTime)].GetValue<float>(); } set { this[nameof(PalEggDefaultHatchingTime)].SetValue<float>(value); } }
        public float WorkSpeedRate { get { return this[nameof(WorkSpeedRate)].GetValue<float>(); } set { this[nameof(WorkSpeedRate)].SetValue<float>(value); } }
        public bool bIsMultiplay { get { return this[nameof(bIsMultiplay)].Flag; } set { this[nameof(bIsMultiplay)].Flag = value; } }
        public bool bIsPvP { get { return this[nameof(bIsPvP)].Flag; } set { this[nameof(bIsPvP)].Flag = value; } }
        public bool bCanPickupOtherGuildDeathPenaltyDrop { get { return this[nameof(bCanPickupOtherGuildDeathPenaltyDrop)].Flag; } set { this[nameof(bCanPickupOtherGuildDeathPenaltyDrop)].Flag = value; } }
        public bool bEnableNonLoginPenalty { get { return this[nameof(bEnableNonLoginPenalty)].Flag; } set { this[nameof(bEnableNonLoginPenalty)].Flag = value; } }
        public bool bEnableFastTravel { get { return this[nameof(bEnableFastTravel)].Flag; } set { this[nameof(bEnableFastTravel)].Flag = value; } }
        public bool bIsStartLocationSelectByMap { get { return this[nameof(bIsStartLocationSelectByMap)].Flag; } set { this[nameof(bIsStartLocationSelectByMap)].Flag = value; } }
        public bool bExistPlayerAfterLogout { get { return this[nameof(bExistPlayerAfterLogout)].Flag; } set { this[nameof(bExistPlayerAfterLogout)].Flag = value; } }
        public bool bEnableDefenseOtherGuildPlayer { get { return this[nameof(bEnableDefenseOtherGuildPlayer)].Flag; } set { this[nameof(bEnableDefenseOtherGuildPlayer)].Flag = value; } }
        public int CoopPlayerMaxNum { get { return this[nameof(CoopPlayerMaxNum)].GetValue<int>(); } set { this[nameof(CoopPlayerMaxNum)].SetValue<int>(value); } }
        public int ServerPlayerMaxNum { get { return this[nameof(ServerPlayerMaxNum)].GetValue<int>(); } set { this[nameof(ServerPlayerMaxNum)].SetValue<int>(value); } }
        public Object ServerName { get { return this[nameof(ServerName)]; } set { this[nameof(ServerName)] = value; } }
        public Object ServerDescription { get { return this[nameof(ServerDescription)]; } set { this[nameof(ServerDescription)] = value; } }
        public Object AdminPassword { get { return this[nameof(AdminPassword)]; } set { this[nameof(AdminPassword)] = value; } }
        public Object ServerPassword { get { return this[nameof(ServerPassword)]; } set { this[nameof(ServerPassword)] = value; } }
        public int PublicPort { get { return this[nameof(PublicPort)].GetValue<int>(); } set { this[nameof(PublicPort)].SetValue<int>(value); } }
        public Object PublicIP { get { return this[nameof(PublicIP)]; } set { this[nameof(PublicIP)] = value; } }
        public bool RCONEnabled { get { return this[nameof(RCONEnabled)].Flag; } set { this[nameof(RCONEnabled)].Flag = value; } }
        public int RCONPort { get { return this[nameof(RCONPort)].GetValue<int>(); } set { this[nameof(RCONPort)].SetValue<int>(value); } }
        public Object Region { get { return this[nameof(Region)]; } set { this[nameof(Region)] = value; } }
        public bool bUseAuth { get { return this[nameof(bUseAuth)].Flag; } set { this[nameof(bUseAuth)].Flag = value; } }
        public Object BanListURL { get { return this[nameof(BanListURL)]; } set { this[nameof(BanListURL)] = value; } }
    }
    public enum EPalOptionWorldDeathPenalty : int
    {
        None = 0,
        Item = 1,
        ItemAndEquipment = 2,
        All = 3,
        EPalOptionWorldDeathPenalty_MAX = 4,
    }
    public enum EPalOptionWorldDifficulty : int
    {
        None = 0,
        Easy = 1,
        Normal = 2,
        Hard = 3,
        Custom = 4,
        EPalOptionWorldDifficulty_MAX = 5,
    }
    public enum EPalMapBaseCampWorkerOrderType : int
    {
        Work = 0,
        BattleFighter = 1,
        BattleAllWorker = 2,
        EPalMapBaseCampWorkerOrderType_MAX = 3,
    }
    public enum EPalBaseCampWorkerDirectorState : int
    {
        Init = 0,
        WaitForLoadingAround = 1,
        Active = 2,
        EPalBaseCampWorkerDirectorState_MAX = 3,
    }
    public class PalBaseCampWorkAssignRequest : Object
    {
        public PalBaseCampWorkAssignRequest(nint addr) : base(addr) { }
    }
    public enum EPalBaseCampWorkerDirectionBattleType : int
    {
        AttackToEnemyInBaseCamp = 0,
        NoBattle = 1,
        Num = 2,
        FirstValue = 0,
        EPalBaseCampWorkerDirectionBattleType_MAX = 3,
    }
    public class ActorArray : Object
    {
        public ActorArray(nint addr) : base(addr) { }
        public Array<Actor> Actors { get { return new Array<Actor>(this[nameof(Actors)].Address); } }
    }
    public class PalHeatSourceInfo : Object
    {
        public PalHeatSourceInfo(nint addr) : base(addr) { }
        public int HeatLevel_DayTime { get { return this[nameof(HeatLevel_DayTime)].GetValue<int>(); } set { this[nameof(HeatLevel_DayTime)].SetValue<int>(value); } }
        public int HeatLevel_NightTime { get { return this[nameof(HeatLevel_NightTime)].GetValue<int>(); } set { this[nameof(HeatLevel_NightTime)].SetValue<int>(value); } }
    }
    public enum EPalBodyTemperatureState : int
    {
        Default = 0,
        Cold = 1,
        Heat = 2,
        EPalBodyTemperatureState_MAX = 3,
    }
    public enum EPalPlayerEquipItemSlotType : int
    {
        Head = 0,
        Body = 1,
        Accessory1 = 2,
        Accessory2 = 3,
        Shield = 4,
        Glider = 5,
        Max = 6,
    }
    public class PalStageInstanceId : Object
    {
        public PalStageInstanceId(nint addr) : base(addr) { }
        public Guid InternalId { get { return this[nameof(InternalId)].As<Guid>(); } set { this["InternalId"] = value; } }
        public bool bValid { get { return this[nameof(bValid)].Flag; } set { this[nameof(bValid)].Flag = value; } }
    }
    public class PalBossBattleStaticInfo : Object
    {
        public PalBossBattleStaticInfo(nint addr) : base(addr) { }
        public Object IntroCutscene { get { return this[nameof(IntroCutscene)]; } set { this[nameof(IntroCutscene)] = value; } }
        public DataLayerAsset DataLayerAsset { get { return this[nameof(DataLayerAsset)].As<DataLayerAsset>(); } set { this["DataLayerAsset"] = value; } }
        public PalDataTableRowName_PalMonsterData PalID { get { return this[nameof(PalID)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalID"] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public Object BGMAudioEvent { get { return this[nameof(BGMAudioEvent)]; } set { this[nameof(BGMAudioEvent)] = value; } }
    }
    public enum EPalBossBattleCombatResult : int
    {
        None = 0,
        Won = 1,
        TimeUp = 2,
        AllDead = 3,
        EPalBossBattleCombatResult_MAX = 4,
    }
    public enum EPalBossBattleSequenceType : int
    {
        None = 0,
        Opening = 1,
        Combat = 2,
        Ending = 3,
        Completed = 4,
        EPalBossBattleSequenceType_MAX = 5,
    }
    public enum EPalMapObjectOperationResult : int
    {
        None = 0,
        Canceled = 1,
        FailedInLimitVolume = 2,
        FailedInDungeon = 3,
        FailedOverflowBaseCampNumInGuild = 4,
        FailedOverflowBaseCampNumInWorld = 5,
        FailedTooNearOtherBaseCampArea = 6,
        FailedOtherGuildBaseCampArea = 7,
        FailedExceedMaxZ = 8,
        FailedCannotInstallNotInDoor = 9,
        FailedCannotInstallNotOnBase = 10,
        FailNotFoundBaseCampWorkerDirectorBelongTo = 11,
        FailedNotEnoughMaterials = 12,
        FailedInValidWeakSelf = 13,
        FailedInValidRequestHandler = 14,
        FailedNotReady = 15,
        FailNotFoundClass = 16,
        FailLackSupportedLevel = 17,
        FailNotConnectToOther = 18,
        FailedNotInstallOnBackground = 19,
        FailOverlap = 20,
        FailedIntersectOtherObject = 21,
        FailNotAttachToWall = 22,
        FailNotAttachToCeil = 23,
        FailNotFoundBuildObjectData = 24,
        FailNotFoundBaseCampBelongTo = 25,
        FailSpawnNotFoundBaseCampBelongTo = 26,
        FailedNotFoundModel = 27,
        FailedNotBuildObject = 28,
        FailedNotFoundBuildProcess = 29,
        FailedNotBuildingState = 30,
        FailNotFoundRequestPlayerPalStorage = 31,
        FailNotEnoughPalBoxEmptySlot = 32,
        FailedNotInstallBySurface = 33,
        FailedTooSteepSlopeAngle = 34,
        FailedAccessPointCannotGrounded = 35,
        FailedChestCannotGrounded = 36,
        FailedNotCanDismantleState = 37,
        FailedNotExistRequestPlayer = 38,
        Success = 39,
        EPalMapObjectOperationResult_MAX = 40,
    }
    public class PalBuildObjectData : TableRowBase
    {
        public PalBuildObjectData(nint addr) : base(addr) { }
        public Object MapObjectId { get { return this[nameof(MapObjectId)]; } set { this[nameof(MapObjectId)] = value; } }
        public EPalBuildObjectTypeA TypeA { get { return (EPalBuildObjectTypeA)this[nameof(TypeA)].GetValue<int>(); } set { this[nameof(TypeA)].SetValue<int>((int)value); } }
        public int RedialIndex { get { return this[nameof(RedialIndex)].GetValue<int>(); } set { this[nameof(RedialIndex)].SetValue<int>(value); } }
        public EPalBuildObjectTypeB TypeB { get { return (EPalBuildObjectTypeB)this[nameof(TypeB)].GetValue<int>(); } set { this[nameof(TypeB)].SetValue<int>((int)value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public int BuildCapacity { get { return this[nameof(BuildCapacity)].GetValue<int>(); } set { this[nameof(BuildCapacity)].SetValue<int>(value); } }
        public float RequiredBuildWorkAmount { get { return this[nameof(RequiredBuildWorkAmount)].GetValue<float>(); } set { this[nameof(RequiredBuildWorkAmount)].SetValue<float>(value); } }
        public int AssetValue { get { return this[nameof(AssetValue)].GetValue<int>(); } set { this[nameof(AssetValue)].SetValue<int>(value); } }
        public EPalEnergyType RequiredEnergyType { get { return (EPalEnergyType)this[nameof(RequiredEnergyType)].GetValue<int>(); } set { this[nameof(RequiredEnergyType)].SetValue<int>((int)value); } }
        public float ConsumeEnergySpeed { get { return this[nameof(ConsumeEnergySpeed)].GetValue<float>(); } set { this[nameof(ConsumeEnergySpeed)].SetValue<float>(value); } }
        public Object Material1_Id { get { return this[nameof(Material1_Id)]; } set { this[nameof(Material1_Id)] = value; } }
        public int Material1_Count { get { return this[nameof(Material1_Count)].GetValue<int>(); } set { this[nameof(Material1_Count)].SetValue<int>(value); } }
        public Object Material2_Id { get { return this[nameof(Material2_Id)]; } set { this[nameof(Material2_Id)] = value; } }
        public int Material2_Count { get { return this[nameof(Material2_Count)].GetValue<int>(); } set { this[nameof(Material2_Count)].SetValue<int>(value); } }
        public Object Material3_Id { get { return this[nameof(Material3_Id)]; } set { this[nameof(Material3_Id)] = value; } }
        public int Material3_Count { get { return this[nameof(Material3_Count)].GetValue<int>(); } set { this[nameof(Material3_Count)].SetValue<int>(value); } }
        public Object Material4_Id { get { return this[nameof(Material4_Id)]; } set { this[nameof(Material4_Id)] = value; } }
        public int Material4_Count { get { return this[nameof(Material4_Count)].GetValue<int>(); } set { this[nameof(Material4_Count)].SetValue<int>(value); } }
        public Object OverrideDescMsgID { get { return this[nameof(OverrideDescMsgID)]; } set { this[nameof(OverrideDescMsgID)] = value; } }
        public bool bInstallAtReticle { get { return this[nameof(bInstallAtReticle)].Flag; } set { this[nameof(bInstallAtReticle)].Flag = value; } }
        public float InstallNeighborThreshold { get { return this[nameof(InstallNeighborThreshold)].GetValue<float>(); } set { this[nameof(InstallNeighborThreshold)].SetValue<float>(value); } }
        public bool bIsInstallOnlyOnBase { get { return this[nameof(bIsInstallOnlyOnBase)].Flag; } set { this[nameof(bIsInstallOnlyOnBase)].Flag = value; } }
        public bool bIsInstallOnlyInDoor { get { return this[nameof(bIsInstallOnlyInDoor)].Flag; } set { this[nameof(bIsInstallOnlyInDoor)].Flag = value; } }
        public bool bIsInstallOnlyHubAround { get { return this[nameof(bIsInstallOnlyHubAround)].Flag; } set { this[nameof(bIsInstallOnlyHubAround)].Flag = value; } }
        public bool bInstallableNoObstacleFromCamera { get { return this[nameof(bInstallableNoObstacleFromCamera)].Flag; } set { this[nameof(bInstallableNoObstacleFromCamera)].Flag = value; } }
    }
    public enum EPalEnergyType : int
    {
        None = 0,
        Electric = 1,
        EPalEnergyType_MAX = 2,
    }
    public enum EPalBuildObjectTypeB : int
    {
        Prod_Craft = 0,
        Prod_Resource = 1,
        Prod_Furnace = 2,
        Prod_Medicine = 3,
        Pal_Capture = 4,
        Pal_Breed = 5,
        Pal_Modify = 6,
        Infra_Medical = 7,
        Infra_Storage = 8,
        Infra_Trade = 9,
        Infra_GeneratePower = 10,
        Infra_Defense = 11,
        Infra_Environment = 12,
        Food_Basic = 13,
        Food_Agriculture = 14,
        Food_Cooking = 15,
        Food_Livestock = 16,
        Found_Basic = 17,
        Found_House = 18,
        Other = 19,
        EPalBuildObjectTypeB_MAX = 20,
    }
    public enum EPalBuildObjectTypeA : int
    {
        Product = 0,
        Pal = 1,
        Storage = 2,
        Food = 3,
        Infrastructure = 4,
        Light = 5,
        Foundation = 6,
        Defense = 7,
        Other = 8,
        Furniture = 9,
        Dismantle = 10,
        EPalBuildObjectTypeA_MAX = 11,
    }
    public class PalBuildRequestDebugParameter : Object
    {
        public PalBuildRequestDebugParameter(nint addr) : base(addr) { }
        public bool bNotConsumeMaterials { get { return this[nameof(bNotConsumeMaterials)].Flag; } set { this[nameof(bNotConsumeMaterials)].Flag = value; } }
    }
    public class BuildingSurfaceMaterialSet : Object
    {
        public BuildingSurfaceMaterialSet(nint addr) : base(addr) { }
        public MaterialInstance Highlight { get { return this[nameof(Highlight)].As<MaterialInstance>(); } set { this["Highlight"] = value; } }
        public MaterialInstance Error { get { return this[nameof(Error)].As<MaterialInstance>(); } set { this["Error"] = value; } }
        public MaterialInstance Building { get { return this[nameof(Building)].As<MaterialInstance>(); } set { this["Building"] = value; } }
        public MaterialInstance BuildComplete { get { return this[nameof(BuildComplete)].As<MaterialInstance>(); } set { this["BuildComplete"] = value; } }
        public MaterialInstance Dismantle { get { return this[nameof(Dismantle)].As<MaterialInstance>(); } set { this["Dismantle"] = value; } }
        public MaterialInstance Damage { get { return this[nameof(Damage)].As<MaterialInstance>(); } set { this["Damage"] = value; } }
        public CurveFloat BuildCompleteAnimationCurve { get { return this[nameof(BuildCompleteAnimationCurve)].As<CurveFloat>(); } set { this["BuildCompleteAnimationCurve"] = value; } }
    }
    public enum EPalBuildProcessState : int
    {
        Building = 0,
        Completed = 1,
        EPalBuildProcessState_MAX = 2,
    }
    public class NetworkActorSpawnParameters : Object
    {
        public NetworkActorSpawnParameters(nint addr) : base(addr) { }
        public Actor NetworkOwner { get { return this[nameof(NetworkOwner)].As<Actor>(); } set { this["NetworkOwner"] = value; } }
        public Object Name { get { return this[nameof(Name)]; } set { this[nameof(Name)] = value; } }
        public Actor Owner { get { return this[nameof(Owner)].As<Actor>(); } set { this["Owner"] = value; } }
        public Vector SpawnLocation { get { return this[nameof(SpawnLocation)].As<Vector>(); } set { this["SpawnLocation"] = value; } }
        public Rotator SpawnRotation { get { return this[nameof(SpawnRotation)].As<Rotator>(); } set { this["SpawnRotation"] = value; } }
        public Vector SpawnScale { get { return this[nameof(SpawnScale)].As<Vector>(); } set { this["SpawnScale"] = value; } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingOverride { get { return (ESpawnActorCollisionHandlingMethod)this[nameof(SpawnCollisionHandlingOverride)].GetValue<int>(); } set { this[nameof(SpawnCollisionHandlingOverride)].SetValue<int>((int)value); } }
        public bool bAlwaysRelevant { get { return this[nameof(bAlwaysRelevant)].Flag; } set { this[nameof(bAlwaysRelevant)].Flag = value; } }
    }
    public enum EPalWalkableFloorAnglePriority : int
    {
        None = 0,
        Default = 1,
        Ride = 2,
        Action = 3,
        EPalWalkableFloorAnglePriority_MAX = 4,
    }
    public enum EEnterWaterFlag : int
    {
        None = 0,
        OverlapWaterVolume = 1,
        RaycastWaterPlane = 2,
        EEnterWaterFlag_MAX = 3,
    }
    public class PalMapObjectAppearanceDataWithId : Object
    {
        public PalMapObjectAppearanceDataWithId(nint addr) : base(addr) { }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public PalMapObjectAppearanceData AppearanceData { get { return this[nameof(AppearanceData)].As<PalMapObjectAppearanceData>(); } set { this["AppearanceData"] = value; } }
    }
    public class PalMapObjectAppearanceData : Object
    {
        public PalMapObjectAppearanceData(nint addr) : base(addr) { }
        public GameDateTime DateTime { get { return this[nameof(DateTime)].As<GameDateTime>(); } set { this["DateTime"] = value; } }
    }
    public class PalWorkAssignHandleId : Object
    {
        public PalWorkAssignHandleId(nint addr) : base(addr) { }
        public Guid WorkId { get { return this[nameof(WorkId)].As<Guid>(); } set { this["WorkId"] = value; } }
        public int LocationIndex { get { return this[nameof(LocationIndex)].GetValue<int>(); } set { this[nameof(LocationIndex)].SetValue<int>(value); } }
        public EPalWorkAssignType AssignType { get { return (EPalWorkAssignType)this[nameof(AssignType)].GetValue<int>(); } set { this[nameof(AssignType)].SetValue<int>((int)value); } }
    }
    public enum EPalWorkAssignType : int
    {
        None = 0,
        Work = 1,
        WorkAttack = 2,
        Defense = 3,
        EPalWorkAssignType_MAX = 4,
    }
    public class PalCharacterParameter_Work : Object
    {
        public PalCharacterParameter_Work(nint addr) : base(addr) { }
        public Guid MapObjectInstanceIdApproachTo { get { return this[nameof(MapObjectInstanceIdApproachTo)].As<Guid>(); } set { this["MapObjectInstanceIdApproachTo"] = value; } }
        public bool bApproachToAssignedLocation { get { return this[nameof(bApproachToAssignedLocation)].Flag; } set { this[nameof(bApproachToAssignedLocation)].Flag = value; } }
        public float RepairRequiredWorkAmount { get { return this[nameof(RepairRequiredWorkAmount)].GetValue<float>(); } set { this[nameof(RepairRequiredWorkAmount)].SetValue<float>(value); } }
        public FlagContainer NotWorkableFlag { get { return this[nameof(NotWorkableFlag)].As<FlagContainer>(); } set { this["NotWorkableFlag"] = value; } }
    }
    public class PalStatusAccumulate : Object
    {
        public PalStatusAccumulate(nint addr) : base(addr) { }
    }
    public class PalCharacterStoredParameterId : Object
    {
        public PalCharacterStoredParameterId(nint addr) : base(addr) { }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
    }
    public class PalCharacterStoredParameterInfo : Object
    {
        public PalCharacterStoredParameterInfo(nint addr) : base(addr) { }
        public PalIndividualCharacterSaveParameter SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameter"] = value; } }
        public GameDateTime StoredAt { get { return this[nameof(StoredAt)].As<GameDateTime>(); } set { this["StoredAt"] = value; } }
        public Guid LostPlayerUId { get { return this[nameof(LostPlayerUId)].As<Guid>(); } set { this["LostPlayerUId"] = value; } }
    }
    public enum EPalContainerOperationRestrictType : int
    {
        None = 0,
        CannotInject = 1,
        EPalContainerOperationRestrictType_MAX = 2,
    }
    public enum EHumanBone : int
    {
        Pelvis = 0,
        Spine1 = 1,
        Spine2 = 2,
        Spine3 = 3,
        Neck = 4,
        Head = 5,
        LeftThigh = 6,
        LeftCalf = 7,
        LeftFoot = 8,
        RightThigh = 9,
        RightCalf = 10,
        RightFoot = 11,
        LeftClavicle = 12,
        LeftUpperArm = 13,
        LeftLowerArm = 14,
        LeftHand = 15,
        RightClavicle = 16,
        RightUpperArm = 17,
        RightLowerArm = 18,
        RightHand = 19,
        EnumCount = 20,
        EHumanBone_MAX = 21,
    }
    public class PalDamageRactionInfo : Object
    {
        public PalDamageRactionInfo(nint addr) : base(addr) { }
        public bool IsBlow { get { return this[nameof(IsBlow)].Flag; } set { this[nameof(IsBlow)].Flag = value; } }
        public Vector BlowVelocity { get { return this[nameof(BlowVelocity)].As<Vector>(); } set { this["BlowVelocity"] = value; } }
        public bool IsLeanBackAnime { get { return this[nameof(IsLeanBackAnime)].Flag; } set { this[nameof(IsLeanBackAnime)].Flag = value; } }
        public bool IsStan { get { return this[nameof(IsStan)].Flag; } set { this[nameof(IsStan)].Flag = value; } }
        public Vector HitLocation { get { return this[nameof(HitLocation)].As<Vector>(); } set { this["HitLocation"] = value; } }
    }
    public class PalEachDamageRactionInfo : Object
    {
        public PalEachDamageRactionInfo(nint addr) : base(addr) { }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
        public bool IsBlow { get { return this[nameof(IsBlow)].Flag; } set { this[nameof(IsBlow)].Flag = value; } }
        public bool IsLeanBackAnime { get { return this[nameof(IsLeanBackAnime)].Flag; } set { this[nameof(IsLeanBackAnime)].Flag = value; } }
        public bool IsStan { get { return this[nameof(IsStan)].Flag; } set { this[nameof(IsStan)].Flag = value; } }
        public EPalWazaCategory WazaCategory { get { return (EPalWazaCategory)this[nameof(WazaCategory)].GetValue<int>(); } set { this[nameof(WazaCategory)].SetValue<int>((int)value); } }
    }
    public enum EPalBiomeType : int
    {
        Undefined = 0,
        Meadow = 1,
        Desert = 2,
        Coast = 3,
        IceSnow = 4,
        Volcano = 5,
        CentralCity = 6,
        SkyCityCity = 7,
        WorldTree = 8,
        EPalBiomeType_MAX = 9,
    }
    public enum EPalAudioBus : int
    {
        None = 0,
        Master = 1,
        BGM = 2,
        JINGLE = 3,
        SE = 4,
        Ambient = 5,
        PalVoice = 6,
        HumanVoice = 7,
        UI = 8,
        MAX = 9,
    }
    public class PalDebugAttachPassiveSkillInfo : Object
    {
        public PalDebugAttachPassiveSkillInfo(nint addr) : base(addr) { }
        public Array<PalDataTableRowName_PassiveSkillData> skill { get { return new Array<PalDataTableRowName_PassiveSkillData>(this[nameof(skill)].Address); } }
    }
    public enum EPalStatusID : int
    {
        None = 0,
        ControlSP = 1,
        GainHP = 2,
        StepCooldown = 3,
        DrownCheck = 4,
        Poison = 5,
        UNKOTimer = 6,
        Stan = 7,
        Coma = 8,
        Sleep = 9,
        Overwork = 10,
        Happiness = 11,
        Resistance = 12,
        Moratorium = 13,
        Drown = 14,
        Dying = 15,
        ShieldRecovery = 16,
        FallDamage = 17,
        LavaDamage = 18,
        Burn = 19,
        Wetness = 20,
        Freeze = 21,
        Electrical = 22,
        Muddy = 23,
        IvyCling = 24,
        Darkness = 25,
        AttackUp = 26,
        DefenseUp = 27,
        CollectItem = 28,
        LifeSteal = 29,
        EPalStatusID_MAX = 30,
    }
    public class PalArrowSettings : Object
    {
        public PalArrowSettings(nint addr) : base(addr) { }
        public Color Color { get { return this[nameof(Color)].As<Color>(); } set { this["Color"] = value; } }
        public float Size { get { return this[nameof(Size)].GetValue<float>(); } set { this[nameof(Size)].SetValue<float>(value); } }
        public float Thickness { get { return this[nameof(Thickness)].GetValue<float>(); } set { this[nameof(Thickness)].SetValue<float>(value); } }
    }
    public class PalDebugItemCreateInfo : Object
    {
        public PalDebugItemCreateInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemData itemRowName { get { return this[nameof(itemRowName)].As<PalDataTableRowName_ItemData>(); } set { this["itemRowName"] = value; } }
        public int itemNum { get { return this[nameof(itemNum)].GetValue<int>(); } set { this[nameof(itemNum)].SetValue<int>(value); } }
    }
    public class PalDebugPalCaptureInfo : Object
    {
        public PalDebugPalCaptureInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData PalName { get { return this[nameof(PalName)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalName"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalDataTableRowName_GameProgressPreset : Object
    {
        public PalDataTableRowName_GameProgressPreset(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalLanguageType : int
    {
        JP = 0,
        EN = 1,
        ZH_HANS = 2,
        ZH_HANT = 3,
        FR = 4,
        IT = 5,
        DE = 6,
        ES = 7,
        KO = 8,
        PT_BR = 9,
        RU = 10,
        EPalLanguageType_MAX = 11,
    }
    public enum EPalDungeonInstanceBossState : int
    {
        Spawned = 0,
        Dead = 1,
        EPalDungeonInstanceBossState_MAX = 2,
    }
    public class PalMapObjectSaveData : Object
    {
        public PalMapObjectSaveData(nint addr) : base(addr) { }
        public Vector WorldLocation { get { return this[nameof(WorldLocation)].As<Vector>(); } set { this["WorldLocation"] = value; } }
        public Quat WorldRotation { get { return this[nameof(WorldRotation)].As<Quat>(); } set { this["WorldRotation"] = value; } }
        public Vector WorldScale3D { get { return this[nameof(WorldScale3D)].As<Vector>(); } set { this["WorldScale3D"] = value; } }
        public Object MapObjectId { get { return this[nameof(MapObjectId)]; } set { this[nameof(MapObjectId)] = value; } }
        public Guid MapObjectInstanceId { get { return this[nameof(MapObjectInstanceId)].As<Guid>(); } set { this["MapObjectInstanceId"] = value; } }
        public Guid MapObjectConcreteModelInstanceId { get { return this[nameof(MapObjectConcreteModelInstanceId)].As<Guid>(); } set { this["MapObjectConcreteModelInstanceId"] = value; } }
        public PalMapObjectModelSaveData Model { get { return this[nameof(Model)].As<PalMapObjectModelSaveData>(); } set { this["Model"] = value; } }
        public PalMapObjectConcreteModelSaveData ConcreteModel { get { return this[nameof(ConcreteModel)].As<PalMapObjectConcreteModelSaveData>(); } set { this["ConcreteModel"] = value; } }
    }
    public class PalBinaryMemory : Object
    {
        public PalBinaryMemory(nint addr) : base(addr) { }
        public Array<byte> RawData { get { return new Array<byte>(this[nameof(RawData)].Address); } }
    }
    public class PalMapObjectConcreteModelSaveData : PalBinaryMemory
    {
        public PalMapObjectConcreteModelSaveData(nint addr) : base(addr) { }
        public Object ModuleMap { get { return this[nameof(ModuleMap)]; } set { this[nameof(ModuleMap)] = value; } }
    }
    public enum EPalMapObjectConcreteModelModuleType : int
    {
        None = 0,
        ItemContainer = 1,
        CharacterContainer = 2,
        Workee = 3,
        Energy = 4,
        StatusObserver = 5,
        ItemStack = 6,
        Switch = 7,
        PlayerRecord = 8,
        BaseCampPassiveEffect = 9,
        PasswordLock = 10,
        EPalMapObjectConcreteModelModuleType_MAX = 11,
    }
    public class PalMapObjectConcreteModelModuleSaveData : PalBinaryMemory
    {
        public PalMapObjectConcreteModelModuleSaveData(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelSaveData : PalBinaryMemory
    {
        public PalMapObjectModelSaveData(nint addr) : base(addr) { }
        public PalMapObjectBuildProcessSaveData BuildProcess { get { return this[nameof(BuildProcess)].As<PalMapObjectBuildProcessSaveData>(); } set { this["BuildProcess"] = value; } }
        public PalMapObjectConnectorSaveData Connector { get { return this[nameof(Connector)].As<PalMapObjectConnectorSaveData>(); } set { this["Connector"] = value; } }
        public Object EffectMap { get { return this[nameof(EffectMap)]; } set { this[nameof(EffectMap)] = value; } }
    }
    public class PalMapObjectEffectSaveData : PalBinaryMemory
    {
        public PalMapObjectEffectSaveData(nint addr) : base(addr) { }
    }
    public class PalMapObjectConnectorSaveData : PalBinaryMemory
    {
        public PalMapObjectConnectorSaveData(nint addr) : base(addr) { }
    }
    public class PalMapObjectBuildProcessSaveData : PalBinaryMemory
    {
        public PalMapObjectBuildProcessSaveData(nint addr) : base(addr) { }
    }
    public class PalDynamicItemDisposeWaitNotifyInfo : Object
    {
        public PalDynamicItemDisposeWaitNotifyInfo(nint addr) : base(addr) { }
        public Array<PalDynamicItemId> DynamicItemIds { get { return new Array<PalDynamicItemId>(this[nameof(DynamicItemIds)].Address); } }
        public Array<int> WaitPlayerIds { get { return new Array<int>(this[nameof(WaitPlayerIds)].Address); } }
    }
    public class PalItemCreateParameter : Object
    {
        public PalItemCreateParameter(nint addr) : base(addr) { }
        public PalPassiveSkillAssignInfo PassiveSkillAssignInfo { get { return this[nameof(PassiveSkillAssignInfo)].As<PalPassiveSkillAssignInfo>(); } set { this["PassiveSkillAssignInfo"] = value; } }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
    }
    public class PalPassiveSkillAssignInfo : Object
    {
        public PalPassiveSkillAssignInfo(nint addr) : base(addr) { }
        public bool isDoNotSetSkills { get { return this[nameof(isDoNotSetSkills)].Flag; } set { this[nameof(isDoNotSetSkills)].Flag = value; } }
        public Array<Object> ForceSetSkillList { get { return new Array<Object>(this[nameof(ForceSetSkillList)].Address); } }
    }
    public class PalFoliageGridInstanceMap : Object
    {
        public PalFoliageGridInstanceMap(nint addr) : base(addr) { }
        public Object InstanceMap { get { return this[nameof(InstanceMap)]; } set { this[nameof(InstanceMap)] = value; } }
    }
    public class PalFoliageInstanceTransform : Object
    {
        public PalFoliageInstanceTransform(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Rotator Rotator { get { return this[nameof(Rotator)].As<Rotator>(); } set { this["Rotator"] = value; } }
        public float ScaleX { get { return this[nameof(ScaleX)].GetValue<float>(); } set { this[nameof(ScaleX)].SetValue<float>(value); } }
    }
    public class PalGliderPalInfo : Object
    {
        public PalGliderPalInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData PalName { get { return this[nameof(PalName)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalName"] = value; } }
        public Array<Object> GliderPalArray { get { return new Array<Object>(this[nameof(GliderPalArray)].Address); } }
    }
    public enum EPalOrganizationType : int
    {
        None = 0,
        Guild = 1,
        Police = 2,
        City = 3,
        Brigade = 4,
        TeamBlackHunter = 5,
        TeamFireCult = 6,
        TeamWelfareGroup = 7,
        MAX = 8,
    }
    public enum EPalFadeWidgetType : int
    {
        Invalid = 0,
        SimpleColor = 1,
        Loading = 2,
        EPalFadeWidgetType_MAX = 3,
    }
    public enum EPalHUDWidgetPriority : int
    {
        Default = 0,
        EnemyMark = 1,
        DamagePopUp = 2,
        PlayerInputGuard = 3,
        PlayerUI = 4,
        CaptureingLoupe = 5,
        CaptureReticle = 6,
        InteractIndicator = 7,
        BuildingUI = 8,
        RadialMenu = 9,
        GameOverUI = 10,
        DebugInfo = 11,
        EPalHUDWidgetPriority_MAX = 12,
    }
    public class PalWorldHUDParameter : Object
    {
        public PalWorldHUDParameter(nint addr) : base(addr) { }
        public Object TargetActor { get { return this[nameof(TargetActor)]; } set { this[nameof(TargetActor)] = value; } }
        public Vector TargetLocation { get { return this[nameof(TargetLocation)].As<Vector>(); } set { this["TargetLocation"] = value; } }
        public Object WorldHUDClass { get { return this[nameof(WorldHUDClass)]; } set { this[nameof(WorldHUDClass)] = value; } }
        public EPalWorldHUDWidgetBlueprintType WorldHUDType { get { return (EPalWorldHUDWidgetBlueprintType)this[nameof(WorldHUDType)].GetValue<int>(); } set { this[nameof(WorldHUDType)].SetValue<int>((int)value); } }
        public PalHUDDispatchParameterBase HUDParameter { get { return this[nameof(HUDParameter)].As<PalHUDDispatchParameterBase>(); } set { this["HUDParameter"] = value; } }
        public Vector DisplayOffset { get { return this[nameof(DisplayOffset)].As<Vector>(); } set { this["DisplayOffset"] = value; } }
        public Vector2D DisplayOffsetScreenPos { get { return this[nameof(DisplayOffsetScreenPos)].As<Vector2D>(); } set { this["DisplayOffsetScreenPos"] = value; } }
        public float DisplayRange { get { return this[nameof(DisplayRange)].GetValue<float>(); } set { this[nameof(DisplayRange)].SetValue<float>(value); } }
        public bool bEnableShow { get { return this[nameof(bEnableShow)].Flag; } set { this[nameof(bEnableShow)].Flag = value; } }
    }
    public enum EPalWorldHUDWidgetBlueprintType : int
    {
        Undefined = 0,
        ConvertItem = 1,
        ProductItem = 2,
        FarmCrop = 3,
        FarmBlockV2 = 4,
        BuildProgress = 5,
        LackElectricity = 6,
        RecoverPal = 7,
        HatchingPalEgg = 8,
        GenerateEnergy = 9,
        HeadupWantFood = 10,
        HeadupPossessItem = 11,
        HeadupInvader = 12,
        BossEntryWait = 13,
        BreedFarm = 14,
        MapObjectHP = 15,
        CommonWorkRequirement = 16,
        EPalWorldHUDWidgetBlueprintType_MAX = 17,
    }
    public class PalUICommonItemInfoDisplayData : Object
    {
        public PalUICommonItemInfoDisplayData(nint addr) : base(addr) { }
        public PalItemSlot TargetItemSlot { get { return this[nameof(TargetItemSlot)].As<PalItemSlot>(); } set { this["TargetItemSlot"] = value; } }
        public Object RecipeID { get { return this[nameof(RecipeID)]; } set { this[nameof(RecipeID)] = value; } }
        public Widget RelativeWidget { get { return this[nameof(RelativeWidget)].As<Widget>(); } set { this["RelativeWidget"] = value; } }
        public Vector2D AnchorPosition { get { return this[nameof(AnchorPosition)].As<Vector2D>(); } set { this["AnchorPosition"] = value; } }
        public bool IsUsableSlot { get { return this[nameof(IsUsableSlot)].Flag; } set { this[nameof(IsUsableSlot)].Flag = value; } }
        public bool IsEnableQuickEquip { get { return this[nameof(IsEnableQuickEquip)].Flag; } set { this[nameof(IsEnableQuickEquip)].Flag = value; } }
        public bool IsEnableQuickMove { get { return this[nameof(IsEnableQuickMove)].Flag; } set { this[nameof(IsEnableQuickMove)].Flag = value; } }
        public bool IsEnableSpreadLift { get { return this[nameof(IsEnableSpreadLift)].Flag; } set { this[nameof(IsEnableSpreadLift)].Flag = value; } }
        public bool IsShowPrice { get { return this[nameof(IsShowPrice)].Flag; } set { this[nameof(IsShowPrice)].Flag = value; } }
    }
    public class PalUICommonRewardDisplayData : Object
    {
        public PalUICommonRewardDisplayData(nint addr) : base(addr) { }
        public Object Message { get { return this[nameof(Message)]; } set { this[nameof(Message)] = value; } }
        public Texture2D Texture { get { return this[nameof(Texture)].As<Texture2D>(); } set { this["Texture"] = value; } }
        public Object SoftTexture { get { return this[nameof(SoftTexture)]; } set { this[nameof(SoftTexture)] = value; } }
        public EPalUIRewardDisplayType DisplayType { get { return (EPalUIRewardDisplayType)this[nameof(DisplayType)].GetValue<int>(); } set { this[nameof(DisplayType)].SetValue<int>((int)value); } }
    }
    public enum EPalUIRewardDisplayType : int
    {
        Default = 0,
        GetItem = 1,
        HatchedPal = 2,
        FastTravel = 3,
        DefeatBoss = 4,
        EPalUIRewardDisplayType_MAX = 5,
    }
    public enum EPalWidgetBlueprintType : int
    {
        Undefined = 0,
        Dialog = 1,
        MonsterDetail = 2,
        WorldMap = 3,
        ConvertItemDetail = 4,
        CharacterRankUp = 5,
        RecoverOtomo = 6,
        ItemChest = 7,
        WorkerRadialMenu = 8,
        FoodBox = 9,
        SelectItem_PlayerInventory = 10,
        PlayerStatusOperation = 11,
        PalStatusOperation = 12,
        CommonReward = 13,
        MapObjectSecuritySetting = 14,
        PasswordSetting = 15,
        BaseCampWorkHard = 16,
        CutsceneOverlay = 17,
        EPalWidgetBlueprintType_MAX = 18,
    }
    public enum EPalFadeWidgetLayerType : int
    {
        Invalid = 0,
        Common_Lowest = 1,
        Common_Mid = 2,
        Common_Highest = 3,
        Loading = 4,
        Loading_WorldPartition = 5,
        Loading_SucceedRequestEnterExitStageInClient = 6,
        EPalFadeWidgetLayerType_MAX = 7,
    }
    public class UITransientData : Object
    {
        public UITransientData(nint addr) : base(addr) { }
        public int RadialMenuLastTab { get { return this[nameof(RadialMenuLastTab)].GetValue<int>(); } set { this[nameof(RadialMenuLastTab)].SetValue<int>(value); } }
        public bool IsCampTaskUIOpen { get { return this[nameof(IsCampTaskUIOpen)].Flag; } set { this[nameof(IsCampTaskUIOpen)].Flag = value; } }
        public Object LastOpenedPaldexCharacter { get { return this[nameof(LastOpenedPaldexCharacter)]; } set { this[nameof(LastOpenedPaldexCharacter)] = value; } }
        public bool NewsOpened { get { return this[nameof(NewsOpened)].Flag; } set { this[nameof(NewsOpened)].Flag = value; } }
        public bool IsOpenedSurvivalGuide { get { return this[nameof(IsOpenedSurvivalGuide)].Flag; } set { this[nameof(IsOpenedSurvivalGuide)].Flag = value; } }
        public bool ServerLobbyDialogOpened { get { return this[nameof(ServerLobbyDialogOpened)].Flag; } set { this[nameof(ServerLobbyDialogOpened)].Flag = value; } }
    }
    public class PalIncidentNotifyParameter : Object
    {
        public PalIncidentNotifyParameter(nint addr) : base(addr) { }
        public Object IncidentId { get { return this[nameof(IncidentId)]; } set { this[nameof(IncidentId)] = value; } }
        public Object IncidentType { get { return this[nameof(IncidentType)]; } set { this[nameof(IncidentType)] = value; } }
        public Object OccuredObject { get { return this[nameof(OccuredObject)].As<Object>(); } set { this["OccuredObject"] = value; } }
        public Object OwnerObject { get { return this[nameof(OwnerObject)].As<Object>(); } set { this["OwnerObject"] = value; } }
        public PalIncidentBase IncidentObject { get { return this[nameof(IncidentObject)].As<PalIncidentBase>(); } set { this["IncidentObject"] = value; } }
    }
    public enum EPalIncidentState : int
    {
        None = 0,
        Initialized = 1,
        Executing = 2,
        Completed = 3,
        Canceled = 4,
        InstanceCreateFailed = 255,
        EPalIncidentState_MAX = 256,
    }
    public class PalIncidentInitializeParameter : Object
    {
        public PalIncidentInitializeParameter(nint addr) : base(addr) { }
    }
    public class PalIndividualCharacterEquipItemContainerHandler : Object
    {
        public PalIndividualCharacterEquipItemContainerHandler(nint addr) : base(addr) { }
    }
    public enum EPalFoodStatusEffectType : int
    {
        None = 0,
        Attack = 1,
        Defense = 2,
        HungerResist = 3,
        SANResist = 4,
        WorkSpeed = 5,
        EPalFoodStatusEffectType_MAX = 6,
    }
    public enum EPalTribeID : int
    {
        None = 0,
        Anubis = 1,
        Baphomet = 2,
        Baphomet_Dark = 3,
        Bastet = 4,
        Bastet_Ice = 5,
        Boar = 6,
        Carbunclo = 7,
        ColorfulBird = 8,
        Deer = 9,
        DrillGame = 10,
        Eagle = 11,
        ElecPanda = 12,
        Ganesha = 13,
        Garm = 14,
        Gorilla = 15,
        Hedgehog = 16,
        Hedgehog_Ice = 17,
        Kirin = 18,
        Kitsunebi = 19,
        LittleBriarRose = 20,
        Mutant = 21,
        Owl = 22,
        Penguin = 23,
        RaijinDaughter = 24,
        SharkKid = 25,
        SheepBall = 26,
        Umihebi = 27,
        Werewolf = 28,
        WindChimes = 29,
        Suzaku = 30,
        Suzaku_Water = 31,
        FireKirin = 32,
        FairyDragon = 33,
        FairyDragon_Water = 34,
        SweetsSheep = 35,
        WhiteTiger = 36,
        Alpaca = 37,
        Serpent = 38,
        Serpent_Ground = 39,
        DarkCrow = 40,
        BlueDragon = 41,
        PinkCat = 42,
        NegativeKoala = 43,
        FengyunDeeper = 44,
        VolcanicMonster = 45,
        VolcanicMonster_Ice = 46,
        GhostBeast = 47,
        RobinHood = 48,
        LazyDragon = 49,
        LazyDragon_Electric = 50,
        AmaterasuWolf = 51,
        LizardMan = 52,
        Blueplatypus = 53,
        BlackFurDragon = 54,
        BeardedDragon = 55,
        BirdDragon = 56,
        BirdDragon_Ice = 57,
        PinkKangaroo = 58,
        ChickenPal = 59,
        FlowerDinosaur = 60,
        FlowerDinosaur_Electric = 61,
        ElecCat = 62,
        IceHorse = 63,
        IceHorse_Dark = 64,
        GrassMammoth = 65,
        CatVampire = 66,
        SakuraSaurus = 67,
        SakuraSaurus_Water = 68,
        Horus = 69,
        KingBahamut = 70,
        BerryGoat = 71,
        IceDeer = 72,
        BlackGriffon = 73,
        WhiteMoth = 74,
        CuteFox = 75,
        FoxMage = 76,
        PinkLizard = 77,
        WaterLizard = 78,
        ElecLion = 79,
        GuardianDog = 80,
        GrassDragon = 81,
        WizardOwl = 82,
        Kelpie = 83,
        NegativeOctopus = 84,
        CowPal = 85,
        Yeti = 86,
        Yeti_Grass = 87,
        VioletFairy = 88,
        HawkBird = 89,
        FlowerRabbit = 90,
        LilyQueen = 91,
        LilyQueen_Dark = 92,
        QueenBee = 93,
        SoldierBee = 94,
        CatBat = 95,
        GrassPanda = 96,
        GrassPanda_Electric = 97,
        FlameBuffalo = 98,
        ThunderDog = 99,
        CuteMole = 100,
        BlackMetalDragon = 101,
        GrassRabbitMan = 102,
        IceFox = 103,
        JetDragon = 104,
        DreamDemon = 105,
        Monkey = 106,
        Manticore = 107,
        Manticore_Dark = 108,
        KingAlpaca = 109,
        PlantSlime = 110,
        DarkMutant = 111,
        MopBaby = 112,
        MopKing = 113,
        CatMage = 114,
        PinkRabbit = 115,
        ThunderBird = 116,
        HerculesBeetle = 117,
        SaintCentaur = 118,
        NightFox = 119,
        CaptainPenguin = 120,
        WeaselDragon = 121,
        SkyDragon = 122,
        HadesBird = 123,
        RedArmorBird = 124,
        Ronin = 125,
        FlyingManta = 126,
        BlackCentaur = 127,
        FlowerDoll = 128,
        NaughtyCat = 129,
        CuteButterfly = 130,
        DarkScorpion = 131,
        ThunderDragonMan = 132,
        WoolFox = 133,
        SifuDog = 134,
        TentacleTurtle = 135,
        GoldenHorse = 136,
        BadCatgirl = 137,
        BrownRabbit = 138,
        FeatherOstrich = 139,
        WingGolem = 140,
        ScorpionMan = 141,
        BlueberryFairy = 142,
        LazyCatfish = 143,
        Deer_Ground = 144,
        FireKirin_Dark = 145,
        KingAlpaca_Ice = 146,
        RobinHood_Ground = 147,
        GrassMammoth_Ice = 148,
        Kelpie_Fire = 149,
        SharkKid_Fire = 150,
        LizardMan_Fire = 151,
        LavaGirl = 152,
        FlameBambi = 153,
        Umihebi_Fire = 154,
        WindChimes_Ice = 155,
        Human = 156,
        EPalTribeID_MAX = 157,
    }
    public enum EPalGenusCategoryType : int
    {
        None = 0,
        Humanoid = 1,
        FourLegged = 2,
        Dragon = 3,
        Fish = 4,
        Bird = 5,
        Monster = 6,
        Other = 7,
        EPalGenusCategoryType_MAX = 8,
    }
    public enum EPalCharacterNaturalUpdateType : int
    {
        Player = 0,
        OtomoPal = 1,
        BaseCampPal = 2,
        EPalCharacterNaturalUpdateType_MAX = 3,
    }
    public class PalItemSlotIdAndNum : Object
    {
        public PalItemSlotIdAndNum(nint addr) : base(addr) { }
        public PalItemSlotId SlotID { get { return this[nameof(SlotID)].As<PalItemSlotId>(); } set { this["SlotID"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalPhantomReplicateInfo : Object
    {
        public PalPhantomReplicateInfo(nint addr) : base(addr) { }
        public int ID { get { return this[nameof(ID)].GetValue<int>(); } set { this[nameof(ID)].SetValue<int>(value); } }
        public PalCharacter Character { get { return this[nameof(Character)].As<PalCharacter>(); } set { this["Character"] = value; } }
    }
    public enum EPalInteractiveObjectActionType : int
    {
        None = 0,
        Interact1 = 1,
        Interact2 = 2,
        Interact3 = 3,
        Interact4 = 4,
        EPalInteractiveObjectActionType_MAX = 5,
    }
    public class PalIncidentBroadcastParameter : Object
    {
        public PalIncidentBroadcastParameter(nint addr) : base(addr) { }
        public EPalInvaderType InvaderType { get { return (EPalInvaderType)this[nameof(InvaderType)].GetValue<int>(); } set { this[nameof(InvaderType)].SetValue<int>((int)value); } }
        public PalBaseCampModel TargetBaseCamp { get { return this[nameof(TargetBaseCamp)].As<PalBaseCampModel>(); } set { this["TargetBaseCamp"] = value; } }
        public PalInvaderDatabaseRow ChosenInvaderData { get { return this[nameof(ChosenInvaderData)].As<PalInvaderDatabaseRow>(); } set { this["ChosenInvaderData"] = value; } }
        public Guid GroupGuid { get { return this[nameof(GroupGuid)].As<Guid>(); } set { this["GroupGuid"] = value; } }
    }
    public class PalInvaderDatabaseRow : TableRowBase
    {
        public PalInvaderDatabaseRow(nint addr) : base(addr) { }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public EPalBiomeType BiomeID { get { return (EPalBiomeType)this[nameof(BiomeID)].GetValue<int>(); } set { this[nameof(BiomeID)].SetValue<int>((int)value); } }
        public int InvadeGradeMin { get { return this[nameof(InvadeGradeMin)].GetValue<int>(); } set { this[nameof(InvadeGradeMin)].SetValue<int>(value); } }
        public int InvadeGradeMax { get { return this[nameof(InvadeGradeMax)].GetValue<int>(); } set { this[nameof(InvadeGradeMax)].SetValue<int>(value); } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public Object CharactorID_A { get { return this[nameof(CharactorID_A)]; } set { this[nameof(CharactorID_A)] = value; } }
        public int LevelMin_A { get { return this[nameof(LevelMin_A)].GetValue<int>(); } set { this[nameof(LevelMin_A)].SetValue<int>(value); } }
        public int LevelMax_A { get { return this[nameof(LevelMax_A)].GetValue<int>(); } set { this[nameof(LevelMax_A)].SetValue<int>(value); } }
        public int Number_A { get { return this[nameof(Number_A)].GetValue<int>(); } set { this[nameof(Number_A)].SetValue<int>(value); } }
        public Object CharactorID_B { get { return this[nameof(CharactorID_B)]; } set { this[nameof(CharactorID_B)] = value; } }
        public int LevelMin_B { get { return this[nameof(LevelMin_B)].GetValue<int>(); } set { this[nameof(LevelMin_B)].SetValue<int>(value); } }
        public int LevelMax_B { get { return this[nameof(LevelMax_B)].GetValue<int>(); } set { this[nameof(LevelMax_B)].SetValue<int>(value); } }
        public int Number_B { get { return this[nameof(Number_B)].GetValue<int>(); } set { this[nameof(Number_B)].SetValue<int>(value); } }
        public Object CharactorID_C { get { return this[nameof(CharactorID_C)]; } set { this[nameof(CharactorID_C)] = value; } }
        public int LevelMin_C { get { return this[nameof(LevelMin_C)].GetValue<int>(); } set { this[nameof(LevelMin_C)].SetValue<int>(value); } }
        public int LevelMax_C { get { return this[nameof(LevelMax_C)].GetValue<int>(); } set { this[nameof(LevelMax_C)].SetValue<int>(value); } }
        public int Number_C { get { return this[nameof(Number_C)].GetValue<int>(); } set { this[nameof(Number_C)].SetValue<int>(value); } }
        public Object CharactorID_D { get { return this[nameof(CharactorID_D)]; } set { this[nameof(CharactorID_D)] = value; } }
        public int LevelMin_D { get { return this[nameof(LevelMin_D)].GetValue<int>(); } set { this[nameof(LevelMin_D)].SetValue<int>(value); } }
        public int LevelMax_D { get { return this[nameof(LevelMax_D)].GetValue<int>(); } set { this[nameof(LevelMax_D)].SetValue<int>(value); } }
        public int Number_D { get { return this[nameof(Number_D)].GetValue<int>(); } set { this[nameof(Number_D)].SetValue<int>(value); } }
    }
    public enum EPalLogType : int
    {
        None = 0,
        CaptureSuccess = 1,
        CaptureFailed_LowBallLevel = 2,
        CaptureFailed_HighHP = 3,
        CaptureFailed_BounceBall = 4,
        CaptureFailed_OutOfBall = 5,
        CaptureFailed_TowerBoss = 6,
        CaptureFailed_PlayerPal = 7,
        StartInvaderMarch = 8,
        EndInvaderMarch_Win = 9,
        EndInvaderMarch_Timeout = 10,
        DropPal = 11,
        OtomoLowHealth_Phase1 = 12,
        OtomoLowHealth_Phase2 = 13,
        OtomoLowHealth_Phase3 = 14,
        OtomoEatFood = 15,
        OtomoPalDown = 16,
        OtomoPalDeath = 17,
        OtomoPalEffectiveAttack = 18,
        OtomoPalDefeatEnemy = 19,
        GetItem = 20,
        ShippingItem = 21,
        FullInventoryNotice = 22,
        StartWorldDataAutoSave = 23,
        SuccessedWorldDataAutoSave = 24,
        FailedWorldDataAutoSave = 25,
        StartPlayerDataAutoSave = 26,
        SuccessedPlayerDataAutoSave = 27,
        FailedPlayerDataAutoSave = 28,
        WorkerPalSanityLowWarning = 29,
        WorkerPalComplateItemConvert = 30,
        WorkerPalComplateBuild = 31,
        WorkerPalStartBuild = 32,
        WorkerPalStartRepair = 33,
        WorkerPalStartWork = 34,
        WorkerPalStartWork_CollectResource = 35,
        WorkerPalStartWork_ProductResource_Deforest = 36,
        WorkerPalStartWork_ProductResource_Mining = 37,
        WorkerEvent_DestroyBuilding = 38,
        WorkerEvent_DodgeWork = 39,
        WorkerEvent_DodgeWork_Short = 40,
        WorkerEvent_DodgeWork_Sleep = 41,
        WorkerEvent_EatTooMuch = 42,
        WorkerEvent_Escape = 43,
        WorkerEvent_FightWithFriend = 44,
        WorkerEvent_OverworkDeath = 45,
        WorkerEvent_Sick = 46,
        WorkerEvent_Trantrum = 47,
        WorkerEvent_TurnFoodBox = 48,
        BaseCampTask_Progress_BuildObject = 49,
        BaseCampTask_Complete = 50,
        VisitorSpawn = 51,
        VisitorArrived = 52,
        VisitorReturn = 53,
        OverWeightInventory = 54,
        SkillTargetNotFound = 55,
        SkillNotAvailable = 56,
        SkillExecute = 57,
        SkillExecuteInBaseCamp = 58,
        SkillExecuteHealing = 59,
        SurvivorExp = 60,
        PartnerSkillExecute_Berserk = 61,
        PartnerSkillExecute_NightRunner = 62,
        ObtainNote = 63,
        OutdoorBedNortice = 64,
        EPalLogType_MAX = 65,
    }
    public class PalInvaderStartPointInfo : Object
    {
        public PalInvaderStartPointInfo(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public EPalBiomeType BiomeType { get { return (EPalBiomeType)this[nameof(BiomeType)].GetValue<int>(); } set { this[nameof(BiomeType)].SetValue<int>((int)value); } }
    }
    public class PalItemPermission : Object
    {
        public PalItemPermission(nint addr) : base(addr) { }
        public Array<EPalItemTypeA> PermissionTypeA { get { return new Array<EPalItemTypeA>(this[nameof(PermissionTypeA)].Address); } }
        public Array<EPalItemTypeB> PermissionTypeB { get { return new Array<EPalItemTypeB>(this[nameof(PermissionTypeB)].Address); } }
        public Array<Object> PermissionItemStaticIds { get { return new Array<Object>(this[nameof(PermissionItemStaticIds)].Address); } }
    }
    public enum EPalItemTypeB : int
    {
        None = 0,
        WeaponMelee = 1,
        WeaponBow = 2,
        WeaponCrossbow = 3,
        WeaponHandgun = 4,
        WeaponAssaultRifle = 5,
        WeaponSniperRifle = 6,
        WeaponRocketLauncher = 7,
        WeaponShotgun = 8,
        WeaponFlameThrower = 9,
        WeaponGatlingGun = 10,
        WeaponCollectionTool = 11,
        WeaponThrowObject = 12,
        SPWeaponCaptureBall = 13,
        SPWeaponDamageTrap = 14,
        SPWeaponCaptureTrap = 15,
        SPWeaponCaptureRope = 16,
        ArmorHead = 17,
        ArmorBody = 18,
        Accessory = 19,
        MaterialOre = 20,
        MaterialJewelry = 21,
        MaterialIngot = 22,
        MaterialWood = 23,
        MaterialStone = 24,
        MaterialProccessing = 25,
        MaterialMonster = 26,
        MaterialPalEgg = 27,
        ConsumeBandage = 28,
        ConsumeSeed = 29,
        ConsumeBullet = 30,
        ConsumeWazaMachine = 31,
        ConsumeTechnologyBook = 32,
        ConsumeOther = 33,
        FoodMeat = 34,
        FoodVegetable = 35,
        FoodFish = 36,
        FoodDishMeat = 37,
        FoodDishVegetable = 38,
        FoodDishFish = 39,
        FoodProcessed = 40,
        Essential = 41,
        Essential_UnlockPlayerFuture = 42,
        Glider = 43,
        Shield = 44,
        Money = 45,
        Medicine = 46,
        Drug = 47,
        MonsterEquipWeapon = 48,
        Blueprint = 49,
        EPalItemTypeB_MAX = 50,
    }
    public enum EPalItemTypeA : int
    {
        None = 0,
        Weapon = 1,
        SpecialWeapon = 2,
        Armor = 3,
        Accessory = 4,
        Material = 5,
        Consume = 6,
        Ammo = 7,
        Food = 8,
        Essential = 9,
        Glider = 10,
        MonsterEquipWeapon = 11,
        Blueprint = 12,
        EPalItemTypeA_MAX = 13,
    }
    public class PalBelongInfo : Object
    {
        public PalBelongInfo(nint addr) : base(addr) { }
    }
    public class PalContainerBelongInfo : PalBelongInfo
    {
        public PalContainerBelongInfo(nint addr) : base(addr) { }
    }
    public class PalItemContainerBelongInfo : PalContainerBelongInfo
    {
        public PalItemContainerBelongInfo(nint addr) : base(addr) { }
        public Guid GroupID { get { return this[nameof(GroupID)].As<Guid>(); } set { this["GroupID"] = value; } }
    }
    public enum EPalPlayerInventoryType : int
    {
        Common = 0,
        DropSlot = 1,
        Essential = 2,
        WeaponLoadout = 3,
        PlayerEquipArmor = 4,
        FoodEquip = 5,
        None = 6,
        EPalPlayerInventoryType_MAX = 7,
    }
    public class PalPlayerInventorySelectData : Object
    {
        public PalPlayerInventorySelectData(nint addr) : base(addr) { }
        public int nowSelectedContainerIndex { get { return this[nameof(nowSelectedContainerIndex)].GetValue<int>(); } set { this[nameof(nowSelectedContainerIndex)].SetValue<int>(value); } }
        public PalItemContainer targetItemContainer { get { return this[nameof(targetItemContainer)].As<PalItemContainer>(); } set { this["targetItemContainer"] = value; } }
    }
    public class PalLoadoutSynchronalizedData : Object
    {
        public PalLoadoutSynchronalizedData(nint addr) : base(addr) { }
        public Object actorClass { get { return this[nameof(actorClass)]; } set { this[nameof(actorClass)] = value; } }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
    }
    public enum EPalLocationType : int
    {
        Undefined = 0,
        Point = 1,
        PointStatic = 2,
        PointFastTravel = 3,
        PointBaseCamp = 4,
        PointPlayer = 5,
        PointMapObject = 6,
        PointCharacter = 7,
        PointDungeonPortal = 8,
        PointStaticRespawn = 9,
        PointBossTower = 10,
        DroppedCharacter = 11,
        DroppedChest = 12,
        Area = 13,
        CustomMarker = 14,
        FieldBoss = 15,
        EPalLocationType_MAX = 16,
    }
    public class PalLogDataSet : Object
    {
        public PalLogDataSet(nint addr) : base(addr) { }
        public Object Text { get { return this[nameof(Text)]; } set { this[nameof(Text)] = value; } }
        public PalLogAdditionalData AdditionalData { get { return this[nameof(AdditionalData)].As<PalLogAdditionalData>(); } set { this["AdditionalData"] = value; } }
    }
    public class PalFastMapObjectModuleRepInfoArray : FastArraySerializer
    {
        public PalFastMapObjectModuleRepInfoArray(nint addr) : base(addr) { }
        public Array<PalMapObjectModuleRepInfo> Items { get { return new Array<PalMapObjectModuleRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalMapObjectModuleRepInfo : FastArraySerializerItem
    {
        public PalMapObjectModuleRepInfo(nint addr) : base(addr) { }
        public PalMapObjectConcreteModelModuleBase Module { get { return this[nameof(Module)].As<PalMapObjectConcreteModelModuleBase>(); } set { this["Module"] = value; } }
    }
    public enum EPalItemOperationResult : int
    {
        Success = 0,
        SuccessNoOperation = 1,
        FailedTerminatedManager = 2,
        FailedNotExistsInventoryData = 3,
        FailedContainerOverflowSlotNum = 4,
        FailedContainerItemInfoOverSlotNum = 5,
        FailedContainerOverflowItemsInSlot = 6,
        FailedContainerNotFoundContainer = 7,
        FailedContainerNotFoundSlot = 8,
        FailedContainerIsLocalOnly = 9,
        FailedContainerNotEqualsId = 10,
        FailedCreateDynamicItemData = 11,
        FailedNoDynamicItemIds = 12,
        FailedNotFoundContainer = 13,
        FailedNotFoundSlot = 14,
        FailedNotFoundStaticItemData = 15,
        FailedNotEnoughSlotSpace = 16,
        FailedSameSlotUseProduceAndConsume = 17,
        FailedNotEnoughConsumes = 18,
        FailedInValidItemInSlot = 19,
        FailedNotEnoughNumInSlot = 20,
        FailedNotEqualRequiredItemInSlot = 21,
        FailedGetLocalSlotInServer = 22,
        FailedEmptyConsumeItemInfo = 23,
        FailedSlotCountIsZero = 24,
        FailedCannotAggregateSlotItem = 25,
        FailedInvalidPermission = 26,
        FailedRestrictedOperation = 27,
        FailedRecievedItemNotEqual = 28,
        FailedTransactionLockedOperation = 29,
        FailedNotFoundRowNameOrHash = 30,
        FailedUnknown = 31,
        FailedUnknownLogOutput = 32,
        EPalItemOperationResult_MAX = 33,
    }
    public class PalItemRecipe : TableRowBase
    {
        public PalItemRecipe(nint addr) : base(addr) { }
        public Object Product_Id { get { return this[nameof(Product_Id)]; } set { this[nameof(Product_Id)] = value; } }
        public int Product_Count { get { return this[nameof(Product_Count)].GetValue<int>(); } set { this[nameof(Product_Count)].SetValue<int>(value); } }
        public float WorkAmount { get { return this[nameof(WorkAmount)].GetValue<float>(); } set { this[nameof(WorkAmount)].SetValue<float>(value); } }
        public int WorkableAttribute { get { return this[nameof(WorkableAttribute)].GetValue<int>(); } set { this[nameof(WorkableAttribute)].SetValue<int>(value); } }
        public Object UnlockItemID { get { return this[nameof(UnlockItemID)]; } set { this[nameof(UnlockItemID)] = value; } }
        public Object Material1_Id { get { return this[nameof(Material1_Id)]; } set { this[nameof(Material1_Id)] = value; } }
        public int Material1_Count { get { return this[nameof(Material1_Count)].GetValue<int>(); } set { this[nameof(Material1_Count)].SetValue<int>(value); } }
        public Object Material2_Id { get { return this[nameof(Material2_Id)]; } set { this[nameof(Material2_Id)] = value; } }
        public int Material2_Count { get { return this[nameof(Material2_Count)].GetValue<int>(); } set { this[nameof(Material2_Count)].SetValue<int>(value); } }
        public Object Material3_Id { get { return this[nameof(Material3_Id)]; } set { this[nameof(Material3_Id)] = value; } }
        public int Material3_Count { get { return this[nameof(Material3_Count)].GetValue<int>(); } set { this[nameof(Material3_Count)].SetValue<int>(value); } }
        public Object Material4_Id { get { return this[nameof(Material4_Id)]; } set { this[nameof(Material4_Id)] = value; } }
        public int Material4_Count { get { return this[nameof(Material4_Count)].GetValue<int>(); } set { this[nameof(Material4_Count)].SetValue<int>(value); } }
        public Object Material5_Id { get { return this[nameof(Material5_Id)]; } set { this[nameof(Material5_Id)] = value; } }
        public int Material5_Count { get { return this[nameof(Material5_Count)].GetValue<int>(); } set { this[nameof(Material5_Count)].SetValue<int>(value); } }
        public EPalEnergyType EnergyType { get { return (EPalEnergyType)this[nameof(EnergyType)].GetValue<int>(); } set { this[nameof(EnergyType)].SetValue<int>((int)value); } }
        public int EnergyAmount { get { return this[nameof(EnergyAmount)].GetValue<int>(); } set { this[nameof(EnergyAmount)].SetValue<int>(value); } }
        public int Editor_RowNameHash { get { return this[nameof(Editor_RowNameHash)].GetValue<int>(); } set { this[nameof(Editor_RowNameHash)].SetValue<int>(value); } }
    }
    public enum EPalMapObjectConvertItemModelRequestResult : int
    {
        Success = 0,
        FailedInvalidRecipeId = 1,
        EPalMapObjectConvertItemModelRequestResult_MAX = 2,
    }
    public enum EPalMapObjectEnergyModuleStatusType : int
    {
        Providable = 0,
        Waiting = 1,
        EPalMapObjectEnergyModuleStatusType_MAX = 2,
    }
    public enum EPalFarmCropState : int
    {
        None = 0,
        NoSelect = 1,
        Watered = 2,
        Growup = 3,
        Harvestable = 4,
        Seeding = 5,
        EPalFarmCropState_MAX = 6,
    }
    public class ReactivePropertyFloat : Object
    {
        public ReactivePropertyFloat(nint addr) : base(addr) { }
    }
    public enum EPalFoliagePresetType : int
    {
        None = 0,
        NormalTree_L = 1,
        LowTree = 2,
        EPalFoliagePresetType_MAX = 3,
    }
    public class PalCellCoord : Object
    {
        public PalCellCoord(nint addr) : base(addr) { }
        public long X { get { return this[nameof(X)].GetValue<long>(); } set { this[nameof(X)].SetValue<long>(value); } }
        public long Y { get { return this[nameof(Y)].GetValue<long>(); } set { this[nameof(Y)].SetValue<long>(value); } }
        public long Z { get { return this[nameof(Z)].GetValue<long>(); } set { this[nameof(Z)].SetValue<long>(value); } }
    }
    public class PalEggRankInfo : Object
    {
        public PalEggRankInfo(nint addr) : base(addr) { }
        public int PalRarity { get { return this[nameof(PalRarity)].GetValue<int>(); } set { this[nameof(PalRarity)].SetValue<int>(value); } }
        public float EggScale { get { return this[nameof(EggScale)].GetValue<float>(); } set { this[nameof(EggScale)].SetValue<float>(value); } }
        public float HatchingSpeedDivisionRate { get { return this[nameof(HatchingSpeedDivisionRate)].GetValue<float>(); } set { this[nameof(HatchingSpeedDivisionRate)].SetValue<float>(value); } }
    }
    public enum EPalContainerUsageType : int
    {
        None = 0,
        ItemStorage = 1,
        EPalContainerUsageType_MAX = 2,
    }
    public enum EPalMapObjectItemContainerSlotAttribute : int
    {
        Undefined = 0,
        Input = 1,
        PublicOutput = 2,
        FoodProvidable = 3,
        CannotTransport = 4,
        EPalMapObjectItemContainerSlotAttribute_MAX = 5,
    }
    public class PalMapObjectItemContainerModuleSlotIndexes : Object
    {
        public PalMapObjectItemContainerModuleSlotIndexes(nint addr) : base(addr) { }
        public EPalMapObjectItemContainerSlotAttribute Attribute { get { return (EPalMapObjectItemContainerSlotAttribute)this[nameof(Attribute)].GetValue<int>(); } set { this[nameof(Attribute)].SetValue<int>((int)value); } }
        public Array<int> Indexes { get { return new Array<int>(this[nameof(Indexes)].Address); } }
    }
    public enum EPalMapObjectTreasureGradeType : int
    {
        Grade1 = 0,
        Grade2 = 1,
        Grade3 = 2,
        Grade4 = 3,
        Grade5 = 4,
        Grade6 = 5,
        EPalMapObjectTreasureGradeType_MAX = 6,
    }
    public class PalMapObjectVisualEffectAssets : Object
    {
        public PalMapObjectVisualEffectAssets(nint addr) : base(addr) { }
        public Object AssetMap { get { return this[nameof(AssetMap)]; } set { this[nameof(AssetMap)] = value; } }
    }
    public enum EPalMapObjectVisualEffectType : int
    {
        Burn = 0,
        EPalMapObjectVisualEffectType_MAX = 1,
    }
    public class PalMapObjectStaticData : Object
    {
        public PalMapObjectStaticData(nint addr) : base(addr) { }
        public Object DummyFoliageMapObjectId { get { return this[nameof(DummyFoliageMapObjectId)]; } set { this[nameof(DummyFoliageMapObjectId)] = value; } }
        public Object DropItemMapObjectId { get { return this[nameof(DropItemMapObjectId)]; } set { this[nameof(DropItemMapObjectId)] = value; } }
        public Object DropItem3DMapObjectId { get { return this[nameof(DropItem3DMapObjectId)]; } set { this[nameof(DropItem3DMapObjectId)] = value; } }
        public Object BuildObjectId_PalStorage { get { return this[nameof(BuildObjectId_PalStorage)]; } set { this[nameof(BuildObjectId_PalStorage)] = value; } }
        public Object MapObjectId_ItemChest { get { return this[nameof(MapObjectId_ItemChest)]; } set { this[nameof(MapObjectId_ItemChest)] = value; } }
        public Object MapObjectId_DeathPenalty { get { return this[nameof(MapObjectId_DeathPenalty)]; } set { this[nameof(MapObjectId_DeathPenalty)] = value; } }
        public Object MapObjectId_DroppedCharacter { get { return this[nameof(MapObjectId_DroppedCharacter)]; } set { this[nameof(MapObjectId_DroppedCharacter)] = value; } }
        public Object MapObjectId_TreasureBox_VisibleContent { get { return this[nameof(MapObjectId_TreasureBox_VisibleContent)]; } set { this[nameof(MapObjectId_TreasureBox_VisibleContent)] = value; } }
        public Object MapObjectId_SkillFruit_VisibleContent { get { return this[nameof(MapObjectId_SkillFruit_VisibleContent)]; } set { this[nameof(MapObjectId_SkillFruit_VisibleContent)] = value; } }
    }
    public class PalMapObjectModelStaticData : Object
    {
        public PalMapObjectModelStaticData(nint addr) : base(addr) { }
        public PalBoundsTransform WorkableBounds { get { return this[nameof(WorkableBounds)].As<PalBoundsTransform>(); } set { this["WorkableBounds"] = value; } }
        public Box MeshBoxBounds { get { return this[nameof(MeshBoxBounds)].As<Box>(); } set { this["MeshBoxBounds"] = value; } }
        public EPalMapObjectDamagableType DamagableType { get { return (EPalMapObjectDamagableType)this[nameof(DamagableType)].GetValue<int>(); } set { this[nameof(DamagableType)].SetValue<int>((int)value); } }
        public Object BuildObjectId { get { return this[nameof(BuildObjectId)]; } set { this[nameof(BuildObjectId)] = value; } }
        public Object BlueprintClass { get { return this[nameof(BlueprintClass)]; } set { this[nameof(BlueprintClass)] = value; } }
    }
    public class PalBoundsTransform : Object
    {
        public PalBoundsTransform(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Quat Rotation { get { return this[nameof(Rotation)].As<Quat>(); } set { this["Rotation"] = value; } }
        public BoxSphereBounds Bounds { get { return this[nameof(Bounds)].As<BoxSphereBounds>(); } set { this["Bounds"] = value; } }
    }
    public class PalFastMapObjectModelEffectRepInfoArray : FastArraySerializer
    {
        public PalFastMapObjectModelEffectRepInfoArray(nint addr) : base(addr) { }
        public Array<PalMapObjectModelEffectRepInfo> Items { get { return new Array<PalMapObjectModelEffectRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalMapObjectModelEffectRepInfo : FastArraySerializerItem
    {
        public PalMapObjectModelEffectRepInfo(nint addr) : base(addr) { }
        public EPalStatusID StatusId { get { return (EPalStatusID)this[nameof(StatusId)].GetValue<int>(); } set { this[nameof(StatusId)].SetValue<int>((int)value); } }
        public PalMapObjectModelEffectBase Effect { get { return this[nameof(Effect)].As<PalMapObjectModelEffectBase>(); } set { this["Effect"] = value; } }
    }
    public enum EPalMapObjectPasswordLockState : int
    {
        Lock = 0,
        Unlock = 1,
        EPalMapObjectPasswordLockState_MAX = 2,
    }
    public class PalMapObjectPasswordLockPlayerInfo : Object
    {
        public PalMapObjectPasswordLockPlayerInfo(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public int TryFailedCount { get { return this[nameof(TryFailedCount)].GetValue<int>(); } set { this[nameof(TryFailedCount)].SetValue<int>(value); } }
        public bool TrySuccessCache { get { return this[nameof(TrySuccessCache)].Flag; } set { this[nameof(TrySuccessCache)].Flag = value; } }
    }
    public enum EPalMapObjectSwitchState : int
    {
        On = 0,
        Off = 1,
        EPalMapObjectSwitchState_MAX = 2,
    }
    public class PalNPCWeaponCombatInfo : Object
    {
        public PalNPCWeaponCombatInfo(nint addr) : base(addr) { }
        public Object CombatAIActionClass { get { return this[nameof(CombatAIActionClass)]; } set { this[nameof(CombatAIActionClass)] = value; } }
        public int NPCWeaponRange_Near_cm { get { return this[nameof(NPCWeaponRange_Near_cm)].GetValue<int>(); } set { this[nameof(NPCWeaponRange_Near_cm)].SetValue<int>(value); } }
        public int NPCWeaponRange_Far_cm { get { return this[nameof(NPCWeaponRange_Far_cm)].GetValue<int>(); } set { this[nameof(NPCWeaponRange_Far_cm)].SetValue<int>(value); } }
        public float ShootInterval { get { return this[nameof(ShootInterval)].GetValue<float>(); } set { this[nameof(ShootInterval)].SetValue<float>(value); } }
        public int MaxShootCount { get { return this[nameof(MaxShootCount)].GetValue<int>(); } set { this[nameof(MaxShootCount)].SetValue<int>(value); } }
        public float ReloadTime { get { return this[nameof(ReloadTime)].GetValue<float>(); } set { this[nameof(ReloadTime)].SetValue<float>(value); } }
        public float RandomMoveTime_Min { get { return this[nameof(RandomMoveTime_Min)].GetValue<float>(); } set { this[nameof(RandomMoveTime_Min)].SetValue<float>(value); } }
        public float AimOffset_Height { get { return this[nameof(AimOffset_Height)].GetValue<float>(); } set { this[nameof(AimOffset_Height)].SetValue<float>(value); } }
        public bool UseSideDashMovement { get { return this[nameof(UseSideDashMovement)].Flag; } set { this[nameof(UseSideDashMovement)].Flag = value; } }
        public bool UseReloadMotion { get { return this[nameof(UseReloadMotion)].Flag; } set { this[nameof(UseReloadMotion)].Flag = value; } }
        public bool MeleeAttackWithGun { get { return this[nameof(MeleeAttackWithGun)].Flag; } set { this[nameof(MeleeAttackWithGun)].Flag = value; } }
        public float AimRotateSpeed { get { return this[nameof(AimRotateSpeed)].GetValue<float>(); } set { this[nameof(AimRotateSpeed)].SetValue<float>(value); } }
        public Object FireStateClass { get { return this[nameof(FireStateClass)]; } set { this[nameof(FireStateClass)] = value; } }
    }
    public class PalEnemyCampStatus : Object
    {
        public PalEnemyCampStatus(nint addr) : base(addr) { }
        public bool bIsSpawned { get { return this[nameof(bIsSpawned)].Flag; } set { this[nameof(bIsSpawned)].Flag = value; } }
        public bool bIsEnemyAllDead { get { return this[nameof(bIsEnemyAllDead)].Flag; } set { this[nameof(bIsEnemyAllDead)].Flag = value; } }
        public bool bIsClear { get { return this[nameof(bIsClear)].Flag; } set { this[nameof(bIsClear)].Flag = value; } }
        public bool bRewardReceived { get { return this[nameof(bRewardReceived)].Flag; } set { this[nameof(bRewardReceived)].Flag = value; } }
        public Object RewardPalId { get { return this[nameof(RewardPalId)]; } set { this[nameof(RewardPalId)] = value; } }
        public int RewardPalLevel { get { return this[nameof(RewardPalLevel)].GetValue<int>(); } set { this[nameof(RewardPalLevel)].SetValue<int>(value); } }
        public DateTime ClearDate { get { return this[nameof(ClearDate)].As<DateTime>(); } set { this["ClearDate"] = value; } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
        public DateTime LastCalcDate { get { return this[nameof(LastCalcDate)].As<DateTime>(); } set { this["LastCalcDate"] = value; } }
    }
    public enum EPalNPCTalkUIType : int
    {
        None = 0,
        FreeTalk = 1,
        NormalShop = 2,
        WeaponShop = 3,
        PalShop = 4,
        QuestOrder = 5,
        RandomEventShop = 6,
        EPalNPCTalkUIType_MAX = 7,
    }
    public class PalNPCSpawnInfo : Object
    {
        public PalNPCSpawnInfo(nint addr) : base(addr) { }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public float Yaw { get { return this[nameof(Yaw)].GetValue<float>(); } set { this[nameof(Yaw)].SetValue<float>(value); } }
        public PalSquad Squad { get { return this[nameof(Squad)].As<PalSquad>(); } set { this["Squad"] = value; } }
    }
    public enum EPalOptionGraphicsLevel : int
    {
        None = 0,
        VeryLow = 1,
        Low = 2,
        Medium = 3,
        High = 4,
        VeryHigh = 5,
        EPalOptionGraphicsLevel_MAX = 6,
    }
    public class PalOptionGraphicsSettings : Object
    {
        public PalOptionGraphicsSettings(nint addr) : base(addr) { }
        public EPalOptionGraphicsLevel GraphicsLevel { get { return (EPalOptionGraphicsLevel)this[nameof(GraphicsLevel)].GetValue<int>(); } set { this[nameof(GraphicsLevel)].SetValue<int>((int)value); } }
        public byte WindowMode { get { return this[nameof(WindowMode)].GetValue<byte>(); } set { this[nameof(WindowMode)].SetValue<byte>(value); } }
        public IntPoint ScreenResolution { get { return this[nameof(ScreenResolution)].As<IntPoint>(); } set { this["ScreenResolution"] = value; } }
        public bool bEnableVSync { get { return this[nameof(bEnableVSync)].Flag; } set { this[nameof(bEnableVSync)].Flag = value; } }
        public bool bEnableMotionBlur { get { return this[nameof(bEnableMotionBlur)].Flag; } set { this[nameof(bEnableMotionBlur)].Flag = value; } }
        public byte AntiAliasingType { get { return this[nameof(AntiAliasingType)].GetValue<byte>(); } set { this[nameof(AntiAliasingType)].SetValue<byte>(value); } }
        public bool bEnableCameraShake { get { return this[nameof(bEnableCameraShake)].Flag; } set { this[nameof(bEnableCameraShake)].Flag = value; } }
        public bool bEnableCameraRecoil { get { return this[nameof(bEnableCameraRecoil)].Flag; } set { this[nameof(bEnableCameraRecoil)].Flag = value; } }
        public float FOV { get { return this[nameof(FOV)].GetValue<float>(); } set { this[nameof(FOV)].SetValue<float>(value); } }
        public float PalRideCameraLengthRate { get { return this[nameof(PalRideCameraLengthRate)].GetValue<float>(); } set { this[nameof(PalRideCameraLengthRate)].SetValue<float>(value); } }
        public float LODBias { get { return this[nameof(LODBias)].GetValue<float>(); } set { this[nameof(LODBias)].SetValue<float>(value); } }
        public float DrawDistance { get { return this[nameof(DrawDistance)].GetValue<float>(); } set { this[nameof(DrawDistance)].SetValue<float>(value); } }
        public float GrassDrawDistance { get { return this[nameof(GrassDrawDistance)].GetValue<float>(); } set { this[nameof(GrassDrawDistance)].SetValue<float>(value); } }
        public bool bEnableShadow { get { return this[nameof(bEnableShadow)].Flag; } set { this[nameof(bEnableShadow)].Flag = value; } }
        public float ShadowResolution { get { return this[nameof(ShadowResolution)].GetValue<float>(); } set { this[nameof(ShadowResolution)].SetValue<float>(value); } }
        public int CommonQuality { get { return this[nameof(CommonQuality)].GetValue<int>(); } set { this[nameof(CommonQuality)].SetValue<int>(value); } }
        public int ViewDistanceQuality { get { return this[nameof(ViewDistanceQuality)].GetValue<int>(); } set { this[nameof(ViewDistanceQuality)].SetValue<int>(value); } }
        public int FoliageQuality { get { return this[nameof(FoliageQuality)].GetValue<int>(); } set { this[nameof(FoliageQuality)].SetValue<int>(value); } }
        public int ShadowQuality { get { return this[nameof(ShadowQuality)].GetValue<int>(); } set { this[nameof(ShadowQuality)].SetValue<int>(value); } }
        public float Brightness { get { return this[nameof(Brightness)].GetValue<float>(); } set { this[nameof(Brightness)].SetValue<float>(value); } }
        public bool bEnableAutoContrast { get { return this[nameof(bEnableAutoContrast)].Flag; } set { this[nameof(bEnableAutoContrast)].Flag = value; } }
        public int TextureQuality { get { return this[nameof(TextureQuality)].GetValue<int>(); } set { this[nameof(TextureQuality)].SetValue<int>(value); } }
        public UDLSSMode DLSSMode { get { return (UDLSSMode)this[nameof(DLSSMode)].GetValue<int>(); } set { this[nameof(DLSSMode)].SetValue<int>((int)value); } }
        public float MaxFPS { get { return this[nameof(MaxFPS)].GetValue<float>(); } set { this[nameof(MaxFPS)].SetValue<float>(value); } }
    }
    public class PalOptionAudioSettings : Object
    {
        public PalOptionAudioSettings(nint addr) : base(addr) { }
        public float Master { get { return this[nameof(Master)].GetValue<float>(); } set { this[nameof(Master)].SetValue<float>(value); } }
        public float BGM { get { return this[nameof(BGM)].GetValue<float>(); } set { this[nameof(BGM)].SetValue<float>(value); } }
        public float SE { get { return this[nameof(SE)].GetValue<float>(); } set { this[nameof(SE)].SetValue<float>(value); } }
        public float PalVoice { get { return this[nameof(PalVoice)].GetValue<float>(); } set { this[nameof(PalVoice)].SetValue<float>(value); } }
        public float HumanVoice { get { return this[nameof(HumanVoice)].GetValue<float>(); } set { this[nameof(HumanVoice)].SetValue<float>(value); } }
        public float Ambient { get { return this[nameof(Ambient)].GetValue<float>(); } set { this[nameof(Ambient)].SetValue<float>(value); } }
        public float UI { get { return this[nameof(UI)].GetValue<float>(); } set { this[nameof(UI)].SetValue<float>(value); } }
    }
    public class PalOptionCommonSettings : Object
    {
        public PalOptionCommonSettings(nint addr) : base(addr) { }
        public float PalRideCameraLengthRate { get { return this[nameof(PalRideCameraLengthRate)].GetValue<float>(); } set { this[nameof(PalRideCameraLengthRate)].SetValue<float>(value); } }
        public float FOV { get { return this[nameof(FOV)].GetValue<float>(); } set { this[nameof(FOV)].SetValue<float>(value); } }
        public bool bEnableMotionBlur { get { return this[nameof(bEnableMotionBlur)].Flag; } set { this[nameof(bEnableMotionBlur)].Flag = value; } }
        public bool bEnableCameraShake { get { return this[nameof(bEnableCameraShake)].Flag; } set { this[nameof(bEnableCameraShake)].Flag = value; } }
        public Array<Object> HistoryServerWorldGUID { get { return new Array<Object>(this[nameof(HistoryServerWorldGUID)].Address); } }
    }
    public class PalKeyConfigSettings : Object
    {
        public PalKeyConfigSettings(nint addr) : base(addr) { }
        public Object MouseAndKeyboardActionMappings { get { return this[nameof(MouseAndKeyboardActionMappings)]; } set { this[nameof(MouseAndKeyboardActionMappings)] = value; } }
        public Array<PalAxisKeyConfigKeys> MouseAndKeyboardAxisMappings { get { return new Array<PalAxisKeyConfigKeys>(this[nameof(MouseAndKeyboardAxisMappings)].Address); } }
        public Object GamePadActionMappings { get { return this[nameof(GamePadActionMappings)]; } set { this[nameof(GamePadActionMappings)] = value; } }
        public Array<PalAxisKeyConfigKeys> GamePadAxisMappings { get { return new Array<PalAxisKeyConfigKeys>(this[nameof(GamePadAxisMappings)].Address); } }
    }
    public class PalKeyConfigKeys : Object
    {
        public PalKeyConfigKeys(nint addr) : base(addr) { }
        public Key MainKey { get { return this[nameof(MainKey)].As<Key>(); } set { this["MainKey"] = value; } }
        public Key SecondaryKey { get { return this[nameof(SecondaryKey)].As<Key>(); } set { this["SecondaryKey"] = value; } }
    }
    public class PalAxisKeyConfigKeys : PalKeyConfigKeys
    {
        public PalAxisKeyConfigKeys(nint addr) : base(addr) { }
        public Object AxisName { get { return this[nameof(AxisName)]; } set { this[nameof(AxisName)] = value; } }
        public EPalKeyConfigAxisFilterType FilterType { get { return (EPalKeyConfigAxisFilterType)this[nameof(FilterType)].GetValue<int>(); } set { this[nameof(FilterType)].SetValue<int>((int)value); } }
    }
    public enum EPalKeyConfigAxisFilterType : int
    {
        All = 0,
        Plus = 1,
        Minus = 2,
        EPalKeyConfigAxisFilterType_MAX = 3,
    }
    public class PalOptionLocalStaticSettings : Object
    {
        public PalOptionLocalStaticSettings(nint addr) : base(addr) { }
        public PalOptionValueFloat MouseSensitivity { get { return this[nameof(MouseSensitivity)].As<PalOptionValueFloat>(); } set { this["MouseSensitivity"] = value; } }
        public PalOptionValueFloat MouseAimSensitivity { get { return this[nameof(MouseAimSensitivity)].As<PalOptionValueFloat>(); } set { this["MouseAimSensitivity"] = value; } }
        public PalOptionValueFloat LeftStickThreshold { get { return this[nameof(LeftStickThreshold)].As<PalOptionValueFloat>(); } set { this["LeftStickThreshold"] = value; } }
        public PalOptionValueFloat RightStickSensitivity { get { return this[nameof(RightStickSensitivity)].As<PalOptionValueFloat>(); } set { this["RightStickSensitivity"] = value; } }
        public PalOptionValueFloat RightStickAimSensitivity { get { return this[nameof(RightStickAimSensitivity)].As<PalOptionValueFloat>(); } set { this["RightStickAimSensitivity"] = value; } }
        public PalOptionValueFloat RightStickThreshold { get { return this[nameof(RightStickThreshold)].As<PalOptionValueFloat>(); } set { this["RightStickThreshold"] = value; } }
        public PalOptionValueFloat PalRideCameraLengthRate { get { return this[nameof(PalRideCameraLengthRate)].As<PalOptionValueFloat>(); } set { this["PalRideCameraLengthRate"] = value; } }
        public PalOptionValueFloat FOV { get { return this[nameof(FOV)].As<PalOptionValueFloat>(); } set { this["FOV"] = value; } }
    }
    public class PalOptionValueFloat : Object
    {
        public PalOptionValueFloat(nint addr) : base(addr) { }
        public float Min { get { return this[nameof(Min)].GetValue<float>(); } set { this[nameof(Min)].SetValue<float>(value); } }
        public float Max { get { return this[nameof(Max)].GetValue<float>(); } set { this[nameof(Max)].SetValue<float>(value); } }
    }
    public class PalOptionWorldStaticSettings : Object
    {
        public PalOptionWorldStaticSettings(nint addr) : base(addr) { }
        public PalOptionValueFloat DayTimeSpeedRate { get { return this[nameof(DayTimeSpeedRate)].As<PalOptionValueFloat>(); } set { this["DayTimeSpeedRate"] = value; } }
        public PalOptionValueFloat NightTimeSpeedRate { get { return this[nameof(NightTimeSpeedRate)].As<PalOptionValueFloat>(); } set { this["NightTimeSpeedRate"] = value; } }
        public PalOptionValueFloat ExpRate { get { return this[nameof(ExpRate)].As<PalOptionValueFloat>(); } set { this["ExpRate"] = value; } }
        public PalOptionValueFloat PalCaptureRate { get { return this[nameof(PalCaptureRate)].As<PalOptionValueFloat>(); } set { this["PalCaptureRate"] = value; } }
        public PalOptionValueFloat PalSpawnNumRate { get { return this[nameof(PalSpawnNumRate)].As<PalOptionValueFloat>(); } set { this["PalSpawnNumRate"] = value; } }
        public PalOptionValueFloat PalDamageRateAttack { get { return this[nameof(PalDamageRateAttack)].As<PalOptionValueFloat>(); } set { this["PalDamageRateAttack"] = value; } }
        public PalOptionValueFloat PalDamageRateDefense { get { return this[nameof(PalDamageRateDefense)].As<PalOptionValueFloat>(); } set { this["PalDamageRateDefense"] = value; } }
        public PalOptionValueFloat PlayerDamageRateAttack { get { return this[nameof(PlayerDamageRateAttack)].As<PalOptionValueFloat>(); } set { this["PlayerDamageRateAttack"] = value; } }
        public PalOptionValueFloat PlayerDamageRateDefense { get { return this[nameof(PlayerDamageRateDefense)].As<PalOptionValueFloat>(); } set { this["PlayerDamageRateDefense"] = value; } }
        public PalOptionValueFloat PlayerStomachDecreaceRate { get { return this[nameof(PlayerStomachDecreaceRate)].As<PalOptionValueFloat>(); } set { this["PlayerStomachDecreaceRate"] = value; } }
        public PalOptionValueFloat PlayerStaminaDecreaceRate { get { return this[nameof(PlayerStaminaDecreaceRate)].As<PalOptionValueFloat>(); } set { this["PlayerStaminaDecreaceRate"] = value; } }
        public PalOptionValueFloat PlayerAutoHPRegeneRate { get { return this[nameof(PlayerAutoHPRegeneRate)].As<PalOptionValueFloat>(); } set { this["PlayerAutoHPRegeneRate"] = value; } }
        public PalOptionValueFloat PlayerAutoHpRegeneRateInSleep { get { return this[nameof(PlayerAutoHpRegeneRateInSleep)].As<PalOptionValueFloat>(); } set { this["PlayerAutoHpRegeneRateInSleep"] = value; } }
        public PalOptionValueFloat PalStomachDecreaceRate { get { return this[nameof(PalStomachDecreaceRate)].As<PalOptionValueFloat>(); } set { this["PalStomachDecreaceRate"] = value; } }
        public PalOptionValueFloat PalStaminaDecreaceRate { get { return this[nameof(PalStaminaDecreaceRate)].As<PalOptionValueFloat>(); } set { this["PalStaminaDecreaceRate"] = value; } }
        public PalOptionValueFloat PalAutoHPRegeneRate { get { return this[nameof(PalAutoHPRegeneRate)].As<PalOptionValueFloat>(); } set { this["PalAutoHPRegeneRate"] = value; } }
        public PalOptionValueFloat PalAutoHpRegeneRateInSleep { get { return this[nameof(PalAutoHpRegeneRateInSleep)].As<PalOptionValueFloat>(); } set { this["PalAutoHpRegeneRateInSleep"] = value; } }
        public PalOptionValueFloat BuildObjectDamageRate { get { return this[nameof(BuildObjectDamageRate)].As<PalOptionValueFloat>(); } set { this["BuildObjectDamageRate"] = value; } }
        public PalOptionValueFloat BuildObjectDeteriorationDamageRate { get { return this[nameof(BuildObjectDeteriorationDamageRate)].As<PalOptionValueFloat>(); } set { this["BuildObjectDeteriorationDamageRate"] = value; } }
        public PalOptionValueFloat CollectionDropRate { get { return this[nameof(CollectionDropRate)].As<PalOptionValueFloat>(); } set { this["CollectionDropRate"] = value; } }
        public PalOptionValueFloat CollectionObjectHpRate { get { return this[nameof(CollectionObjectHpRate)].As<PalOptionValueFloat>(); } set { this["CollectionObjectHpRate"] = value; } }
        public PalOptionValueFloat CollectionObjectRespawnSpeedRate { get { return this[nameof(CollectionObjectRespawnSpeedRate)].As<PalOptionValueFloat>(); } set { this["CollectionObjectRespawnSpeedRate"] = value; } }
        public PalOptionValueFloat EnemyDropItemRate { get { return this[nameof(EnemyDropItemRate)].As<PalOptionValueFloat>(); } set { this["EnemyDropItemRate"] = value; } }
        public PalOptionValueInt DropItemMaxNum { get { return this[nameof(DropItemMaxNum)].As<PalOptionValueInt>(); } set { this["DropItemMaxNum"] = value; } }
        public PalOptionValueInt DropItemMaxNum_UNKO { get { return this[nameof(DropItemMaxNum_UNKO)].As<PalOptionValueInt>(); } set { this["DropItemMaxNum_UNKO"] = value; } }
        public PalOptionValueFloat WorkSpeedRate { get { return this[nameof(WorkSpeedRate)].As<PalOptionValueFloat>(); } set { this["WorkSpeedRate"] = value; } }
        public PalOptionValueInt AutoResetGuildTimeNoOnlinePlayers { get { return this[nameof(AutoResetGuildTimeNoOnlinePlayers)].As<PalOptionValueInt>(); } set { this["AutoResetGuildTimeNoOnlinePlayers"] = value; } }
        public PalOptionValueInt GuildPlayerMaxNum { get { return this[nameof(GuildPlayerMaxNum)].As<PalOptionValueInt>(); } set { this["GuildPlayerMaxNum"] = value; } }
        public PalOptionValueInt PalEggDefaultHatchingTime { get { return this[nameof(PalEggDefaultHatchingTime)].As<PalOptionValueInt>(); } set { this["PalEggDefaultHatchingTime"] = value; } }
        public PalOptionValueInt BaseCampWorkerMaxNum { get { return this[nameof(BaseCampWorkerMaxNum)].As<PalOptionValueInt>(); } set { this["BaseCampWorkerMaxNum"] = value; } }
    }
    public class PalOptionValueInt : Object
    {
        public PalOptionValueInt(nint addr) : base(addr) { }
        public int Min { get { return this[nameof(Min)].GetValue<int>(); } set { this[nameof(Min)].SetValue<int>(value); } }
        public int Max { get { return this[nameof(Max)].GetValue<int>(); } set { this[nameof(Max)].SetValue<int>(value); } }
    }
    public enum EPalOtomoPalOrderType : int
    {
        Default = 0,
        Warlike = 1,
        NotCombat = 2,
        EPalOtomoPalOrderType_MAX = 3,
    }
    public class PalCoopSkillSearchEffectParameter : Object
    {
        public PalCoopSkillSearchEffectParameter(nint addr) : base(addr) { }
        public Vector Origin { get { return this[nameof(Origin)].As<Vector>(); } set { this["Origin"] = value; } }
        public float RadiusFrom { get { return this[nameof(RadiusFrom)].GetValue<float>(); } set { this[nameof(RadiusFrom)].SetValue<float>(value); } }
        public float RadiusTo { get { return this[nameof(RadiusTo)].GetValue<float>(); } set { this[nameof(RadiusTo)].SetValue<float>(value); } }
        public float ExtRadiusPerSec { get { return this[nameof(ExtRadiusPerSec)].GetValue<float>(); } set { this[nameof(ExtRadiusPerSec)].SetValue<float>(value); } }
    }
    public class PalPartnerSkillParameterRide : Object
    {
        public PalPartnerSkillParameterRide(nint addr) : base(addr) { }
        public float JumpZVelocityScale { get { return this[nameof(JumpZVelocityScale)].GetValue<float>(); } set { this[nameof(JumpZVelocityScale)].SetValue<float>(value); } }
        public float GravityScale { get { return this[nameof(GravityScale)].GetValue<float>(); } set { this[nameof(GravityScale)].SetValue<float>(value); } }
    }
    public class PalPassivePartnerSkillIdAndParameters : Object
    {
        public PalPassivePartnerSkillIdAndParameters(nint addr) : base(addr) { }
        public Object SkillAndParameters { get { return this[nameof(SkillAndParameters)]; } set { this[nameof(SkillAndParameters)] = value; } }
    }
    public class PalPassivePartnerSkillParameters : Object
    {
        public PalPassivePartnerSkillParameters(nint addr) : base(addr) { }
        public float DelayTime { get { return this[nameof(DelayTime)].GetValue<float>(); } set { this[nameof(DelayTime)].SetValue<float>(value); } }
        public int TriggerTypeFlags { get { return this[nameof(TriggerTypeFlags)].GetValue<int>(); } set { this[nameof(TriggerTypeFlags)].SetValue<int>(value); } }
        public EPalWorkType WorkType { get { return (EPalWorkType)this[nameof(WorkType)].GetValue<int>(); } set { this[nameof(WorkType)].SetValue<int>((int)value); } }
        public Array<PalDataTableRowName_MapObjectData> MapObjectId { get { return new Array<PalDataTableRowName_MapObjectData>(this[nameof(MapObjectId)].Address); } }
        public Array<PalDataTableRowName_ItemData> ItemId { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(ItemId)].Address); } }
        public bool AssignOthers { get { return this[nameof(AssignOthers)].Flag; } set { this[nameof(AssignOthers)].Flag = value; } }
        public EPalElementType TargetElementType { get { return (EPalElementType)this[nameof(TargetElementType)].GetValue<int>(); } set { this[nameof(TargetElementType)].SetValue<int>((int)value); } }
        public Array<PalDataTableRowName_PalMonsterData> PalIds { get { return new Array<PalDataTableRowName_PalMonsterData>(this[nameof(PalIds)].Address); } }
        public bool bNotAssignSelf { get { return this[nameof(bNotAssignSelf)].Flag; } set { this[nameof(bNotAssignSelf)].Flag = value; } }
    }
    public class PalPassivePartnerSkillStatus : Object
    {
        public PalPassivePartnerSkillStatus(nint addr) : base(addr) { }
        public EPalPassivePartnerSkillState State { get { return (EPalPassivePartnerSkillState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
        public Array<Object> Flags { get { return new Array<Object>(this[nameof(Flags)].Address); } }
    }
    public enum EPalPassivePartnerSkillState : int
    {
        None = 0,
        Active = 1,
        ActivateDelay = 2,
        Inactive = 3,
        ActivateLocked = 4,
        EPalPassivePartnerSkillState_MAX = 5,
    }
    public class PalPassiveSkillEffectInfos : Object
    {
        public PalPassiveSkillEffectInfos(nint addr) : base(addr) { }
        public Array<PalPassiveSkillEffect> SkillEffectArray { get { return new Array<PalPassiveSkillEffect>(this[nameof(SkillEffectArray)].Address); } }
    }
    public class PalPlayerBattleEnemyInfo : Object
    {
        public PalPlayerBattleEnemyInfo(nint addr) : base(addr) { }
        public EPalBattleBGMType Rank { get { return (EPalBattleBGMType)this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>((int)value); } }
        public Object WeakActor { get { return this[nameof(WeakActor)]; } set { this[nameof(WeakActor)] = value; } }
    }
    public enum EPalKeyConfigCategory : int
    {
        MouseAndKeyboard = 0,
        GamePad = 1,
        EPalKeyConfigCategory_MAX = 2,
    }
    public class PalItemAndNum : Object
    {
        public PalItemAndNum(nint addr) : base(addr) { }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalPlayerDataInventoryInfo : Object
    {
        public PalPlayerDataInventoryInfo(nint addr) : base(addr) { }
        public PalContainerId CommonContainerId { get { return this[nameof(CommonContainerId)].As<PalContainerId>(); } set { this["CommonContainerId"] = value; } }
        public PalContainerId DropSlotContainerId { get { return this[nameof(DropSlotContainerId)].As<PalContainerId>(); } set { this["DropSlotContainerId"] = value; } }
        public PalContainerId EssentialContainerId { get { return this[nameof(EssentialContainerId)].As<PalContainerId>(); } set { this["EssentialContainerId"] = value; } }
        public PalContainerId WeaponLoadOutContainerId { get { return this[nameof(WeaponLoadOutContainerId)].As<PalContainerId>(); } set { this["WeaponLoadOutContainerId"] = value; } }
        public PalContainerId PlayerEquipArmorContainerId { get { return this[nameof(PlayerEquipArmorContainerId)].As<PalContainerId>(); } set { this["PlayerEquipArmorContainerId"] = value; } }
        public PalContainerId FoodEquipContainerId { get { return this[nameof(FoodEquipContainerId)].As<PalContainerId>(); } set { this["FoodEquipContainerId"] = value; } }
    }
    public class PalPlayerClassStructSet : Object
    {
        public PalPlayerClassStructSet(nint addr) : base(addr) { }
        public Object CharacterMakeDataClass { get { return this[nameof(CharacterMakeDataClass)]; } set { this[nameof(CharacterMakeDataClass)] = value; } }
        public Object RecordDataClass { get { return this[nameof(RecordDataClass)]; } set { this[nameof(RecordDataClass)] = value; } }
        public Object WorldMapUIDataClass { get { return this[nameof(WorldMapUIDataClass)]; } set { this[nameof(WorldMapUIDataClass)] = value; } }
        public Object LocalQuestManagerClass { get { return this[nameof(LocalQuestManagerClass)]; } set { this[nameof(LocalQuestManagerClass)] = value; } }
        public Object InventoryDataClass { get { return this[nameof(InventoryDataClass)]; } set { this[nameof(InventoryDataClass)] = value; } }
    }
    public class PalPlayerRecordDataRepInfoArray_BoolVal : FastArraySerializer
    {
        public PalPlayerRecordDataRepInfoArray_BoolVal(nint addr) : base(addr) { }
        public Array<PalPlayerRecordDataRepInfo_BoolVal> Items { get { return new Array<PalPlayerRecordDataRepInfo_BoolVal>(this[nameof(Items)].Address); } }
    }
    public class PalPlayerRecordDataRepInfo_BoolVal : FastArraySerializerItem
    {
        public PalPlayerRecordDataRepInfo_BoolVal(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
        public bool Value { get { return this[nameof(Value)].Flag; } set { this[nameof(Value)].Flag = value; } }
    }
    public class PalPlayerRecordDataRepInfoArray_IntVal : FastArraySerializer
    {
        public PalPlayerRecordDataRepInfoArray_IntVal(nint addr) : base(addr) { }
        public Array<PalPlayerRecordDataRepInfo_IntVal> Items { get { return new Array<PalPlayerRecordDataRepInfo_IntVal>(this[nameof(Items)].Address); } }
    }
    public class PalPlayerRecordDataRepInfo_IntVal : FastArraySerializerItem
    {
        public PalPlayerRecordDataRepInfo_IntVal(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
        public int Value { get { return this[nameof(Value)].GetValue<int>(); } set { this[nameof(Value)].SetValue<int>(value); } }
    }
    public class PalCommonQuestRewardData : Object
    {
        public PalCommonQuestRewardData(nint addr) : base(addr) { }
        public int Exp { get { return this[nameof(Exp)].GetValue<int>(); } set { this[nameof(Exp)].SetValue<int>(value); } }
        public int TechnologyPoint { get { return this[nameof(TechnologyPoint)].GetValue<int>(); } set { this[nameof(TechnologyPoint)].SetValue<int>(value); } }
        public Object Items { get { return this[nameof(Items)]; } set { this[nameof(Items)] = value; } }
    }
    public enum EPalRandomIncidentActionNotifyType : int
    {
        None = 0,
        RestartExcludedSpawner = 1,
        EPalRandomIncidentActionNotifyType_MAX = 2,
    }
    public class PalIncidentSystemFunctionAccessor : Object
    {
        public PalIncidentSystemFunctionAccessor(nint addr) : base(addr) { }
    }
    public class PalIncidentIdParameter : Object
    {
        public PalIncidentIdParameter(nint addr) : base(addr) { }
        public Object IncidentId { get { return this[nameof(IncidentId)]; } set { this[nameof(IncidentId)] = value; } }
        public Object IncidentType { get { return this[nameof(IncidentType)]; } set { this[nameof(IncidentType)] = value; } }
        public Object Option { get { return this[nameof(Option)]; } set { this[nameof(Option)] = value; } }
        public Array<Object> Args { get { return new Array<Object>(this[nameof(Args)].Address); } }
        public Array<Object> Options { get { return new Array<Object>(this[nameof(Options)].Address); } }
    }
    public class PalIncidentExecutionSettings : Object
    {
        public PalIncidentExecutionSettings(nint addr) : base(addr) { }
        public bool bCanExecuteMultiple { get { return this[nameof(bCanExecuteMultiple)].Flag; } set { this[nameof(bCanExecuteMultiple)].Flag = value; } }
    }
    public enum EPalRandomIncidentSpawnerAreaType : int
    {
        Unknown = 0,
        Spawn = 1,
        Exclusion = 2,
        Action = 3,
        End = 4,
        EPalRandomIncidentSpawnerAreaType_MAX = 5,
    }
    public enum EPalRidePositionType : int
    {
        None = 0,
        HorseRide = 1,
        BiggerHorseRide = 2,
        SitRide = 3,
        BackRide = 4,
        EPalRidePositionType_MAX = 5,
    }
    public class RiderActionInfo : Object
    {
        public RiderActionInfo(nint addr) : base(addr) { }
        public Object RideAction { get { return this[nameof(RideAction)]; } set { this[nameof(RideAction)] = value; } }
        public Object GetOffAction { get { return this[nameof(GetOffAction)]; } set { this[nameof(GetOffAction)] = value; } }
    }
    public class PalWorldBaseInfoData : Object
    {
        public PalWorldBaseInfoData(nint addr) : base(addr) { }
        public PalWorldBaseInfoSaveData BaseInfoSaveData { get { return this[nameof(BaseInfoSaveData)].As<PalWorldBaseInfoSaveData>(); } set { this["BaseInfoSaveData"] = value; } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public Object DirectoryPath { get { return this[nameof(DirectoryPath)]; } set { this[nameof(DirectoryPath)] = value; } }
    }
    public class PalWorldBaseInfoSaveData : Object
    {
        public PalWorldBaseInfoSaveData(nint addr) : base(addr) { }
        public Object WorldName { get { return this[nameof(WorldName)]; } set { this[nameof(WorldName)] = value; } }
        public Object HostPlayerName { get { return this[nameof(HostPlayerName)]; } set { this[nameof(HostPlayerName)] = value; } }
        public int HostPlayerLevel { get { return this[nameof(HostPlayerLevel)].GetValue<int>(); } set { this[nameof(HostPlayerLevel)].SetValue<int>(value); } }
        public int InGameDay { get { return this[nameof(InGameDay)].GetValue<int>(); } set { this[nameof(InGameDay)].SetValue<int>(value); } }
    }
    public class PalAsyncSaveProcessParallel : Object
    {
        public PalAsyncSaveProcessParallel(nint addr) : base(addr) { }
        public Object ProcessMap { get { return this[nameof(ProcessMap)]; } set { this[nameof(ProcessMap)] = value; } }
    }
    public class PalAsyncSaveProcess : Object
    {
        public PalAsyncSaveProcess(nint addr) : base(addr) { }
        public EPalAsyncSaveProcessState State { get { return (EPalAsyncSaveProcessState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
    }
    public enum EPalAsyncSaveProcessState : int
    {
        Saving = 0,
        Completed = 1,
        Failed = 2,
        EPalAsyncSaveProcessState_MAX = 3,
    }
    public class RidingAnimationInfo : Object
    {
        public RidingAnimationInfo(nint addr) : base(addr) { }
        public AnimSequence RidingAnimation { get { return this[nameof(RidingAnimation)].As<AnimSequence>(); } set { this["RidingAnimation"] = value; } }
        public AnimMontage RidingShakingMontage { get { return this[nameof(RidingShakingMontage)].As<AnimMontage>(); } set { this["RidingShakingMontage"] = value; } }
        public AnimSequence RideShootingAnimation { get { return this[nameof(RideShootingAnimation)].As<AnimSequence>(); } set { this["RideShootingAnimation"] = value; } }
        public AimOffsetBlendSpace RideShootingAO { get { return this[nameof(RideShootingAO)].As<AimOffsetBlendSpace>(); } set { this["RideShootingAO"] = value; } }
    }
    public class WeaponAnimationInfo : Object
    {
        public WeaponAnimationInfo(nint addr) : base(addr) { }
        public BlendSpace1D NormalMoveBlendSpace { get { return this[nameof(NormalMoveBlendSpace)].As<BlendSpace1D>(); } set { this["NormalMoveBlendSpace"] = value; } }
        public BlendSpace1D CrouchMoveBlendSpace { get { return this[nameof(CrouchMoveBlendSpace)].As<BlendSpace1D>(); } set { this["CrouchMoveBlendSpace"] = value; } }
        public BlendSpace AimingMoveBlendSpace { get { return this[nameof(AimingMoveBlendSpace)].As<BlendSpace>(); } set { this["AimingMoveBlendSpace"] = value; } }
        public BlendSpace HipShootingMoveBlendSpace { get { return this[nameof(HipShootingMoveBlendSpace)].As<BlendSpace>(); } set { this["HipShootingMoveBlendSpace"] = value; } }
        public BlendSpace CrouchAimingMoveBlendSpace { get { return this[nameof(CrouchAimingMoveBlendSpace)].As<BlendSpace>(); } set { this["CrouchAimingMoveBlendSpace"] = value; } }
        public AnimMontage JumpPreliminary { get { return this[nameof(JumpPreliminary)].As<AnimMontage>(); } set { this["JumpPreliminary"] = value; } }
        public AnimSequence JumpStart { get { return this[nameof(JumpStart)].As<AnimSequence>(); } set { this["JumpStart"] = value; } }
        public AnimSequence JumpLoopUp { get { return this[nameof(JumpLoopUp)].As<AnimSequence>(); } set { this["JumpLoopUp"] = value; } }
        public AnimSequence JumpLoopDown { get { return this[nameof(JumpLoopDown)].As<AnimSequence>(); } set { this["JumpLoopDown"] = value; } }
        public AnimSequence JumpEnd { get { return this[nameof(JumpEnd)].As<AnimSequence>(); } set { this["JumpEnd"] = value; } }
        public AnimSequence Sliding { get { return this[nameof(Sliding)].As<AnimSequence>(); } set { this["Sliding"] = value; } }
        public AnimSequence SlidingEnd { get { return this[nameof(SlidingEnd)].As<AnimSequence>(); } set { this["SlidingEnd"] = value; } }
        public AnimSequence Sprint { get { return this[nameof(Sprint)].As<AnimSequence>(); } set { this["Sprint"] = value; } }
        public AnimMontage ReloadMontage { get { return this[nameof(ReloadMontage)].As<AnimMontage>(); } set { this["ReloadMontage"] = value; } }
        public AnimMontage WeaponChangeMontage { get { return this[nameof(WeaponChangeMontage)].As<AnimMontage>(); } set { this["WeaponChangeMontage"] = value; } }
        public Object IdlePoseMap { get { return this[nameof(IdlePoseMap)]; } set { this[nameof(IdlePoseMap)] = value; } }
        public Object JogPoseMap { get { return this[nameof(JogPoseMap)]; } set { this[nameof(JogPoseMap)] = value; } }
        public Object AimBaseMap { get { return this[nameof(AimBaseMap)]; } set { this[nameof(AimBaseMap)] = value; } }
        public Object AimOffsetMap { get { return this[nameof(AimOffsetMap)]; } set { this[nameof(AimOffsetMap)] = value; } }
        public Object AnimationMap { get { return this[nameof(AnimationMap)]; } set { this[nameof(AnimationMap)] = value; } }
        public Object RidingAnimationMap { get { return this[nameof(RidingAnimationMap)]; } set { this[nameof(RidingAnimationMap)] = value; } }
    }
    public enum EWeaponAnimationType : int
    {
        None = 0,
        PullTrigger = 1,
        Aiming = 2,
        Shoot = 3,
        EWeaponAnimationType_MAX = 4,
    }
    public class WeaponNotifyAnimationInfo : Object
    {
        public WeaponNotifyAnimationInfo(nint addr) : base(addr) { }
        public Object PoseMap { get { return this[nameof(PoseMap)]; } set { this[nameof(PoseMap)] = value; } }
        public bool isAutoStop { get { return this[nameof(isAutoStop)].Flag; } set { this[nameof(isAutoStop)].Flag = value; } }
    }
    public enum EWeaponAnimationPoseType : int
    {
        None = 0,
        Stand = 1,
        Crouch = 2,
        Riding = 3,
        EWeaponAnimationPoseType_MAX = 4,
    }
    public class LayeredFlagContainer : Object
    {
        public LayeredFlagContainer(nint addr) : base(addr) { }
        public Array<ElementOfLayeredFlagContainer> ContainerList { get { return new Array<ElementOfLayeredFlagContainer>(this[nameof(ContainerList)].Address); } }
    }
    public class ElementOfLayeredFlagContainer : Object
    {
        public ElementOfLayeredFlagContainer(nint addr) : base(addr) { }
        public int Priority { get { return this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>(value); } }
        public FlagContainer Container { get { return this[nameof(Container)].As<FlagContainer>(); } set { this["Container"] = value; } }
    }
    public class PalDroppedPalProductDataForShop : Object
    {
        public PalDroppedPalProductDataForShop(nint addr) : base(addr) { }
        public PalCharacterStoredParameterId StoredParameterId { get { return this[nameof(StoredParameterId)].As<PalCharacterStoredParameterId>(); } set { this["StoredParameterId"] = value; } }
        public PalIndividualCharacterSaveParameter SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["SaveParameter"] = value; } }
    }
    public enum EPalShopBuyResultType : int
    {
        Successed = 0,
        Failed_InvalidBuyNum = 1,
        Failed_NotEnoughStock = 2,
        Failed_NotEnoughMoney = 3,
        Failed_NotEnoughItemSlot = 4,
        Failed_NotEnoughCharacterSlot = 5,
        Failed_ExistReservedProcess = 6,
        Failed_NotFoundItemContainer = 7,
        Failed_NotFoundPlayerInventoryData = 8,
        Failed_NotFoundPlayerMoneyData = 9,
        Failed_NotFoundProduct = 10,
        Failed_NotFoundShop = 11,
        Failed_NotFoundStoredPal = 12,
        Unknown = 13,
        EPalShopBuyResultType_MAX = 14,
    }
    public enum EPalSkeletalTickLayer : int
    {
        Default = 0,
        Ragdoll = 1,
        EPalSkeletalTickLayer_MAX = 2,
    }
    public enum EPalSkeletalMeshType : int
    {
        Normal = 0,
        Head = 1,
        Hair = 2,
        Body = 3,
        HairAttachAccessory = 4,
        EPalSkeletalMeshType_MAX = 5,
    }
    public class StatusDynamicParameter : Object
    {
        public StatusDynamicParameter(nint addr) : base(addr) { }
        public int GeneralIndex { get { return this[nameof(GeneralIndex)].GetValue<int>(); } set { this[nameof(GeneralIndex)].SetValue<int>(value); } }
        public Object GeneralName { get { return this[nameof(GeneralName)]; } set { this[nameof(GeneralName)] = value; } }
    }
    public class PalSyncTeleportRequestParameter : Object
    {
        public PalSyncTeleportRequestParameter(nint addr) : base(addr) { }
        public Object SyncTeleportStartSE { get { return this[nameof(SyncTeleportStartSE)]; } set { this[nameof(SyncTeleportStartSE)] = value; } }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Quat Rotation { get { return this[nameof(Rotation)].As<Quat>(); } set { this["Rotation"] = value; } }
        public bool bIsFadeOutSkip { get { return this[nameof(bIsFadeOutSkip)].Flag; } set { this[nameof(bIsFadeOutSkip)].Flag = value; } }
    }
    public class PalTechnologyDataTableRowBase : TableRowBase
    {
        public PalTechnologyDataTableRowBase(nint addr) : base(addr) { }
        public Object Name { get { return this[nameof(Name)]; } set { this[nameof(Name)] = value; } }
        public Object Description { get { return this[nameof(Description)]; } set { this[nameof(Description)] = value; } }
        public Object IconName { get { return this[nameof(IconName)]; } set { this[nameof(IconName)] = value; } }
        public int RequireBossDefeatNum { get { return this[nameof(RequireBossDefeatNum)].GetValue<int>(); } set { this[nameof(RequireBossDefeatNum)].SetValue<int>(value); } }
        public Object RequireTechnology { get { return this[nameof(RequireTechnology)]; } set { this[nameof(RequireTechnology)] = value; } }
        public bool IsBossTechnology { get { return this[nameof(IsBossTechnology)].Flag; } set { this[nameof(IsBossTechnology)].Flag = value; } }
        public int LevelCap { get { return this[nameof(LevelCap)].GetValue<int>(); } set { this[nameof(LevelCap)].SetValue<int>(value); } }
        public int Tier { get { return this[nameof(Tier)].GetValue<int>(); } set { this[nameof(Tier)].SetValue<int>(value); } }
        public int Cost { get { return this[nameof(Cost)].GetValue<int>(); } set { this[nameof(Cost)].SetValue<int>(value); } }
    }
    public class PalTechnologyRecipeUnlockDataTableRow : PalTechnologyDataTableRowBase
    {
        public PalTechnologyRecipeUnlockDataTableRow(nint addr) : base(addr) { }
        public Array<Object> UnlockBuildObjects { get { return new Array<Object>(this[nameof(UnlockBuildObjects)].Address); } }
        public Array<Object> UnlockItemRecipes { get { return new Array<Object>(this[nameof(UnlockItemRecipes)].Address); } }
    }
    public class PalTechnologyDataSet : Object
    {
        public PalTechnologyDataSet(nint addr) : base(addr) { }
        public DataTable recipeUnlockDataTable { get { return this[nameof(recipeUnlockDataTable)].As<DataTable>(); } set { this["recipeUnlockDataTable"] = value; } }
        public DataTable technologyNameTable { get { return this[nameof(technologyNameTable)].As<DataTable>(); } set { this["technologyNameTable"] = value; } }
        public DataTable technologyDescTable { get { return this[nameof(technologyDescTable)].As<DataTable>(); } set { this["technologyDescTable"] = value; } }
    }
    public class PalTimerHandle : Object
    {
        public PalTimerHandle(nint addr) : base(addr) { }
    }
    public enum EPalTutorialTriggerConditionType : int
    {
        None = 0,
        GetItem = 1,
        MeetBuildRequirement = 2,
        NewPal = 3,
        SamePal = 4,
        PalCount = 5,
        HighLevel = 6,
        RarePal = 7,
        CaptureFail = 8,
        OverWeight = 9,
        Night = 10,
        PalDeath = 11,
        BuildAppointment = 12,
        SummonCampPal = 13,
        LearnSkill = 14,
        AttackNoWeapon = 15,
        ObtainNote = 16,
        LevelUp = 17,
        Hunger = 18,
        PalHunger = 19,
        SAN = 20,
        Sick = 21,
        SkipWork = 22,
        EPalTutorialTriggerConditionType_MAX = 23,
    }
    public enum EPalItemSlotPressType : int
    {
        Normal = 0,
        LiftHalf = 1,
        LiftOne = 2,
        EPalItemSlotPressType_MAX = 3,
    }
    public enum EPalWidgetInputMode : int
    {
        Default = 0,
        GameAndMenu = 1,
        Game = 2,
        Menu = 3,
        EPalWidgetInputMode_MAX = 4,
    }
    public class PalUIActionBindData : Object
    {
        public PalUIActionBindData(nint addr) : base(addr) { }
    }
    public enum EPalDamageTextSeq : int
    {
        WaitStart = 0,
        Displaying = 1,
        WaitClose = 2,
        EPalDamageTextSeq_MAX = 3,
    }
    public class PalBaseCampTaskCheckedData : Object
    {
        public PalBaseCampTaskCheckedData(nint addr) : base(addr) { }
        public int completedTaskNum { get { return this[nameof(completedTaskNum)].GetValue<int>(); } set { this[nameof(completedTaskNum)].SetValue<int>(value); } }
        public Object buildObjectNumMap { get { return this[nameof(buildObjectNumMap)]; } set { this[nameof(buildObjectNumMap)] = value; } }
        public int workerNum { get { return this[nameof(workerNum)].GetValue<int>(); } set { this[nameof(workerNum)].SetValue<int>(value); } }
    }
    public class PalBaseCampTaskDataSet : Object
    {
        public PalBaseCampTaskDataSet(nint addr) : base(addr) { }
        public Array<PalBaseCampTaskData_BuildObject> requireBuildObjects { get { return new Array<PalBaseCampTaskData_BuildObject>(this[nameof(requireBuildObjects)].Address); } }
        public PalBaseCampTaskData_WorkerNum requirePalNum { get { return this[nameof(requirePalNum)].As<PalBaseCampTaskData_WorkerNum>(); } set { this["requirePalNum"] = value; } }
    }
    public class PalBaseCampTaskData_WorkerNum : Object
    {
        public PalBaseCampTaskData_WorkerNum(nint addr) : base(addr) { }
        public Object incompleteMsgID { get { return this[nameof(incompleteMsgID)]; } set { this[nameof(incompleteMsgID)] = value; } }
        public Object completeMsgID { get { return this[nameof(completeMsgID)]; } set { this[nameof(completeMsgID)] = value; } }
        public int requireNum { get { return this[nameof(requireNum)].GetValue<int>(); } set { this[nameof(requireNum)].SetValue<int>(value); } }
    }
    public class PalBaseCampTaskData_BuildObject : Object
    {
        public PalBaseCampTaskData_BuildObject(nint addr) : base(addr) { }
        public Object incompleteMsgID { get { return this[nameof(incompleteMsgID)]; } set { this[nameof(incompleteMsgID)] = value; } }
        public Object completeMsgID { get { return this[nameof(completeMsgID)]; } set { this[nameof(completeMsgID)] = value; } }
        public PalDataTableRowName_MapObjectData mapObjectRowName { get { return this[nameof(mapObjectRowName)].As<PalDataTableRowName_MapObjectData>(); } set { this["mapObjectRowName"] = value; } }
        public int requireNum { get { return this[nameof(requireNum)].GetValue<int>(); } set { this[nameof(requireNum)].SetValue<int>(value); } }
    }
    public class PalInsideBaseCampUI_DisplayItemInfo : Object
    {
        public PalInsideBaseCampUI_DisplayItemInfo(nint addr) : base(addr) { }
        public bool isShowWhenNothingItem { get { return this[nameof(isShowWhenNothingItem)].Flag; } set { this[nameof(isShowWhenNothingItem)].Flag = value; } }
    }
    public enum EPalUIPalCharacterRankUpRequestResult : int
    {
        Success = 0,
        FailedNotValidMapObject = 1,
        FailedNotSetTarget = 2,
        FailedCannotRankUp = 3,
        FailedNotEnoughResources = 4,
        EPalUIPalCharacterRankUpRequestResult_MAX = 5,
    }
    public enum EPalUIPalCharacterRankUpSelectResourceType : int
    {
        Newer = 0,
        Older = 1,
        EPalUIPalCharacterRankUpSelectResourceType_MAX = 2,
    }
    public enum EPalUIPalCharacterRankUpSelectMode : int
    {
        SelectReferenceSlot = 0,
        SelectIndividualSlot = 1,
        EPalUIPalCharacterRankUpSelectMode_MAX = 2,
    }
    public enum EPalPalStorageManageRightType : int
    {
        BaseCamp = 0,
        Party = 1,
        EPalPalStorageManageRightType_MAX = 2,
    }
    public enum EPalLimitVolumeFlag : int
    {
        Build = 1,
        EnemySpawn = 2,
        MapObjectSpawn = 4,
        BaseCampArea = 8,
        EPalLimitVolumeFlag_MAX = 9,
    }
    public class PalCalcCharacterDamageInfo : Object
    {
        public PalCalcCharacterDamageInfo(nint addr) : base(addr) { }
        public float OtomoRate { get { return this[nameof(OtomoRate)].GetValue<float>(); } set { this[nameof(OtomoRate)].SetValue<float>(value); } }
        public int DefenderLevel { get { return this[nameof(DefenderLevel)].GetValue<int>(); } set { this[nameof(DefenderLevel)].SetValue<int>(value); } }
        public int DefenderDefence { get { return this[nameof(DefenderDefence)].GetValue<int>(); } set { this[nameof(DefenderDefence)].SetValue<int>(value); } }
        public EPalElementType DefenderElementType1 { get { return (EPalElementType)this[nameof(DefenderElementType1)].GetValue<int>(); } set { this[nameof(DefenderElementType1)].SetValue<int>((int)value); } }
        public EPalElementType DefenderElementType2 { get { return (EPalElementType)this[nameof(DefenderElementType2)].GetValue<int>(); } set { this[nameof(DefenderElementType2)].SetValue<int>((int)value); } }
        public float ElementStatusMultiplay { get { return this[nameof(ElementStatusMultiplay)].GetValue<float>(); } set { this[nameof(ElementStatusMultiplay)].SetValue<float>(value); } }
    }
    public enum EPalObjectTypeQuery : int
    {
        Water = 0,
        Attack = 1,
        PlayerPawn = 2,
        Temperature = 3,
        SystemVolume = 4,
        LiftedupPawn = 5,
        AroundInfoCollect = 6,
        AttackHitOnly = 7,
        EPalObjectTypeQuery_MAX = 8,
    }
    public enum EPalPhysicalSurface : int
    {
        Default = 0,
        Ground = 1,
        Wood = 2,
        Grass = 3,
        Stone = 4,
        Water = 5,
        Snow = 6,
        Lava = 7,
        EPalPhysicalSurface_MAX = 8,
    }
    public enum EPalTraceTypeQuery : int
    {
        FluidTrace = 0,
        ReticleRayCast = 1,
        AISightRayCast = 2,
        vsGroundRayCast = 3,
        WaterPlaneRayCast = 4,
        ClimbRayCast = 5,
        RollingRayCast = 6,
        EPalTraceTypeQuery_MAX = 7,
    }
    public enum EPalDialogType : int
    {
        Alert = 0,
        YesNo = 1,
        OkCancel = 2,
        EPalDialogType_MAX = 3,
    }
    public class PalDropCharacterExtraParameter : Object
    {
        public PalDropCharacterExtraParameter(nint addr) : base(addr) { }
        public Guid DropPlayerUId { get { return this[nameof(DropPlayerUId)].As<Guid>(); } set { this["DropPlayerUId"] = value; } }
    }
    public enum EPalLocalizeTextCategory : int
    {
        None = 0,
        UICommon = 1,
        NpcTalk = 2,
        BaseCampWorkerEvent = 3,
        PalMonsterName = 4,
        PalHumanName = 5,
        UniqueNPCName = 6,
        PrefixName = 7,
        PalShortDescription = 8,
        PalLongDescription = 9,
        PalFirstActivatedInfo = 10,
        ItemName = 11,
        ItemDescription = 12,
        MapObjectName = 13,
        BuildObjectDescription = 14,
        BuildObjectCategory = 15,
        SkillName = 16,
        SkillDesc = 17,
        TechnologyName = 18,
        TechnologyDescription = 19,
        WorldMapRegionAndPlace = 20,
        DungeonName = 21,
        NoteDescription = 22,
        TutorialMessage = 23,
        HelpGuide = 24,
        MapRespawnPoint = 25,
        EPalLocalizeTextCategory_MAX = 26,
    }
    public class PalKeyAction : Object
    {
        public PalKeyAction(nint addr) : base(addr) { }
        public Object ActionName { get { return this[nameof(ActionName)]; } set { this[nameof(ActionName)] = value; } }
        public EPalKeyConfigAxisFilterType FilterType { get { return (EPalKeyConfigAxisFilterType)this[nameof(FilterType)].GetValue<int>(); } set { this[nameof(FilterType)].SetValue<int>((int)value); } }
    }
    public enum EPalPhysicsBoneType : int
    {
        None = 0,
        AttachRope = 1,
        AttachRopeTrapLeg = 2,
        EPalPhysicsBoneType_MAX = 3,
    }
    public enum EPalSupportedPlatformType : int
    {
        Unknown = 0,
        Windows = 1,
        WinGDK = 2,
        XB1 = 3,
        XSX = 4,
        Linux = 5,
        EPalSupportedPlatformType_MAX = 6,
    }
    public class PalMakeDamageInfo : Object
    {
        public PalMakeDamageInfo(nint addr) : base(addr) { }
        public Actor Attacker { get { return this[nameof(Attacker)].As<Actor>(); } set { this["Attacker"] = value; } }
        public Actor Defender { get { return this[nameof(Defender)].As<Actor>(); } set { this["Defender"] = value; } }
        public SceneComponent HitComponent { get { return this[nameof(HitComponent)].As<SceneComponent>(); } set { this["HitComponent"] = value; } }
        public int Power { get { return this[nameof(Power)].GetValue<int>(); } set { this[nameof(Power)].SetValue<int>(value); } }
        public EPalWazaCategory Category { get { return (EPalWazaCategory)this[nameof(Category)].GetValue<int>(); } set { this[nameof(Category)].SetValue<int>((int)value); } }
        public EPalElementType Element { get { return (EPalElementType)this[nameof(Element)].GetValue<int>(); } set { this[nameof(Element)].SetValue<int>((int)value); } }
        public EPalAttackType AttackType { get { return (EPalAttackType)this[nameof(AttackType)].GetValue<int>(); } set { this[nameof(AttackType)].SetValue<int>((int)value); } }
        public EPalWeaponType WeaponType { get { return (EPalWeaponType)this[nameof(WeaponType)].GetValue<int>(); } set { this[nameof(WeaponType)].SetValue<int>((int)value); } }
        public Vector HitLocation { get { return this[nameof(HitLocation)].As<Vector>(); } set { this["HitLocation"] = value; } }
        public bool IsLeanBack { get { return this[nameof(IsLeanBack)].Flag; } set { this[nameof(IsLeanBack)].Flag = value; } }
        public bool IsBlow { get { return this[nameof(IsBlow)].Flag; } set { this[nameof(IsBlow)].Flag = value; } }
        public Vector BlowVelocity { get { return this[nameof(BlowVelocity)].As<Vector>(); } set { this["BlowVelocity"] = value; } }
        public HitResult HitInfo { get { return this[nameof(HitInfo)].As<HitResult>(); } set { this["HitInfo"] = value; } }
        public EPalAdditionalEffectType EffectType1 { get { return (EPalAdditionalEffectType)this[nameof(EffectType1)].GetValue<int>(); } set { this[nameof(EffectType1)].SetValue<int>((int)value); } }
        public int EffectValue1 { get { return this[nameof(EffectValue1)].GetValue<int>(); } set { this[nameof(EffectValue1)].SetValue<int>(value); } }
        public float EffectValueEx1 { get { return this[nameof(EffectValueEx1)].GetValue<float>(); } set { this[nameof(EffectValueEx1)].SetValue<float>(value); } }
        public EPalAdditionalEffectType EffectType2 { get { return (EPalAdditionalEffectType)this[nameof(EffectType2)].GetValue<int>(); } set { this[nameof(EffectType2)].SetValue<int>((int)value); } }
        public int EffectValue2 { get { return this[nameof(EffectValue2)].GetValue<int>(); } set { this[nameof(EffectValue2)].SetValue<int>(value); } }
        public float EffectValueEx2 { get { return this[nameof(EffectValueEx2)].GetValue<float>(); } set { this[nameof(EffectValueEx2)].SetValue<float>(value); } }
        public Array<int> HitFoliageIndex { get { return new Array<int>(this[nameof(HitFoliageIndex)].Address); } }
        public float SneakAttackRate { get { return this[nameof(SneakAttackRate)].GetValue<float>(); } set { this[nameof(SneakAttackRate)].SetValue<float>(value); } }
        public float DamageRatePerCollision { get { return this[nameof(DamageRatePerCollision)].GetValue<float>(); } set { this[nameof(DamageRatePerCollision)].SetValue<float>(value); } }
        public Array<PalSpecialAttackRateInfo> SpecialAttackRateInfos { get { return new Array<PalSpecialAttackRateInfo>(this[nameof(SpecialAttackRateInfos)].Address); } }
        public EPalDamageAnimationReactionType DamageReactionAnimationType { get { return (EPalDamageAnimationReactionType)this[nameof(DamageReactionAnimationType)].GetValue<int>(); } set { this[nameof(DamageReactionAnimationType)].SetValue<int>((int)value); } }
        public bool bAttackableToFriend { get { return this[nameof(bAttackableToFriend)].Flag; } set { this[nameof(bAttackableToFriend)].Flag = value; } }
        public bool NoDamage { get { return this[nameof(NoDamage)].Flag; } set { this[nameof(NoDamage)].Flag = value; } }
        public bool IgnoreShield { get { return this[nameof(IgnoreShield)].Flag; } set { this[nameof(IgnoreShield)].Flag = value; } }
        public bool UIDamageTextOverride_DoubleRegist { get { return this[nameof(UIDamageTextOverride_DoubleRegist)].Flag; } set { this[nameof(UIDamageTextOverride_DoubleRegist)].Flag = value; } }
        public EPalPlayerDamageCameraShakeCategory CameraShake { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(CameraShake)].GetValue<int>(); } set { this[nameof(CameraShake)].SetValue<int>((int)value); } }
        public EPalSizeType ForceRagdollSize { get { return (EPalSizeType)this[nameof(ForceRagdollSize)].GetValue<int>(); } set { this[nameof(ForceRagdollSize)].SetValue<int>((int)value); } }
        public Actor OverrideNetworkOwner { get { return this[nameof(OverrideNetworkOwner)].As<Actor>(); } set { this["OverrideNetworkOwner"] = value; } }
    }
    public class PalTimerGaugeWidgetCreateInfo : Object
    {
        public PalTimerGaugeWidgetCreateInfo(nint addr) : base(addr) { }
        public Actor TargetActor { get { return this[nameof(TargetActor)].As<Actor>(); } set { this["TargetActor"] = value; } }
        public Vector TargetLocation { get { return this[nameof(TargetLocation)].As<Vector>(); } set { this["TargetLocation"] = value; } }
        public Object timerGaugeWidgetClass { get { return this[nameof(timerGaugeWidgetClass)]; } set { this[nameof(timerGaugeWidgetClass)] = value; } }
        public Vector DisplayOffset { get { return this[nameof(DisplayOffset)].As<Vector>(); } set { this["DisplayOffset"] = value; } }
        public float DisplayRange { get { return this[nameof(DisplayRange)].GetValue<float>(); } set { this[nameof(DisplayRange)].SetValue<float>(value); } }
        public Object FunctionName { get { return this[nameof(FunctionName)]; } set { this[nameof(FunctionName)] = value; } }
        public float Time { get { return this[nameof(Time)].GetValue<float>(); } set { this[nameof(Time)].SetValue<float>(value); } }
        public bool bLooping { get { return this[nameof(bLooping)].Flag; } set { this[nameof(bLooping)].Flag = value; } }
        public float InitialStartDelay { get { return this[nameof(InitialStartDelay)].GetValue<float>(); } set { this[nameof(InitialStartDelay)].SetValue<float>(value); } }
        public float InitialStartDelayVariance { get { return this[nameof(InitialStartDelayVariance)].GetValue<float>(); } set { this[nameof(InitialStartDelayVariance)].SetValue<float>(value); } }
        public bool IsHide { get { return this[nameof(IsHide)].Flag; } set { this[nameof(IsHide)].Flag = value; } }
    }
    public enum EPalShopLotteryBiomeType : int
    {
        None = 0,
        Plain = 1,
        EPalShopLotteryBiomeType_MAX = 2,
    }
    public class PalDataTableRowName_PalShopCreateData : Object
    {
        public PalDataTableRowName_PalShopCreateData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalShopLotteryType : int
    {
        None = 0,
        SimpleLottery = 1,
        BiomeLottery = 2,
        EPalShopLotteryType_MAX = 3,
    }
    public class PalDataTableRowName_ItemShopLotteryData : Object
    {
        public PalDataTableRowName_ItemShopLotteryData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public enum EPalVisualEffectID : int
    {
        None = 0,
        CaptureEmissive = 1,
        SpawnFromBallEmissive = 2,
        ReturnToBallEmissive = 3,
        FadeOut = 4,
        FadeIn = 5,
        PalOutlineFadeIn = 6,
        PalOutlineFadeOut = 7,
        PalBattleOutline = 8,
        Poison = 9,
        PowerUp = 10,
        DeadEffect = 11,
        FireCondition = 12,
        WaterCondition = 13,
        IceCondition = 14,
        ElectricityCondition = 15,
        EarthCondition = 16,
        LeafCondition = 17,
        DarkCondition = 18,
        Swimming = 19,
        CameraVignette = 20,
        PalEffectFadeIn = 21,
        PalEffectFadeOut = 22,
        RarePal = 23,
        FunnelStartEmissive = 24,
        FunnelEndEmissive = 25,
        SelfDestructEmissive = 26,
        Mosaic = 27,
        DebugRefresh = 28,
        EPalVisualEffectID_MAX = 29,
    }
    public class PalVisualEffectDynamicParameter : Object
    {
        public PalVisualEffectDynamicParameter(nint addr) : base(addr) { }
        //public Array<PalVisualEffectDynamicParameterFloat> FloatValues { get { return new Array<PalVisualEffectDynamicParameterFloat>(this[nameof(FloatValues)].Address); } }
    }
    public class PalVisualEffectDynamicParameterFloat : Object
    {
        public PalVisualEffectDynamicParameterFloat(nint addr) : base(addr) { }
        public Object Name { get { return this[nameof(Name)]; } set { this[nameof(Name)] = value; } }
        public float Value { get { return this[nameof(Value)].GetValue<float>(); } set { this[nameof(Value)].SetValue<float>(value); } }
    }
    public enum EPalWorkAssignableFixedType : int
    {
        Both = 0,
        FreeOnly = 1,
        FixedOnly = 2,
        Cannot = 3,
        EPalWorkAssignableFixedType_MAX = 4,
    }
    public class PalWorkAssignInfo : Object
    {
        public PalWorkAssignInfo(nint addr) : base(addr) { }
        public int LocationIndex { get { return this[nameof(LocationIndex)].GetValue<int>(); } set { this[nameof(LocationIndex)].SetValue<int>(value); } }
        public PalWorkAssign WorkAssign { get { return this[nameof(WorkAssign)].As<PalWorkAssign>(); } set { this["WorkAssign"] = value; } }
    }
    public class PalFastWorkAssignRepInfoArray : FastArraySerializer
    {
        public PalFastWorkAssignRepInfoArray(nint addr) : base(addr) { }
        public Array<PalWorkAssignRepInfo> Items { get { return new Array<PalWorkAssignRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalWorkAssignRepInfo : FastArraySerializerItem
    {
        public PalWorkAssignRepInfo(nint addr) : base(addr) { }
        public int LocationIndex { get { return this[nameof(LocationIndex)].GetValue<int>(); } set { this[nameof(LocationIndex)].SetValue<int>(value); } }
        public PalWorkAssign WorkAssign { get { return this[nameof(WorkAssign)].As<PalWorkAssign>(); } set { this["WorkAssign"] = value; } }
    }
    public enum EPalWorkProgressState : int
    {
        Init = 0,
        Workable = 1,
        NotWorkable = 2,
        Finish = 3,
        Dispose = 4,
        EPalWorkProgressState_MAX = 5,
    }
    public enum EPalWorkBehaviourType : int
    {
        Undefined = 0,
        StackAmount = 1,
        Participate = 2,
        EPalWorkBehaviourType_MAX = 3,
    }
    public class PalWorkAssignLocalLocation : Object
    {
        public PalWorkAssignLocalLocation(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Vector FacingDirection { get { return this[nameof(FacingDirection)].As<Vector>(); } set { this["FacingDirection"] = value; } }
    }
    public class PalWorkAssignDefineData : Object
    {
        public PalWorkAssignDefineData(nint addr) : base(addr) { }
        public Array<EPalGenusCategoryType> GenusCategories { get { return new Array<EPalGenusCategoryType>(this[nameof(GenusCategories)].Address); } }
        public Array<EPalElementType> ElementTypes { get { return new Array<EPalElementType>(this[nameof(ElementTypes)].Address); } }
        public EPalWorkSuitability WorkSuitability { get { return (EPalWorkSuitability)this[nameof(WorkSuitability)].GetValue<int>(); } set { this[nameof(WorkSuitability)].SetValue<int>((int)value); } }
        public int WorkSuitabilityRank { get { return this[nameof(WorkSuitabilityRank)].GetValue<int>(); } set { this[nameof(WorkSuitabilityRank)].SetValue<int>(value); } }
        public bool bPlayerWorkable { get { return this[nameof(bPlayerWorkable)].Flag; } set { this[nameof(bPlayerWorkable)].Flag = value; } }
        public EPalWorkType WorkType { get { return (EPalWorkType)this[nameof(WorkType)].GetValue<int>(); } set { this[nameof(WorkType)].SetValue<int>((int)value); } }
        public EPalActionType ActionType { get { return (EPalActionType)this[nameof(ActionType)].GetValue<int>(); } set { this[nameof(ActionType)].SetValue<int>((int)value); } }
        public int WorkerMaxNum { get { return this[nameof(WorkerMaxNum)].GetValue<int>(); } set { this[nameof(WorkerMaxNum)].SetValue<int>(value); } }
        public float AffectSanityValue { get { return this[nameof(AffectSanityValue)].GetValue<float>(); } set { this[nameof(AffectSanityValue)].SetValue<float>(value); } }
    }
    public class PalWorldMapUIDataTableRow : TableRowBase
    {
        public PalWorldMapUIDataTableRow(nint addr) : base(addr) { }
        public Vector2D minMapTextureBlockSize { get { return this[nameof(minMapTextureBlockSize)].As<Vector2D>(); } set { this["minMapTextureBlockSize"] = value; } }
        public Vector2D mapBlockNum { get { return this[nameof(mapBlockNum)].As<Vector2D>(); } set { this["mapBlockNum"] = value; } }
        public Vector landScapeRealPositionMin { get { return this[nameof(landScapeRealPositionMin)].As<Vector>(); } set { this["landScapeRealPositionMin"] = value; } }
        public Vector landScapeRealPositionMax { get { return this[nameof(landScapeRealPositionMax)].As<Vector>(); } set { this["landScapeRealPositionMax"] = value; } }
        public Object textureDataMap { get { return this[nameof(textureDataMap)]; } set { this[nameof(textureDataMap)] = value; } }
        public Object DefaultMaskTexture { get { return this[nameof(DefaultMaskTexture)]; } set { this[nameof(DefaultMaskTexture)] = value; } }
    }
    public class PalWorldMapUIRegionData : Object
    {
        public PalWorldMapUIRegionData(nint addr) : base(addr) { }
        public Object Texture { get { return this[nameof(Texture)]; } set { this[nameof(Texture)] = value; } }
        public Vector2D blockSize { get { return this[nameof(blockSize)].As<Vector2D>(); } set { this["blockSize"] = value; } }
        public Vector2D gridPosition { get { return this[nameof(gridPosition)].As<Vector2D>(); } set { this["gridPosition"] = value; } }
        public Object regionNameMsgId { get { return this[nameof(regionNameMsgId)]; } set { this[nameof(regionNameMsgId)] = value; } }
    }
    public class PalWorldSecurityWantedStateInfo : Object
    {
        public PalWorldSecurityWantedStateInfo(nint addr) : base(addr) { }
        public DateTime ExpiredDate { get { return this[nameof(ExpiredDate)].As<DateTime>(); } set { this["ExpiredDate"] = value; } }
        public Array<Guid> CrimeInstanceIdArray { get { return new Array<Guid>(this[nameof(CrimeInstanceIdArray)].Address); } }
    }
    public class PalCrimeStateInfo : Object
    {
        public PalCrimeStateInfo(nint addr) : base(addr) { }
        public Object CrimeStateFinishTimeMap { get { return this[nameof(CrimeStateFinishTimeMap)]; } set { this[nameof(CrimeStateFinishTimeMap)] = value; } }
        public Array<Guid> CrimeStateArray { get { return new Array<Guid>(this[nameof(CrimeStateArray)].Address); } }
    }
    public enum EPalAIActionBaseCampRecoverHungryEatState : int
    {
        TurnToFood = 0,
        Eat = 1,
        EPalAIActionBaseCampRecoverHungryEatState_MAX = 2,
    }
    public enum EPalAIActionBaseCampSleepActivelyMode : int
    {
        ApproachToBed = 0,
        WalkAround = 1,
        EPalAIActionBaseCampSleepActivelyMode_MAX = 2,
    }
    public enum EPalRequestSoftScriptPriorityAdd : int
    {
        SoftScript = 0,
        SoftScriptInterrupt = 1,
        SoftScript_3 = 2,
        SoftScript_4 = 3,
        SoftScript_5 = 4,
        SoftScript_6 = 5,
        SoftScript_7 = 6,
        SoftScript_8 = 7,
        SoftScript_9 = 8,
        SoftScript_10 = 9,
        EPalRequestSoftScriptPriorityAdd_MAX = 10,
    }
    public enum EPalAISensorSearchQueryPlayer : int
    {
        IncludePlayer = 0,
        IgnorePlayer = 1,
        PlayerOnly = 2,
        EPalAISensorSearchQueryPlayer_MAX = 3,
    }
    public enum EPalAudioStateGroup : int
    {
        InRaid = 0,
        InExplore = 1,
        InSpot = 2,
        InField = 3,
        InBattle = 4,
        Battle_Cute = 5,
        Battle_Cool = 6,
        Battle_Strong = 7,
        Battle_Human_Common = 8,
        Battle_Human_Villain = 9,
        Battle_FieldBoss = 10,
        Battle_Legend = 11,
        Battle_TowerBoss = 12,
        SpotName = 13,
        Biome = 14,
        RaidState = 15,
        Player_MainState = 16,
        Player_BattleState = 17,
        Player_Life = 18,
        EPalAudioStateGroup_MAX = 19,
    }
    public enum EPalAudioState : int
    {
        None = 0,
        VillageA = 1,
        VillageB = 2,
        BaseCamp = 3,
        InDoor = 4,
        BossRoom = 5,
        Grassland = 6,
        Forest = 7,
        Desert = 8,
        Mountain = 9,
        Caution = 10,
        Fight = 11,
        End = 12,
        Explore = 13,
        Battle = 14,
        Alive = 15,
        Dead = 16,
        EPalAudioState_MAX = 17,
    }
    public enum EPalAudioRTPC : int
    {
        Field_Time = 0,
        Sliding_Speed = 1,
        EPalAudioRTPC_MAX = 2,
    }
    public enum EPalAudioTrigger : int
    {
        None = 0,
        BattleWin = 1,
        RaidEnd = 2,
        Captured = 3,
        GameOver = 4,
        EPalAudioTrigger_MAX = 5,
    }
    public enum EPalAudioFadeType : int
    {
        None = 0,
        FadeIn = 1,
        FadeOut = 2,
        EPalAudioFadeType_MAX = 3,
    }
    public enum EPalBaseCampAssignType : int
    {
        None = 0,
        Work = 1,
        WorkAttack = 2,
        Defense = 3,
        EPalBaseCampAssignType_MAX = 4,
    }
    public enum EPalBaseCampOperationResult : int
    {
        Success = 0,
        FailedNotFoundNetworkTransmitter = 1,
        FailedNotFoundBaseCamp = 2,
        FailedNotRequestedFromBaseCampPoint = 3,
        FailedNotFoundOwnerMapObjectModel = 4,
        FailedDismantleMapObject = 5,
        EPalBaseCampOperationResult_MAX = 6,
    }
    public enum EPalBaseCampWorkerAssignResult : int
    {
        Success = 0,
        FailedNotFoundBaseCamp = 1,
        FailedNotFoundWork = 2,
        FailedOverflowAssignCount = 3,
        FailedCharacterHandleMissing = 4,
        EPalBaseCampWorkerAssignResult_MAX = 5,
    }
    public enum EPalBaseCampWorkResult : int
    {
        Success = 0,
        FailedNotFoundBaseCamp = 1,
        FailedNotFoundWork = 2,
        FailedNotMatchWorkType = 3,
        EPalBaseCampWorkResult_MAX = 4,
    }
    public enum EPalBaseCampModuleType : int
    {
        None = 0,
        Energy = 1,
        Medical = 2,
        TransportItemDirector = 3,
        ResourceCollector = 4,
        ItemStorages = 5,
        FacilityReservation = 6,
        ObjectMaintenance = 7,
        PassiveEffect = 8,
        EPalBaseCampModuleType_MAX = 9,
    }
    public enum EPalBaseCampWorkerTaskType : int
    {
        Undefined = 0,
        IgnitionTorchAtNight = 1,
        EPalBaseCampWorkerTaskType_MAX = 2,
    }
    public enum EPalBaseCampWorkerTaskCheck : int
    {
        None = 0,
        SleepAtNight = 1,
        EPalBaseCampWorkerTaskCheck_MAX = 2,
    }
    public enum EPalBaseCampWorkerTaskCheckResponse : int
    {
        ExistsTask = 0,
        EPalBaseCampWorkerTaskCheckResponse_MAX = 1,
    }
    public enum EPalBaseCampWorkerEventPriority : int
    {
        Top = 0,
        Default = 1,
        EPalBaseCampWorkerEventPriority_MAX = 2,
    }
    public enum EPalBaseCampPassiveEffectType : int
    {
        None = 0,
        WorkSuitability = 1,
        WorkHard = 2,
        EPalBaseCampPassiveEffectType_MAX = 3,
    }
    public enum EPalBaseCampModuleTransportItemTransportPriority : int
    {
        None = 0,
        BaseCampChest = 1,
        BaseCampChestHigh = 2,
        Requirement = 3,
        FoodBox = 4,
        EPalBaseCampModuleTransportItemTransportPriority_MAX = 5,
    }
    public enum EPalBaseCampModuleTransportItemTransportableItemExtraType : int
    {
        None = 0,
        OnlyCorruptible = 1,
        EPalBaseCampModuleTransportItemTransportableItemExtraType_MAX = 2,
    }
    public enum EPalBaseCampFacilityRequestResult : int
    {
        FailedNotExistsAnyFacilities = 0,
        FailedNotExistsTheFacility = 1,
        FailedAlreadyUsing = 2,
        Success = 3,
        EPalBaseCampFacilityRequestResult_MAX = 4,
    }
    public enum EPalBuildInstallCheckModeType : int
    {
        Normal = 0,
        InstallAtReticle = 1,
        EPalBuildInstallCheckModeType_MAX = 2,
    }
    public enum EPalBuildObjectVisualType : int
    {
        Invisible = 0,
        Normal = 1,
        Simulation = 2,
        CannotInstall = 3,
        Building = 4,
        BuildComplete = 5,
        DismantleTarget = 6,
        Damage = 7,
        Repair = 8,
        EPalBuildObjectVisualType_MAX = 9,
    }
    public enum EFailedCaptureType : int
    {
        None = 0,
        NoMPZero = 1,
        TestFailed = 2,
        EFailedCaptureType_MAX = 3,
    }
    public enum EPalCharacterContainerOperationResult : int
    {
        Success = 0,
        FailedTerminatedManager = 1,
        FailedIssueContainerId = 2,
        FailedOverflowSlotNum = 3,
        FailedNotFoundContainer = 4,
        FailedNotFoundSlot = 5,
        FailedNotFoundCharacter = 6,
        FailedNotFoundCharacterParameter = 7,
        FailedIsLocalOnlyContainer = 8,
        FailedNoContainerInfoInResponse = 9,
        FailedNotEnoughSlotSpace = 10,
        FailedCannotGetSlotInfo = 11,
        FailedChangedSlotInfoRequestedOne = 12,
        FailedCannotSetTargetHandle = 13,
        FailedAlreadyLocked = 14,
        FailedNotJoinedPlayer = 15,
        FailedTransactionLocked = 16,
        FailedSimple = 17,
        FailedServerCode = 18,
        EPalCharacterContainerOperationResult_MAX = 19,
    }
    public enum EPalCharacterContainerSortType : int
    {
        PaldexNo_Asc = 0,
        Level_Desc = 1,
        ElementType = 2,
        BossFlag = 3,
        EPalCharacterContainerSortType_MAX = 4,
    }
    public enum EPalCharacterStatusOperationName : int
    {
        Undefined = 0,
        Attack = 1,
        Defence = 2,
        HP = 3,
        WorkSpeed = 4,
        EPalCharacterStatusOperationName_MAX = 5,
    }
    public enum EPalCoopSkillSearchType : int
    {
        Undefined = 0,
        MapObject = 1,
        Character = 2,
        DungeonPortal = 3,
        EPalCoopSkillSearchType_MAX = 4,
    }
    public enum EPalDungeonType : int
    {
        Normal = 0,
        Fixed = 1,
        EPalDungeonType_MAX = 2,
    }
    public enum EPalDungeonItemSpawnerType : int
    {
        Normal = 0,
        Special = 1,
        EPalDungeonItemSpawnerType_MAX = 2,
    }
    public enum EPalFlyHeightType : int
    {
        Stop = 0,
        ToFly = 1,
        ToLand = 2,
        EPalFlyHeightType_MAX = 3,
    }
    public enum EPalGameModeType : int
    {
        Title = 0,
        InGame = 1,
        EPalGameModeType_MAX = 2,
    }
    public enum EPalGameSystemInitState : int
    {
        Init = 0,
        InProgress = 1,
        Complete = 2,
        Failed = 3,
        EPalGameSystemInitState_MAX = 4,
    }
    public enum EPalGameSystemInitFailedReason : int
    {
        None = 0,
        WatchLog = 1,
        EPalGameSystemInitFailedReason_MAX = 2,
    }
    public enum EPalGameSystemInitProcessType : int
    {
        Init = 0,
        WaitForInitSystems = 1,
        ApplyWorldSaveData = 2,
        ApplyPlayerSaveData = 3,
        EPalGameSystemInitProcessType_MAX = 4,
    }
    public enum EPalGroupType : int
    {
        Undefined = 0,
        Neutral = 1,
        Organization = 2,
        IndependentGuild = 3,
        Guild = 4,
        EPalGroupType_MAX = 5,
    }
    public enum EPalWorkerRadialMenuResult : int
    {
        Cancel = 0,
        Feed = 1,
        ShowDetail = 2,
        MoveToBox = 3,
        MoveToOtomo = 4,
        Pet = 5,
        EPalWorkerRadialMenuResult_MAX = 6,
    }
    public enum EPalIncidentTalkType : int
    {
        None = 0,
        OneTalk = 1,
        MultiTalk = 2,
        CharacterTalk = 3,
        EPalIncidentTalkType_MAX = 4,
    }
    public enum EPalInteractiveObjectButtonType : int
    {
        OnePush = 0,
        LongPush_WithGauge = 1,
        LongPush_WithoutGauge = 2,
        LongPush_Infinity = 3,
        EPalInteractiveObjectButtonType_MAX = 4,
    }
    public enum EPalIVisitorNPCAction : int
    {
        None = 0,
        ReturnToSpawnedPoint = 1,
        Raid = 2,
        EPalIVisitorNPCAction_MAX = 3,
    }
    public enum EPalDropItemType : int
    {
        None = 0,
        UNKO = 1,
        Max = 2,
    }
    public enum EPalItemOperationType : int
    {
        Undefined = 0,
        Product = 1,
        Move = 2,
        Dispose = 3,
        EPalItemOperationType_MAX = 4,
    }
    public enum EPalCharacterLocationType : int
    {
        None = 0,
        Normal = 1,
        Warning = 2,
        EPalCharacterLocationType_MAX = 3,
    }
    public enum EPalMonsterControllerBaseCampLogType : int
    {
        SuccessFixedAssign = 0,
        FailedFixedAssignSimple = 1,
        FailedFixedAssignWithTargetWork = 2,
        FailedFixedAssignOverflowWorkers = 3,
        FailedFixedAssignNoWorkInRange = 4,
        FailedFixedAssignNotAssignableOtomo = 5,
        FailedFixedAssignNoSuitability = 6,
        FailedFixedAssignNotWantToDo = 7,
        EPalMonsterControllerBaseCampLogType_MAX = 8,
    }
    public enum EPalLogWidgetState : int
    {
        In = 0,
        Wait = 1,
        Out = 2,
        End = 3,
        EPalLogWidgetState_MAX = 4,
    }
    public enum EPalMapObjectType : int
    {
        OnlyExist = 0,
        Foliage = 1,
        EPalMapObjectType_MAX = 2,
    }
    public enum EPalMapObjectSpawnRequestType : int
    {
        MapObject = 0,
        PlayerBuild = 1,
        EPalMapObjectSpawnRequestType_MAX = 2,
    }
    public enum EPalMapObjectConcreteModelAccessResult : int
    {
        Success = 0,
        FailedMissing = 1,
        FailedInBuilding = 2,
        EPalMapObjectConcreteModelAccessResult_MAX = 3,
    }
    public enum EPalMapObjectDefenseType : int
    {
        Wait = 0,
        StationaryLauncher = 1,
        EPalMapObjectDefenseType_MAX = 2,
    }
    public enum EPalMapObjectMaterialType : int
    {
        None = 0,
        Wood = 1,
        Stone = 2,
        EPalMapObjectMaterialType_MAX = 3,
    }
    public enum EPalMapObjectDisposeOptionType : int
    {
        NoDropItems = 0,
        NotAutoPickup = 1,
        OpenTreasureBox = 2,
        Immediately = 3,
        NotNotifyOwnerSpawnerLevelObject = 4,
        ByUnloadStage = 5,
        DropBuildMaterials = 6,
        EPalMapObjectDisposeOptionType_MAX = 7,
    }
    public enum EPalMapObjectItemCollectableType : int
    {
        Pickup = 0,
        Work = 1,
        EPalMapObjectItemCollectableType_MAX = 2,
    }
    public enum EPalMapObjectInteractRestrictType : int
    {
        SameGuildOnly = 0,
        Anyone = 1,
        EPalMapObjectInteractRestrictType_MAX = 2,
    }
    public enum EPalMapObjectFoodProviderPriority : int
    {
        Normal = 0,
        Farm = 1,
        EPalMapObjectFoodProviderPriority_MAX = 2,
    }
    public enum EPalMapObjectWorkerAvailableFacilityType : int
    {
        PalBed = 0,
        Amusement = 1,
        Undefined = 2,
        EPalMapObjectWorkerAvailableFacilityType_MAX = 3,
    }
    public enum EPalBaseCampFacilityUsageState : int
    {
        Vacant = 0,
        Reserved = 1,
        Using = 2,
        EPalBaseCampFacilityUsageState_MAX = 3,
    }
    public enum EPalMapObjectModelConnectIndex : int
    {
        Up = 0,
        Down = 1,
        Left = 2,
        Right = 3,
        Back = 4,
        Front = 5,
        AnyPlace = 254,
        None = 255,
        EPalMapObjectModelConnectIndex_MAX = 256,
    }
    public enum EPalMapObjectModelInitializeExtraParameterType : int
    {
        Undefined = 0,
        Build = 1,
        SpawnedBy = 2,
        Spawner = 3,
        Item = 4,
        TreasureBox = 5,
        DropItem = 6,
        ItemDropObject = 7,
        Location = 8,
        InitialItem = 9,
        InitialCharacter = 10,
        PalEgg = 11,
        Note = 12,
        Interact = 13,
        ItemContainerAttribute = 14,
        ByPlayerUId = 15,
        InstanceId = 16,
        EPalMapObjectModelInitializeExtraParameterType_MAX = 17,
    }
    public enum EPalMasterDataExecPinType : int
    {
        Success = 0,
        RowNotFound = 1,
        EPalMasterDataExecPinType_MAX = 2,
    }
    public enum EPalNiagaraDataIterfaceSoundPlayerCommand : int
    {
        None = 0,
        PlaySoundOneShot = 1,
        EPalNiagaraDataIterfaceSoundPlayerCommand_MAX = 2,
    }
    public enum EPalNPCTalkProceedResult : int
    {
        Failed = 0,
        CommandExecuted = 1,
        AllCommandComplete = 2,
        CommandExecutedAndContinueProcess = 3,
        EPalNPCTalkProceedResult_MAX = 4,
    }
    public enum EPalNPCTalkCustomFunctionResult : int
    {
        None = 0,
        ContinueProcess = 1,
        BreakProcess = 2,
        EPalNPCTalkCustomFunctionResult_MAX = 3,
    }
    public enum EPalNPCTalkSelectedChoiceResult : int
    {
        ExecutedBySystem = 0,
        RequestClose = 1,
        EPalNPCTalkSelectedChoiceResult_MAX = 2,
    }
    public enum EPalNPCTalkCommand : int
    {
        SimpleMessages = 0,
        ChoiceYesNo = 1,
        CustomChoice = 2,
        TalkerNameChange = 3,
        CustomFunc = 4,
        CustomFuncBranch = 5,
        EPalNPCTalkCommand_MAX = 6,
    }
    public enum EPalNPCTalkSelectedChoiceCommand : int
    {
        EndTalk = 0,
        ChangeSeqence = 1,
        CustomFunc = 2,
        EPalNPCTalkSelectedChoiceCommand_MAX = 3,
    }
    public enum EPalNPCSkinColor : int
    {
        None = 0,
        White = 1,
        ReddishLight = 2,
        Light = 3,
        Default = 4,
        YellowishBrown = 5,
        Brown = 6,
        DarkBrown = 7,
        EPalNPCSkinColor_MAX = 8,
    }
    public enum EPalNPCFaceType : int
    {
        None = 0,
        Mobu_A = 1,
        Mobu_B = 2,
        Mobu_C = 3,
        Pocile = 4,
        Hunter = 5,
        Shop = 6,
        EPalNPCFaceType_MAX = 7,
    }
    public enum EPalNPCHairStyleType : int
    {
        None = 0,
        Mobu_A = 1,
        Mobu_B = 2,
        Mobu_C = 3,
        Mobu_D = 4,
        Mobu_E = 5,
        Pocile = 6,
        Hunter = 7,
        Shop = 8,
        EPalNPCHairStyleType_MAX = 9,
    }
    public enum EPalNPCHairColorType : int
    {
        None = 0,
        Black = 1,
        Silver = 2,
        LightBrown = 3,
        DarkBrown = 4,
        Beige = 5,
        Gold = 6,
        Ash = 7,
        Pink = 8,
        Red = 9,
        Violet = 10,
        EPalNPCHairColorType_MAX = 11,
    }
    public enum EPalNPCClothesType : int
    {
        None = 0,
        Mobu_A = 1,
        Mobu_B = 2,
        Mobu_C = 3,
        Mobu_D = 4,
        Mobu_E = 5,
        Pocile = 6,
        Hunter = 7,
        Shop = 8,
        EPalNPCClothesType_MAX = 9,
    }
    public enum EPalNPCScaleType : int
    {
        None = 0,
        S2 = 1,
        S1 = 2,
        M = 3,
        L1 = 4,
        L2 = 5,
        EPalNPCScaleType_MAX = 6,
    }
    public enum EPalPlatformType : int
    {
        Undefined = 0,
        XboxOne = 1,
        PS4 = 2,
        XboxSeries = 3,
        PS5 = 4,
        PC = 5,
        DedicatedServer = 6,
        CoopHost = 7,
        EPalPlatformType_MAX = 8,
    }
    public enum EPalOptionWorldMode : int
    {
        None = 0,
        Single = 1,
        ListenMulti = 2,
        Dedicated_PvE = 3,
        Dedicated_PvP = 4,
        EPalOptionWorldMode_MAX = 5,
    }
    public enum EPalPartnerSkillParameterQueryTag : int
    {
        MainDamage = 0,
        EPalPartnerSkillParameterQueryTag_MAX = 1,
    }
    public enum EPalPassiveSkillEffectTargetType : int
    {
        None = 0,
        ToSelf = 1,
        ToTrainer = 2,
        ToSelfAndTrainer = 3,
        EPalPassiveSkillEffectTargetType_MAX = 4,
    }
    public enum EPalPlayerAccountState : int
    {
        Uninitialized = 0,
        Initialized = 1,
        InNewCreation = 2,
        Login = 3,
        Logout = 4,
        EPalPlayerAccountState_MAX = 5,
    }
    public enum EPalRadarChartDrawType : int
    {
        Polygon = 0,
        Polygon_Bordered = 1,
        OnlyBorder = 2,
        EPalRadarChartDrawType_MAX = 3,
    }
    public enum EPalRandomIncidentSpawnerStatus : int
    {
        Unknown = 0,
        Idle = 1,
        CoolDown = 2,
        Executing = 3,
        WaitPlayerOutside = 4,
        EPalRandomIncidentSpawnerStatus_MAX = 5,
    }
    public enum EClassRepNodeMapping : int
    {
        NotRouted = 0,
        RelevantAllConnections = 1,
        Spatialize_Static = 2,
        Spatialize_Dynamic = 3,
        Spatialize_Dormancy = 4,
        EClassRepNodeMapping_MAX = 5,
    }
    public enum EPalApplySaveDataOrder : int
    {
        Early = 0,
        Normal = 1,
        Late = 2,
        Num = 3,
        EPalApplySaveDataOrder_MAX = 4,
    }
    public enum EPalSaveError : int
    {
        Success = 0,
        NotFound = 1,
        Unknown = 2,
        EPalSaveError_MAX = 3,
    }
    public enum EPalShopSellResultType : int
    {
        Successed = 0,
        Failed = 1,
        EPalShopSellResultType_MAX = 2,
    }
    public enum EPalStageType : int
    {
        Undefined = 0,
        Dungeon = 1,
        BossBattle = 2,
        EPalStageType_MAX = 3,
    }
    public enum EPalStageRequestResult : int
    {
        FailedNotValidStage = 0,
        FailedNotValidPlayerUId = 1,
        FailedNotValidPlayerState = 2,
        FailedNotValidPlayerController = 3,
        FailedNotValidPlayerCharacter = 4,
        FailedNotValidLoginPlayer = 5,
        FailedNotValidNetworkPlayerComponent = 6,
        FailedPlayerIsDead = 7,
        FailedNotValidStageWorldSubsystem = 8,
        FailedGetStartPointTransform = 9,
        FailedGetReturnToFieldPointTransform = 10,
        Success = 11,
        EPalStageRequestResult_MAX = 12,
    }
    public enum EPalStagePlayerState : int
    {
        Init = 0,
        WaitingStageLoad = 1,
        Login = 2,
        InExiting = 3,
        EPalStagePlayerState_MAX = 4,
    }
    public enum EPalTutorialTriggerType : int
    {
        None = 0,
        AddItem = 1,
        IndividualParam = 2,
        PlayerDeath = 3,
        Capture = 4,
        Common = 5,
        EPalTutorialTriggerType_MAX = 6,
    }
    public enum EPalAIActionType : int
    {
        None = 0,
        Action1 = 1,
        Leave = 2,
        Cooperation = 3,
        Warning = 4,
        SideMove = 5,
        EPalAIActionType_MAX = 6,
    }
    public enum EPalGeneralMontageType : int
    {
        None = 0,
        GeneralAttackReady_Near = 1,
        GeneralAttackReadyLoop_Near = 2,
        GeneralAttackProcess_Near = 3,
        GeneralAttackProcessLoop_Near = 4,
        GeneralAttackAfter_Near = 5,
        GeneralAttackReady_Far = 6,
        GeneralAttackReadyLoop_Far = 7,
        GeneralAttackProcess_Far = 8,
        GeneralAttackProcessLoop_Far = 9,
        GeneralAttackAfter_Far = 10,
        Rolling = 11,
        Step_Forward = 12,
        Step_Back = 13,
        Step_Right = 14,
        Step_Left = 15,
        JumpPreliminary = 16,
        JumpStart = 17,
        SleepStart = 18,
        SleepLoop = 19,
        SleepEnd = 20,
        BeLiftupStart = 21,
        BeLiftupLoop = 22,
        DamageAdditive = 23,
        HumanPetting_Standby_S = 24,
        HumanPetting_Standby_L = 25,
        HumanPetting_DoStroke_S = 26,
        HumanPetting_DoStroke_SM = 27,
        HumanPetting_DoStroke_M = 28,
        HumanPetting_DoStroke_L = 29,
        Climbing_ClimbUpAtTop = 30,
        Grappling = 31,
        EatUpper = 32,
        Defense_Wait = 33,
        EPalGeneralMontageType_MAX = 34,
    }
    public enum EPalRagdollPresetType : int
    {
        None = 0,
        BeLiftup = 1,
        EPalRagdollPresetType_MAX = 2,
    }
    public enum EPalCurrentActionNotifyType : int
    {
        Attack = 0,
        Spawn = 1,
        Other = 2,
        EPalCurrentActionNotifyType_MAX = 3,
    }
    public enum EPalMonsterMovementType : int
    {
        GroundOnly = 0,
        Fly = 1,
        FlyAndLanding = 2,
        Swim = 3,
        SwimGroundDamage = 4,
        EPalMonsterMovementType_MAX = 5,
    }
    public enum EPalEnemySpawnActorType : int
    {
        Rifle = 0,
        ShotGun = 1,
        Bat = 2,
        RPG = 3,
        EPalEnemySpawnActorType_MAX = 4,
    }
    public enum EPalEnemySpawnDefaultAction : int
    {
        None = 0,
        StopStand = 1,
        Turn90 = 2,
        Turn180 = 3,
        PointPathWalk = 4,
        EPalEnemySpawnDefaultAction_MAX = 5,
    }
    public enum EPalFacialEyeType : int
    {
        None = 0,
        Default = 1,
        Close = 2,
        HalfClose = 3,
        Pain = 4,
        Smile = 5,
        Anger = 6,
        Trouble = 7,
        GuruGuru = 8,
        EPalFacialEyeType_MAX = 9,
    }
    public enum EPalFacialMouthType : int
    {
        None = 0,
        Default = 1,
        Pain = 2,
        Smile = 3,
        Anger = 4,
        EPalFacialMouthType_MAX = 5,
    }
    public enum EPalPettingSizeType : int
    {
        Small = 0,
        SmallMiddle = 1,
        Medium = 2,
        Large = 3,
        EPalPettingSizeType_MAX = 4,
    }
    public enum EPalLandingType : int
    {
        None = 0,
        FootStep = 1,
        FootStep_S = 2,
        JumpLanding = 3,
        RollStep_Fwd = 4,
        RollStep_L = 5,
        RollStep_R = 6,
        RollStep_Bwd = 7,
        FootStep_Index_Begin = 1,
        FootStep_Index_End = 2,
        JumpLanding_Index_Begin = 3,
        JumpLanding_Index_End = 3,
        RollStep_Index_Begin = 4,
        RollStep_Index_End = 7,
        EPalLandingType_MAX = 8,
    }
    public enum EPalAIMoveResultFailedType : int
    {
        Undefined = 0,
        PartialNavMesh = 1,
        EPalAIMoveResultFailedType_MAX = 2,
    }
    public enum EPalActiveSkillSlotId : int
    {
        Default = 0,
        PartnerSkill = 100,
        EPalActiveSkillSlotId_MAX = 101,
    }
    public enum EPalSpawnedCharacterType : int
    {
        Common = 0,
        Rare = 1,
        FieldBoss = 2,
        RandomDungeonBoss = 3,
        ImprisonmentBoss = 4,
        TowerBoss = 5,
        EPalSpawnedCharacterType_MAX = 6,
    }
    public enum EPalMonsterEquipWeaponSocketType : int
    {
        None = 0,
        Socket_EquipWeapon_2 = 1,
        Socket_EquipWeapon_3 = 2,
        Socket_EquipWeapon_4 = 3,
        EPalMonsterEquipWeaponSocketType_MAX = 4,
    }
    public enum EPalCaptureSphereLevelType : int
    {
        Undefined = 0,
        Normal = 1,
        Mega = 2,
        Giga = 3,
        Master = 4,
        Tera = 5,
        Legend = 6,
        EPalCaptureSphereLevelType_MAX = 7,
    }
    public enum EPalPlayerSprintStaminaDecreaseType : int
    {
        Ignore = 0,
        OnlyBattleMode = 1,
        Always = 2,
        EPalPlayerSprintStaminaDecreaseType_MAX = 3,
    }
    public enum EPalUIConvertItemRequestStartResponse : int
    {
        Enable = 0,
        FailedNotSelectedRecipe = 1,
        FailedNotExistConcreteModel = 2,
        FailedNotExistEnergyModule = 3,
        FailedNotEnoughItems = 4,
        FailedNotEnoughEnergy = 5,
        EPalUIConvertItemRequestStartResponse_MAX = 6,
    }
    public enum EPalDamageTextType : int
    {
        DoubleRegist = 0,
        SingleRegist = 1,
        Normal = 2,
        SignelWeak = 3,
        DoubleWeak = 4,
        EPalDamageTextType_MAX = 5,
    }
    public enum EPalUIConditionType : int
    {
        None = 0,
        Happy = 1,
        Unhappy = 2,
        MinorInjury = 3,
        Severe = 4,
        Dying = 5,
        Hunger = 6,
        Starvation = 7,
        Cold = 8,
        Sprain = 9,
        Bulimia = 10,
        GastricUlcer = 11,
        Fracture = 12,
        Weakness = 13,
        DepressionSprain = 14,
        DisturbingElement = 15,
        EPalUIConditionType_MAX = 16,
    }
    public enum EPalUIWorkerCommentType : int
    {
        None = 0,
        Normal = 1,
        Normal_Craftsman = 2,
        Normal_Sabotage = 3,
        Dying = 4,
        Hungry_Half = 5,
        Hungry_Low = 6,
        Hungry_Starvation = 7,
        LowSanity_Half = 8,
        LowSanity_Warning = 9,
        LowSanity_Emergency = 10,
        Illnesses = 11,
        Injuries = 12,
        Bulimia = 13,
        Weakness = 14,
        DisturbingElement = 15,
        DodgeWork = 16,
        DodgeWork_Short = 17,
        DodgeWork_Sleep = 18,
        EatTooMuch = 19,
        Trantrum = 20,
        EPalUIWorkerCommentType_MAX = 21,
    }
    public enum EPalUIServerListSortType : int
    {
        PlayerNum = 0,
        Day = 1,
        EPalUIServerListSortType_MAX = 2,
    }
    public enum EPalUIServerListFilterType : int
    {
        Official = 0,
        Community = 1,
        History = 2,
        EPalUIServerListFilterType_MAX = 3,
    }
    public enum EPalUIJoinGameInputCodeType : int
    {
        Password = 0,
        InviteCode = 1,
        EPalUIJoinGameInputCodeType_MAX = 2,
    }
    public enum EPalUILiftSlotType : int
    {
        None = 0,
        Item = 1,
        CharacterHandle = 2,
        EPalUILiftSlotType_MAX = 3,
    }
    public enum EPalUIPaldexPanelDetailType : int
    {
        None = 0,
        NotEncount = 1,
        Encounted = 2,
        Captured = 3,
        EPalUIPaldexPanelDetailType_MAX = 4,
    }
    public enum EPalWorldMapType : int
    {
        Normal = 0,
        RealtimeCapture = 1,
        EPalWorldMapType_MAX = 2,
    }
    public enum EPalWorkRequestResult : int
    {
        Success = 0,
        FailedNotFoundBaseCamp = 1,
        FailedNotFoundOwnerMapObject = 2,
        FailedNotFoundWork = 3,
        FailedNotFoundWorkAssign = 4,
        FailedNotFoundWorkAssignLocation = 5,
        FailedDisableToAssignForAssignInfo = 6,
        FailedOverflowAssignCount = 7,
        FailedCharacterHandleMissing = 8,
        FailedCharacterParameterMissing = 9,
        FailedNotFoundCharacter = 10,
        FailedNotFoundCharacterAIController = 11,
        FailedNotMatchWorkType = 12,
        FailedNotWorkBase = 13,
        FailedNotSameWorker = 14,
        FailedNotFoundNetworkTransmitter = 15,
        FailedInvokeingInClientForServerInternalFunction = 16,
        FailedTransportNotExistDirector = 17,
        FailedTransportNotExistPathToMoveFor = 18,
        EPalWorkRequestResult_MAX = 19,
    }
    public enum EPalWorkTransformType : int
    {
        Undefined = 0,
        Static = 1,
        MapObject = 2,
        Character = 3,
        EPalWorkTransformType_MAX = 4,
    }
    public enum EPalWorkTickResult : int
    {
        Continue = 0,
        WaitForWorkable = 1,
        Terminate = 2,
        EPalWorkTickResult_MAX = 3,
    }
    public enum EPalWorkAssignableCheckResult : int
    {
        WorkerEvent = 0,
        Dead = 1,
        Sleeping = 2,
        RecoverHungry = 3,
        NotSuitable = 4,
        NotAssignableOtomo = 5,
        NotValidIndividualCharacterParameter = 6,
        CannotReviveSelf = 7,
        NotExistsMapObject = 8,
        MapObjectEffect = 9,
        Enable = 10,
        EPalWorkAssignableCheckResult_MAX = 11,
    }
    public enum EPalWorkTransportItemType : int
    {
        TakeOut = 0,
        PutIn = 1,
        EPalWorkTransportItemType_MAX = 2,
    }
    public enum EPalWorkDefenseCombatType : int
    {
        None = 0,
        Wait = 1,
        Gunner = 2,
        EPalWorkDefenseCombatType_MAX = 3,
    }
    public enum EPalWorkAssignOptionType : int
    {
        HigherPriorityThanSleep = 0,
        EPalWorkAssignOptionType_MAX = 1,
    }
    public enum EPalWorkWorkerState : int
    {
        None = 0,
        Reserve = 1,
        Working = 2,
        Leave = 3,
        EPalWorkWorkerState_MAX = 4,
    }
    public enum EPalWorkWorkerWorkingState : int
    {
        Wait = 0,
        ApproachTo = 1,
        Working = 2,
        WaitForWorkable = 3,
        EPalWorkWorkerWorkingState_MAX = 4,
    }
    public enum EPalWorkableType : int
    {
        Illegal = 0,
        Progress = 1,
        CollectItem = 2,
        TransportItem = 3,
        TransportItemInBaseCamp = 4,
        ReviveCharacter = 5,
        CollectResource = 6,
        LevelObject = 7,
        Repair = 8,
        Defense = 9,
        BootUp = 10,
        OnlyJoin = 11,
        OnlyJoinAndWalkAround = 12,
        RemoveMapObjectEffect = 13,
        MonsterFarm = 14,
        EPalWorkableType_MAX = 15,
    }
    public enum EPalWorkAssignRequirementWorkerFilter : int
    {
        InSameMapObject = 0,
        EPalWorkAssignRequirementWorkerFilter_MAX = 1,
    }
    public enum EPalWorkAssignRequirementWorkerPriority : int
    {
        Normal = 0,
        WorkSpeedASC = 1,
        WorkSpeedDESC = 2,
        EPalWorkAssignRequirementWorkerPriority_MAX = 3,
    }
    public enum EPalWorkRepairState : int
    {
        None = 0,
        PathFindByOwner = 1,
        PathFindByConnector = 2,
        ApproachToChest = 3,
        ApproachToOwner = 4,
        ApproachToConnectOwner = 5,
        InProgress = 6,
        EPalWorkRepairState_MAX = 7,
    }
    public enum EPalMapObjectMaterialSubType : int
    {
        None = 0,
        Wood = 1,
        Stone = 2,
        Copper = 3,
        Iron = 4,
        Platinum = 5,
        EPalMapObjectMaterialSubType_MAX = 6,
    }
    public enum EPalWorldSecurityLawTriggerType : int
    {
        Undefined = 0,
        Item_Move = 1,
        Character_Damaged = 2,
        Character_Dead = 3,
        Area_Invasion = 4,
        EPalWorldSecurityLawTriggerType_MAX = 5,
    }
    public enum EPalDescendantScrollDestination : int
    {
        IntoView = 0,
        TopOrLeft = 1,
        Center = 2,
        EPalDescendantScrollDestination_MAX = 3,
    }
    public enum EPalScrollWhenFocusChanges : int
    {
        NoScroll = 0,
        InstantScroll = 1,
        AnimatedScroll = 2,
        EPalScrollWhenFocusChanges_MAX = 3,
    }
    public class PalCoopSkillAssaultrifleModeCandidateLocation : Object
    {
        public PalCoopSkillAssaultrifleModeCandidateLocation(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public float Distance { get { return this[nameof(Distance)].GetValue<float>(); } set { this[nameof(Distance)].SetValue<float>(value); } }
    }
    public class PalAIMoveRequest : AIMoveRequest
    {
        public PalAIMoveRequest(nint addr) : base(addr) { }
    }
    public class PalPathFollowingBlockDetectionParams : Object
    {
        public PalPathFollowingBlockDetectionParams(nint addr) : base(addr) { }
        public float BlockDetectionDistance { get { return this[nameof(BlockDetectionDistance)].GetValue<float>(); } set { this[nameof(BlockDetectionDistance)].SetValue<float>(value); } }
        public float BlockDetectionInterval { get { return this[nameof(BlockDetectionInterval)].GetValue<float>(); } set { this[nameof(BlockDetectionInterval)].SetValue<float>(value); } }
        public int BlockDetectionSampleCount { get { return this[nameof(BlockDetectionSampleCount)].GetValue<int>(); } set { this[nameof(BlockDetectionSampleCount)].SetValue<int>(value); } }
    }
    public class PalAISensorSearchQuery : Object
    {
        public PalAISensorSearchQuery(nint addr) : base(addr) { }
    }
    public class PalAmbientSoundAreaData : Object
    {
        public PalAmbientSoundAreaData(nint addr) : base(addr) { }
        public int AmbientPriority { get { return this[nameof(AmbientPriority)].GetValue<int>(); } set { this[nameof(AmbientPriority)].SetValue<int>(value); } }
        public Array<AkAudioEvent> DayAmbientEvents { get { return new Array<AkAudioEvent>(this[nameof(DayAmbientEvents)].Address); } }
        public Array<AkAudioEvent> NightAmbientEvents { get { return new Array<AkAudioEvent>(this[nameof(NightAmbientEvents)].Address); } }
    }
    public class PalAudioFadeParameter : Object
    {
        public PalAudioFadeParameter(nint addr) : base(addr) { }
        public EPalAudioFadeType FadeType { get { return (EPalAudioFadeType)this[nameof(FadeType)].GetValue<int>(); } set { this[nameof(FadeType)].SetValue<int>((int)value); } }
        public float CurrentVolume { get { return this[nameof(CurrentVolume)].GetValue<float>(); } set { this[nameof(CurrentVolume)].SetValue<float>(value); } }
    }
    public class PalBaseCampWorkerTaskCheckResponse : Object
    {
        public PalBaseCampWorkerTaskCheckResponse(nint addr) : base(addr) { }
    }
    public class PalAIActionBaseCampSleepActivelyParameter : Object
    {
        public PalAIActionBaseCampSleepActivelyParameter(nint addr) : base(addr) { }
        public float WalkAroundTime { get { return this[nameof(WalkAroundTime)].GetValue<float>(); } set { this[nameof(WalkAroundTime)].SetValue<float>(value); } }
    }
    public class PalBaseCampCreateParameter : Object
    {
        public PalBaseCampCreateParameter(nint addr) : base(addr) { }
    }
    public class PalBaseCampLevelMasterData : TableRowBase
    {
        public PalBaseCampLevelMasterData(nint addr) : base(addr) { }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int WorkerMaxNum { get { return this[nameof(WorkerMaxNum)].GetValue<int>(); } set { this[nameof(WorkerMaxNum)].SetValue<int>(value); } }
        public int BaseCampMaxNumInGuild { get { return this[nameof(BaseCampMaxNumInGuild)].GetValue<int>(); } set { this[nameof(BaseCampMaxNumInGuild)].SetValue<int>(value); } }
    }
    public class PalBaseCampWorkerEventMasterData : TableRowBase
    {
        public PalBaseCampWorkerEventMasterData(nint addr) : base(addr) { }
        public Object Debug_DisplayName { get { return this[nameof(Debug_DisplayName)]; } set { this[nameof(Debug_DisplayName)] = value; } }
        public EPalBaseCampWorkerEventPriority Priority { get { return (EPalBaseCampWorkerEventPriority)this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>((int)value); } }
        public int TriggerSanity { get { return this[nameof(TriggerSanity)].GetValue<int>(); } set { this[nameof(TriggerSanity)].SetValue<int>(value); } }
        public bool bAllowInterruptRecoverHungry { get { return this[nameof(bAllowInterruptRecoverHungry)].Flag; } set { this[nameof(bAllowInterruptRecoverHungry)].Flag = value; } }
        public bool bAllowInterruptSleep { get { return this[nameof(bAllowInterruptSleep)].Flag; } set { this[nameof(bAllowInterruptSleep)].Flag = value; } }
        public bool bAssignableWork { get { return this[nameof(bAssignableWork)].Flag; } set { this[nameof(bAssignableWork)].Flag = value; } }
        public int TriggerSkipCount { get { return this[nameof(TriggerSkipCount)].GetValue<int>(); } set { this[nameof(TriggerSkipCount)].SetValue<int>(value); } }
        public EPalLogPriority logPriority { get { return (EPalLogPriority)this[nameof(logPriority)].GetValue<int>(); } set { this[nameof(logPriority)].SetValue<int>((int)value); } }
        public EPalLogContentToneType LogTone { get { return (EPalLogContentToneType)this[nameof(LogTone)].GetValue<int>(); } set { this[nameof(LogTone)].SetValue<int>((int)value); } }
        public bool Invalid { get { return this[nameof(Invalid)].Flag; } set { this[nameof(Invalid)].Flag = value; } }
    }
    public class PalBaseCampPassiveEffectWorkHardInfo : Object
    {
        public PalBaseCampPassiveEffectWorkHardInfo(nint addr) : base(addr) { }
        public float WorkSpeedRate { get { return this[nameof(WorkSpeedRate)].GetValue<float>(); } set { this[nameof(WorkSpeedRate)].SetValue<float>(value); } }
        public float MoveSpeedRate { get { return this[nameof(MoveSpeedRate)].GetValue<float>(); } set { this[nameof(MoveSpeedRate)].SetValue<float>(value); } }
        public float AffectSanityRate { get { return this[nameof(AffectSanityRate)].GetValue<float>(); } set { this[nameof(AffectSanityRate)].SetValue<float>(value); } }
        public float DecreaseFullStomachRate { get { return this[nameof(DecreaseFullStomachRate)].GetValue<float>(); } set { this[nameof(DecreaseFullStomachRate)].SetValue<float>(value); } }
    }
    public class PalBaseCampModuleTransportItemRequirement : Object
    {
        public PalBaseCampModuleTransportItemRequirement(nint addr) : base(addr) { }
        public EPalBaseCampModuleTransportItemTransportPriority Priority { get { return (EPalBaseCampModuleTransportItemTransportPriority)this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>((int)value); } }
        public Array<PalStaticItemIdAndNum> ItemInfo { get { return new Array<PalStaticItemIdAndNum>(this[nameof(ItemInfo)].Address); } }
        public Array<EPalItemTypeA> itemTypeA { get { return new Array<EPalItemTypeA>(this[nameof(itemTypeA)].Address); } }
        public Array<EPalItemTypeB> ItemTypeB { get { return new Array<EPalItemTypeB>(this[nameof(ItemTypeB)].Address); } }
        public Array<EPalBaseCampModuleTransportItemTransportableItemExtraType> ItemExtraTypes { get { return new Array<EPalBaseCampModuleTransportItemTransportableItemExtraType>(this[nameof(ItemExtraTypes)].Address); } }
    }
    public class PalBaseCampModuleTransportItemDirection : Object
    {
        public PalBaseCampModuleTransportItemDirection(nint addr) : base(addr) { }
        public Guid RequiredMapObjectConcreteModelInstanceId { get { return this[nameof(RequiredMapObjectConcreteModelInstanceId)].As<Guid>(); } set { this["RequiredMapObjectConcreteModelInstanceId"] = value; } }
        public Guid TransportTargetMapObjectConcreteModelInstanceId { get { return this[nameof(TransportTargetMapObjectConcreteModelInstanceId)].As<Guid>(); } set { this["TransportTargetMapObjectConcreteModelInstanceId"] = value; } }
        public int MaxItemStackNum { get { return this[nameof(MaxItemStackNum)].GetValue<int>(); } set { this[nameof(MaxItemStackNum)].SetValue<int>(value); } }
        public bool bRetunring { get { return this[nameof(bRetunring)].Flag; } set { this[nameof(bRetunring)].Flag = value; } }
    }
    public class PalBaseCampFacilityUsageInfoSet : Object
    {
        public PalBaseCampFacilityUsageInfoSet(nint addr) : base(addr) { }
        public Object InfoMap { get { return this[nameof(InfoMap)]; } set { this[nameof(InfoMap)] = value; } }
    }
    public class PalBaseCampFacilityUsageInfo : Object
    {
        public PalBaseCampFacilityUsageInfo(nint addr) : base(addr) { }
        public EPalBaseCampFacilityUsageState State { get { return (EPalBaseCampFacilityUsageState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public PalInstanceID ReservedIndividualId { get { return this[nameof(ReservedIndividualId)].As<PalInstanceID>(); } set { this["ReservedIndividualId"] = value; } }
    }
    public class PalBaseCampFacilityCountPair : Object
    {
        public PalBaseCampFacilityCountPair(nint addr) : base(addr) { }
        public EPalMapObjectWorkerAvailableFacilityType FacilityType { get { return (EPalMapObjectWorkerAvailableFacilityType)this[nameof(FacilityType)].GetValue<int>(); } set { this[nameof(FacilityType)].SetValue<int>((int)value); } }
        public int FacilityCount { get { return this[nameof(FacilityCount)].GetValue<int>(); } set { this[nameof(FacilityCount)].SetValue<int>(value); } }
    }
    public class PalBaseCampPassiveEffectRepInfo : FastArraySerializerItem
    {
        public PalBaseCampPassiveEffectRepInfo(nint addr) : base(addr) { }
        public PalBaseCampPassiveEffectBase Effect { get { return this[nameof(Effect)].As<PalBaseCampPassiveEffectBase>(); } set { this["Effect"] = value; } }
    }
    public class PalFastBaseCampPassiveEffectRepInfoArray : FastArraySerializer
    {
        public PalFastBaseCampPassiveEffectRepInfoArray(nint addr) : base(addr) { }
        public Array<PalBaseCampPassiveEffectRepInfo> Items { get { return new Array<PalBaseCampPassiveEffectRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalBaseCampModuleResourceCollectWorkInfo : Object
    {
        public PalBaseCampModuleResourceCollectWorkInfo(nint addr) : base(addr) { }
        public Guid WorkId { get { return this[nameof(WorkId)].As<Guid>(); } set { this["WorkId"] = value; } }
    }
    public class PalBaseCampModuleTransportItemDepotParameter : Object
    {
        public PalBaseCampModuleTransportItemDepotParameter(nint addr) : base(addr) { }
        public Guid OwnerMapObjectConcreteModelInstanceId { get { return this[nameof(OwnerMapObjectConcreteModelInstanceId)].As<Guid>(); } set { this["OwnerMapObjectConcreteModelInstanceId"] = value; } }
        public PalBoundsTransform DepotLocalBoundsTransform { get { return this[nameof(DepotLocalBoundsTransform)].As<PalBoundsTransform>(); } set { this["DepotLocalBoundsTransform"] = value; } }
        public PalBaseCampModuleTransportItemRequirement Requirement { get { return this[nameof(Requirement)].As<PalBaseCampModuleTransportItemRequirement>(); } set { this["Requirement"] = value; } }
    }
    public class PalBaseCampModuleTransportItemStatus : Object
    {
        public PalBaseCampModuleTransportItemStatus(nint addr) : base(addr) { }
        public PalBaseCampModuleTransportItemRequirement Requirement { get { return this[nameof(Requirement)].As<PalBaseCampModuleTransportItemRequirement>(); } set { this["Requirement"] = value; } }
        public bool bDepot { get { return this[nameof(bDepot)].Flag; } set { this[nameof(bDepot)].Flag = value; } }
        public PalBoundsTransform DepotLocalBoundsTransform { get { return this[nameof(DepotLocalBoundsTransform)].As<PalBoundsTransform>(); } set { this["DepotLocalBoundsTransform"] = value; } }
        public Guid WorkId { get { return this[nameof(WorkId)].As<Guid>(); } set { this["WorkId"] = value; } }
        public Object DirectionMap { get { return this[nameof(DirectionMap)]; } set { this[nameof(DirectionMap)] = value; } }
        public Object NotSatisfiedRequirementItemInfoMap { get { return this[nameof(NotSatisfiedRequirementItemInfoMap)]; } set { this[nameof(NotSatisfiedRequirementItemInfoMap)] = value; } }
    }
    public class PalBaseCampModuleTransportItemTargetReservedInfo : Object
    {
        public PalBaseCampModuleTransportItemTargetReservedInfo(nint addr) : base(addr) { }
        public Array<PalStaticItemIdAndNum> ItemInfos { get { return new Array<PalStaticItemIdAndNum>(this[nameof(ItemInfos)].Address); } }
        public Guid RequiredConcreteModelId { get { return this[nameof(RequiredConcreteModelId)].As<Guid>(); } set { this["RequiredConcreteModelId"] = value; } }
    }
    public class PalBaseCampModuleTransportItemTarget : Object
    {
        public PalBaseCampModuleTransportItemTarget(nint addr) : base(addr) { }
        public bool bTargetRemoved { get { return this[nameof(bTargetRemoved)].Flag; } set { this[nameof(bTargetRemoved)].Flag = value; } }
        public Object ReservedInfoMap { get { return this[nameof(ReservedInfoMap)]; } set { this[nameof(ReservedInfoMap)] = value; } }
        public bool bNotExistMovePath { get { return this[nameof(bNotExistMovePath)].Flag; } set { this[nameof(bNotExistMovePath)].Flag = value; } }
        public bool bEnableObtainAnywhere { get { return this[nameof(bEnableObtainAnywhere)].Flag; } set { this[nameof(bEnableObtainAnywhere)].Flag = value; } }
        public Object NotReservedItemInfoMap { get { return this[nameof(NotReservedItemInfoMap)]; } set { this[nameof(NotReservedItemInfoMap)] = value; } }
        public Guid WorkId { get { return this[nameof(WorkId)].As<Guid>(); } set { this["WorkId"] = value; } }
    }
    public class PalBaseCampModuleTransportItemCharacterInfo : Object
    {
        public PalBaseCampModuleTransportItemCharacterInfo(nint addr) : base(addr) { }
        public Array<PalItemAndNum> ItemInfos { get { return new Array<PalItemAndNum>(this[nameof(ItemInfos)].Address); } }
        public Vector CharacterLocation { get { return this[nameof(CharacterLocation)].As<Vector>(); } set { this["CharacterLocation"] = value; } }
    }
    public class PalBaseCampRepInfo : FastArraySerializerItem
    {
        public PalBaseCampRepInfo(nint addr) : base(addr) { }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public PalBaseCampModel BaseCamp { get { return this[nameof(BaseCamp)].As<PalBaseCampModel>(); } set { this["BaseCamp"] = value; } }
    }
    public class FastPalBaseCampRepInfoArray : FastArraySerializer
    {
        public FastPalBaseCampRepInfoArray(nint addr) : base(addr) { }
        public Array<PalBaseCampRepInfo> Items { get { return new Array<PalBaseCampRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalBaseCampTaskDataSet_TableRow : TableRowBase
    {
        public PalBaseCampTaskDataSet_TableRow(nint addr) : base(addr) { }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int workerNum { get { return this[nameof(workerNum)].GetValue<int>(); } set { this[nameof(workerNum)].SetValue<int>(value); } }
        public Object WorkerNum_IncompleteMsgID { get { return this[nameof(WorkerNum_IncompleteMsgID)]; } set { this[nameof(WorkerNum_IncompleteMsgID)] = value; } }
        public Object WorkerNum_CompleteMsgID { get { return this[nameof(WorkerNum_CompleteMsgID)]; } set { this[nameof(WorkerNum_CompleteMsgID)] = value; } }
        public Object BuildObject1 { get { return this[nameof(BuildObject1)]; } set { this[nameof(BuildObject1)] = value; } }
        public int BuildObjectNum1 { get { return this[nameof(BuildObjectNum1)].GetValue<int>(); } set { this[nameof(BuildObjectNum1)].SetValue<int>(value); } }
        public Object BuildObject1_IncompleteMsgID { get { return this[nameof(BuildObject1_IncompleteMsgID)]; } set { this[nameof(BuildObject1_IncompleteMsgID)] = value; } }
        public Object BuildObject1_CompleteMsgID { get { return this[nameof(BuildObject1_CompleteMsgID)]; } set { this[nameof(BuildObject1_CompleteMsgID)] = value; } }
        public Object BuildObject2 { get { return this[nameof(BuildObject2)]; } set { this[nameof(BuildObject2)] = value; } }
        public int BuildObjectNum2 { get { return this[nameof(BuildObjectNum2)].GetValue<int>(); } set { this[nameof(BuildObjectNum2)].SetValue<int>(value); } }
        public Object BuildObject2_IncompleteMsgID { get { return this[nameof(BuildObject2_IncompleteMsgID)]; } set { this[nameof(BuildObject2_IncompleteMsgID)] = value; } }
        public Object BuildObject2_CompleteMsgID { get { return this[nameof(BuildObject2_CompleteMsgID)]; } set { this[nameof(BuildObject2_CompleteMsgID)] = value; } }
        public Object BuildObject3 { get { return this[nameof(BuildObject3)]; } set { this[nameof(BuildObject3)] = value; } }
        public int BuildObjectNum3 { get { return this[nameof(BuildObjectNum3)].GetValue<int>(); } set { this[nameof(BuildObjectNum3)].SetValue<int>(value); } }
        public Object BuildObject3_IncompleteMsgID { get { return this[nameof(BuildObject3_IncompleteMsgID)]; } set { this[nameof(BuildObject3_IncompleteMsgID)] = value; } }
        public Object BuildObject3_CompleteMsgID { get { return this[nameof(BuildObject3_CompleteMsgID)]; } set { this[nameof(BuildObject3_CompleteMsgID)] = value; } }
    }
    public class PalBossBattleLevelInstanceLoadOperator : Object
    {
        public PalBossBattleLevelInstanceLoadOperator(nint addr) : base(addr) { }
    }
    public class PalBossBattleInstanceModelCreateParameter : Object
    {
        public PalBossBattleInstanceModelCreateParameter(nint addr) : base(addr) { }
        public Object IntroCutsceneActor { get { return this[nameof(IntroCutsceneActor)]; } set { this[nameof(IntroCutsceneActor)] = value; } }
        public DataLayerAsset ReservedDataLayerAsset { get { return this[nameof(ReservedDataLayerAsset)].As<DataLayerAsset>(); } set { this["ReservedDataLayerAsset"] = value; } }
        public Object BGMAudioEvent { get { return this[nameof(BGMAudioEvent)]; } set { this[nameof(BGMAudioEvent)] = value; } }
        public PalBossTower BossTower { get { return this[nameof(BossTower)].As<PalBossTower>(); } set { this["BossTower"] = value; } }
    }
    public class PalBuildObjectDataSetTypeB : Object
    {
        public PalBuildObjectDataSetTypeB(nint addr) : base(addr) { }
        public EPalBuildObjectTypeB TypeB { get { return (EPalBuildObjectTypeB)this[nameof(TypeB)].GetValue<int>(); } set { this[nameof(TypeB)].SetValue<int>((int)value); } }
        public Array<PalBuildObjectData> DataArray { get { return new Array<PalBuildObjectData>(this[nameof(DataArray)].Address); } }
    }
    public class PalBuildObjectIconData : TableRowBase
    {
        public PalBuildObjectIconData(nint addr) : base(addr) { }
        public Object SoftIcon { get { return this[nameof(SoftIcon)]; } set { this[nameof(SoftIcon)] = value; } }
    }
    public class PalBuildInstallOtherOptions : Object
    {
        public PalBuildInstallOtherOptions(nint addr) : base(addr) { }
    }
    public class PalBuildObjectMaterialArray : Object
    {
        public PalBuildObjectMaterialArray(nint addr) : base(addr) { }
        public Array<MaterialInterface> Materials { get { return new Array<MaterialInterface>(this[nameof(Materials)].Address); } }
    }
    public class PalCaptureBallEffectSettingData : Object
    {
        public PalCaptureBallEffectSettingData(nint addr) : base(addr) { }
        public int CaptureAbsorbToBall_ParticleCount { get { return this[nameof(CaptureAbsorbToBall_ParticleCount)].GetValue<int>(); } set { this[nameof(CaptureAbsorbToBall_ParticleCount)].SetValue<int>(value); } }
        public float CaptureAbsorbToBall_Scale { get { return this[nameof(CaptureAbsorbToBall_Scale)].GetValue<float>(); } set { this[nameof(CaptureAbsorbToBall_Scale)].SetValue<float>(value); } }
    }
    public class CaptureResult : Object
    {
        public CaptureResult(nint addr) : base(addr) { }
        public bool IsSuccess { get { return this[nameof(IsSuccess)].Flag; } set { this[nameof(IsSuccess)].Flag = value; } }
        public int TestSuccessCount { get { return this[nameof(TestSuccessCount)].GetValue<int>(); } set { this[nameof(TestSuccessCount)].SetValue<int>(value); } }
        public EFailedCaptureType FailedCaptureType { get { return (EFailedCaptureType)this[nameof(FailedCaptureType)].GetValue<int>(); } set { this[nameof(FailedCaptureType)].SetValue<int>((int)value); } }
    }
    public class PalCameraDOFSetting : Object
    {
        public PalCameraDOFSetting(nint addr) : base(addr) { }
        public float DepthOfFieldFocalDistance { get { return this[nameof(DepthOfFieldFocalDistance)].GetValue<float>(); } set { this[nameof(DepthOfFieldFocalDistance)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurAmount { get { return this[nameof(DepthOfFieldDepthBlurAmount)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurAmount)].SetValue<float>(value); } }
        public float DepthOfFieldDepthBlurRadius { get { return this[nameof(DepthOfFieldDepthBlurRadius)].GetValue<float>(); } set { this[nameof(DepthOfFieldDepthBlurRadius)].SetValue<float>(value); } }
        public float DepthOfFieldFstop { get { return this[nameof(DepthOfFieldFstop)].GetValue<float>(); } set { this[nameof(DepthOfFieldFstop)].SetValue<float>(value); } }
        public float FOV { get { return this[nameof(FOV)].GetValue<float>(); } set { this[nameof(FOV)].SetValue<float>(value); } }
    }
    public class PalCharacterContainerSlotInfo : Object
    {
        public PalCharacterContainerSlotInfo(nint addr) : base(addr) { }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public PalCharacterSlotId SlotID { get { return this[nameof(SlotID)].As<PalCharacterSlotId>(); } set { this["SlotID"] = value; } }
    }
    public class PalCharacterSlotUpdateInfo : Object
    {
        public PalCharacterSlotUpdateInfo(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
        public PalInstanceID InstanceId { get { return this[nameof(InstanceId)].As<PalInstanceID>(); } set { this["InstanceId"] = value; } }
    }
    public class PalIndividualCharacterSlotUpdateInfo : Object
    {
        public PalIndividualCharacterSlotUpdateInfo(nint addr) : base(addr) { }
    }
    public class PalIndividualCharacterSlotResultInfo : Object
    {
        public PalIndividualCharacterSlotResultInfo(nint addr) : base(addr) { }
    }
    public class CharacterListForImportanceManager : Object
    {
        public CharacterListForImportanceManager(nint addr) : base(addr) { }
        public Array<PalCharacter> CharacterList { get { return new Array<PalCharacter>(this[nameof(CharacterList)].Address); } }
    }
    public class CharacterParameterRepInfo : FastArraySerializerItem
    {
        public CharacterParameterRepInfo(nint addr) : base(addr) { }
        public Guid RequestGUID { get { return this[nameof(RequestGUID)].As<Guid>(); } set { this["RequestGUID"] = value; } }
        public PalInstanceID ID { get { return this[nameof(ID)].As<PalInstanceID>(); } set { this["ID"] = value; } }
        public PalIndividualCharacterParameter Parameter { get { return this[nameof(Parameter)].As<PalIndividualCharacterParameter>(); } set { this["Parameter"] = value; } }
    }
    public class FastCharacterParameterRepInfoArray : FastArraySerializer
    {
        public FastCharacterParameterRepInfoArray(nint addr) : base(addr) { }
        public Array<CharacterParameterRepInfo> Items { get { return new Array<CharacterParameterRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalCombiUniqueDatabaseRow : TableRowBase
    {
        public PalCombiUniqueDatabaseRow(nint addr) : base(addr) { }
        public EPalTribeID ParentTribeA { get { return (EPalTribeID)this[nameof(ParentTribeA)].GetValue<int>(); } set { this[nameof(ParentTribeA)].SetValue<int>((int)value); } }
        public EPalTribeID ParentTribeB { get { return (EPalTribeID)this[nameof(ParentTribeB)].GetValue<int>(); } set { this[nameof(ParentTribeB)].SetValue<int>((int)value); } }
        public Object ChildCharacterID { get { return this[nameof(ChildCharacterID)]; } set { this[nameof(ChildCharacterID)] = value; } }
    }
    public class PalContainerInitializeParameter : Object
    {
        public PalContainerInitializeParameter(nint addr) : base(addr) { }
        public PalContainerId ID { get { return this[nameof(ID)].As<PalContainerId>(); } set { this["ID"] = value; } }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public bool bReferenceSlot { get { return this[nameof(bReferenceSlot)].Flag; } set { this[nameof(bReferenceSlot)].Flag = value; } }
        public EPalContainerOperationRestrictType OperationRestrictType { get { return (EPalContainerOperationRestrictType)this[nameof(OperationRestrictType)].GetValue<int>(); } set { this[nameof(OperationRestrictType)].SetValue<int>((int)value); } }
    }
    public class PalContainerInfo : Object
    {
        public PalContainerInfo(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
    }
    public class PalContainerCreateExtraParameter : Object
    {
        public PalContainerCreateExtraParameter(nint addr) : base(addr) { }
        public bool bIsWatchAllPlayer { get { return this[nameof(bIsWatchAllPlayer)].Flag; } set { this[nameof(bIsWatchAllPlayer)].Flag = value; } }
        public bool bIsSyncEnable { get { return this[nameof(bIsSyncEnable)].Flag; } set { this[nameof(bIsSyncEnable)].Flag = value; } }
        public EPalContainerOperationRestrictType OperationRestrictType { get { return (EPalContainerOperationRestrictType)this[nameof(OperationRestrictType)].GetValue<int>(); } set { this[nameof(OperationRestrictType)].SetValue<int>((int)value); } }
    }
    public class PalCoopSkillModuleAssignPassiveSkillNames : Object
    {
        public PalCoopSkillModuleAssignPassiveSkillNames(nint addr) : base(addr) { }
        public Array<PalDataTableRowName_PassiveSkillData> AssignSkillNames { get { return new Array<PalDataTableRowName_PassiveSkillData>(this[nameof(AssignSkillNames)].Address); } }
    }
    public class PalCoopSkillSearchResultParameter : Object
    {
        public PalCoopSkillSearchResultParameter(nint addr) : base(addr) { }
        public EPalCoopSkillSearchType SearchType { get { return (EPalCoopSkillSearchType)this[nameof(SearchType)].GetValue<int>(); } set { this[nameof(SearchType)].SetValue<int>((int)value); } }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public Guid RequestPlayerUId { get { return this[nameof(RequestPlayerUId)].As<Guid>(); } set { this["RequestPlayerUId"] = value; } }
    }
    public class PalUMGCustomVertexData : Object
    {
        public PalUMGCustomVertexData(nint addr) : base(addr) { }
        public Vector4 texCoords { get { return this[nameof(texCoords)].As<Vector4>(); } set { this["texCoords"] = value; } }
        public Vector2D materialTexCoords { get { return this[nameof(materialTexCoords)].As<Vector2D>(); } set { this["materialTexCoords"] = value; } }
        public Vector2D Position { get { return this[nameof(Position)].As<Vector2D>(); } set { this["Position"] = value; } }
        public Color Color { get { return this[nameof(Color)].As<Color>(); } set { this["Color"] = value; } }
        public int pixelWidth { get { return this[nameof(pixelWidth)].GetValue<int>(); } set { this[nameof(pixelWidth)].SetValue<int>(value); } }
        public int pixelHeight { get { return this[nameof(pixelHeight)].GetValue<int>(); } set { this[nameof(pixelHeight)].SetValue<int>(value); } }
    }
    public class PalCharacterParameterDatabaseRow : TableRowBase
    {
        public PalCharacterParameterDatabaseRow(nint addr) : base(addr) { }
        public Object OverrideNameTextID { get { return this[nameof(OverrideNameTextID)]; } set { this[nameof(OverrideNameTextID)] = value; } }
        public Object NamePrefixID { get { return this[nameof(NamePrefixID)]; } set { this[nameof(NamePrefixID)] = value; } }
        public Object OverridePartnerSkillTextID { get { return this[nameof(OverridePartnerSkillTextID)]; } set { this[nameof(OverridePartnerSkillTextID)] = value; } }
        public bool IsPal { get { return this[nameof(IsPal)].Flag; } set { this[nameof(IsPal)].Flag = value; } }
        public EPalTribeID Tribe { get { return (EPalTribeID)this[nameof(Tribe)].GetValue<int>(); } set { this[nameof(Tribe)].SetValue<int>((int)value); } }
        public Object BPClass { get { return this[nameof(BPClass)]; } set { this[nameof(BPClass)] = value; } }
        public int ZukanIndex { get { return this[nameof(ZukanIndex)].GetValue<int>(); } set { this[nameof(ZukanIndex)].SetValue<int>(value); } }
        public Object ZukanIndexSuffix { get { return this[nameof(ZukanIndexSuffix)]; } set { this[nameof(ZukanIndexSuffix)] = value; } }
        public EPalSizeType Size { get { return (EPalSizeType)this[nameof(Size)].GetValue<int>(); } set { this[nameof(Size)].SetValue<int>((int)value); } }
        public int Rarity { get { return this[nameof(Rarity)].GetValue<int>(); } set { this[nameof(Rarity)].SetValue<int>(value); } }
        public EPalElementType ElementType1 { get { return (EPalElementType)this[nameof(ElementType1)].GetValue<int>(); } set { this[nameof(ElementType1)].SetValue<int>((int)value); } }
        public EPalElementType ElementType2 { get { return (EPalElementType)this[nameof(ElementType2)].GetValue<int>(); } set { this[nameof(ElementType2)].SetValue<int>((int)value); } }
        public EPalGenusCategoryType GenusCategory { get { return (EPalGenusCategoryType)this[nameof(GenusCategory)].GetValue<int>(); } set { this[nameof(GenusCategory)].SetValue<int>((int)value); } }
        public EPalOrganizationType Organization { get { return (EPalOrganizationType)this[nameof(Organization)].GetValue<int>(); } set { this[nameof(Organization)].SetValue<int>((int)value); } }
        public EPalWeaponType weapon { get { return (EPalWeaponType)this[nameof(weapon)].GetValue<int>(); } set { this[nameof(weapon)].SetValue<int>((int)value); } }
        public bool WeaponEquip { get { return this[nameof(WeaponEquip)].Flag; } set { this[nameof(WeaponEquip)].Flag = value; } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public int MeleeAttack { get { return this[nameof(MeleeAttack)].GetValue<int>(); } set { this[nameof(MeleeAttack)].SetValue<int>(value); } }
        public int ShotAttack { get { return this[nameof(ShotAttack)].GetValue<int>(); } set { this[nameof(ShotAttack)].SetValue<int>(value); } }
        public int Defense { get { return this[nameof(Defense)].GetValue<int>(); } set { this[nameof(Defense)].SetValue<int>(value); } }
        public int Support { get { return this[nameof(Support)].GetValue<int>(); } set { this[nameof(Support)].SetValue<int>(value); } }
        public int CraftSpeed { get { return this[nameof(CraftSpeed)].GetValue<int>(); } set { this[nameof(CraftSpeed)].SetValue<int>(value); } }
        public float EnemyReceiveDamageRate { get { return this[nameof(EnemyReceiveDamageRate)].GetValue<float>(); } set { this[nameof(EnemyReceiveDamageRate)].SetValue<float>(value); } }
        public float CaptureRateCorrect { get { return this[nameof(CaptureRateCorrect)].GetValue<float>(); } set { this[nameof(CaptureRateCorrect)].SetValue<float>(value); } }
        public float ExpRatio { get { return this[nameof(ExpRatio)].GetValue<float>(); } set { this[nameof(ExpRatio)].SetValue<float>(value); } }
        public float Price { get { return this[nameof(Price)].GetValue<float>(); } set { this[nameof(Price)].SetValue<float>(value); } }
        public Object AIResponse { get { return this[nameof(AIResponse)]; } set { this[nameof(AIResponse)] = value; } }
        public Object AISightResponse { get { return this[nameof(AISightResponse)]; } set { this[nameof(AISightResponse)] = value; } }
        public int SlowWalkSpeed { get { return this[nameof(SlowWalkSpeed)].GetValue<int>(); } set { this[nameof(SlowWalkSpeed)].SetValue<int>(value); } }
        public int WalkSpeed { get { return this[nameof(WalkSpeed)].GetValue<int>(); } set { this[nameof(WalkSpeed)].SetValue<int>(value); } }
        public int RunSpeed { get { return this[nameof(RunSpeed)].GetValue<int>(); } set { this[nameof(RunSpeed)].SetValue<int>(value); } }
        public int RideSprintSpeed { get { return this[nameof(RideSprintSpeed)].GetValue<int>(); } set { this[nameof(RideSprintSpeed)].SetValue<int>(value); } }
        public int TransportSpeed { get { return this[nameof(TransportSpeed)].GetValue<int>(); } set { this[nameof(TransportSpeed)].SetValue<int>(value); } }
        public bool IsBoss { get { return this[nameof(IsBoss)].Flag; } set { this[nameof(IsBoss)].Flag = value; } }
        public bool IsTowerBoss { get { return this[nameof(IsTowerBoss)].Flag; } set { this[nameof(IsTowerBoss)].Flag = value; } }
        public EPalBattleBGMType BattleBGM { get { return (EPalBattleBGMType)this[nameof(BattleBGM)].GetValue<int>(); } set { this[nameof(BattleBGM)].SetValue<int>((int)value); } }
        public bool IgnoreLeanBack { get { return this[nameof(IgnoreLeanBack)].Flag; } set { this[nameof(IgnoreLeanBack)].Flag = value; } }
        public bool IgnoreBlowAway { get { return this[nameof(IgnoreBlowAway)].Flag; } set { this[nameof(IgnoreBlowAway)].Flag = value; } }
        public int MaxFullStomach { get { return this[nameof(MaxFullStomach)].GetValue<int>(); } set { this[nameof(MaxFullStomach)].SetValue<int>(value); } }
        public float FullStomachDecreaseRate { get { return this[nameof(FullStomachDecreaseRate)].GetValue<float>(); } set { this[nameof(FullStomachDecreaseRate)].SetValue<float>(value); } }
        public int FoodAmount { get { return this[nameof(FoodAmount)].GetValue<int>(); } set { this[nameof(FoodAmount)].SetValue<int>(value); } }
        public int ViewingDistance { get { return this[nameof(ViewingDistance)].GetValue<int>(); } set { this[nameof(ViewingDistance)].SetValue<int>(value); } }
        public int ViewingAngle { get { return this[nameof(ViewingAngle)].GetValue<int>(); } set { this[nameof(ViewingAngle)].SetValue<int>(value); } }
        public float HearingRate { get { return this[nameof(HearingRate)].GetValue<float>(); } set { this[nameof(HearingRate)].SetValue<float>(value); } }
        public bool NooseTrap { get { return this[nameof(NooseTrap)].Flag; } set { this[nameof(NooseTrap)].Flag = value; } }
        public bool Nocturnal { get { return this[nameof(Nocturnal)].Flag; } set { this[nameof(Nocturnal)].Flag = value; } }
        public int BiologicalGrade { get { return this[nameof(BiologicalGrade)].GetValue<int>(); } set { this[nameof(BiologicalGrade)].SetValue<int>(value); } }
        public bool Predator { get { return this[nameof(Predator)].Flag; } set { this[nameof(Predator)].Flag = value; } }
        public bool Edible { get { return this[nameof(Edible)].Flag; } set { this[nameof(Edible)].Flag = value; } }
        public int Stamina { get { return this[nameof(Stamina)].GetValue<int>(); } set { this[nameof(Stamina)].SetValue<int>(value); } }
        public int MaleProbability { get { return this[nameof(MaleProbability)].GetValue<int>(); } set { this[nameof(MaleProbability)].SetValue<int>(value); } }
        public int CombiRank { get { return this[nameof(CombiRank)].GetValue<int>(); } set { this[nameof(CombiRank)].SetValue<int>(value); } }
        public int WorkSuitability_EmitFlame { get { return this[nameof(WorkSuitability_EmitFlame)].GetValue<int>(); } set { this[nameof(WorkSuitability_EmitFlame)].SetValue<int>(value); } }
        public int WorkSuitability_Watering { get { return this[nameof(WorkSuitability_Watering)].GetValue<int>(); } set { this[nameof(WorkSuitability_Watering)].SetValue<int>(value); } }
        public int WorkSuitability_Seeding { get { return this[nameof(WorkSuitability_Seeding)].GetValue<int>(); } set { this[nameof(WorkSuitability_Seeding)].SetValue<int>(value); } }
        public int WorkSuitability_GenerateElectricity { get { return this[nameof(WorkSuitability_GenerateElectricity)].GetValue<int>(); } set { this[nameof(WorkSuitability_GenerateElectricity)].SetValue<int>(value); } }
        public int WorkSuitability_Handcraft { get { return this[nameof(WorkSuitability_Handcraft)].GetValue<int>(); } set { this[nameof(WorkSuitability_Handcraft)].SetValue<int>(value); } }
        public int WorkSuitability_Collection { get { return this[nameof(WorkSuitability_Collection)].GetValue<int>(); } set { this[nameof(WorkSuitability_Collection)].SetValue<int>(value); } }
        public int WorkSuitability_Deforest { get { return this[nameof(WorkSuitability_Deforest)].GetValue<int>(); } set { this[nameof(WorkSuitability_Deforest)].SetValue<int>(value); } }
        public int WorkSuitability_Mining { get { return this[nameof(WorkSuitability_Mining)].GetValue<int>(); } set { this[nameof(WorkSuitability_Mining)].SetValue<int>(value); } }
        public int WorkSuitability_OilExtraction { get { return this[nameof(WorkSuitability_OilExtraction)].GetValue<int>(); } set { this[nameof(WorkSuitability_OilExtraction)].SetValue<int>(value); } }
        public int WorkSuitability_ProductMedicine { get { return this[nameof(WorkSuitability_ProductMedicine)].GetValue<int>(); } set { this[nameof(WorkSuitability_ProductMedicine)].SetValue<int>(value); } }
        public int WorkSuitability_Cool { get { return this[nameof(WorkSuitability_Cool)].GetValue<int>(); } set { this[nameof(WorkSuitability_Cool)].SetValue<int>(value); } }
        public int WorkSuitability_Transport { get { return this[nameof(WorkSuitability_Transport)].GetValue<int>(); } set { this[nameof(WorkSuitability_Transport)].SetValue<int>(value); } }
        public int WorkSuitability_MonsterFarm { get { return this[nameof(WorkSuitability_MonsterFarm)].GetValue<int>(); } set { this[nameof(WorkSuitability_MonsterFarm)].SetValue<int>(value); } }
        public Object PassiveSkill1 { get { return this[nameof(PassiveSkill1)]; } set { this[nameof(PassiveSkill1)] = value; } }
        public Object PassiveSkill2 { get { return this[nameof(PassiveSkill2)]; } set { this[nameof(PassiveSkill2)] = value; } }
        public Object PassiveSkill3 { get { return this[nameof(PassiveSkill3)]; } set { this[nameof(PassiveSkill3)] = value; } }
        public Object PassiveSkill4 { get { return this[nameof(PassiveSkill4)]; } set { this[nameof(PassiveSkill4)] = value; } }
    }
    public class PalPlayerParameterDatabaseRow : TableRowBase
    {
        public PalPlayerParameterDatabaseRow(nint addr) : base(addr) { }
        public int Stamina { get { return this[nameof(Stamina)].GetValue<int>(); } set { this[nameof(Stamina)].SetValue<int>(value); } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public int MeleeAttack { get { return this[nameof(MeleeAttack)].GetValue<int>(); } set { this[nameof(MeleeAttack)].SetValue<int>(value); } }
        public int ShotAttack { get { return this[nameof(ShotAttack)].GetValue<int>(); } set { this[nameof(ShotAttack)].SetValue<int>(value); } }
        public int Defense { get { return this[nameof(Defense)].GetValue<int>(); } set { this[nameof(Defense)].SetValue<int>(value); } }
        public int Support { get { return this[nameof(Support)].GetValue<int>(); } set { this[nameof(Support)].SetValue<int>(value); } }
        public int CraftSpeed { get { return this[nameof(CraftSpeed)].GetValue<int>(); } set { this[nameof(CraftSpeed)].SetValue<int>(value); } }
        public int Satiety { get { return this[nameof(Satiety)].GetValue<int>(); } set { this[nameof(Satiety)].SetValue<int>(value); } }
    }
    public class PalPlayerStatusRankMasterData : TableRowBase
    {
        public PalPlayerStatusRankMasterData(nint addr) : base(addr) { }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public int RequiredRelicNum { get { return this[nameof(RequiredRelicNum)].GetValue<int>(); } set { this[nameof(RequiredRelicNum)].SetValue<int>(value); } }
        public int ResetRequiredMoney { get { return this[nameof(ResetRequiredMoney)].GetValue<int>(); } set { this[nameof(ResetRequiredMoney)].SetValue<int>(value); } }
    }
    public class PalCharacterUpgradeMasterData : TableRowBase
    {
        public PalCharacterUpgradeMasterData(nint addr) : base(addr) { }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public Object RequiredStaticItemId { get { return this[nameof(RequiredStaticItemId)]; } set { this[nameof(RequiredStaticItemId)] = value; } }
        public int RequiredItemNum { get { return this[nameof(RequiredItemNum)].GetValue<int>(); } set { this[nameof(RequiredItemNum)].SetValue<int>(value); } }
        public int ResetRequiredMoney { get { return this[nameof(ResetRequiredMoney)].GetValue<int>(); } set { this[nameof(ResetRequiredMoney)].SetValue<int>(value); } }
    }
    public class PalDropItemDatabaseRow : TableRowBase
    {
        public PalDropItemDatabaseRow(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public Object ItemId1 { get { return this[nameof(ItemId1)]; } set { this[nameof(ItemId1)] = value; } }
        public float Rate1 { get { return this[nameof(Rate1)].GetValue<float>(); } set { this[nameof(Rate1)].SetValue<float>(value); } }
        public int min1 { get { return this[nameof(min1)].GetValue<int>(); } set { this[nameof(min1)].SetValue<int>(value); } }
        public int Max1 { get { return this[nameof(Max1)].GetValue<int>(); } set { this[nameof(Max1)].SetValue<int>(value); } }
        public Object ItemId2 { get { return this[nameof(ItemId2)]; } set { this[nameof(ItemId2)] = value; } }
        public float Rate2 { get { return this[nameof(Rate2)].GetValue<float>(); } set { this[nameof(Rate2)].SetValue<float>(value); } }
        public int min2 { get { return this[nameof(min2)].GetValue<int>(); } set { this[nameof(min2)].SetValue<int>(value); } }
        public int Max2 { get { return this[nameof(Max2)].GetValue<int>(); } set { this[nameof(Max2)].SetValue<int>(value); } }
        public Object ItemId3 { get { return this[nameof(ItemId3)]; } set { this[nameof(ItemId3)] = value; } }
        public float Rate3 { get { return this[nameof(Rate3)].GetValue<float>(); } set { this[nameof(Rate3)].SetValue<float>(value); } }
        public int min3 { get { return this[nameof(min3)].GetValue<int>(); } set { this[nameof(min3)].SetValue<int>(value); } }
        public int Max3 { get { return this[nameof(Max3)].GetValue<int>(); } set { this[nameof(Max3)].SetValue<int>(value); } }
        public Object ItemId4 { get { return this[nameof(ItemId4)]; } set { this[nameof(ItemId4)] = value; } }
        public float Rate4 { get { return this[nameof(Rate4)].GetValue<float>(); } set { this[nameof(Rate4)].SetValue<float>(value); } }
        public int min4 { get { return this[nameof(min4)].GetValue<int>(); } set { this[nameof(min4)].SetValue<int>(value); } }
        public int Max4 { get { return this[nameof(Max4)].GetValue<int>(); } set { this[nameof(Max4)].SetValue<int>(value); } }
        public Object ItemId5 { get { return this[nameof(ItemId5)]; } set { this[nameof(ItemId5)] = value; } }
        public float Rate5 { get { return this[nameof(Rate5)].GetValue<float>(); } set { this[nameof(Rate5)].SetValue<float>(value); } }
        public int min5 { get { return this[nameof(min5)].GetValue<int>(); } set { this[nameof(min5)].SetValue<int>(value); } }
        public int Max5 { get { return this[nameof(Max5)].GetValue<int>(); } set { this[nameof(Max5)].SetValue<int>(value); } }
    }
    public class PalCapturedCageInfoDatabaseRow : TableRowBase
    {
        public PalCapturedCageInfoDatabaseRow(nint addr) : base(addr) { }
        public Object FieldName { get { return this[nameof(FieldName)]; } set { this[nameof(FieldName)] = value; } }
        public Object PalID { get { return this[nameof(PalID)]; } set { this[nameof(PalID)] = value; } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public int MinLevel { get { return this[nameof(MinLevel)].GetValue<int>(); } set { this[nameof(MinLevel)].SetValue<int>(value); } }
        public int MaxLevel { get { return this[nameof(MaxLevel)].GetValue<int>(); } set { this[nameof(MaxLevel)].SetValue<int>(value); } }
    }
    public class PalCharacterIconDataRow : TableRowBase
    {
        public PalCharacterIconDataRow(nint addr) : base(addr) { }
        public Object Icon { get { return this[nameof(Icon)]; } set { this[nameof(Icon)] = value; } }
    }
    public class PalBPClassDataRow : TableRowBase
    {
        public PalBPClassDataRow(nint addr) : base(addr) { }
        public Object BPClass { get { return this[nameof(BPClass)]; } set { this[nameof(BPClass)] = value; } }
    }
    public class PalSizeParameterDataRow : TableRowBase
    {
        public PalSizeParameterDataRow(nint addr) : base(addr) { }
        public EPalSizeType Size { get { return (EPalSizeType)this[nameof(Size)].GetValue<int>(); } set { this[nameof(Size)].SetValue<int>((int)value); } }
        public float EffectScale { get { return this[nameof(EffectScale)].GetValue<float>(); } set { this[nameof(EffectScale)].SetValue<float>(value); } }
        public float JumpEffectOffsetZ { get { return this[nameof(JumpEffectOffsetZ)].GetValue<float>(); } set { this[nameof(JumpEffectOffsetZ)].SetValue<float>(value); } }
    }
    public class PalStatusEffectFoodDataRow : TableRowBase
    {
        public PalStatusEffectFoodDataRow(nint addr) : base(addr) { }
        public int effectTime { get { return this[nameof(effectTime)].GetValue<int>(); } set { this[nameof(effectTime)].SetValue<int>(value); } }
        public EPalFoodStatusEffectType EffectType1 { get { return (EPalFoodStatusEffectType)this[nameof(EffectType1)].GetValue<int>(); } set { this[nameof(EffectType1)].SetValue<int>((int)value); } }
        public int EffectValue1 { get { return this[nameof(EffectValue1)].GetValue<int>(); } set { this[nameof(EffectValue1)].SetValue<int>(value); } }
        public EPalFoodStatusEffectType EffectType2 { get { return (EPalFoodStatusEffectType)this[nameof(EffectType2)].GetValue<int>(); } set { this[nameof(EffectType2)].SetValue<int>((int)value); } }
        public int EffectValue2 { get { return this[nameof(EffectValue2)].GetValue<int>(); } set { this[nameof(EffectValue2)].SetValue<int>(value); } }
    }
    public class PalDropItemInfo : Object
    {
        public PalDropItemInfo(nint addr) : base(addr) { }
    }
    public class PalDeathPenaltyInfo : Object
    {
        public PalDeathPenaltyInfo(nint addr) : base(addr) { }
        public Guid DeathPenaID { get { return this[nameof(DeathPenaID)].As<Guid>(); } set { this["DeathPenaID"] = value; } }
        public Guid DeathPlayerID { get { return this[nameof(DeathPlayerID)].As<Guid>(); } set { this["DeathPlayerID"] = value; } }
        public Vector PlayerDeathLocation { get { return this[nameof(PlayerDeathLocation)].As<Vector>(); } set { this["PlayerDeathLocation"] = value; } }
        public Vector DropItemLocation { get { return this[nameof(DropItemLocation)].As<Vector>(); } set { this["DropItemLocation"] = value; } }
        public Array<PalItemAndNum> DropItemList { get { return new Array<PalItemAndNum>(this[nameof(DropItemList)].Address); } }
    }
    public class PalDeathPenaltyList : Object
    {
        public PalDeathPenaltyList(nint addr) : base(addr) { }
        public Array<PalDeathPenaltyInfo> DeathPenaArray { get { return new Array<PalDeathPenaltyInfo>(this[nameof(DeathPenaArray)].Address); } }
    }
    public class PalDebugInfoSet : Object
    {
        public PalDebugInfoSet(nint addr) : base(addr) { }
    }
    public class PalFieldLotteryName : TableRowBase
    {
        public PalFieldLotteryName(nint addr) : base(addr) { }
        public float ItemSlot1_ProbabilityPercent { get { return this[nameof(ItemSlot1_ProbabilityPercent)].GetValue<float>(); } set { this[nameof(ItemSlot1_ProbabilityPercent)].SetValue<float>(value); } }
        public float ItemSlot2_ProbabilityPercent { get { return this[nameof(ItemSlot2_ProbabilityPercent)].GetValue<float>(); } set { this[nameof(ItemSlot2_ProbabilityPercent)].SetValue<float>(value); } }
        public float ItemSlot3_ProbabilityPercent { get { return this[nameof(ItemSlot3_ProbabilityPercent)].GetValue<float>(); } set { this[nameof(ItemSlot3_ProbabilityPercent)].SetValue<float>(value); } }
        public float ItemSlot4_ProbabilityPercent { get { return this[nameof(ItemSlot4_ProbabilityPercent)].GetValue<float>(); } set { this[nameof(ItemSlot4_ProbabilityPercent)].SetValue<float>(value); } }
        public float ItemSlot5_ProbabilityPercent { get { return this[nameof(ItemSlot5_ProbabilityPercent)].GetValue<float>(); } set { this[nameof(ItemSlot5_ProbabilityPercent)].SetValue<float>(value); } }
    }
    public class PalRespawnPointData : TableRowBase
    {
        public PalRespawnPointData(nint addr) : base(addr) { }
        public Object SpawnPointID { get { return this[nameof(SpawnPointID)]; } set { this[nameof(SpawnPointID)] = value; } }
        public int ResourcesAbundant { get { return this[nameof(ResourcesAbundant)].GetValue<int>(); } set { this[nameof(ResourcesAbundant)].SetValue<int>(value); } }
        public int PalAbundant { get { return this[nameof(PalAbundant)].GetValue<int>(); } set { this[nameof(PalAbundant)].SetValue<int>(value); } }
    }
    public class PalDungeonSpawnAreaData : TableRowBase
    {
        public PalDungeonSpawnAreaData(nint addr) : base(addr) { }
        public Object DungeonNameTextId { get { return this[nameof(DungeonNameTextId)]; } set { this[nameof(DungeonNameTextId)] = value; } }
        public Object PostfixTextId { get { return this[nameof(PostfixTextId)]; } set { this[nameof(PostfixTextId)] = value; } }
    }
    public class PalDungeonLevelData : TableRowBase
    {
        public PalDungeonLevelData(nint addr) : base(addr) { }
        public Object SpawnAreaId { get { return this[nameof(SpawnAreaId)]; } set { this[nameof(SpawnAreaId)] = value; } }
        public float WeightInSpawnArea { get { return this[nameof(WeightInSpawnArea)].GetValue<float>(); } set { this[nameof(WeightInSpawnArea)].SetValue<float>(value); } }
        public Object LevelName { get { return this[nameof(LevelName)]; } set { this[nameof(LevelName)] = value; } }
    }
    public class PalDungeonMarkerPointSpawnParameter : Object
    {
        public PalDungeonMarkerPointSpawnParameter(nint addr) : base(addr) { }
        public float RespawnInterval { get { return this[nameof(RespawnInterval)].GetValue<float>(); } set { this[nameof(RespawnInterval)].SetValue<float>(value); } }
        public float DisappearInterval { get { return this[nameof(DisappearInterval)].GetValue<float>(); } set { this[nameof(DisappearInterval)].SetValue<float>(value); } }
        public float RespawnProbability { get { return this[nameof(RespawnProbability)].GetValue<float>(); } set { this[nameof(RespawnProbability)].SetValue<float>(value); } }
        public float DisappearIntervalAfterDefeatBoss { get { return this[nameof(DisappearIntervalAfterDefeatBoss)].GetValue<float>(); } set { this[nameof(DisappearIntervalAfterDefeatBoss)].SetValue<float>(value); } }
    }
    public class PalDungeonMarkerPointData : Object
    {
        public PalDungeonMarkerPointData(nint addr) : base(addr) { }
        public Guid MarkerPointId { get { return this[nameof(MarkerPointId)].As<Guid>(); } set { this["MarkerPointId"] = value; } }
        public Array<Object> SpawnAreaIds { get { return new Array<Object>(this[nameof(SpawnAreaIds)].Address); } }
        public Transform Transform { get { return this[nameof(Transform)].As<Transform>(); } set { this["Transform"] = value; } }
        public PalDungeonMarkerPointSpawnParameter SpawnParameter { get { return this[nameof(SpawnParameter)].As<PalDungeonMarkerPointSpawnParameter>(); } set { this["SpawnParameter"] = value; } }
        public Object EntranceClass { get { return this[nameof(EntranceClass)]; } set { this[nameof(EntranceClass)] = value; } }
        public Guid ConnectedDungeonInstanceId { get { return this[nameof(ConnectedDungeonInstanceId)].As<Guid>(); } set { this["ConnectedDungeonInstanceId"] = value; } }
    }
    public class PalDungeonEnemySpawnerData : TableRowBase
    {
        public PalDungeonEnemySpawnerData(nint addr) : base(addr) { }
        public Object SpawnAreaId { get { return this[nameof(SpawnAreaId)]; } set { this[nameof(SpawnAreaId)] = value; } }
        public EPalDungeonEnemySpawnerRankType RankType { get { return (EPalDungeonEnemySpawnerRankType)this[nameof(RankType)].GetValue<int>(); } set { this[nameof(RankType)].SetValue<int>((int)value); } }
        public float WeightInSpawnAreaAndRank { get { return this[nameof(WeightInSpawnAreaAndRank)].GetValue<float>(); } set { this[nameof(WeightInSpawnAreaAndRank)].SetValue<float>(value); } }
        public Object SpawnerBlueprintSoftClass { get { return this[nameof(SpawnerBlueprintSoftClass)]; } set { this[nameof(SpawnerBlueprintSoftClass)] = value; } }
        public Object SpawnerName { get { return this[nameof(SpawnerName)]; } set { this[nameof(SpawnerName)] = value; } }
    }
    public class PalDungeonItemSpawnerData : TableRowBase
    {
        public PalDungeonItemSpawnerData(nint addr) : base(addr) { }
        public Object SpawnAreaId { get { return this[nameof(SpawnAreaId)]; } set { this[nameof(SpawnAreaId)] = value; } }
        public EPalDungeonItemSpawnerType Type { get { return (EPalDungeonItemSpawnerType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public Object ItemFieldLotteryName { get { return this[nameof(ItemFieldLotteryName)]; } set { this[nameof(ItemFieldLotteryName)] = value; } }
    }
    public class PalDungeonInfoParameter : Object
    {
        public PalDungeonInfoParameter(nint addr) : base(addr) { }
        public Object DungeonName { get { return this[nameof(DungeonName)]; } set { this[nameof(DungeonName)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public float DisappearRemainSeconds { get { return this[nameof(DisappearRemainSeconds)].GetValue<float>(); } set { this[nameof(DisappearRemainSeconds)].SetValue<float>(value); } }
    }
    public class PalDungeonLevelInstanceLoadOperator : Object
    {
        public PalDungeonLevelInstanceLoadOperator(nint addr) : base(addr) { }
    }
    public class PalDungeonInstanceModelCreateParameter : Object
    {
        public PalDungeonInstanceModelCreateParameter(nint addr) : base(addr) { }
        public DataLayerAsset ReservedDataLayerAsset { get { return this[nameof(ReservedDataLayerAsset)].As<DataLayerAsset>(); } set { this["ReservedDataLayerAsset"] = value; } }
    }
    public class PalDungeonMarkerPointDataSet : Object
    {
        public PalDungeonMarkerPointDataSet(nint addr) : base(addr) { }
        public Array<PalDungeonMarkerPointData> MarkerPoints { get { return new Array<PalDungeonMarkerPointData>(this[nameof(MarkerPoints)].Address); } }
    }
    public class PalDungeonDataLayerAssetSet : Object
    {
        public PalDungeonDataLayerAssetSet(nint addr) : base(addr) { }
        public Array<DataLayerAsset> DataLayers { get { return new Array<DataLayerAsset>(this[nameof(DataLayers)].Address); } }
    }
    public class PalDynamicItemDataInfo : Object
    {
        public PalDynamicItemDataInfo(nint addr) : base(addr) { }
        public PalDynamicItemDataBase ItemData { get { return this[nameof(ItemData)].As<PalDynamicItemDataBase>(); } set { this["ItemData"] = value; } }
    }
    public class PalDynamicItemDisposeReserveInfo : Object
    {
        public PalDynamicItemDisposeReserveInfo(nint addr) : base(addr) { }
    }
    public class PalDynamicItemInfo : Object
    {
        public PalDynamicItemInfo(nint addr) : base(addr) { }
        public PalItemSlotId SlotID { get { return this[nameof(SlotID)].As<PalItemSlotId>(); } set { this["SlotID"] = value; } }
        public PalDynamicItemDataBase DynamicItemData { get { return this[nameof(DynamicItemData)].As<PalDynamicItemDataBase>(); } set { this["DynamicItemData"] = value; } }
    }
    public class PalDynamicItemIdArray : Object
    {
        public PalDynamicItemIdArray(nint addr) : base(addr) { }
    }
    public class PalDataTableRowName_FarmCropData : Object
    {
        public PalDataTableRowName_FarmCropData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_CrimeMasterData : Object
    {
        public PalDataTableRowName_CrimeMasterData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_ItemProductData : Object
    {
        public PalDataTableRowName_ItemProductData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_RecipeTechnologyData : Object
    {
        public PalDataTableRowName_RecipeTechnologyData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_BaseCampWorkerEventData : Object
    {
        public PalDataTableRowName_BaseCampWorkerEventData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_UIInputAction : Object
    {
        public PalDataTableRowName_UIInputAction(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_ItemShopCreateData : Object
    {
        public PalDataTableRowName_ItemShopCreateData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_DungeonSpawnAreaData : Object
    {
        public PalDataTableRowName_DungeonSpawnAreaData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_FieldLotteryNameData : Object
    {
        public PalDataTableRowName_FieldLotteryNameData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class PalDataTableRowName_NoteData : Object
    {
        public PalDataTableRowName_NoteData(nint addr) : base(addr) { }
        public Object Key { get { return this[nameof(Key)]; } set { this[nameof(Key)] = value; } }
    }
    public class SpawnedEnemyInfo : Object
    {
        public SpawnedEnemyInfo(nint addr) : base(addr) { }
        public Actor SelfActor { get { return this[nameof(SelfActor)].As<Actor>(); } set { this["SelfActor"] = value; } }
        public EPalEnemySpawnActorType WeaponType { get { return (EPalEnemySpawnActorType)this[nameof(WeaponType)].GetValue<int>(); } set { this[nameof(WeaponType)].SetValue<int>((int)value); } }
        public Actor TargetActor { get { return this[nameof(TargetActor)].As<Actor>(); } set { this["TargetActor"] = value; } }
    }
    public class TargetAbleInfoForEnemy : Object
    {
        public TargetAbleInfoForEnemy(nint addr) : base(addr) { }
        public Actor SelfActor { get { return this[nameof(SelfActor)].As<Actor>(); } set { this["SelfActor"] = value; } }
        public int DuplicateNum { get { return this[nameof(DuplicateNum)].GetValue<int>(); } set { this[nameof(DuplicateNum)].SetValue<int>(value); } }
        public float ThreatLevel_OnlyCharacterParam { get { return this[nameof(ThreatLevel_OnlyCharacterParam)].GetValue<float>(); } set { this[nameof(ThreatLevel_OnlyCharacterParam)].SetValue<float>(value); } }
    }
    public class PalEquipWeaponInfo : Object
    {
        public PalEquipWeaponInfo(nint addr) : base(addr) { }
        public PalContainerId ContainerId { get { return this[nameof(ContainerId)].As<PalContainerId>(); } set { this["ContainerId"] = value; } }
        public PalMonsterEquipWeaponBase SpawnedWeapon { get { return this[nameof(SpawnedWeapon)].As<PalMonsterEquipWeaponBase>(); } set { this["SpawnedWeapon"] = value; } }
    }
    public class PalExpDatabaseRaw : TableRowBase
    {
        public PalExpDatabaseRaw(nint addr) : base(addr) { }
        public int DropEXP { get { return this[nameof(DropEXP)].GetValue<int>(); } set { this[nameof(DropEXP)].SetValue<int>(value); } }
        public int NextEXP { get { return this[nameof(NextEXP)].GetValue<int>(); } set { this[nameof(NextEXP)].SetValue<int>(value); } }
        public int PalNextEXP { get { return this[nameof(PalNextEXP)].GetValue<int>(); } set { this[nameof(PalNextEXP)].SetValue<int>(value); } }
        public int TotalEXP { get { return this[nameof(TotalEXP)].GetValue<int>(); } set { this[nameof(TotalEXP)].SetValue<int>(value); } }
        public int PalTotalEXP { get { return this[nameof(PalTotalEXP)].GetValue<int>(); } set { this[nameof(PalTotalEXP)].SetValue<int>(value); } }
    }
    public class PalCaptureBonusExpRaw : TableRowBase
    {
        public PalCaptureBonusExpRaw(nint addr) : base(addr) { }
        public int BonusExp { get { return this[nameof(BonusExp)].GetValue<int>(); } set { this[nameof(BonusExp)].SetValue<int>(value); } }
    }
    public class PalMorphSetting : Object
    {
        public PalMorphSetting(nint addr) : base(addr) { }
        public Object WeightList { get { return this[nameof(WeightList)]; } set { this[nameof(WeightList)] = value; } }
    }
    public class PalFoliageInstallData : Object
    {
        public PalFoliageInstallData(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Rotator Rotator { get { return this[nameof(Rotator)].As<Rotator>(); } set { this["Rotator"] = value; } }
        public Vector Scale3D { get { return this[nameof(Scale3D)].As<Vector>(); } set { this["Scale3D"] = value; } }
    }
    public class PalFoliageInstallDataArray : Object
    {
        public PalFoliageInstallDataArray(nint addr) : base(addr) { }
        public Array<PalFoliageInstallData> InstallDataArray { get { return new Array<PalFoliageInstallData>(this[nameof(InstallDataArray)].Address); } }
    }
    public class PalFoliageInstanceInfo : Object
    {
        public PalFoliageInstanceInfo(nint addr) : base(addr) { }
    }
    public class PalFoliageInstanceRepInfo : FastArraySerializerItem
    {
        public PalFoliageInstanceRepInfo(nint addr) : base(addr) { }
        public Object FoliageTypeId { get { return this[nameof(FoliageTypeId)]; } set { this[nameof(FoliageTypeId)] = value; } }
        public PalFoliageInstanceId InstanceId { get { return this[nameof(InstanceId)].As<PalFoliageInstanceId>(); } set { this["InstanceId"] = value; } }
        public PalFoliageInstance Instance { get { return this[nameof(Instance)].As<PalFoliageInstance>(); } set { this["Instance"] = value; } }
    }
    public class PalFoliageInstanceRepInfoArray : FastArraySerializer
    {
        public PalFoliageInstanceRepInfoArray(nint addr) : base(addr) { }
        public Array<PalFoliageInstanceRepInfo> Items { get { return new Array<PalFoliageInstanceRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalMapObjectFoliageDropItemData : Object
    {
        public PalMapObjectFoliageDropItemData(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemData StaticItemId { get { return this[nameof(StaticItemId)].As<PalDataTableRowName_ItemData>(); } set { this["StaticItemId"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalFoliagePresetData : Object
    {
        public PalFoliagePresetData(nint addr) : base(addr) { }
        public PalDataTableRowName_MapObjectData FoliageMapObjectId { get { return this[nameof(FoliageMapObjectId)].As<PalDataTableRowName_MapObjectData>(); } set { this["FoliageMapObjectId"] = value; } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public Array<PalMapObjectDropItemData> DamagedDropItems { get { return new Array<PalMapObjectDropItemData>(this[nameof(DamagedDropItems)].Address); } }
        public PalDataTableRowName_ItemData DropItemId { get { return this[nameof(DropItemId)].As<PalDataTableRowName_ItemData>(); } set { this["DropItemId"] = value; } }
        public int DropItemNum { get { return this[nameof(DropItemNum)].GetValue<int>(); } set { this[nameof(DropItemNum)].SetValue<int>(value); } }
        public int DropEXP { get { return this[nameof(DropEXP)].GetValue<int>(); } set { this[nameof(DropEXP)].SetValue<int>(value); } }
        public EPalMapObjectDestroyFXType DestroyFXType { get { return (EPalMapObjectDestroyFXType)this[nameof(DestroyFXType)].GetValue<int>(); } set { this[nameof(DestroyFXType)].SetValue<int>((int)value); } }
        public float DistanceFromPlayerNotRespawn { get { return this[nameof(DistanceFromPlayerNotRespawn)].GetValue<float>(); } set { this[nameof(DistanceFromPlayerNotRespawn)].SetValue<float>(value); } }
        public int RespawnIntervalRealMinutes { get { return this[nameof(RespawnIntervalRealMinutes)].GetValue<int>(); } set { this[nameof(RespawnIntervalRealMinutes)].SetValue<int>(value); } }
        public int RetryRespawnIntervalRealMinutes { get { return this[nameof(RetryRespawnIntervalRealMinutes)].GetValue<int>(); } set { this[nameof(RetryRespawnIntervalRealMinutes)].SetValue<int>(value); } }
    }
    public class PalMapObjectDropItemData : Object
    {
        public PalMapObjectDropItemData(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemData StaticItemId { get { return this[nameof(StaticItemId)].As<PalDataTableRowName_ItemData>(); } set { this["StaticItemId"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class FootIKSetting : Object
    {
        public FootIKSetting(nint addr) : base(addr) { }
        public bool bIsEnableIK { get { return this[nameof(bIsEnableIK)].Flag; } set { this[nameof(bIsEnableIK)].Flag = value; } }
        public Object RayCastBoneName { get { return this[nameof(RayCastBoneName)]; } set { this[nameof(RayCastBoneName)] = value; } }
        public float RayStartOffset { get { return this[nameof(RayStartOffset)].GetValue<float>(); } set { this[nameof(RayStartOffset)].SetValue<float>(value); } }
        public float RayEndOffset { get { return this[nameof(RayEndOffset)].GetValue<float>(); } set { this[nameof(RayEndOffset)].SetValue<float>(value); } }
    }
    public class FootStepEffectInfo : Object
    {
        public FootStepEffectInfo(nint addr) : base(addr) { }
        public Object PhysicalSurfaceToEffect { get { return this[nameof(PhysicalSurfaceToEffect)]; } set { this[nameof(PhysicalSurfaceToEffect)] = value; } }
    }
    public class PalFunnelCharacterManagementInfo : Object
    {
        public PalFunnelCharacterManagementInfo(nint addr) : base(addr) { }
        public PalInstanceID OwnerCharacterId { get { return this[nameof(OwnerCharacterId)].As<PalInstanceID>(); } set { this["OwnerCharacterId"] = value; } }
        public PalFunnelCharacter FunnelCharacter { get { return this[nameof(FunnelCharacter)].As<PalFunnelCharacter>(); } set { this["FunnelCharacter"] = value; } }
    }
    public class PalFunnelSkillModuleCollectItemSearchInfo : Object
    {
        public PalFunnelSkillModuleCollectItemSearchInfo(nint addr) : base(addr) { }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public float Distance { get { return this[nameof(Distance)].GetValue<float>(); } set { this[nameof(Distance)].SetValue<float>(value); } }
        public float ElapsedTime { get { return this[nameof(ElapsedTime)].GetValue<float>(); } set { this[nameof(ElapsedTime)].SetValue<float>(value); } }
    }
    public class PalGameProgressPresetDataTableRow : TableRowBase
    {
        public PalGameProgressPresetDataTableRow(nint addr) : base(addr) { }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
        public int HPLevel { get { return this[nameof(HPLevel)].GetValue<int>(); } set { this[nameof(HPLevel)].SetValue<int>(value); } }
        public int SPLevel { get { return this[nameof(SPLevel)].GetValue<int>(); } set { this[nameof(SPLevel)].SetValue<int>(value); } }
        public int AttackLevel { get { return this[nameof(AttackLevel)].GetValue<int>(); } set { this[nameof(AttackLevel)].SetValue<int>(value); } }
        public int WorkLevel { get { return this[nameof(WorkLevel)].GetValue<int>(); } set { this[nameof(WorkLevel)].SetValue<int>(value); } }
        public int WeightLevel { get { return this[nameof(WeightLevel)].GetValue<int>(); } set { this[nameof(WeightLevel)].SetValue<int>(value); } }
        public int CaptureLevel { get { return this[nameof(CaptureLevel)].GetValue<int>(); } set { this[nameof(CaptureLevel)].SetValue<int>(value); } }
        public Array<PalDebugOtomoPalInfo> OtomoPals { get { return new Array<PalDebugOtomoPalInfo>(this[nameof(OtomoPals)].Address); } }
        public Array<PalDebugOtomoPalInfo> CapturedPals { get { return new Array<PalDebugOtomoPalInfo>(this[nameof(CapturedPals)].Address); } }
        public Array<PalDebugItemCreateInfo> LoadoutItems { get { return new Array<PalDebugItemCreateInfo>(this[nameof(LoadoutItems)].Address); } }
        public Array<PalDebugItemCreateInfo> Items { get { return new Array<PalDebugItemCreateInfo>(this[nameof(Items)].Address); } }
    }
    public class PalSoundSource : TableRowBase
    {
        public PalSoundSource(nint addr) : base(addr) { }
        public int Radius_Meter { get { return this[nameof(Radius_Meter)].GetValue<int>(); } set { this[nameof(Radius_Meter)].SetValue<int>(value); } }
        public bool bIsMuteable { get { return this[nameof(bIsMuteable)].Flag; } set { this[nameof(bIsMuteable)].Flag = value; } }
    }
    public class PalMapObjectRepairInfo : Object
    {
        public PalMapObjectRepairInfo(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemData RepairKitItemName { get { return this[nameof(RepairKitItemName)].As<PalDataTableRowName_ItemData>(); } set { this["RepairKitItemName"] = value; } }
        public int RepairKitRequiredNum { get { return this[nameof(RepairKitRequiredNum)].GetValue<int>(); } set { this[nameof(RepairKitRequiredNum)].SetValue<int>(value); } }
        public float RepairRequiredWorkAmount { get { return this[nameof(RepairRequiredWorkAmount)].GetValue<float>(); } set { this[nameof(RepairRequiredWorkAmount)].SetValue<float>(value); } }
    }
    public class PalGameSystemInitSequenceSet : Object
    {
        public PalGameSystemInitSequenceSet(nint addr) : base(addr) { }
        public Array<PalGameSystemInitSequenceBase> InitSequences { get { return new Array<PalGameSystemInitSequenceBase>(this[nameof(InitSequences)].Address); } }
    }
    public class PalGroupCreateParameter : Object
    {
        public PalGroupCreateParameter(nint addr) : base(addr) { }
        public EPalGroupType Type { get { return (EPalGroupType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public EPalOrganizationType OrganizationType { get { return (EPalOrganizationType)this[nameof(OrganizationType)].GetValue<int>(); } set { this[nameof(OrganizationType)].SetValue<int>((int)value); } }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public Guid AdminPlayerUId { get { return this[nameof(AdminPlayerUId)].As<Guid>(); } set { this["AdminPlayerUId"] = value; } }
    }
    public class PalGroupUpdateInfo : Object
    {
        public PalGroupUpdateInfo(nint addr) : base(addr) { }
        public Guid EnterGroupId { get { return this[nameof(EnterGroupId)].As<Guid>(); } set { this["EnterGroupId"] = value; } }
        public Guid ExitGroupId { get { return this[nameof(ExitGroupId)].As<Guid>(); } set { this["ExitGroupId"] = value; } }
        public Array<Guid> PlayerUIds { get { return new Array<Guid>(this[nameof(PlayerUIds)].Address); } }
        public Array<PalInstanceID> CharacterIndividualIds { get { return new Array<PalInstanceID>(this[nameof(CharacterIndividualIds)].Address); } }
        public Array<Guid> MapObjectInstanceIds_BaseCampPoint { get { return new Array<Guid>(this[nameof(MapObjectInstanceIds_BaseCampPoint)].Address); } }
        public Array<Guid> BaseCampIds { get { return new Array<Guid>(this[nameof(BaseCampIds)].Address); } }
    }
    public class PalGuildPlayerInfoRepInfo : FastArraySerializerItem
    {
        public PalGuildPlayerInfoRepInfo(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public PalGuildPlayerInfo PlayerInfo { get { return this[nameof(PlayerInfo)].As<PalGuildPlayerInfo>(); } set { this["PlayerInfo"] = value; } }
    }
    public class PalFastGuildPlayerInfoRepInfoArray : FastArraySerializer
    {
        public PalFastGuildPlayerInfoRepInfoArray(nint addr) : base(addr) { }
        public Array<PalGuildPlayerInfoRepInfo> Items { get { return new Array<PalGuildPlayerInfoRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalGuildPalStorageInfo : Object
    {
        public PalGuildPalStorageInfo(nint addr) : base(addr) { }
    }
    public class PalHitCollisionSetupParameter : Object
    {
        public PalHitCollisionSetupParameter(nint addr) : base(addr) { }
    }
    public class PalIncidentParameterDataTableRow : TableRowBase
    {
        public PalIncidentParameterDataTableRow(nint addr) : base(addr) { }
        public Object Option { get { return this[nameof(Option)]; } set { this[nameof(Option)] = value; } }
    }
    public class PalInteractiveObjectActionInfoData : Object
    {
        public PalInteractiveObjectActionInfoData(nint addr) : base(addr) { }
        public EPalInteractiveObjectIndicatorType IndicatorType { get { return (EPalInteractiveObjectIndicatorType)this[nameof(IndicatorType)].GetValue<int>(); } set { this[nameof(IndicatorType)].SetValue<int>((int)value); } }
        public EPalInteractiveObjectButtonType buttonType { get { return (EPalInteractiveObjectButtonType)this[nameof(buttonType)].GetValue<int>(); } set { this[nameof(buttonType)].SetValue<int>((int)value); } }
        public float longPushTime { get { return this[nameof(longPushTime)].GetValue<float>(); } set { this[nameof(longPushTime)].SetValue<float>(value); } }
        public bool bValid { get { return this[nameof(bValid)].Flag; } set { this[nameof(bValid)].Flag = value; } }
        public bool bLockRiding { get { return this[nameof(bLockRiding)].Flag; } set { this[nameof(bLockRiding)].Flag = value; } }
        public bool isInputComsume { get { return this[nameof(isInputComsume)].Flag; } set { this[nameof(isInputComsume)].Flag = value; } }
    }
    public class PalInteractiveObjectActionBy : Object
    {
        public PalInteractiveObjectActionBy(nint addr) : base(addr) { }
        public Actor InteractingActor { get { return this[nameof(InteractingActor)].As<Actor>(); } set { this["InteractingActor"] = value; } }
        public int InteractId { get { return this[nameof(InteractId)].GetValue<int>(); } set { this[nameof(InteractId)].SetValue<int>(value); } }
    }
    public class PalInteractiveObjectActionInfoSet : Object
    {
        public PalInteractiveObjectActionInfoSet(nint addr) : base(addr) { }
        public PalInteractiveObjectActionInfoData Interact1_Indicator { get { return this[nameof(Interact1_Indicator)].As<PalInteractiveObjectActionInfoData>(); } set { this["Interact1_Indicator"] = value; } }
        public PalInteractiveObjectActionInfoData Interact2_Indicator { get { return this[nameof(Interact2_Indicator)].As<PalInteractiveObjectActionInfoData>(); } set { this["Interact2_Indicator"] = value; } }
        public PalInteractiveObjectActionInfoData Interact3_Indicator { get { return this[nameof(Interact3_Indicator)].As<PalInteractiveObjectActionInfoData>(); } set { this["Interact3_Indicator"] = value; } }
        public PalInteractiveObjectActionInfoData Interact4_Indicator { get { return this[nameof(Interact4_Indicator)].As<PalInteractiveObjectActionInfoData>(); } set { this["Interact4_Indicator"] = value; } }
    }
    public class PalVisitorNPCDatabaseRow : PalInvaderDatabaseRow
    {
        public PalVisitorNPCDatabaseRow(nint addr) : base(addr) { }
        public EPalIVisitorNPCAction ActionTimeLimit { get { return (EPalIVisitorNPCAction)this[nameof(ActionTimeLimit)].GetValue<int>(); } set { this[nameof(ActionTimeLimit)].SetValue<int>((int)value); } }
        public bool IsSquad { get { return this[nameof(IsSquad)].Flag; } set { this[nameof(IsSquad)].Flag = value; } }
    }
    public class PalInvaderSpawnCharacterParameter : Object
    {
        public PalInvaderSpawnCharacterParameter(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
    }
    public class PalItemOperationOptions : Object
    {
        public PalItemOperationOptions(nint addr) : base(addr) { }
    }
    public class PalItemFlowInSplineInfo : Object
    {
        public PalItemFlowInSplineInfo(nint addr) : base(addr) { }
        public Actor ItemActor { get { return this[nameof(ItemActor)].As<Actor>(); } set { this["ItemActor"] = value; } }
        public float ProgressTime { get { return this[nameof(ProgressTime)].GetValue<float>(); } set { this[nameof(ProgressTime)].SetValue<float>(value); } }
    }
    public class PalStaticItemAndSlot : Object
    {
        public PalStaticItemAndSlot(nint addr) : base(addr) { }
        public PalStaticItemIdAndNum ItemInfo { get { return this[nameof(ItemInfo)].As<PalStaticItemIdAndNum>(); } set { this["ItemInfo"] = value; } }
        public PalItemSlotId SlotID { get { return this[nameof(SlotID)].As<PalItemSlotId>(); } set { this["SlotID"] = value; } }
    }
    public class PalItemAndSlot : Object
    {
        public PalItemAndSlot(nint addr) : base(addr) { }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
        public PalItemSlotId SlotID { get { return this[nameof(SlotID)].As<PalItemSlotId>(); } set { this["SlotID"] = value; } }
    }
    public class PalSlotItemAndNum : Object
    {
        public PalSlotItemAndNum(nint addr) : base(addr) { }
        public PalItemAndSlot itemSlot { get { return this[nameof(itemSlot)].As<PalItemAndSlot>(); } set { this["itemSlot"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalSlotOpItemInfo : Object
    {
        public PalSlotOpItemInfo(nint addr) : base(addr) { }
        public PalItemAndNum Item { get { return this[nameof(Item)].As<PalItemAndNum>(); } set { this["Item"] = value; } }
        public float CorruptionProgressValue { get { return this[nameof(CorruptionProgressValue)].GetValue<float>(); } set { this[nameof(CorruptionProgressValue)].SetValue<float>(value); } }
    }
    public class PalSlotOpItemSlotInfo : Object
    {
        public PalSlotOpItemSlotInfo(nint addr) : base(addr) { }
        public PalSlotOpItemInfo ItemInfo { get { return this[nameof(ItemInfo)].As<PalSlotOpItemInfo>(); } set { this["ItemInfo"] = value; } }
        public PalItemSlotId SlotID { get { return this[nameof(SlotID)].As<PalItemSlotId>(); } set { this["SlotID"] = value; } }
    }
    public class PalItemContainerInfo : PalContainerInfo
    {
        public PalItemContainerInfo(nint addr) : base(addr) { }
        public PalItemContainerBelongInfo BelongInfo { get { return this[nameof(BelongInfo)].As<PalItemContainerBelongInfo>(); } set { this["BelongInfo"] = value; } }
        public PalItemPermission Permission { get { return this[nameof(Permission)].As<PalItemPermission>(); } set { this["Permission"] = value; } }
    }
    public class PalItemContainerCreateParameter : Object
    {
        public PalItemContainerCreateParameter(nint addr) : base(addr) { }
        public int SlotNum { get { return this[nameof(SlotNum)].GetValue<int>(); } set { this[nameof(SlotNum)].SetValue<int>(value); } }
        public PalItemPermission Permission { get { return this[nameof(Permission)].As<PalItemPermission>(); } set { this["Permission"] = value; } }
        public PalItemContainerBelongInfo BelongInfo { get { return this[nameof(BelongInfo)].As<PalItemContainerBelongInfo>(); } set { this["BelongInfo"] = value; } }
        public Array<PalItemAndNum> InitialItems { get { return new Array<PalItemAndNum>(this[nameof(InitialItems)].Address); } }
    }
    public class PalItemLotteryData : TableRowBase
    {
        public PalItemLotteryData(nint addr) : base(addr) { }
        public Object FieldName { get { return this[nameof(FieldName)]; } set { this[nameof(FieldName)] = value; } }
        public int SlotNo { get { return this[nameof(SlotNo)].GetValue<int>(); } set { this[nameof(SlotNo)].SetValue<int>(value); } }
        public float WeightInSlot { get { return this[nameof(WeightInSlot)].GetValue<float>(); } set { this[nameof(WeightInSlot)].SetValue<float>(value); } }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public int MinNum { get { return this[nameof(MinNum)].GetValue<int>(); } set { this[nameof(MinNum)].SetValue<int>(value); } }
        public int MaxNum { get { return this[nameof(MaxNum)].GetValue<int>(); } set { this[nameof(MaxNum)].SetValue<int>(value); } }
        public int NumUnit { get { return this[nameof(NumUnit)].GetValue<int>(); } set { this[nameof(NumUnit)].SetValue<int>(value); } }
        public EPalMapObjectTreasureGradeType TreasureBoxGrade { get { return (EPalMapObjectTreasureGradeType)this[nameof(TreasureBoxGrade)].GetValue<int>(); } set { this[nameof(TreasureBoxGrade)].SetValue<int>((int)value); } }
    }
    public class PalLocalizedTextData : TableRowBase
    {
        public PalLocalizedTextData(nint addr) : base(addr) { }
        public Object TextData { get { return this[nameof(TextData)]; } set { this[nameof(TextData)] = value; } }
    }
    public class PalLocationRepInfo : FastArraySerializerItem
    {
        public PalLocationRepInfo(nint addr) : base(addr) { }
        public Guid ID { get { return this[nameof(ID)].As<Guid>(); } set { this["ID"] = value; } }
        public PalLocationBase Location { get { return this[nameof(Location)].As<PalLocationBase>(); } set { this["Location"] = value; } }
    }
    public class FastPalLocationRepInfoArray : FastArraySerializer
    {
        public FastPalLocationRepInfoArray(nint addr) : base(addr) { }
        public Array<PalLocationRepInfo> Items { get { return new Array<PalLocationRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalLogInfo_Skill : Object
    {
        public PalLogInfo_Skill(nint addr) : base(addr) { }
        public Object SkillName { get { return this[nameof(SkillName)]; } set { this[nameof(SkillName)] = value; } }
        public Object CharacterName { get { return this[nameof(CharacterName)]; } set { this[nameof(CharacterName)] = value; } }
        public Object Value { get { return this[nameof(Value)]; } set { this[nameof(Value)] = value; } }
    }
    public class PalMapObjectConcreteModelCreateParameter : Object
    {
        public PalMapObjectConcreteModelCreateParameter(nint addr) : base(addr) { }
    }
    public class PalMapObjectMasterData : TableRowBase
    {
        public PalMapObjectMasterData(nint addr) : base(addr) { }
        public Object OverrideNameMsgID { get { return this[nameof(OverrideNameMsgID)]; } set { this[nameof(OverrideNameMsgID)] = value; } }
        public Object BlueprintClassName { get { return this[nameof(BlueprintClassName)]; } set { this[nameof(BlueprintClassName)] = value; } }
        public Object BlueprintClassSoft { get { return this[nameof(BlueprintClassSoft)]; } set { this[nameof(BlueprintClassSoft)] = value; } }
        public EPalMapObjectMaterialType MaterialType { get { return (EPalMapObjectMaterialType)this[nameof(MaterialType)].GetValue<int>(); } set { this[nameof(MaterialType)].SetValue<int>((int)value); } }
        public EPalMapObjectMaterialSubType MaterialSubType { get { return (EPalMapObjectMaterialSubType)this[nameof(MaterialSubType)].GetValue<int>(); } set { this[nameof(MaterialSubType)].SetValue<int>((int)value); } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public int Defense { get { return this[nameof(Defense)].GetValue<int>(); } set { this[nameof(Defense)].SetValue<int>(value); } }
        public bool bBelongToBaseCamp { get { return this[nameof(bBelongToBaseCamp)].Flag; } set { this[nameof(bBelongToBaseCamp)].Flag = value; } }
        public int DistributeExpAroundPlayer { get { return this[nameof(DistributeExpAroundPlayer)].GetValue<int>(); } set { this[nameof(DistributeExpAroundPlayer)].SetValue<int>(value); } }
        public float DeteriorationDamage { get { return this[nameof(DeteriorationDamage)].GetValue<float>(); } set { this[nameof(DeteriorationDamage)].SetValue<float>(value); } }
        public float ExtinguishBurnWorkAmount { get { return this[nameof(ExtinguishBurnWorkAmount)].GetValue<float>(); } set { this[nameof(ExtinguishBurnWorkAmount)].SetValue<float>(value); } }
        public bool bShowHPGauge { get { return this[nameof(bShowHPGauge)].Flag; } set { this[nameof(bShowHPGauge)].Flag = value; } }
        public bool bInDevelop { get { return this[nameof(bInDevelop)].Flag; } set { this[nameof(bInDevelop)].Flag = value; } }
        public int Editor_RowNameHash { get { return this[nameof(Editor_RowNameHash)].GetValue<int>(); } set { this[nameof(Editor_RowNameHash)].SetValue<int>(value); } }
    }
    public class PalMapObjectAssignData : TableRowBase
    {
        public PalMapObjectAssignData(nint addr) : base(addr) { }
        public EPalGenusCategoryType GenusCategory { get { return (EPalGenusCategoryType)this[nameof(GenusCategory)].GetValue<int>(); } set { this[nameof(GenusCategory)].SetValue<int>((int)value); } }
        public EPalElementType ElementType { get { return (EPalElementType)this[nameof(ElementType)].GetValue<int>(); } set { this[nameof(ElementType)].SetValue<int>((int)value); } }
        public EPalWorkSuitability WorkSuitability { get { return (EPalWorkSuitability)this[nameof(WorkSuitability)].GetValue<int>(); } set { this[nameof(WorkSuitability)].SetValue<int>((int)value); } }
        public int WorkSuitabilityRank { get { return this[nameof(WorkSuitabilityRank)].GetValue<int>(); } set { this[nameof(WorkSuitabilityRank)].SetValue<int>(value); } }
        public bool bPlayerWorkable { get { return this[nameof(bPlayerWorkable)].Flag; } set { this[nameof(bPlayerWorkable)].Flag = value; } }
        public EPalWorkType WorkType { get { return (EPalWorkType)this[nameof(WorkType)].GetValue<int>(); } set { this[nameof(WorkType)].SetValue<int>((int)value); } }
        public EPalActionType WorkActionType { get { return (EPalActionType)this[nameof(WorkActionType)].GetValue<int>(); } set { this[nameof(WorkActionType)].SetValue<int>((int)value); } }
        public int WorkerMaxNum { get { return this[nameof(WorkerMaxNum)].GetValue<int>(); } set { this[nameof(WorkerMaxNum)].SetValue<int>(value); } }
        public float AffectSanityValue { get { return this[nameof(AffectSanityValue)].GetValue<float>(); } set { this[nameof(AffectSanityValue)].SetValue<float>(value); } }
    }
    public class PalFoliageTypeReference : TableRowBase
    {
        public PalFoliageTypeReference(nint addr) : base(addr) { }
        public Object FoliageType { get { return this[nameof(FoliageType)]; } set { this[nameof(FoliageType)] = value; } }
        public PalDataTableRowName_MapObjectData FoliageMapObjectId { get { return this[nameof(FoliageMapObjectId)].As<PalDataTableRowName_MapObjectData>(); } set { this["FoliageMapObjectId"] = value; } }
        public int HP { get { return this[nameof(HP)].GetValue<int>(); } set { this[nameof(HP)].SetValue<int>(value); } }
        public PalDataTableRowName_ItemData DropItemId { get { return this[nameof(DropItemId)].As<PalDataTableRowName_ItemData>(); } set { this["DropItemId"] = value; } }
        public int DropItemNum { get { return this[nameof(DropItemNum)].GetValue<int>(); } set { this[nameof(DropItemNum)].SetValue<int>(value); } }
        public EPalMapObjectDestroyFXType DestroyFXType { get { return (EPalMapObjectDestroyFXType)this[nameof(DestroyFXType)].GetValue<int>(); } set { this[nameof(DestroyFXType)].SetValue<int>((int)value); } }
    }
    public class PalMapObjectFoliageInstallData : TableRowBase
    {
        public PalMapObjectFoliageInstallData(nint addr) : base(addr) { }
        public Object FoliageTypeName { get { return this[nameof(FoliageTypeName)]; } set { this[nameof(FoliageTypeName)] = value; } }
        public Vector Location { get { return this[nameof(Location)].As<Vector>(); } set { this["Location"] = value; } }
        public Rotator Rotator { get { return this[nameof(Rotator)].As<Rotator>(); } set { this["Rotator"] = value; } }
        public Vector Scale3D { get { return this[nameof(Scale3D)].As<Vector>(); } set { this["Scale3D"] = value; } }
    }
    public class PalMapObjectStatusValue : Object
    {
        public PalMapObjectStatusValue(nint addr) : base(addr) { }
        public int CurrentValue { get { return this[nameof(CurrentValue)].GetValue<int>(); } set { this[nameof(CurrentValue)].SetValue<int>(value); } }
        public int MaxValue { get { return this[nameof(MaxValue)].GetValue<int>(); } set { this[nameof(MaxValue)].SetValue<int>(value); } }
    }
    public class PalMapObjectBelongInfo : PalBelongInfo
    {
        public PalMapObjectBelongInfo(nint addr) : base(addr) { }
        public Guid GroupID { get { return this[nameof(GroupID)].As<Guid>(); } set { this["GroupID"] = value; } }
    }
    public class PalMapObjectFoliageInstanceAccessID : Object
    {
        public PalMapObjectFoliageInstanceAccessID(nint addr) : base(addr) { }
        public Object ModelId { get { return this[nameof(ModelId)]; } set { this[nameof(ModelId)] = value; } }
        public PalFoliageInstanceId InstanceId { get { return this[nameof(InstanceId)].As<PalFoliageInstanceId>(); } set { this["InstanceId"] = value; } }
    }
    public class PalFoliageInstallDataSet : Object
    {
        public PalFoliageInstallDataSet(nint addr) : base(addr) { }
    }
    public class PalMapObjectItemProductData : TableRowBase
    {
        public PalMapObjectItemProductData(nint addr) : base(addr) { }
        public Object Product_Id { get { return this[nameof(Product_Id)]; } set { this[nameof(Product_Id)] = value; } }
        public float RequiredWorkAmount { get { return this[nameof(RequiredWorkAmount)].GetValue<float>(); } set { this[nameof(RequiredWorkAmount)].SetValue<float>(value); } }
        public float AutoWorkAmountBySec { get { return this[nameof(AutoWorkAmountBySec)].GetValue<float>(); } set { this[nameof(AutoWorkAmountBySec)].SetValue<float>(value); } }
    }
    public class PalMapObjectModelConnectInfoItem : Object
    {
        public PalMapObjectModelConnectInfoItem(nint addr) : base(addr) { }
        public Guid ConnectToModelInstanceId { get { return this[nameof(ConnectToModelInstanceId)].As<Guid>(); } set { this["ConnectToModelInstanceId"] = value; } }
        public EPalMapObjectModelConnectIndex ConnectIndex { get { return (EPalMapObjectModelConnectIndex)this[nameof(ConnectIndex)].GetValue<int>(); } set { this[nameof(ConnectIndex)].SetValue<int>((int)value); } }
    }
    public class PalMapObjectModelConnectInfo : Object
    {
        public PalMapObjectModelConnectInfo(nint addr) : base(addr) { }
        public EPalMapObjectModelConnectIndex ConnectIndex { get { return (EPalMapObjectModelConnectIndex)this[nameof(ConnectIndex)].GetValue<int>(); } set { this[nameof(ConnectIndex)].SetValue<int>((int)value); } }
        public Array<PalMapObjectModelConnectInfoItem> ConnectToInfos { get { return new Array<PalMapObjectModelConnectInfoItem>(this[nameof(ConnectToInfos)].Address); } }
    }
    public class PalFarmCropGrowupProcessSet : Object
    {
        public PalFarmCropGrowupProcessSet(nint addr) : base(addr) { }
        public EPalFarmCropState State { get { return (EPalFarmCropState)this[nameof(State)].GetValue<int>(); } set { this[nameof(State)].SetValue<int>((int)value); } }
        public ComponentReference TargetCompRef { get { return this[nameof(TargetCompRef)].As<ComponentReference>(); } set { this["TargetCompRef"] = value; } }
        public float ProcessRate { get { return this[nameof(ProcessRate)].GetValue<float>(); } set { this[nameof(ProcessRate)].SetValue<float>(value); } }
    }
    public class PalMapObjectFarmCropData : TableRowBase
    {
        public PalMapObjectFarmCropData(nint addr) : base(addr) { }
        public Object CropBlueprintClassName { get { return this[nameof(CropBlueprintClassName)]; } set { this[nameof(CropBlueprintClassName)] = value; } }
        public Object CropClassPath { get { return this[nameof(CropClassPath)]; } set { this[nameof(CropClassPath)] = value; } }
        public Object CropItemId { get { return this[nameof(CropItemId)]; } set { this[nameof(CropItemId)] = value; } }
        public float GrowupTime { get { return this[nameof(GrowupTime)].GetValue<float>(); } set { this[nameof(GrowupTime)].SetValue<float>(value); } }
        public int CropItemNum { get { return this[nameof(CropItemNum)].GetValue<int>(); } set { this[nameof(CropItemNum)].SetValue<int>(value); } }
        public float SeedingWorkAmount { get { return this[nameof(SeedingWorkAmount)].GetValue<float>(); } set { this[nameof(SeedingWorkAmount)].SetValue<float>(value); } }
        public float WateringWorkAmount { get { return this[nameof(WateringWorkAmount)].GetValue<float>(); } set { this[nameof(WateringWorkAmount)].SetValue<float>(value); } }
        public float HarvestWorkAmount { get { return this[nameof(HarvestWorkAmount)].GetValue<float>(); } set { this[nameof(HarvestWorkAmount)].SetValue<float>(value); } }
        public Object MaterialItem1_Id { get { return this[nameof(MaterialItem1_Id)]; } set { this[nameof(MaterialItem1_Id)] = value; } }
        public int MaterialItem1_Num { get { return this[nameof(MaterialItem1_Num)].GetValue<int>(); } set { this[nameof(MaterialItem1_Num)].SetValue<int>(value); } }
        public Object MaterialItem2_Id { get { return this[nameof(MaterialItem2_Id)]; } set { this[nameof(MaterialItem2_Id)] = value; } }
        public int MaterialItem2_Num { get { return this[nameof(MaterialItem2_Num)].GetValue<int>(); } set { this[nameof(MaterialItem2_Num)].SetValue<int>(value); } }
        public int Editor_RowNameHash { get { return this[nameof(Editor_RowNameHash)].GetValue<int>(); } set { this[nameof(Editor_RowNameHash)].SetValue<int>(value); } }
    }
    public class PalFoliageMasterData : TableRowBase
    {
        public PalFoliageMasterData(nint addr) : base(addr) { }
        public Object ClassRefId { get { return this[nameof(ClassRefId)]; } set { this[nameof(ClassRefId)] = value; } }
    }
    public class PalMapObjectItemContainerCreateContainerParameter : Object
    {
        public PalMapObjectItemContainerCreateContainerParameter(nint addr) : base(addr) { }
    }
    public class PalMapObjectCreateParameter : Object
    {
        public PalMapObjectCreateParameter(nint addr) : base(addr) { }
    }
    public class PalMapObjectDisposeReserveInfo : Object
    {
        public PalMapObjectDisposeReserveInfo(nint addr) : base(addr) { }
    }
    public class PalMapObjectSpawnableCheckParameter : Object
    {
        public PalMapObjectSpawnableCheckParameter(nint addr) : base(addr) { }
        public Array<Actor> IgnoredOverlapCheckActors { get { return new Array<Actor>(this[nameof(IgnoredOverlapCheckActors)].Address); } }
    }
    public class PalMapObjectManageAsyncTickFunction : TickFunction
    {
        public PalMapObjectManageAsyncTickFunction(nint addr) : base(addr) { }
    }
    public class PalMapObjectModelInitializeExtraParameters : Object
    {
        public PalMapObjectModelInitializeExtraParameters(nint addr) : base(addr) { }
        public Array<PalMapObjectModelInitializeExtraParameterBase> Entries { get { return new Array<PalMapObjectModelInitializeExtraParameterBase>(this[nameof(Entries)].Address); } }
        public bool bIgnoredSave { get { return this[nameof(bIgnoredSave)].Flag; } set { this[nameof(bIgnoredSave)].Flag = value; } }
        public Guid LevelObjectInstanceId { get { return this[nameof(LevelObjectInstanceId)].As<Guid>(); } set { this["LevelObjectInstanceId"] = value; } }
    }
    public class PalMapObjectPickupItemData : Object
    {
        public PalMapObjectPickupItemData(nint addr) : base(addr) { }
        public PalDataTableRowName_ItemData StaticItemId { get { return this[nameof(StaticItemId)].As<PalDataTableRowName_ItemData>(); } set { this["StaticItemId"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
    }
    public class PalMapObjectPickupItemPalEggData : Object
    {
        public PalMapObjectPickupItemPalEggData(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData PalMonsterId { get { return this[nameof(PalMonsterId)].As<PalDataTableRowName_PalMonsterData>(); } set { this["PalMonsterId"] = value; } }
    }
    public class PalMapObjectPickupItemPalEggLotteryData : Object
    {
        public PalMapObjectPickupItemPalEggLotteryData(nint addr) : base(addr) { }
        public PalMapObjectPickupItemPalEggData PalEggData { get { return this[nameof(PalEggData)].As<PalMapObjectPickupItemPalEggData>(); } set { this["PalEggData"] = value; } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
    }
    public class PalItemPalEggDataHandle : Object
    {
        public PalItemPalEggDataHandle(nint addr) : base(addr) { }
        public Array<PalDataTableRowName_ItemData> ItemRowNameArray { get { return new Array<PalDataTableRowName_ItemData>(this[nameof(ItemRowNameArray)].Address); } }
    }
    public class PalMapObjectVisualEffectInstanceSet : Object
    {
        public PalMapObjectVisualEffectInstanceSet(nint addr) : base(addr) { }
        public Array<NiagaraComponent> Instances { get { return new Array<NiagaraComponent>(this[nameof(Instances)].Address); } }
    }
    public class PalMapObjectWorldDropItemInfo : Object
    {
        public PalMapObjectWorldDropItemInfo(nint addr) : base(addr) { }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public GameDateTime CreatedAt { get { return this[nameof(CreatedAt)].As<GameDateTime>(); } set { this["CreatedAt"] = value; } }
    }
    public class PalMapObjectWorldDropItemInfoSet : Object
    {
        public PalMapObjectWorldDropItemInfoSet(nint addr) : base(addr) { }
        public Array<PalMapObjectWorldDropItemInfo> Infos { get { return new Array<PalMapObjectWorldDropItemInfo>(this[nameof(Infos)].Address); } }
        public Array<PalMapObjectWorldDropItemInfo> InsertReservedInfoSet { get { return new Array<PalMapObjectWorldDropItemInfo>(this[nameof(InsertReservedInfoSet)].Address); } }
        public int MaxCount { get { return this[nameof(MaxCount)].GetValue<int>(); } set { this[nameof(MaxCount)].SetValue<int>(value); } }
    }
    public class PalSphere : Object
    {
        public PalSphere(nint addr) : base(addr) { }
        public Vector Center { get { return this[nameof(Center)].As<Vector>(); } set { this["Center"] = value; } }
        public float Radius { get { return this[nameof(Radius)].GetValue<float>(); } set { this[nameof(Radius)].SetValue<float>(value); } }
        public bool bXY { get { return this[nameof(bXY)].Flag; } set { this[nameof(bXY)].Flag = value; } }
    }
    public class PalMonsterControllerBaseCampLogContent : Object
    {
        public PalMonsterControllerBaseCampLogContent(nint addr) : base(addr) { }
        public EPalMonsterControllerBaseCampLogType Type { get { return (EPalMonsterControllerBaseCampLogType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public Object TextId { get { return this[nameof(TextId)]; } set { this[nameof(TextId)] = value; } }
        public Object TargetObjectTextId { get { return this[nameof(TargetObjectTextId)]; } set { this[nameof(TargetObjectTextId)] = value; } }
        public PalInstanceID InstanceId { get { return this[nameof(InstanceId)].As<PalInstanceID>(); } set { this["InstanceId"] = value; } }
    }
    public class PalMonsterControllerBaseCampHungryParameter : Object
    {
        public PalMonsterControllerBaseCampHungryParameter(nint addr) : base(addr) { }
        public float RecoverSatietyTo { get { return this[nameof(RecoverSatietyTo)].GetValue<float>(); } set { this[nameof(RecoverSatietyTo)].SetValue<float>(value); } }
        public float RecoverSanityTo { get { return this[nameof(RecoverSanityTo)].GetValue<float>(); } set { this[nameof(RecoverSanityTo)].SetValue<float>(value); } }
        public int EatMaxNum { get { return this[nameof(EatMaxNum)].GetValue<int>(); } set { this[nameof(EatMaxNum)].SetValue<int>(value); } }
    }
    public class PalNavigationDividedAreaInfo : Object
    {
        public PalNavigationDividedAreaInfo(nint addr) : base(addr) { }
    }
    public class PalNetworkChangeIndividualID : Object
    {
        public PalNetworkChangeIndividualID(nint addr) : base(addr) { }
    }
    public class PalNetworkCharacterContainerParameter : Object
    {
        public PalNetworkCharacterContainerParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkDynamicItemParameter : Object
    {
        public PalNetworkDynamicItemParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkParameter : Object
    {
        public PalNetworkParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkContainerParameter : Object
    {
        public PalNetworkContainerParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkItemOperationParameter : Object
    {
        public PalNetworkItemOperationParameter(nint addr) : base(addr) { }
    }
    public class PalStaticItemIdAndDynamicItemDataSet : Object
    {
        public PalStaticItemIdAndDynamicItemDataSet(nint addr) : base(addr) { }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public PalDynamicItemDataBase DynamicItemData { get { return this[nameof(DynamicItemData)].As<PalDynamicItemDataBase>(); } set { this["DynamicItemData"] = value; } }
    }
    public class PalItemAndSlotUpdateContentSet : Object
    {
        public PalItemAndSlotUpdateContentSet(nint addr) : base(addr) { }
        public Array<PalItemAndSlot> UpdateContents { get { return new Array<PalItemAndSlot>(this[nameof(UpdateContents)].Address); } }
        public Array<PalStaticItemIdAndDynamicItemDataSet> UpdateDynamicItems { get { return new Array<PalStaticItemIdAndDynamicItemDataSet>(this[nameof(UpdateDynamicItems)].Address); } }
    }
    public class PalNetworkMapObjectSpawnRequestParameter : Object
    {
        public PalNetworkMapObjectSpawnRequestParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkPlayerObtainClientParameter : Object
    {
        public PalNetworkPlayerObtainClientParameter(nint addr) : base(addr) { }
    }
    public class PalNetworkTransmitterDelaySpawnInfo : Object
    {
        public PalNetworkTransmitterDelaySpawnInfo(nint addr) : base(addr) { }
        public Guid SpawnGUID { get { return this[nameof(SpawnGUID)].As<Guid>(); } set { this["SpawnGUID"] = value; } }
        public Actor SpawnActor { get { return this[nameof(SpawnActor)].As<Actor>(); } set { this["SpawnActor"] = value; } }
    }
    public class PalNoteMasterData : TableRowBase
    {
        public PalNoteMasterData(nint addr) : base(addr) { }
        public Object TextId_Description { get { return this[nameof(TextId_Description)]; } set { this[nameof(TextId_Description)] = value; } }
    }
    public class PalNoteMasterDataTextureTableRow : TableRowBase
    {
        public PalNoteMasterDataTextureTableRow(nint addr) : base(addr) { }
        public Object Texture { get { return this[nameof(Texture)]; } set { this[nameof(Texture)] = value; } }
    }
    public class PalNPCInteractConditionConstValueDataTableRow : TableRowBase
    {
        public PalNPCInteractConditionConstValueDataTableRow(nint addr) : base(addr) { }
        public Object ValText { get { return this[nameof(ValText)]; } set { this[nameof(ValText)] = value; } }
    }
    public class PalNPCInteractionDataTableRow : TableRowBase
    {
        public PalNPCInteractionDataTableRow(nint addr) : base(addr) { }
        public Object UniqueNPCID { get { return this[nameof(UniqueNPCID)]; } set { this[nameof(UniqueNPCID)] = value; } }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public EPalInteractiveObjectIndicatorType InteractionType { get { return (EPalInteractiveObjectIndicatorType)this[nameof(InteractionType)].GetValue<int>(); } set { this[nameof(InteractionType)].SetValue<int>((int)value); } }
        public Object Conditions { get { return this[nameof(Conditions)]; } set { this[nameof(Conditions)] = value; } }
        public Object IncidentId { get { return this[nameof(IncidentId)]; } set { this[nameof(IncidentId)] = value; } }
        public Object IncidentArgs1 { get { return this[nameof(IncidentArgs1)]; } set { this[nameof(IncidentArgs1)] = value; } }
        public Object IncidentArgs2 { get { return this[nameof(IncidentArgs2)]; } set { this[nameof(IncidentArgs2)] = value; } }
    }
    public class PalNPCOneTalkRow : TableRowBase
    {
        public PalNPCOneTalkRow(nint addr) : base(addr) { }
        public DataTable OneTalkData { get { return this[nameof(OneTalkData)].As<DataTable>(); } set { this["OneTalkData"] = value; } }
    }
    public class PalNPCMultiTalkRow : TableRowBase
    {
        public PalNPCMultiTalkRow(nint addr) : base(addr) { }
        public Object MultiTalkHandleClass { get { return this[nameof(MultiTalkHandleClass)]; } set { this[nameof(MultiTalkHandleClass)] = value; } }
    }
    public class PalNPCTalkSelectedChoiceCommandData : Object
    {
        public PalNPCTalkSelectedChoiceCommandData(nint addr) : base(addr) { }
        public EPalNPCTalkSelectedChoiceCommand selectedChoiceCommand { get { return (EPalNPCTalkSelectedChoiceCommand)this[nameof(selectedChoiceCommand)].GetValue<int>(); } set { this[nameof(selectedChoiceCommand)].SetValue<int>((int)value); } }
        public Object SeqenceName { get { return this[nameof(SeqenceName)]; } set { this[nameof(SeqenceName)] = value; } }
        public Object CustomFuncName { get { return this[nameof(CustomFuncName)]; } set { this[nameof(CustomFuncName)] = value; } }
        public bool isCloseWhenCalledCustomFunc { get { return this[nameof(isCloseWhenCalledCustomFunc)].Flag; } set { this[nameof(isCloseWhenCalledCustomFunc)].Flag = value; } }
        public DataTable CustomFuncParam { get { return this[nameof(CustomFuncParam)].As<DataTable>(); } set { this["CustomFuncParam"] = value; } }
    }
    public class PalNPCTalkData : Object
    {
        public PalNPCTalkData(nint addr) : base(addr) { }
        public EPalNPCTalkCommand TalkCommand { get { return (EPalNPCTalkCommand)this[nameof(TalkCommand)].GetValue<int>(); } set { this[nameof(TalkCommand)].SetValue<int>((int)value); } }
        public Array<Object> MessageIDList { get { return new Array<Object>(this[nameof(MessageIDList)].Address); } }
        public Array<Object> ChoiceMessageIDList { get { return new Array<Object>(this[nameof(ChoiceMessageIDList)].Address); } }
        public Object TalkerNameID { get { return this[nameof(TalkerNameID)]; } set { this[nameof(TalkerNameID)] = value; } }
        public Object CustomFuncName { get { return this[nameof(CustomFuncName)]; } set { this[nameof(CustomFuncName)] = value; } }
        public bool isCloseWhenCalledCustomFunc { get { return this[nameof(isCloseWhenCalledCustomFunc)].Flag; } set { this[nameof(isCloseWhenCalledCustomFunc)].Flag = value; } }
        public DataTable CustomFuncParam { get { return this[nameof(CustomFuncParam)].As<DataTable>(); } set { this["CustomFuncParam"] = value; } }
        public Array<PalNPCTalkSelectedChoiceCommandData> SelectedChoiceCommandDataList { get { return new Array<PalNPCTalkSelectedChoiceCommandData>(this[nameof(SelectedChoiceCommandDataList)].Address); } }
    }
    public class PalNPCTalkDataTableRow : TableRowBase
    {
        public PalNPCTalkDataTableRow(nint addr) : base(addr) { }
        public Array<PalNPCTalkData> TalkData { get { return new Array<PalNPCTalkData>(this[nameof(TalkData)].Address); } }
    }
    public class PalNPCTalkSystemCustomFunctionParameters : Object
    {
        public PalNPCTalkSystemCustomFunctionParameters(nint addr) : base(addr) { }
        public Object Interface { get { return this[nameof(Interface)]; } set { this[nameof(Interface)] = value; } }
        public DataTable FuncParameter { get { return this[nameof(FuncParameter)].As<DataTable>(); } set { this["FuncParameter"] = value; } }
    }
    public class PalUniqueNPCDatabaseRow : TableRowBase
    {
        public PalUniqueNPCDatabaseRow(nint addr) : base(addr) { }
        public Object CharacterID { get { return this[nameof(CharacterID)]; } set { this[nameof(CharacterID)] = value; } }
        public Object NameTextID { get { return this[nameof(NameTextID)]; } set { this[nameof(NameTextID)] = value; } }
        public Object OneTalkDTName { get { return this[nameof(OneTalkDTName)]; } set { this[nameof(OneTalkDTName)] = value; } }
        public Object TalkBPClass { get { return this[nameof(TalkBPClass)]; } set { this[nameof(TalkBPClass)] = value; } }
        public EPalGenderType Gender { get { return (EPalGenderType)this[nameof(Gender)].GetValue<int>(); } set { this[nameof(Gender)].SetValue<int>((int)value); } }
        public EPalNPCSkinColor SkinColor { get { return (EPalNPCSkinColor)this[nameof(SkinColor)].GetValue<int>(); } set { this[nameof(SkinColor)].SetValue<int>((int)value); } }
        public EPalNPCFaceType Face { get { return (EPalNPCFaceType)this[nameof(Face)].GetValue<int>(); } set { this[nameof(Face)].SetValue<int>((int)value); } }
        public EPalNPCHairStyleType HairStyle { get { return (EPalNPCHairStyleType)this[nameof(HairStyle)].GetValue<int>(); } set { this[nameof(HairStyle)].SetValue<int>((int)value); } }
        public EPalNPCHairColorType HairColor { get { return (EPalNPCHairColorType)this[nameof(HairColor)].GetValue<int>(); } set { this[nameof(HairColor)].SetValue<int>((int)value); } }
        public EPalNPCClothesType Clothes { get { return (EPalNPCClothesType)this[nameof(Clothes)].GetValue<int>(); } set { this[nameof(Clothes)].SetValue<int>((int)value); } }
        public EPalNPCScaleType Scale { get { return (EPalNPCScaleType)this[nameof(Scale)].GetValue<int>(); } set { this[nameof(Scale)].SetValue<int>((int)value); } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
    }
    public class PalObjectCollectorTickFunction : TickFunction
    {
        public PalObjectCollectorTickFunction(nint addr) : base(addr) { }
    }
    public class PalObjectCollectorCalcNearestCharacterTickFunction : TickFunction
    {
        public PalObjectCollectorCalcNearestCharacterTickFunction(nint addr) : base(addr) { }
    }
    public class PalOptimizeParameter : Object
    {
        public PalOptimizeParameter(nint addr) : base(addr) { }
        public int FoliageISMDistance_Meters { get { return this[nameof(FoliageISMDistance_Meters)].GetValue<int>(); } set { this[nameof(FoliageISMDistance_Meters)].SetValue<int>(value); } }
        public float TargetFPS { get { return this[nameof(TargetFPS)].GetValue<float>(); } set { this[nameof(TargetFPS)].SetValue<float>(value); } }
        public float MinFPS { get { return this[nameof(MinFPS)].GetValue<float>(); } set { this[nameof(MinFPS)].SetValue<float>(value); } }
        public float MaxFPS { get { return this[nameof(MaxFPS)].GetValue<float>(); } set { this[nameof(MaxFPS)].SetValue<float>(value); } }
        public int CharacterImportance_CheckNumberPerFrame { get { return this[nameof(CharacterImportance_CheckNumberPerFrame)].GetValue<int>(); } set { this[nameof(CharacterImportance_CheckNumberPerFrame)].SetValue<int>(value); } }
        public int CharacterImportance_NearestCount { get { return this[nameof(CharacterImportance_NearestCount)].GetValue<int>(); } set { this[nameof(CharacterImportance_NearestCount)].SetValue<int>(value); } }
        public float CharacterImportance_NearDistance { get { return this[nameof(CharacterImportance_NearDistance)].GetValue<float>(); } set { this[nameof(CharacterImportance_NearDistance)].SetValue<float>(value); } }
        public float CharacterImportance_FarDistance { get { return this[nameof(CharacterImportance_FarDistance)].GetValue<float>(); } set { this[nameof(CharacterImportance_FarDistance)].SetValue<float>(value); } }
        public float CharacterImportance_FarthestDistance { get { return this[nameof(CharacterImportance_FarthestDistance)].GetValue<float>(); } set { this[nameof(CharacterImportance_FarthestDistance)].SetValue<float>(value); } }
        public Object CharacterImportance_TickInterval_Actor { get { return this[nameof(CharacterImportance_TickInterval_Actor)]; } set { this[nameof(CharacterImportance_TickInterval_Actor)] = value; } }
        public Object CharacterImportance_TickInterval_Movement { get { return this[nameof(CharacterImportance_TickInterval_Movement)]; } set { this[nameof(CharacterImportance_TickInterval_Movement)] = value; } }
        public Object CharacterImportance_TickInterval_Mesh { get { return this[nameof(CharacterImportance_TickInterval_Mesh)]; } set { this[nameof(CharacterImportance_TickInterval_Mesh)] = value; } }
        public Object CharacterImportance_TickInterval_Action { get { return this[nameof(CharacterImportance_TickInterval_Action)]; } set { this[nameof(CharacterImportance_TickInterval_Action)] = value; } }
        public Object CharacterImportance_TickInterval_Status { get { return this[nameof(CharacterImportance_TickInterval_Status)]; } set { this[nameof(CharacterImportance_TickInterval_Status)] = value; } }
        public Object CharacterImportance_TickInterval_LookAt { get { return this[nameof(CharacterImportance_TickInterval_LookAt)]; } set { this[nameof(CharacterImportance_TickInterval_LookAt)] = value; } }
        public Object CharacterImportance_TickInterval_VisualEffect { get { return this[nameof(CharacterImportance_TickInterval_VisualEffect)]; } set { this[nameof(CharacterImportance_TickInterval_VisualEffect)] = value; } }
        public Object CharacterImportance_TickInterval_Shooter { get { return this[nameof(CharacterImportance_TickInterval_Shooter)]; } set { this[nameof(CharacterImportance_TickInterval_Shooter)] = value; } }
        public Object CharacterImportance_TickInterval_FlyMesh { get { return this[nameof(CharacterImportance_TickInterval_FlyMesh)]; } set { this[nameof(CharacterImportance_TickInterval_FlyMesh)] = value; } }
        public Object CharacterImportance_TickInterval_Controller { get { return this[nameof(CharacterImportance_TickInterval_Controller)]; } set { this[nameof(CharacterImportance_TickInterval_Controller)] = value; } }
        public Object CharacterImportance_TickInterval_AIAction { get { return this[nameof(CharacterImportance_TickInterval_AIAction)]; } set { this[nameof(CharacterImportance_TickInterval_AIAction)] = value; } }
        public Object CharacterImportance_TickInterval_AISensor { get { return this[nameof(CharacterImportance_TickInterval_AISensor)]; } set { this[nameof(CharacterImportance_TickInterval_AISensor)] = value; } }
        public Object CharacterImportance_TickInterval_PathFollowing { get { return this[nameof(CharacterImportance_TickInterval_PathFollowing)]; } set { this[nameof(CharacterImportance_TickInterval_PathFollowing)] = value; } }
        public float SpawnerImportance_NearDistance { get { return this[nameof(SpawnerImportance_NearDistance)].GetValue<float>(); } set { this[nameof(SpawnerImportance_NearDistance)].SetValue<float>(value); } }
        public float SpawnerImportance_FarDistance { get { return this[nameof(SpawnerImportance_FarDistance)].GetValue<float>(); } set { this[nameof(SpawnerImportance_FarDistance)].SetValue<float>(value); } }
        public Object SpawnerImportance_TickInterval_NPCSpawner { get { return this[nameof(SpawnerImportance_TickInterval_NPCSpawner)]; } set { this[nameof(SpawnerImportance_TickInterval_NPCSpawner)] = value; } }
    }
    public class PalOptionWorldPresetRow : TableRowBase
    {
        public PalOptionWorldPresetRow(nint addr) : base(addr) { }
        public EPalOptionWorldDifficulty Diffculty { get { return (EPalOptionWorldDifficulty)this[nameof(Diffculty)].GetValue<int>(); } set { this[nameof(Diffculty)].SetValue<int>((int)value); } }
        public float DayTimeSpeedRate { get { return this[nameof(DayTimeSpeedRate)].GetValue<float>(); } set { this[nameof(DayTimeSpeedRate)].SetValue<float>(value); } }
        public float NightTimeSpeedRate { get { return this[nameof(NightTimeSpeedRate)].GetValue<float>(); } set { this[nameof(NightTimeSpeedRate)].SetValue<float>(value); } }
        public float ExpRate { get { return this[nameof(ExpRate)].GetValue<float>(); } set { this[nameof(ExpRate)].SetValue<float>(value); } }
        public float PalCaptureRate { get { return this[nameof(PalCaptureRate)].GetValue<float>(); } set { this[nameof(PalCaptureRate)].SetValue<float>(value); } }
        public float PalSpawnNumRate { get { return this[nameof(PalSpawnNumRate)].GetValue<float>(); } set { this[nameof(PalSpawnNumRate)].SetValue<float>(value); } }
        public float PalDamageRateAttack { get { return this[nameof(PalDamageRateAttack)].GetValue<float>(); } set { this[nameof(PalDamageRateAttack)].SetValue<float>(value); } }
        public float PalDamageRateDefense { get { return this[nameof(PalDamageRateDefense)].GetValue<float>(); } set { this[nameof(PalDamageRateDefense)].SetValue<float>(value); } }
        public float PlayerDamageRateAttack { get { return this[nameof(PlayerDamageRateAttack)].GetValue<float>(); } set { this[nameof(PlayerDamageRateAttack)].SetValue<float>(value); } }
        public float PlayerDamageRateDefense { get { return this[nameof(PlayerDamageRateDefense)].GetValue<float>(); } set { this[nameof(PlayerDamageRateDefense)].SetValue<float>(value); } }
        public float PlayerStomachDecreaceRate { get { return this[nameof(PlayerStomachDecreaceRate)].GetValue<float>(); } set { this[nameof(PlayerStomachDecreaceRate)].SetValue<float>(value); } }
        public float PlayerStaminaDecreaceRate { get { return this[nameof(PlayerStaminaDecreaceRate)].GetValue<float>(); } set { this[nameof(PlayerStaminaDecreaceRate)].SetValue<float>(value); } }
        public float PlayerAutoHPRegeneRate { get { return this[nameof(PlayerAutoHPRegeneRate)].GetValue<float>(); } set { this[nameof(PlayerAutoHPRegeneRate)].SetValue<float>(value); } }
        public float PlayerAutoHpRegeneRateInSleep { get { return this[nameof(PlayerAutoHpRegeneRateInSleep)].GetValue<float>(); } set { this[nameof(PlayerAutoHpRegeneRateInSleep)].SetValue<float>(value); } }
        public float PalStomachDecreaceRate { get { return this[nameof(PalStomachDecreaceRate)].GetValue<float>(); } set { this[nameof(PalStomachDecreaceRate)].SetValue<float>(value); } }
        public float PalStaminaDecreaceRate { get { return this[nameof(PalStaminaDecreaceRate)].GetValue<float>(); } set { this[nameof(PalStaminaDecreaceRate)].SetValue<float>(value); } }
        public float PalAutoHPRegeneRate { get { return this[nameof(PalAutoHPRegeneRate)].GetValue<float>(); } set { this[nameof(PalAutoHPRegeneRate)].SetValue<float>(value); } }
        public float PalAutoHpRegeneRateInSleep { get { return this[nameof(PalAutoHpRegeneRateInSleep)].GetValue<float>(); } set { this[nameof(PalAutoHpRegeneRateInSleep)].SetValue<float>(value); } }
        public float BuildObjectDamageRate { get { return this[nameof(BuildObjectDamageRate)].GetValue<float>(); } set { this[nameof(BuildObjectDamageRate)].SetValue<float>(value); } }
        public float BuildObjectDeteriorationDamageRate { get { return this[nameof(BuildObjectDeteriorationDamageRate)].GetValue<float>(); } set { this[nameof(BuildObjectDeteriorationDamageRate)].SetValue<float>(value); } }
        public float CollectionDropRate { get { return this[nameof(CollectionDropRate)].GetValue<float>(); } set { this[nameof(CollectionDropRate)].SetValue<float>(value); } }
        public float CollectionObjectHpRate { get { return this[nameof(CollectionObjectHpRate)].GetValue<float>(); } set { this[nameof(CollectionObjectHpRate)].SetValue<float>(value); } }
        public float CollectionObjectRespawnSpeedRate { get { return this[nameof(CollectionObjectRespawnSpeedRate)].GetValue<float>(); } set { this[nameof(CollectionObjectRespawnSpeedRate)].SetValue<float>(value); } }
        public float EnemyDropItemRate { get { return this[nameof(EnemyDropItemRate)].GetValue<float>(); } set { this[nameof(EnemyDropItemRate)].SetValue<float>(value); } }
        public EPalOptionWorldDeathPenalty DeathPenalty { get { return (EPalOptionWorldDeathPenalty)this[nameof(DeathPenalty)].GetValue<int>(); } set { this[nameof(DeathPenalty)].SetValue<int>((int)value); } }
        public bool bActiveUNKO { get { return this[nameof(bActiveUNKO)].Flag; } set { this[nameof(bActiveUNKO)].Flag = value; } }
        public int DropItemMaxNum_UNKO { get { return this[nameof(DropItemMaxNum_UNKO)].GetValue<int>(); } set { this[nameof(DropItemMaxNum_UNKO)].SetValue<int>(value); } }
        public bool bEnableInvaderEnemy { get { return this[nameof(bEnableInvaderEnemy)].Flag; } set { this[nameof(bEnableInvaderEnemy)].Flag = value; } }
        public int DropItemMaxNum { get { return this[nameof(DropItemMaxNum)].GetValue<int>(); } set { this[nameof(DropItemMaxNum)].SetValue<int>(value); } }
        public bool bAutoResetGuildNoOnlinePlayers { get { return this[nameof(bAutoResetGuildNoOnlinePlayers)].Flag; } set { this[nameof(bAutoResetGuildNoOnlinePlayers)].Flag = value; } }
        public float AutoResetGuildTimeNoOnlinePlayers { get { return this[nameof(AutoResetGuildTimeNoOnlinePlayers)].GetValue<float>(); } set { this[nameof(AutoResetGuildTimeNoOnlinePlayers)].SetValue<float>(value); } }
        public int GuildPlayerMaxNum { get { return this[nameof(GuildPlayerMaxNum)].GetValue<int>(); } set { this[nameof(GuildPlayerMaxNum)].SetValue<int>(value); } }
        public float PalEggDefaultHatchingTime { get { return this[nameof(PalEggDefaultHatchingTime)].GetValue<float>(); } set { this[nameof(PalEggDefaultHatchingTime)].SetValue<float>(value); } }
        public int BaseCampWorkerMaxNum { get { return this[nameof(BaseCampWorkerMaxNum)].GetValue<int>(); } set { this[nameof(BaseCampWorkerMaxNum)].SetValue<int>(value); } }
    }
    public class PalOptionWorldModePresetRow : TableRowBase
    {
        public PalOptionWorldModePresetRow(nint addr) : base(addr) { }
        public EPalOptionWorldMode WorldMode { get { return (EPalOptionWorldMode)this[nameof(WorldMode)].GetValue<int>(); } set { this[nameof(WorldMode)].SetValue<int>((int)value); } }
        public bool bEnablePlayerToPlayerDamage { get { return this[nameof(bEnablePlayerToPlayerDamage)].Flag; } set { this[nameof(bEnablePlayerToPlayerDamage)].Flag = value; } }
        public bool bCanPickupOtherGuildDeathPenaltyDrop { get { return this[nameof(bCanPickupOtherGuildDeathPenaltyDrop)].Flag; } set { this[nameof(bCanPickupOtherGuildDeathPenaltyDrop)].Flag = value; } }
        public bool bEnableNonLoginPenalty { get { return this[nameof(bEnableNonLoginPenalty)].Flag; } set { this[nameof(bEnableNonLoginPenalty)].Flag = value; } }
        public bool bEnableFastTravel { get { return this[nameof(bEnableFastTravel)].Flag; } set { this[nameof(bEnableFastTravel)].Flag = value; } }
        public bool bIsStartLocationSelectByMap { get { return this[nameof(bIsStartLocationSelectByMap)].Flag; } set { this[nameof(bIsStartLocationSelectByMap)].Flag = value; } }
        public bool bExistPlayerAfterLogout { get { return this[nameof(bExistPlayerAfterLogout)].Flag; } set { this[nameof(bExistPlayerAfterLogout)].Flag = value; } }
        public bool bEnableDefenseOtherGuildPlayer { get { return this[nameof(bEnableDefenseOtherGuildPlayer)].Flag; } set { this[nameof(bEnableDefenseOtherGuildPlayer)].Flag = value; } }
    }
    public class PalOptionGraphicsPresetRow : TableRowBase
    {
        public PalOptionGraphicsPresetRow(nint addr) : base(addr) { }
        public EPalOptionGraphicsLevel GraphicsLevel { get { return (EPalOptionGraphicsLevel)this[nameof(GraphicsLevel)].GetValue<int>(); } set { this[nameof(GraphicsLevel)].SetValue<int>((int)value); } }
        public byte AntiAliasingType { get { return this[nameof(AntiAliasingType)].GetValue<byte>(); } set { this[nameof(AntiAliasingType)].SetValue<byte>(value); } }
        public int CommonQuality { get { return this[nameof(CommonQuality)].GetValue<int>(); } set { this[nameof(CommonQuality)].SetValue<int>(value); } }
        public int ViewDistanceQuality { get { return this[nameof(ViewDistanceQuality)].GetValue<int>(); } set { this[nameof(ViewDistanceQuality)].SetValue<int>(value); } }
        public int FoliageQuality { get { return this[nameof(FoliageQuality)].GetValue<int>(); } set { this[nameof(FoliageQuality)].SetValue<int>(value); } }
        public int ShadowQuality { get { return this[nameof(ShadowQuality)].GetValue<int>(); } set { this[nameof(ShadowQuality)].SetValue<int>(value); } }
        public int TextureQuality { get { return this[nameof(TextureQuality)].GetValue<int>(); } set { this[nameof(TextureQuality)].SetValue<int>(value); } }
    }
    public class PalOptionSaveData : Object
    {
        public PalOptionSaveData(nint addr) : base(addr) { }
        public PalOptionKeyboardSettings KeyboardSettings { get { return this[nameof(KeyboardSettings)].As<PalOptionKeyboardSettings>(); } set { this["KeyboardSettings"] = value; } }
        public PalOptionPadSettings PadSettings { get { return this[nameof(PadSettings)].As<PalOptionPadSettings>(); } set { this["PadSettings"] = value; } }
        public PalKeyConfigSettings KeyConfigSettings { get { return this[nameof(KeyConfigSettings)].As<PalKeyConfigSettings>(); } set { this["KeyConfigSettings"] = value; } }
        public PalOptionCommonSettings CommonSettings { get { return this[nameof(CommonSettings)].As<PalOptionCommonSettings>(); } set { this["CommonSettings"] = value; } }
        public PalOptionGraphicsSettings GraphicsSettings { get { return this[nameof(GraphicsSettings)].As<PalOptionGraphicsSettings>(); } set { this["GraphicsSettings"] = value; } }
        public PalOptionAudioSettings AudioSettings { get { return this[nameof(AudioSettings)].As<PalOptionAudioSettings>(); } set { this["AudioSettings"] = value; } }
        public bool bHasAppliedUserSetting { get { return this[nameof(bHasAppliedUserSetting)].Flag; } set { this[nameof(bHasAppliedUserSetting)].Flag = value; } }
    }
    public class PalPartnerSkillDatabaseRow : TableRowBase
    {
        public PalPartnerSkillDatabaseRow(nint addr) : base(addr) { }
        public Object DevName { get { return this[nameof(DevName)]; } set { this[nameof(DevName)] = value; } }
        public float effectTime { get { return this[nameof(effectTime)].GetValue<float>(); } set { this[nameof(effectTime)].SetValue<float>(value); } }
        public float CoolDownTime { get { return this[nameof(CoolDownTime)].GetValue<float>(); } set { this[nameof(CoolDownTime)].SetValue<float>(value); } }
        public float ExecCost { get { return this[nameof(ExecCost)].GetValue<float>(); } set { this[nameof(ExecCost)].SetValue<float>(value); } }
        public float IdleCost { get { return this[nameof(IdleCost)].GetValue<float>(); } set { this[nameof(IdleCost)].SetValue<float>(value); } }
        public bool CanThrowPal { get { return this[nameof(CanThrowPal)].Flag; } set { this[nameof(CanThrowPal)].Flag = value; } }
        public bool CanChangeWeapon { get { return this[nameof(CanChangeWeapon)].Flag; } set { this[nameof(CanChangeWeapon)].Flag = value; } }
        public bool IsToggleKey { get { return this[nameof(IsToggleKey)].Flag; } set { this[nameof(IsToggleKey)].Flag = value; } }
    }
    public class PalPassivePartnerSkillFindOtomoParameter : Object
    {
        public PalPassivePartnerSkillFindOtomoParameter(nint addr) : base(addr) { }
        public EPalElementType TargetElementType { get { return (EPalElementType)this[nameof(TargetElementType)].GetValue<int>(); } set { this[nameof(TargetElementType)].SetValue<int>((int)value); } }
        public Array<PalDataTableRowName_PalMonsterData> TargetPalIds { get { return new Array<PalDataTableRowName_PalMonsterData>(this[nameof(TargetPalIds)].Address); } }
    }
    public class PalPartnerSkillParameterQueryFunction : Object
    {
        public PalPartnerSkillParameterQueryFunction(nint addr) : base(addr) { }
    }
    public class PalPassiveSkillSetupInfo : Object
    {
        public PalPassiveSkillSetupInfo(nint addr) : base(addr) { }
        public Object SkillName { get { return this[nameof(SkillName)]; } set { this[nameof(SkillName)] = value; } }
        public Array<Object> Flags { get { return new Array<Object>(this[nameof(Flags)].Address); } }
    }
    public class PalPassiveSkillDatabaseRow : TableRowBase
    {
        public PalPassiveSkillDatabaseRow(nint addr) : base(addr) { }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public Object OverrideDescMsgID { get { return this[nameof(OverrideDescMsgID)]; } set { this[nameof(OverrideDescMsgID)] = value; } }
        public EPalPassiveSkillEffectType EffectType1 { get { return (EPalPassiveSkillEffectType)this[nameof(EffectType1)].GetValue<int>(); } set { this[nameof(EffectType1)].SetValue<int>((int)value); } }
        public float EffectValue1 { get { return this[nameof(EffectValue1)].GetValue<float>(); } set { this[nameof(EffectValue1)].SetValue<float>(value); } }
        public EPalPassiveSkillEffectTargetType TargetType1 { get { return (EPalPassiveSkillEffectTargetType)this[nameof(TargetType1)].GetValue<int>(); } set { this[nameof(TargetType1)].SetValue<int>((int)value); } }
        public EPalPassiveSkillEffectType EffectType2 { get { return (EPalPassiveSkillEffectType)this[nameof(EffectType2)].GetValue<int>(); } set { this[nameof(EffectType2)].SetValue<int>((int)value); } }
        public float EffectValue2 { get { return this[nameof(EffectValue2)].GetValue<float>(); } set { this[nameof(EffectValue2)].SetValue<float>(value); } }
        public EPalPassiveSkillEffectTargetType TargetType2 { get { return (EPalPassiveSkillEffectTargetType)this[nameof(TargetType2)].GetValue<int>(); } set { this[nameof(TargetType2)].SetValue<int>((int)value); } }
        public EPalPassiveSkillEffectType EffectType3 { get { return (EPalPassiveSkillEffectType)this[nameof(EffectType3)].GetValue<int>(); } set { this[nameof(EffectType3)].SetValue<int>((int)value); } }
        public float EffectValue3 { get { return this[nameof(EffectValue3)].GetValue<float>(); } set { this[nameof(EffectValue3)].SetValue<float>(value); } }
        public EPalPassiveSkillEffectTargetType TargetType3 { get { return (EPalPassiveSkillEffectTargetType)this[nameof(TargetType3)].GetValue<int>(); } set { this[nameof(TargetType3)].SetValue<int>((int)value); } }
        public bool InvokeActiveOtomo { get { return this[nameof(InvokeActiveOtomo)].Flag; } set { this[nameof(InvokeActiveOtomo)].Flag = value; } }
        public bool InvokeWorker { get { return this[nameof(InvokeWorker)].Flag; } set { this[nameof(InvokeWorker)].Flag = value; } }
        public bool InvokeRiding { get { return this[nameof(InvokeRiding)].Flag; } set { this[nameof(InvokeRiding)].Flag = value; } }
        public bool InvokeReserve { get { return this[nameof(InvokeReserve)].Flag; } set { this[nameof(InvokeReserve)].Flag = value; } }
        public bool InvokeInOtomo { get { return this[nameof(InvokeInOtomo)].Flag; } set { this[nameof(InvokeInOtomo)].Flag = value; } }
        public bool InvokeAlways { get { return this[nameof(InvokeAlways)].Flag; } set { this[nameof(InvokeAlways)].Flag = value; } }
        public bool AddPal { get { return this[nameof(AddPal)].Flag; } set { this[nameof(AddPal)].Flag = value; } }
        public bool AddRarePal { get { return this[nameof(AddRarePal)].Flag; } set { this[nameof(AddRarePal)].Flag = value; } }
        public bool AddShotWeapon { get { return this[nameof(AddShotWeapon)].Flag; } set { this[nameof(AddShotWeapon)].Flag = value; } }
        public bool AddMeleeWeapon { get { return this[nameof(AddMeleeWeapon)].Flag; } set { this[nameof(AddMeleeWeapon)].Flag = value; } }
        public bool AddArmor { get { return this[nameof(AddArmor)].Flag; } set { this[nameof(AddArmor)].Flag = value; } }
        public bool AddAccessory { get { return this[nameof(AddAccessory)].Flag; } set { this[nameof(AddAccessory)].Flag = value; } }
        public Object OverrideNameTextID { get { return this[nameof(OverrideNameTextID)]; } set { this[nameof(OverrideNameTextID)] = value; } }
        public Object OverrideSummaryTextId { get { return this[nameof(OverrideSummaryTextId)]; } set { this[nameof(OverrideSummaryTextId)] = value; } }
    }
    public class PalPettingParameter : Object
    {
        public PalPettingParameter(nint addr) : base(addr) { }
        public float CameraCenterDistance { get { return this[nameof(CameraCenterDistance)].GetValue<float>(); } set { this[nameof(CameraCenterDistance)].SetValue<float>(value); } }
        public float CameraHeight { get { return this[nameof(CameraHeight)].GetValue<float>(); } set { this[nameof(CameraHeight)].SetValue<float>(value); } }
        public float CameraArmLength { get { return this[nameof(CameraArmLength)].GetValue<float>(); } set { this[nameof(CameraArmLength)].SetValue<float>(value); } }
    }
    public class PalPlayerDamageCameraShakeData : TableRowBase
    {
        public PalPlayerDamageCameraShakeData(nint addr) : base(addr) { }
        public EPalPlayerDamageCameraShakeCategory Category { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(Category)].GetValue<int>(); } set { this[nameof(Category)].SetValue<int>((int)value); } }
        public float Scale_Min { get { return this[nameof(Scale_Min)].GetValue<float>(); } set { this[nameof(Scale_Min)].SetValue<float>(value); } }
        public float Scale_Default { get { return this[nameof(Scale_Default)].GetValue<float>(); } set { this[nameof(Scale_Default)].SetValue<float>(value); } }
        public float Scale_Max { get { return this[nameof(Scale_Max)].GetValue<float>(); } set { this[nameof(Scale_Max)].SetValue<float>(value); } }
        public int HPRate_Min { get { return this[nameof(HPRate_Min)].GetValue<int>(); } set { this[nameof(HPRate_Min)].SetValue<int>(value); } }
        public int HPRate_Default { get { return this[nameof(HPRate_Default)].GetValue<int>(); } set { this[nameof(HPRate_Default)].SetValue<int>(value); } }
        public int HPRate_Max { get { return this[nameof(HPRate_Max)].GetValue<int>(); } set { this[nameof(HPRate_Max)].SetValue<int>(value); } }
    }
    public class PalCharacterCreationMakeInfoPresetDataRow : TableRowBase
    {
        public PalCharacterCreationMakeInfoPresetDataRow(nint addr) : base(addr) { }
        public PalPlayerDataCharacterMakeInfo PresetMakeInfo { get { return this[nameof(PresetMakeInfo)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["PresetMakeInfo"] = value; } }
    }
    public class PalCharacterCreationMeshPresetDataRow : TableRowBase
    {
        public PalCharacterCreationMeshPresetDataRow(nint addr) : base(addr) { }
        public Object SkeletalMesh { get { return this[nameof(SkeletalMesh)]; } set { this[nameof(SkeletalMesh)] = value; } }
        public Object SkeletalMesh_MaleHead { get { return this[nameof(SkeletalMesh_MaleHead)]; } set { this[nameof(SkeletalMesh_MaleHead)] = value; } }
        public Object IconTexture { get { return this[nameof(IconTexture)]; } set { this[nameof(IconTexture)] = value; } }
        public Object ABPAsset { get { return this[nameof(ABPAsset)]; } set { this[nameof(ABPAsset)] = value; } }
        public LinearColor ShiftUIDisplayEyeColor { get { return this[nameof(ShiftUIDisplayEyeColor)].As<LinearColor>(); } set { this["ShiftUIDisplayEyeColor"] = value; } }
        public LinearColor ShiftUIDisplayBodyColor { get { return this[nameof(ShiftUIDisplayBodyColor)].As<LinearColor>(); } set { this["ShiftUIDisplayBodyColor"] = value; } }
        public LinearColor ShiftUIDisplayBrowColor { get { return this[nameof(ShiftUIDisplayBrowColor)].As<LinearColor>(); } set { this["ShiftUIDisplayBrowColor"] = value; } }
        public LinearColor ShiftUIDisplayHairColor { get { return this[nameof(ShiftUIDisplayHairColor)].As<LinearColor>(); } set { this["ShiftUIDisplayHairColor"] = value; } }
    }
    public class PalCharacterCreationEyeMaterialDataRow : TableRowBase
    {
        public PalCharacterCreationEyeMaterialDataRow(nint addr) : base(addr) { }
        public Object EyeMaterialInstance { get { return this[nameof(EyeMaterialInstance)]; } set { this[nameof(EyeMaterialInstance)] = value; } }
        public Object IconTexture { get { return this[nameof(IconTexture)]; } set { this[nameof(IconTexture)] = value; } }
        public LinearColor ShiftUIDisplayEyeColor { get { return this[nameof(ShiftUIDisplayEyeColor)].As<LinearColor>(); } set { this["ShiftUIDisplayEyeColor"] = value; } }
    }
    public class PalPlayerEquipmentMeshDataRow : TableRowBase
    {
        public PalPlayerEquipmentMeshDataRow(nint addr) : base(addr) { }
        public Object SkeletalMeshMap { get { return this[nameof(SkeletalMeshMap)]; } set { this[nameof(SkeletalMeshMap)] = value; } }
        public Object ABPAssetMap { get { return this[nameof(ABPAssetMap)]; } set { this[nameof(ABPAssetMap)] = value; } }
        public bool IsHairAttachAccessory { get { return this[nameof(IsHairAttachAccessory)].Flag; } set { this[nameof(IsHairAttachAccessory)].Flag = value; } }
        public Object HairAttachSocketNameMap { get { return this[nameof(HairAttachSocketNameMap)]; } set { this[nameof(HairAttachSocketNameMap)] = value; } }
    }
    public class PalCharacterCreationColorPresetDataRow : TableRowBase
    {
        public PalCharacterCreationColorPresetDataRow(nint addr) : base(addr) { }
        public Array<LinearColor> Colors { get { return new Array<LinearColor>(this[nameof(Colors)].Address); } }
    }
    public class PalCharacterCreationPresetDataRow : TableRowBase
    {
        public PalCharacterCreationPresetDataRow(nint addr) : base(addr) { }
        public PalPlayerDataCharacterMakeInfo MakeInfo { get { return this[nameof(MakeInfo)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["MakeInfo"] = value; } }
        public Object IconTexture { get { return this[nameof(IconTexture)]; } set { this[nameof(IconTexture)] = value; } }
    }
    public class PalPlayerDataPalStorageSlotSaveData : Object
    {
        public PalPlayerDataPalStorageSlotSaveData(nint addr) : base(addr) { }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public PalIndividualCharacterSaveParameter CharacterSaveParameter { get { return this[nameof(CharacterSaveParameter)].As<PalIndividualCharacterSaveParameter>(); } set { this["CharacterSaveParameter"] = value; } }
        public PalCharacterSlotId SlotID { get { return this[nameof(SlotID)].As<PalCharacterSlotId>(); } set { this["SlotID"] = value; } }
    }
    public class PlayerGenderParams : Object
    {
        public PlayerGenderParams(nint addr) : base(addr) { }
        public Object DefaultWeaponAnimeAssetBPSoftClassMap { get { return this[nameof(DefaultWeaponAnimeAssetBPSoftClassMap)]; } set { this[nameof(DefaultWeaponAnimeAssetBPSoftClassMap)] = value; } }
        public Object OtherWeaponAnimeAssetBPSoftClassMap { get { return this[nameof(OtherWeaponAnimeAssetBPSoftClassMap)]; } set { this[nameof(OtherWeaponAnimeAssetBPSoftClassMap)] = value; } }
        public float ClavicleAdjustDegree { get { return this[nameof(ClavicleAdjustDegree)].GetValue<float>(); } set { this[nameof(ClavicleAdjustDegree)].SetValue<float>(value); } }
    }
    public class PalPlayerRecordCountMapStruct : Object
    {
        public PalPlayerRecordCountMapStruct(nint addr) : base(addr) { }
        public Object countMap { get { return this[nameof(countMap)]; } set { this[nameof(countMap)] = value; } }
    }
    public class PalPlayerRecordFlagMapStruct : Object
    {
        public PalPlayerRecordFlagMapStruct(nint addr) : base(addr) { }
        public Object flagMap { get { return this[nameof(flagMap)]; } set { this[nameof(flagMap)] = value; } }
    }
    public class PalPlayerRecordDataStruct : Object
    {
        public PalPlayerRecordDataStruct(nint addr) : base(addr) { }
        public Object simpleCountRecordMap { get { return this[nameof(simpleCountRecordMap)]; } set { this[nameof(simpleCountRecordMap)] = value; } }
        public Object simpleFlagMap { get { return this[nameof(simpleFlagMap)]; } set { this[nameof(simpleFlagMap)] = value; } }
        public Object countMapRecordMap { get { return this[nameof(countMapRecordMap)]; } set { this[nameof(countMapRecordMap)] = value; } }
        public Object flagMapRecordMap { get { return this[nameof(flagMapRecordMap)]; } set { this[nameof(flagMapRecordMap)] = value; } }
    }
    public class PalWaitLoadingWorldPartitionParameter : Object
    {
        public PalWaitLoadingWorldPartitionParameter(nint addr) : base(addr) { }
        public WorldPartitionStreamingQuerySource QuerySource { get { return this[nameof(QuerySource)].As<WorldPartitionStreamingQuerySource>(); } set { this["QuerySource"] = value; } }
        public EWorldPartitionRuntimeCellState CellState { get { return (EWorldPartitionRuntimeCellState)this[nameof(CellState)].GetValue<int>(); } set { this[nameof(CellState)].SetValue<int>((int)value); } }
        public float IntervalTime { get { return this[nameof(IntervalTime)].GetValue<float>(); } set { this[nameof(IntervalTime)].SetValue<float>(value); } }
        public float InFirstDelayTime { get { return this[nameof(InFirstDelayTime)].GetValue<float>(); } set { this[nameof(InFirstDelayTime)].SetValue<float>(value); } }
    }
    public class PalQuestDataSetRow : TableRowBase
    {
        public PalQuestDataSetRow(nint addr) : base(addr) { }
        public Object QuestData { get { return this[nameof(QuestData)]; } set { this[nameof(QuestData)] = value; } }
    }
    public class PalRandomIncidentSpawnIncidentParameter : Object
    {
        public PalRandomIncidentSpawnIncidentParameter(nint addr) : base(addr) { }
        public Object IncidentId { get { return this[nameof(IncidentId)]; } set { this[nameof(IncidentId)] = value; } }
        public Object SettingName { get { return this[nameof(SettingName)]; } set { this[nameof(SettingName)] = value; } }
        public int LotteryRate { get { return this[nameof(LotteryRate)].GetValue<int>(); } set { this[nameof(LotteryRate)].SetValue<int>(value); } }
    }
    public class PalRandomIncidentSettings : TableRowBase
    {
        public PalRandomIncidentSettings(nint addr) : base(addr) { }
        public DataTable MonsterSpawnData { get { return this[nameof(MonsterSpawnData)].As<DataTable>(); } set { this["MonsterSpawnData"] = value; } }
        public DataTable NPCSpawnData { get { return this[nameof(NPCSpawnData)].As<DataTable>(); } set { this["NPCSpawnData"] = value; } }
        public bool ExcludeOtherPal { get { return this[nameof(ExcludeOtherPal)].Flag; } set { this[nameof(ExcludeOtherPal)].Flag = value; } }
        public Object action { get { return this[nameof(action)]; } set { this[nameof(action)] = value; } }
    }
    public class PalRandomIncidentWalkPathReferenceData : Object
    {
        public PalRandomIncidentWalkPathReferenceData(nint addr) : base(addr) { }
        public Array<Actor> WalkPoints { get { return new Array<Actor>(this[nameof(WalkPoints)].Address); } }
    }
    public class PalRandomIncidentSpawnLocationData : TableRowBase
    {
        public PalRandomIncidentSpawnLocationData(nint addr) : base(addr) { }
        public Vector2D Location { get { return this[nameof(Location)].As<Vector2D>(); } set { this["Location"] = value; } }
    }
    public class PalRandomIncidentSpawnMonsterOutbreakData : TableRowBase
    {
        public PalRandomIncidentSpawnMonsterOutbreakData(nint addr) : base(addr) { }
        public PalDataTableRowName_PalMonsterData CharacterID { get { return this[nameof(CharacterID)].As<PalDataTableRowName_PalMonsterData>(); } set { this["CharacterID"] = value; } }
        public int Num { get { return this[nameof(Num)].GetValue<int>(); } set { this[nameof(Num)].SetValue<int>(value); } }
        public int LevelMin { get { return this[nameof(LevelMin)].GetValue<int>(); } set { this[nameof(LevelMin)].SetValue<int>(value); } }
        public int LevelMax { get { return this[nameof(LevelMax)].GetValue<int>(); } set { this[nameof(LevelMax)].SetValue<int>(value); } }
        public int Group { get { return this[nameof(Group)].GetValue<int>(); } set { this[nameof(Group)].SetValue<int>(value); } }
        public bool IsSquad { get { return this[nameof(IsSquad)].Flag; } set { this[nameof(IsSquad)].Flag = value; } }
        public DataTable LocationTable { get { return this[nameof(LocationTable)].As<DataTable>(); } set { this["LocationTable"] = value; } }
        public Object ControllerClass { get { return this[nameof(ControllerClass)]; } set { this[nameof(ControllerClass)] = value; } }
        public Object DefaultActionClass { get { return this[nameof(DefaultActionClass)]; } set { this[nameof(DefaultActionClass)] = value; } }
    }
    public class PalWorkAssignSaveData : PalBinaryMemory
    {
        public PalWorkAssignSaveData(nint addr) : base(addr) { }
    }
    public class PalWorkSaveData : PalBinaryMemory
    {
        public PalWorkSaveData(nint addr) : base(addr) { }
        public EPalWorkableType WorkableType { get { return (EPalWorkableType)this[nameof(WorkableType)].GetValue<int>(); } set { this[nameof(WorkableType)].SetValue<int>((int)value); } }
        public Object WorkAssignMap { get { return this[nameof(WorkAssignMap)]; } set { this[nameof(WorkAssignMap)] = value; } }
    }
    public class PalBaseCampSaveData_WorkerDirector : PalBinaryMemory
    {
        public PalBaseCampSaveData_WorkerDirector(nint addr) : base(addr) { }
    }
    public class PalBaseCampSaveData_WorkCollection : PalBinaryMemory
    {
        public PalBaseCampSaveData_WorkCollection(nint addr) : base(addr) { }
    }
    public class PalBaseCampSaveData_Module : PalBinaryMemory
    {
        public PalBaseCampSaveData_Module(nint addr) : base(addr) { }
    }
    public class PalBaseCampSaveData_Module_PassiveEffect : PalBinaryMemory
    {
        public PalBaseCampSaveData_Module_PassiveEffect(nint addr) : base(addr) { }
    }
    public class PalBaseCampSaveData : PalBinaryMemory
    {
        public PalBaseCampSaveData(nint addr) : base(addr) { }
        public PalBaseCampSaveData_WorkerDirector WorkerDirector { get { return this[nameof(WorkerDirector)].As<PalBaseCampSaveData_WorkerDirector>(); } set { this["WorkerDirector"] = value; } }
        public PalBaseCampSaveData_WorkCollection WorkCollection { get { return this[nameof(WorkCollection)].As<PalBaseCampSaveData_WorkCollection>(); } set { this["WorkCollection"] = value; } }
        public Object ModuleMap { get { return this[nameof(ModuleMap)]; } set { this[nameof(ModuleMap)] = value; } }
    }
    public class PalIndividualCharacterSaveParameterSaveData : PalBinaryMemory
    {
        public PalIndividualCharacterSaveParameterSaveData(nint addr) : base(addr) { }
    }
    public class PalFoliageInstanceSaveData : PalBinaryMemory
    {
        public PalFoliageInstanceSaveData(nint addr) : base(addr) { }
    }
    public class PalFoliageSaveData : PalBinaryMemory
    {
        public PalFoliageSaveData(nint addr) : base(addr) { }
        public Object InstanceDataMap { get { return this[nameof(InstanceDataMap)]; } set { this[nameof(InstanceDataMap)] = value; } }
    }
    public class PalFoliageGridSaveData : Object
    {
        public PalFoliageGridSaveData(nint addr) : base(addr) { }
        public Object ModelMap { get { return this[nameof(ModelMap)]; } set { this[nameof(ModelMap)] = value; } }
    }
    public class PalMapObjectSpawnerItemSaveData : Object
    {
        public PalMapObjectSpawnerItemSaveData(nint addr) : base(addr) { }
        public long NextLotteryGameTime { get { return this[nameof(NextLotteryGameTime)].GetValue<long>(); } set { this[nameof(NextLotteryGameTime)].SetValue<long>(value); } }
        public Guid MapObjectInstanceId { get { return this[nameof(MapObjectInstanceId)].As<Guid>(); } set { this["MapObjectInstanceId"] = value; } }
    }
    public class PalMapObjectSpawnerSaveData : Object
    {
        public PalMapObjectSpawnerSaveData(nint addr) : base(addr) { }
        public Object ItemMap { get { return this[nameof(ItemMap)]; } set { this[nameof(ItemMap)] = value; } }
    }
    public class PalMapObjectSpawnerInStageSaveData : Object
    {
        public PalMapObjectSpawnerInStageSaveData(nint addr) : base(addr) { }
        public Object SpawnerDataMapByLevelObjectInstanceId { get { return this[nameof(SpawnerDataMapByLevelObjectInstanceId)]; } set { this[nameof(SpawnerDataMapByLevelObjectInstanceId)] = value; } }
    }
    public class PalItemSlotSaveData : PalBinaryMemory
    {
        public PalItemSlotSaveData(nint addr) : base(addr) { }
        public int SlotIndex { get { return this[nameof(SlotIndex)].GetValue<int>(); } set { this[nameof(SlotIndex)].SetValue<int>(value); } }
        public PalItemId ItemId { get { return this[nameof(ItemId)].As<PalItemId>(); } set { this["ItemId"] = value; } }
        public int StackCount { get { return this[nameof(StackCount)].GetValue<int>(); } set { this[nameof(StackCount)].SetValue<int>(value); } }
    }
    public class PalItemContainerSaveData : PalBinaryMemory
    {
        public PalItemContainerSaveData(nint addr) : base(addr) { }
        public PalItemContainerBelongInfo BelongInfo { get { return this[nameof(BelongInfo)].As<PalItemContainerBelongInfo>(); } set { this["BelongInfo"] = value; } }
        public Array<PalItemSlotSaveData> Slots { get { return new Array<PalItemSlotSaveData>(this[nameof(Slots)].Address); } }
    }
    public class PalCustomMarkerSaveData : Object
    {
        public PalCustomMarkerSaveData(nint addr) : base(addr) { }
        public Vector IconLocation { get { return this[nameof(IconLocation)].As<Vector>(); } set { this["IconLocation"] = value; } }
        public int IconType { get { return this[nameof(IconType)].GetValue<int>(); } set { this[nameof(IconType)].SetValue<int>(value); } }
    }
    public class PalTutorialTriggerSaveData : Object
    {
        public PalTutorialTriggerSaveData(nint addr) : base(addr) { }
        public Object TutorialMsg { get { return this[nameof(TutorialMsg)]; } set { this[nameof(TutorialMsg)] = value; } }
        public bool Checked { get { return this[nameof(Checked)].Flag; } set { this[nameof(Checked)].Flag = value; } }
    }
    public class PalCompletedQuestSaveData : Object
    {
        public PalCompletedQuestSaveData(nint addr) : base(addr) { }
        public Object QuestName { get { return this[nameof(QuestName)]; } set { this[nameof(QuestName)] = value; } }
    }
    public class PalOrderedQuestSaveData : Object
    {
        public PalOrderedQuestSaveData(nint addr) : base(addr) { }
        public Object QuestName { get { return this[nameof(QuestName)]; } set { this[nameof(QuestName)] = value; } }
        public int BlockIndex { get { return this[nameof(BlockIndex)].GetValue<int>(); } set { this[nameof(BlockIndex)].SetValue<int>(value); } }
    }
    public class PalCharacterSlotSaveData : PalBinaryMemory
    {
        public PalCharacterSlotSaveData(nint addr) : base(addr) { }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public EPalTribeID PermissionTribeID { get { return (EPalTribeID)this[nameof(PermissionTribeID)].GetValue<int>(); } set { this[nameof(PermissionTribeID)].SetValue<int>((int)value); } }
    }
    public class PalCharacterContainerSaveData : PalBinaryMemory
    {
        public PalCharacterContainerSaveData(nint addr) : base(addr) { }
        public bool bReferenceSlot { get { return this[nameof(bReferenceSlot)].Flag; } set { this[nameof(bReferenceSlot)].Flag = value; } }
        public Array<PalCharacterSlotSaveData> Slots { get { return new Array<PalCharacterSlotSaveData>(this[nameof(Slots)].Address); } }
    }
    public class PalDynamicItemSaveData : PalBinaryMemory
    {
        public PalDynamicItemSaveData(nint addr) : base(addr) { }
        public PalDynamicItemId ID { get { return this[nameof(ID)].As<PalDynamicItemId>(); } set { this["ID"] = value; } }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
    }
    public class PalGroupSaveData : PalBinaryMemory
    {
        public PalGroupSaveData(nint addr) : base(addr) { }
        public EPalGroupType GroupType { get { return (EPalGroupType)this[nameof(GroupType)].GetValue<int>(); } set { this[nameof(GroupType)].SetValue<int>((int)value); } }
    }
    public class PalCharacterStoredParameterInfoSaveData : Object
    {
        public PalCharacterStoredParameterInfoSaveData(nint addr) : base(addr) { }
        public PalCharacterStoredParameterId ID { get { return this[nameof(ID)].As<PalCharacterStoredParameterId>(); } set { this["ID"] = value; } }
        public PalIndividualCharacterSaveParameterSaveData SaveParameter { get { return this[nameof(SaveParameter)].As<PalIndividualCharacterSaveParameterSaveData>(); } set { this["SaveParameter"] = value; } }
        public GameDateTime StoredAt { get { return this[nameof(StoredAt)].As<GameDateTime>(); } set { this["StoredAt"] = value; } }
        public Guid LostPlayerUId { get { return this[nameof(LostPlayerUId)].As<Guid>(); } set { this["LostPlayerUId"] = value; } }
    }
    public class PalCharacterParameterStorageSaveData : Object
    {
        public PalCharacterParameterStorageSaveData(nint addr) : base(addr) { }
        public Array<PalCharacterStoredParameterInfoSaveData> StoredParameterInfoSaveData { get { return new Array<PalCharacterStoredParameterInfoSaveData>(this[nameof(StoredParameterInfoSaveData)].Address); } }
    }
    public class PalGameTimeSaveData : Object
    {
        public PalGameTimeSaveData(nint addr) : base(addr) { }
        public long GameDateTimeTicks { get { return this[nameof(GameDateTimeTicks)].GetValue<long>(); } set { this[nameof(GameDateTimeTicks)].SetValue<long>(value); } }
        public long RealDateTimeTicks { get { return this[nameof(RealDateTimeTicks)].GetValue<long>(); } set { this[nameof(RealDateTimeTicks)].SetValue<long>(value); } }
    }
    public class PalOptionWorldSaveData : Object
    {
        public PalOptionWorldSaveData(nint addr) : base(addr) { }
        public PalOptionWorldSettings Settings { get { return this[nameof(Settings)].As<PalOptionWorldSettings>(); } set { this["Settings"] = value; } }
    }
    public class PalBossSpawnerSaveData : Object
    {
        public PalBossSpawnerSaveData(nint addr) : base(addr) { }
        public Object RespawnDisableFlag { get { return this[nameof(RespawnDisableFlag)]; } set { this[nameof(RespawnDisableFlag)] = value; } }
    }
    public class PalEnemyCampSaveData : Object
    {
        public PalEnemyCampSaveData(nint addr) : base(addr) { }
        public Object EnemyCampStatusMap { get { return this[nameof(EnemyCampStatusMap)]; } set { this[nameof(EnemyCampStatusMap)] = value; } }
    }
    public class PalDungeonPointMarkerSaveData : Object
    {
        public PalDungeonPointMarkerSaveData(nint addr) : base(addr) { }
        public Guid MarkerPointId { get { return this[nameof(MarkerPointId)].As<Guid>(); } set { this["MarkerPointId"] = value; } }
        public GameDateTime NextRespawnGameTime { get { return this[nameof(NextRespawnGameTime)].As<GameDateTime>(); } set { this["NextRespawnGameTime"] = value; } }
        public Guid ConnectedDungeonInstanceId { get { return this[nameof(ConnectedDungeonInstanceId)].As<Guid>(); } set { this["ConnectedDungeonInstanceId"] = value; } }
    }
    public class PalDungeonSaveData : Object
    {
        public PalDungeonSaveData(nint addr) : base(addr) { }
        public Guid InstanceId { get { return this[nameof(InstanceId)].As<Guid>(); } set { this["InstanceId"] = value; } }
        public EPalDungeonType DungeonType { get { return (EPalDungeonType)this[nameof(DungeonType)].GetValue<int>(); } set { this[nameof(DungeonType)].SetValue<int>((int)value); } }
        public Guid MarkerPointId { get { return this[nameof(MarkerPointId)].As<Guid>(); } set { this["MarkerPointId"] = value; } }
        public Object DungeonSpawnAreaId { get { return this[nameof(DungeonSpawnAreaId)]; } set { this[nameof(DungeonSpawnAreaId)] = value; } }
        public Object DungeonLevelName { get { return this[nameof(DungeonLevelName)]; } set { this[nameof(DungeonLevelName)] = value; } }
        public EPalDungeonInstanceBossState BossState { get { return (EPalDungeonInstanceBossState)this[nameof(BossState)].GetValue<int>(); } set { this[nameof(BossState)].SetValue<int>((int)value); } }
        public Object EnemySpawnerDataBossRowName { get { return this[nameof(EnemySpawnerDataBossRowName)]; } set { this[nameof(EnemySpawnerDataBossRowName)] = value; } }
        public GameDateTime DisappearTimeAt { get { return this[nameof(DisappearTimeAt)].As<GameDateTime>(); } set { this["DisappearTimeAt"] = value; } }
        public int ReservedDataLayerAssetIndex { get { return this[nameof(ReservedDataLayerAssetIndex)].GetValue<int>(); } set { this[nameof(ReservedDataLayerAssetIndex)].SetValue<int>(value); } }
        public PalStageInstanceId StageInstanceId { get { return this[nameof(StageInstanceId)].As<PalStageInstanceId>(); } set { this["StageInstanceId"] = value; } }
        public Array<PalMapObjectSaveData> MapObjectSaveData { get { return new Array<PalMapObjectSaveData>(this[nameof(MapObjectSaveData)].Address); } }
    }
    public class PalLoggedinPlayerSaveDataRecordData : Object
    {
        public PalLoggedinPlayerSaveDataRecordData(nint addr) : base(addr) { }
        public Object TowerBossDefeatFlag { get { return this[nameof(TowerBossDefeatFlag)]; } set { this[nameof(TowerBossDefeatFlag)] = value; } }
        public Object NormalBossDefeatFlag { get { return this[nameof(NormalBossDefeatFlag)]; } set { this[nameof(NormalBossDefeatFlag)] = value; } }
        public int BossDefeatCount { get { return this[nameof(BossDefeatCount)].GetValue<int>(); } set { this[nameof(BossDefeatCount)].SetValue<int>(value); } }
        public int TribeCaptureCount { get { return this[nameof(TribeCaptureCount)].GetValue<int>(); } set { this[nameof(TribeCaptureCount)].SetValue<int>(value); } }
        public Object PalCaptureCount { get { return this[nameof(PalCaptureCount)]; } set { this[nameof(PalCaptureCount)] = value; } }
        public Object PaldeckUnlockFlag { get { return this[nameof(PaldeckUnlockFlag)]; } set { this[nameof(PaldeckUnlockFlag)] = value; } }
        public int PalCaptureCountBonusCount_Tier1 { get { return this[nameof(PalCaptureCountBonusCount_Tier1)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier1)].SetValue<int>(value); } }
        public int PalCaptureCountBonusCount_Tier2 { get { return this[nameof(PalCaptureCountBonusCount_Tier2)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier2)].SetValue<int>(value); } }
        public int PalCaptureCountBonusCount_Tier3 { get { return this[nameof(PalCaptureCountBonusCount_Tier3)].GetValue<int>(); } set { this[nameof(PalCaptureCountBonusCount_Tier3)].SetValue<int>(value); } }
        public Object RelicObtainForInstanceFlag { get { return this[nameof(RelicObtainForInstanceFlag)]; } set { this[nameof(RelicObtainForInstanceFlag)] = value; } }
        public int RelicPossessNum { get { return this[nameof(RelicPossessNum)].GetValue<int>(); } set { this[nameof(RelicPossessNum)].SetValue<int>(value); } }
        public Object NoteObtainForInstanceFlag { get { return this[nameof(NoteObtainForInstanceFlag)]; } set { this[nameof(NoteObtainForInstanceFlag)] = value; } }
        public Object NPCTalkIdCount { get { return this[nameof(NPCTalkIdCount)]; } set { this[nameof(NPCTalkIdCount)] = value; } }
        public Object FastTravelPointUnlockFlag { get { return this[nameof(FastTravelPointUnlockFlag)]; } set { this[nameof(FastTravelPointUnlockFlag)] = value; } }
        public Array<Guid> BuildingObjectMapObjectInstanceIds { get { return new Array<Guid>(this[nameof(BuildingObjectMapObjectInstanceIds)].Address); } }
    }
    public class PalLocalSaveData : Object
    {
        public PalLocalSaveData(nint addr) : base(addr) { }
        public Object Local_ActivateOtomoCount { get { return this[nameof(Local_ActivateOtomoCount)]; } set { this[nameof(Local_ActivateOtomoCount)] = value; } }
        public Object Local_PalEncountFlag { get { return this[nameof(Local_PalEncountFlag)]; } set { this[nameof(Local_PalEncountFlag)] = value; } }
        public Object Local_NoteCheckedFlag { get { return this[nameof(Local_NoteCheckedFlag)]; } set { this[nameof(Local_NoteCheckedFlag)] = value; } }
        public Object Local_LoadoutSelectedIndexMap { get { return this[nameof(Local_LoadoutSelectedIndexMap)]; } set { this[nameof(Local_LoadoutSelectedIndexMap)] = value; } }
        public Object Local_NewUnlockedBuilds { get { return this[nameof(Local_NewUnlockedBuilds)]; } set { this[nameof(Local_NewUnlockedBuilds)] = value; } }
        public bool Local_IsBuildMenuChecked { get { return this[nameof(Local_IsBuildMenuChecked)].Flag; } set { this[nameof(Local_IsBuildMenuChecked)].Flag = value; } }
        public Object Local_NPCTalkCountMap { get { return this[nameof(Local_NPCTalkCountMap)]; } set { this[nameof(Local_NPCTalkCountMap)] = value; } }
        public Object Local_NewUnlockedTechs { get { return this[nameof(Local_NewUnlockedTechs)]; } set { this[nameof(Local_NewUnlockedTechs)] = value; } }
        public Object Local_ShowedCutsceneFlag { get { return this[nameof(Local_ShowedCutsceneFlag)]; } set { this[nameof(Local_ShowedCutsceneFlag)] = value; } }
        public int Local_PlayTime { get { return this[nameof(Local_PlayTime)].GetValue<int>(); } set { this[nameof(Local_PlayTime)].SetValue<int>(value); } }
        public Array<byte> worldMapMaskTexture { get { return new Array<byte>(this[nameof(worldMapMaskTexture)].Address); } }
        public Array<PalCustomMarkerSaveData> Local_CustomMarkerSaveData { get { return new Array<PalCustomMarkerSaveData>(this[nameof(Local_CustomMarkerSaveData)].Address); } }
        public Array<PalTutorialTriggerSaveData> Local_TutorialTriggerSaveData { get { return new Array<PalTutorialTriggerSaveData>(this[nameof(Local_TutorialTriggerSaveData)].Address); } }
        public Array<PalCompletedQuestSaveData> Local_CompletedTutorialQuestSaveData { get { return new Array<PalCompletedQuestSaveData>(this[nameof(Local_CompletedTutorialQuestSaveData)].Address); } }
        public Array<PalOrderedQuestSaveData> Local_OrderedTutorialQuestSaveData { get { return new Array<PalOrderedQuestSaveData>(this[nameof(Local_OrderedTutorialQuestSaveData)].Address); } }
    }
    public class PalWorldSaveData : Object
    {
        public PalWorldSaveData(nint addr) : base(addr) { }
        public Object WorldName { get { return this[nameof(WorldName)]; } set { this[nameof(WorldName)] = value; } }
        public Object CharacterSaveParameterMap { get { return this[nameof(CharacterSaveParameterMap)]; } set { this[nameof(CharacterSaveParameterMap)] = value; } }
        public Array<PalMapObjectSaveData> MapObjectSaveData { get { return new Array<PalMapObjectSaveData>(this[nameof(MapObjectSaveData)].Address); } }
        public Object FoliageGridSaveDataMap { get { return this[nameof(FoliageGridSaveDataMap)]; } set { this[nameof(FoliageGridSaveDataMap)] = value; } }
        public Object MapObjectSpawnerSaveData { get { return this[nameof(MapObjectSpawnerSaveData)]; } set { this[nameof(MapObjectSpawnerSaveData)] = value; } }
        public Object MapObjectSpawnerInStageSaveData { get { return this[nameof(MapObjectSpawnerInStageSaveData)]; } set { this[nameof(MapObjectSpawnerInStageSaveData)] = value; } }
        public Array<PalWorkSaveData> WorkSaveData { get { return new Array<PalWorkSaveData>(this[nameof(WorkSaveData)].Address); } }
        public Object BaseCampSaveData { get { return this[nameof(BaseCampSaveData)]; } set { this[nameof(BaseCampSaveData)] = value; } }
        public Object ItemContainerSaveData { get { return this[nameof(ItemContainerSaveData)]; } set { this[nameof(ItemContainerSaveData)] = value; } }
        public Array<PalDynamicItemSaveData> DynamicItemSaveData { get { return new Array<PalDynamicItemSaveData>(this[nameof(DynamicItemSaveData)].Address); } }
        public Object CharacterContainerSaveData { get { return this[nameof(CharacterContainerSaveData)]; } set { this[nameof(CharacterContainerSaveData)] = value; } }
        public Object GroupSaveDataMap { get { return this[nameof(GroupSaveDataMap)]; } set { this[nameof(GroupSaveDataMap)] = value; } }
        public PalCharacterParameterStorageSaveData CharacterParameterStorageSaveData { get { return this[nameof(CharacterParameterStorageSaveData)].As<PalCharacterParameterStorageSaveData>(); } set { this["CharacterParameterStorageSaveData"] = value; } }
        public PalGameTimeSaveData GameTimeSaveData { get { return this[nameof(GameTimeSaveData)].As<PalGameTimeSaveData>(); } set { this["GameTimeSaveData"] = value; } }
        public PalBossSpawnerSaveData BossSpawnerSaveData { get { return this[nameof(BossSpawnerSaveData)].As<PalBossSpawnerSaveData>(); } set { this["BossSpawnerSaveData"] = value; } }
        public PalEnemyCampSaveData EnemyCampSaveData { get { return this[nameof(EnemyCampSaveData)].As<PalEnemyCampSaveData>(); } set { this["EnemyCampSaveData"] = value; } }
        public Array<PalDungeonPointMarkerSaveData> DungeonPointMarkerSaveData { get { return new Array<PalDungeonPointMarkerSaveData>(this[nameof(DungeonPointMarkerSaveData)].Address); } }
        public Array<PalDungeonSaveData> DungeonSaveData { get { return new Array<PalDungeonSaveData>(this[nameof(DungeonSaveData)].Address); } }
    }
    public class PalWorldPlayerSaveData : Object
    {
        public PalWorldPlayerSaveData(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public PalInstanceID IndividualId { get { return this[nameof(IndividualId)].As<PalInstanceID>(); } set { this["IndividualId"] = value; } }
        public Guid RespawnPointMapObjectInstanceId { get { return this[nameof(RespawnPointMapObjectInstanceId)].As<Guid>(); } set { this["RespawnPointMapObjectInstanceId"] = value; } }
        public Transform LastTransform { get { return this[nameof(LastTransform)].As<Transform>(); } set { this["LastTransform"] = value; } }
        public Object PlayerName { get { return this[nameof(PlayerName)]; } set { this[nameof(PlayerName)] = value; } }
        public PalPlayerDataCharacterMakeInfo PlayerCharacterMakeData { get { return this[nameof(PlayerCharacterMakeData)].As<PalPlayerDataCharacterMakeInfo>(); } set { this["PlayerCharacterMakeData"] = value; } }
        public PalContainerId OtomoCharacterContainerId { get { return this[nameof(OtomoCharacterContainerId)].As<PalContainerId>(); } set { this["OtomoCharacterContainerId"] = value; } }
        public EPalOtomoPalOrderType OtomoOrder { get { return (EPalOtomoPalOrderType)this[nameof(OtomoOrder)].GetValue<int>(); } set { this[nameof(OtomoOrder)].SetValue<int>((int)value); } }
        public PalPlayerDataInventoryInfo inventoryInfo { get { return this[nameof(inventoryInfo)].As<PalPlayerDataInventoryInfo>(); } set { this["inventoryInfo"] = value; } }
        public int TechnologyPoint { get { return this[nameof(TechnologyPoint)].GetValue<int>(); } set { this[nameof(TechnologyPoint)].SetValue<int>(value); } }
        public int bossTechnologyPoint { get { return this[nameof(bossTechnologyPoint)].GetValue<int>(); } set { this[nameof(bossTechnologyPoint)].SetValue<int>(value); } }
        public Array<Object> UnlockedRecipeTechnologyNames { get { return new Array<Object>(this[nameof(UnlockedRecipeTechnologyNames)].Address); } }
        public PalContainerId PalStorageContainerId { get { return this[nameof(PalStorageContainerId)].As<PalContainerId>(); } set { this["PalStorageContainerId"] = value; } }
        public PalLoggedinPlayerSaveDataRecordData RecordData { get { return this[nameof(RecordData)].As<PalLoggedinPlayerSaveDataRecordData>(); } set { this["RecordData"] = value; } }
        public bool bIsSelectedInitMapPoint { get { return this[nameof(bIsSelectedInitMapPoint)].Flag; } set { this[nameof(bIsSelectedInitMapPoint)].Flag = value; } }
    }
    public class RidingAimingAnimationInfo : Object
    {
        public RidingAimingAnimationInfo(nint addr) : base(addr) { }
        public AnimSequence ShootingAnimation { get { return this[nameof(ShootingAnimation)].As<AnimSequence>(); } set { this["ShootingAnimation"] = value; } }
        public AimOffsetBlendSpace ShootingAO { get { return this[nameof(ShootingAO)].As<AimOffsetBlendSpace>(); } set { this["ShootingAO"] = value; } }
    }
    public class ShooterSpringCameraParameter : Object
    {
        public ShooterSpringCameraParameter(nint addr) : base(addr) { }
        public float ArmLength { get { return this[nameof(ArmLength)].GetValue<float>(); } set { this[nameof(ArmLength)].SetValue<float>(value); } }
        public Vector CameraOffset { get { return this[nameof(CameraOffset)].As<Vector>(); } set { this["CameraOffset"] = value; } }
    }
    public class ShooterSpringCameraAdditionalOffset : Object
    {
        public ShooterSpringCameraAdditionalOffset(nint addr) : base(addr) { }
        public Object flagName { get { return this[nameof(flagName)]; } set { this[nameof(flagName)] = value; } }
        public int Priority { get { return this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>(value); } }
        public ShooterSpringCameraParameter CameraOffset { get { return this[nameof(CameraOffset)].As<ShooterSpringCameraParameter>(); } set { this["CameraOffset"] = value; } }
    }
    public class PalItemShopCreateDataStruct : Object
    {
        public PalItemShopCreateDataStruct(nint addr) : base(addr) { }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public float BuyRate { get { return this[nameof(BuyRate)].GetValue<float>(); } set { this[nameof(BuyRate)].SetValue<float>(value); } }
        public float SellRate { get { return this[nameof(SellRate)].GetValue<float>(); } set { this[nameof(SellRate)].SetValue<float>(value); } }
        public int Stock { get { return this[nameof(Stock)].GetValue<int>(); } set { this[nameof(Stock)].SetValue<int>(value); } }
    }
    public class PalItemShopCreateDataRow : TableRowBase
    {
        public PalItemShopCreateDataRow(nint addr) : base(addr) { }
        public Array<PalItemShopCreateDataStruct> productDataArray { get { return new Array<PalItemShopCreateDataStruct>(this[nameof(productDataArray)].Address); } }
    }
    public class PalItemShopCreateIntermediateDataRow : TableRowBase
    {
        public PalItemShopCreateIntermediateDataRow(nint addr) : base(addr) { }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public float BuyRate { get { return this[nameof(BuyRate)].GetValue<float>(); } set { this[nameof(BuyRate)].SetValue<float>(value); } }
        public float SellRate { get { return this[nameof(SellRate)].GetValue<float>(); } set { this[nameof(SellRate)].SetValue<float>(value); } }
        public int Stock { get { return this[nameof(Stock)].GetValue<int>(); } set { this[nameof(Stock)].SetValue<int>(value); } }
    }
    public class PalItemShopLotteryDataStruct : Object
    {
        public PalItemShopLotteryDataStruct(nint addr) : base(addr) { }
        public Object ShopGroupName { get { return this[nameof(ShopGroupName)]; } set { this[nameof(ShopGroupName)] = value; } }
        public int Weight { get { return this[nameof(Weight)].GetValue<int>(); } set { this[nameof(Weight)].SetValue<int>(value); } }
    }
    public class PalItemShopLotteryDataRow : TableRowBase
    {
        public PalItemShopLotteryDataRow(nint addr) : base(addr) { }
        public Array<PalItemShopLotteryDataStruct> lotteryDataArray { get { return new Array<PalItemShopLotteryDataStruct>(this[nameof(lotteryDataArray)].Address); } }
    }
    public class PalItemShopLotteryIntermediateDataRow : TableRowBase
    {
        public PalItemShopLotteryIntermediateDataRow(nint addr) : base(addr) { }
        public Object GroupName { get { return this[nameof(GroupName)]; } set { this[nameof(GroupName)] = value; } }
        public Object ShopGroupName { get { return this[nameof(ShopGroupName)]; } set { this[nameof(ShopGroupName)] = value; } }
        public int Weight { get { return this[nameof(Weight)].GetValue<int>(); } set { this[nameof(Weight)].SetValue<int>(value); } }
    }
    public class PalPalShopCreateDataRow : TableRowBase
    {
        public PalPalShopCreateDataRow(nint addr) : base(addr) { }
        public int MaxLostPalNum { get { return this[nameof(MaxLostPalNum)].GetValue<int>(); } set { this[nameof(MaxLostPalNum)].SetValue<int>(value); } }
        public int CharacterNum { get { return this[nameof(CharacterNum)].GetValue<int>(); } set { this[nameof(CharacterNum)].SetValue<int>(value); } }
        public Array<PalDataTableRowName_PalMonsterData> CharacterIDArray { get { return new Array<PalDataTableRowName_PalMonsterData>(this[nameof(CharacterIDArray)].Address); } }
        public int MinCharacterLevel { get { return this[nameof(MinCharacterLevel)].GetValue<int>(); } set { this[nameof(MinCharacterLevel)].SetValue<int>(value); } }
        public int MaxCharacterLevel { get { return this[nameof(MaxCharacterLevel)].GetValue<int>(); } set { this[nameof(MaxCharacterLevel)].SetValue<int>(value); } }
    }
    public class PalShopProductRequireItemData : Object
    {
        public PalShopProductRequireItemData(nint addr) : base(addr) { }
        public Object StaticItemId { get { return this[nameof(StaticItemId)]; } set { this[nameof(StaticItemId)] = value; } }
        public int requireNum { get { return this[nameof(requireNum)].GetValue<int>(); } set { this[nameof(requireNum)].SetValue<int>(value); } }
    }
    public class PalBodyInstanceParameter : Object
    {
        public PalBodyInstanceParameter(nint addr) : base(addr) { }
        public int InstanceBodyIndex { get { return this[nameof(InstanceBodyIndex)].GetValue<int>(); } set { this[nameof(InstanceBodyIndex)].SetValue<int>(value); } }
        public short InstanceBoneIndex { get { return this[nameof(InstanceBoneIndex)].GetValue<short>(); } set { this[nameof(InstanceBoneIndex)].SetValue<short>(value); } }
        public float LinearDamping { get { return this[nameof(LinearDamping)].GetValue<float>(); } set { this[nameof(LinearDamping)].SetValue<float>(value); } }
        public float AngularDamping { get { return this[nameof(AngularDamping)].GetValue<float>(); } set { this[nameof(AngularDamping)].SetValue<float>(value); } }
    }
    public class PalSoundIDDataTableRow : TableRowBase
    {
        public PalSoundIDDataTableRow(nint addr) : base(addr) { }
        public Object Description { get { return this[nameof(Description)]; } set { this[nameof(Description)] = value; } }
    }
    public class PalSoundPlayingParameter : Object
    {
        public PalSoundPlayingParameter(nint addr) : base(addr) { }
        public AkAudioEvent AudioEvent { get { return this[nameof(AudioEvent)].As<AkAudioEvent>(); } set { this["AudioEvent"] = value; } }
        public PalSoundOptions Options { get { return this[nameof(Options)].As<PalSoundOptions>(); } set { this["Options"] = value; } }
        public bool bStopAbsolutely { get { return this[nameof(bStopAbsolutely)].Flag; } set { this[nameof(bStopAbsolutely)].Flag = value; } }
    }
    public class PalStagePlayerInfo : Object
    {
        public PalStagePlayerInfo(nint addr) : base(addr) { }
        public Guid PlayerUId { get { return this[nameof(PlayerUId)].As<Guid>(); } set { this["PlayerUId"] = value; } }
        public EPalStagePlayerState PlayerState { get { return (EPalStagePlayerState)this[nameof(PlayerState)].GetValue<int>(); } set { this[nameof(PlayerState)].SetValue<int>((int)value); } }
    }
    public class PalStageModelRepInfo : FastArraySerializerItem
    {
        public PalStageModelRepInfo(nint addr) : base(addr) { }
        public PalStageInstanceId InstanceId { get { return this[nameof(InstanceId)].As<PalStageInstanceId>(); } set { this["InstanceId"] = value; } }
        public PalStageModelBase Model { get { return this[nameof(Model)].As<PalStageModelBase>(); } set { this["Model"] = value; } }
    }
    public class PalFastStageModelRepInfoArray : FastArraySerializer
    {
        public PalFastStageModelRepInfoArray(nint addr) : base(addr) { }
        public Array<PalStageModelRepInfo> Items { get { return new Array<PalStageModelRepInfo>(this[nameof(Items)].Address); } }
    }
    public class PalStageAreaInfo : Object
    {
        public PalStageAreaInfo(nint addr) : base(addr) { }
        public Box BoundingBox { get { return this[nameof(BoundingBox)].As<Box>(); } set { this["BoundingBox"] = value; } }
    }
    public class FootStampInfo : Object
    {
        public FootStampInfo(nint addr) : base(addr) { }
        public Object FootstepDecalMap { get { return this[nameof(FootstepDecalMap)]; } set { this[nameof(FootstepDecalMap)] = value; } }
        public Vector FootstepDecal_Size { get { return this[nameof(FootstepDecal_Size)].As<Vector>(); } set { this["FootstepDecal_Size"] = value; } }
        public Rotator FootstepDecal_InitialRotation { get { return this[nameof(FootstepDecal_InitialRotation)].As<Rotator>(); } set { this["FootstepDecal_InitialRotation"] = value; } }
    }
    public class PalStaticCharacterInfo_SpawnItem : Object
    {
        public PalStaticCharacterInfo_SpawnItem(nint addr) : base(addr) { }
        public Object FieldLotteryNameByRank { get { return this[nameof(FieldLotteryNameByRank)]; } set { this[nameof(FieldLotteryNameByRank)] = value; } }
    }
    public class PalEditorItemIconTableRow : TableRowBase
    {
        public PalEditorItemIconTableRow(nint addr) : base(addr) { }
        public Object Icon { get { return this[nameof(Icon)]; } set { this[nameof(Icon)] = value; } }
    }
    public class PalEditorItemStaticClassTableRow : TableRowBase
    {
        public PalEditorItemStaticClassTableRow(nint addr) : base(addr) { }
        public Object ClassName { get { return this[nameof(ClassName)]; } set { this[nameof(ClassName)] = value; } }
        public Object StaticClass { get { return this[nameof(StaticClass)]; } set { this[nameof(StaticClass)] = value; } }
    }
    public class PalEditorItemDynamicClassTableRow : TableRowBase
    {
        public PalEditorItemDynamicClassTableRow(nint addr) : base(addr) { }
        public Object ClassName { get { return this[nameof(ClassName)]; } set { this[nameof(ClassName)] = value; } }
        public Object DynamicClass { get { return this[nameof(DynamicClass)]; } set { this[nameof(DynamicClass)] = value; } }
    }
    public class PalEditorItemActorClassTableRow : TableRowBase
    {
        public PalEditorItemActorClassTableRow(nint addr) : base(addr) { }
        public Object ClassName { get { return this[nameof(ClassName)]; } set { this[nameof(ClassName)] = value; } }
        public Object actorClass { get { return this[nameof(actorClass)]; } set { this[nameof(actorClass)] = value; } }
    }
    public class PalEditorItemStaticMeshTableRow : TableRowBase
    {
        public PalEditorItemStaticMeshTableRow(nint addr) : base(addr) { }
        public Object StaticMeshName { get { return this[nameof(StaticMeshName)]; } set { this[nameof(StaticMeshName)] = value; } }
        public Object StaticMeshPath { get { return this[nameof(StaticMeshPath)]; } set { this[nameof(StaticMeshPath)] = value; } }
    }
    public class PalStaticItemDataStruct : TableRowBase
    {
        public PalStaticItemDataStruct(nint addr) : base(addr) { }
        public Object OverrideName { get { return this[nameof(OverrideName)]; } set { this[nameof(OverrideName)] = value; } }
        public Object OverrideDescription { get { return this[nameof(OverrideDescription)]; } set { this[nameof(OverrideDescription)] = value; } }
        public Object IconName { get { return this[nameof(IconName)]; } set { this[nameof(IconName)] = value; } }
        public EPalItemTypeA TypeA { get { return (EPalItemTypeA)this[nameof(TypeA)].GetValue<int>(); } set { this[nameof(TypeA)].SetValue<int>((int)value); } }
        public EPalItemTypeB TypeB { get { return (EPalItemTypeB)this[nameof(TypeB)].GetValue<int>(); } set { this[nameof(TypeB)].SetValue<int>((int)value); } }
        public int Rank { get { return this[nameof(Rank)].GetValue<int>(); } set { this[nameof(Rank)].SetValue<int>(value); } }
        public int Rarity { get { return this[nameof(Rarity)].GetValue<int>(); } set { this[nameof(Rarity)].SetValue<int>(value); } }
        public int MaxStackCount { get { return this[nameof(MaxStackCount)].GetValue<int>(); } set { this[nameof(MaxStackCount)].SetValue<int>(value); } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public int Price { get { return this[nameof(Price)].GetValue<int>(); } set { this[nameof(Price)].SetValue<int>(value); } }
        public int SortID { get { return this[nameof(SortID)].GetValue<int>(); } set { this[nameof(SortID)].SetValue<int>(value); } }
        public bool bInTreasureBox { get { return this[nameof(bInTreasureBox)].Flag; } set { this[nameof(bInTreasureBox)].Flag = value; } }
        public bool bNotConsumed { get { return this[nameof(bNotConsumed)].Flag; } set { this[nameof(bNotConsumed)].Flag = value; } }
        public bool bEnableHandcraft { get { return this[nameof(bEnableHandcraft)].Flag; } set { this[nameof(bEnableHandcraft)].Flag = value; } }
        public int TechnologyTreeLock { get { return this[nameof(TechnologyTreeLock)].GetValue<int>(); } set { this[nameof(TechnologyTreeLock)].SetValue<int>(value); } }
        public Object ItemStaticClass { get { return this[nameof(ItemStaticClass)]; } set { this[nameof(ItemStaticClass)] = value; } }
        public Object ItemDynamicClass { get { return this[nameof(ItemDynamicClass)]; } set { this[nameof(ItemDynamicClass)] = value; } }
        public Object ItemActorClass { get { return this[nameof(ItemActorClass)]; } set { this[nameof(ItemActorClass)] = value; } }
        public Object ItemStaticMeshName { get { return this[nameof(ItemStaticMeshName)]; } set { this[nameof(ItemStaticMeshName)] = value; } }
        public Object VisualBlueprintClassName { get { return this[nameof(VisualBlueprintClassName)]; } set { this[nameof(VisualBlueprintClassName)] = value; } }
        public Object VisualBlueprintClassSoft { get { return this[nameof(VisualBlueprintClassSoft)]; } set { this[nameof(VisualBlueprintClassSoft)] = value; } }
        public EPalDropItemType DropItemType { get { return (EPalDropItemType)this[nameof(DropItemType)].GetValue<int>(); } set { this[nameof(DropItemType)].SetValue<int>((int)value); } }
        public int Editor_RowNameHash { get { return this[nameof(Editor_RowNameHash)].GetValue<int>(); } set { this[nameof(Editor_RowNameHash)].SetValue<int>(value); } }
        public int RestoreSatiety { get { return this[nameof(RestoreSatiety)].GetValue<int>(); } set { this[nameof(RestoreSatiety)].SetValue<int>(value); } }
        public int RestoreConcentration { get { return this[nameof(RestoreConcentration)].GetValue<int>(); } set { this[nameof(RestoreConcentration)].SetValue<int>(value); } }
        public int RestoreSanity { get { return this[nameof(RestoreSanity)].GetValue<int>(); } set { this[nameof(RestoreSanity)].SetValue<int>(value); } }
        public int RestoreHealth { get { return this[nameof(RestoreHealth)].GetValue<int>(); } set { this[nameof(RestoreHealth)].SetValue<int>(value); } }
        public int GrantEffect1Id { get { return this[nameof(GrantEffect1Id)].GetValue<int>(); } set { this[nameof(GrantEffect1Id)].SetValue<int>(value); } }
        public float GrantEffect1Time { get { return this[nameof(GrantEffect1Time)].GetValue<float>(); } set { this[nameof(GrantEffect1Time)].SetValue<float>(value); } }
        public int GrantEffect2Id { get { return this[nameof(GrantEffect2Id)].GetValue<int>(); } set { this[nameof(GrantEffect2Id)].SetValue<int>(value); } }
        public float GrantEffect2Time { get { return this[nameof(GrantEffect2Time)].GetValue<float>(); } set { this[nameof(GrantEffect2Time)].SetValue<float>(value); } }
        public int GrantEffect3Id { get { return this[nameof(GrantEffect3Id)].GetValue<int>(); } set { this[nameof(GrantEffect3Id)].SetValue<int>(value); } }
        public float GrantEffect3Time { get { return this[nameof(GrantEffect3Time)].GetValue<float>(); } set { this[nameof(GrantEffect3Time)].SetValue<float>(value); } }
        public int Durability { get { return this[nameof(Durability)].GetValue<int>(); } set { this[nameof(Durability)].SetValue<int>(value); } }
        public EPalElementType ElementType { get { return (EPalElementType)this[nameof(ElementType)].GetValue<int>(); } set { this[nameof(ElementType)].SetValue<int>((int)value); } }
        public bool bSleepWeapon { get { return this[nameof(bSleepWeapon)].Flag; } set { this[nameof(bSleepWeapon)].Flag = value; } }
        public int MagazineSize { get { return this[nameof(MagazineSize)].GetValue<int>(); } set { this[nameof(MagazineSize)].SetValue<int>(value); } }
        public float SneakAttackRate { get { return this[nameof(SneakAttackRate)].GetValue<float>(); } set { this[nameof(SneakAttackRate)].SetValue<float>(value); } }
        public int PhysicalAttackValue { get { return this[nameof(PhysicalAttackValue)].GetValue<int>(); } set { this[nameof(PhysicalAttackValue)].SetValue<int>(value); } }
        public int HPValue { get { return this[nameof(HPValue)].GetValue<int>(); } set { this[nameof(HPValue)].SetValue<int>(value); } }
        public int PhysicalDefenseValue { get { return this[nameof(PhysicalDefenseValue)].GetValue<int>(); } set { this[nameof(PhysicalDefenseValue)].SetValue<int>(value); } }
        public int ShieldValue { get { return this[nameof(ShieldValue)].GetValue<int>(); } set { this[nameof(ShieldValue)].SetValue<int>(value); } }
        public int MagicAttackValue { get { return this[nameof(MagicAttackValue)].GetValue<int>(); } set { this[nameof(MagicAttackValue)].SetValue<int>(value); } }
        public int MagicDefenseValue { get { return this[nameof(MagicDefenseValue)].GetValue<int>(); } set { this[nameof(MagicDefenseValue)].SetValue<int>(value); } }
        public Object PassiveSkillName { get { return this[nameof(PassiveSkillName)]; } set { this[nameof(PassiveSkillName)] = value; } }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
        public float CorruptionFactor { get { return this[nameof(CorruptionFactor)].GetValue<float>(); } set { this[nameof(CorruptionFactor)].SetValue<float>(value); } }
        //public float FloatValue1 { get { return this[nameof(FloatValue1)].GetValue<float>(); } set { this[nameof(FloatValue1)].SetValue<float>(value); } }
    }
    public class PalItemRecipeMaterialInfo : Object
    {
        public PalItemRecipeMaterialInfo(nint addr) : base(addr) { }
        public Object MaterialID { get { return this[nameof(MaterialID)]; } set { this[nameof(MaterialID)] = value; } }
        public int MaterialCount { get { return this[nameof(MaterialCount)].GetValue<int>(); } set { this[nameof(MaterialCount)].SetValue<int>(value); } }
    }
    public class PalTalkTreeDataTableRow : TableRowBase
    {
        public PalTalkTreeDataTableRow(nint addr) : base(addr) { }
        public Object NPCID { get { return this[nameof(NPCID)]; } set { this[nameof(NPCID)] = value; } }
        public Object TalkName { get { return this[nameof(TalkName)]; } set { this[nameof(TalkName)] = value; } }
        public Object TextId { get { return this[nameof(TextId)]; } set { this[nameof(TextId)] = value; } }
    }
    public class TutorialDataStruct : TableRowBase
    {
        public TutorialDataStruct(nint addr) : base(addr) { }
        public Object MsgId { get { return this[nameof(MsgId)]; } set { this[nameof(MsgId)] = value; } }
        public EPalTutorialTriggerType Type { get { return (EPalTutorialTriggerType)this[nameof(Type)].GetValue<int>(); } set { this[nameof(Type)].SetValue<int>((int)value); } }
        public bool MultiTrigger { get { return this[nameof(MultiTrigger)].Flag; } set { this[nameof(MultiTrigger)].Flag = value; } }
        public EPalTutorialTriggerConditionType ConditionType { get { return (EPalTutorialTriggerConditionType)this[nameof(ConditionType)].GetValue<int>(); } set { this[nameof(ConditionType)].SetValue<int>((int)value); } }
        public Array<Object> ConditionObjectIds { get { return new Array<Object>(this[nameof(ConditionObjectIds)].Address); } }
        public Object ConditionCategoryName { get { return this[nameof(ConditionCategoryName)]; } set { this[nameof(ConditionCategoryName)] = value; } }
        public float ConditionValue { get { return this[nameof(ConditionValue)].GetValue<float>(); } set { this[nameof(ConditionValue)].SetValue<float>(value); } }
    }
    public class PalBaseCampWorkerSickMasterData : TableRowBase
    {
        public PalBaseCampWorkerSickMasterData(nint addr) : base(addr) { }
        public EPalBaseCampWorkerSickType SickType { get { return (EPalBaseCampWorkerSickType)this[nameof(SickType)].GetValue<int>(); } set { this[nameof(SickType)].SetValue<int>((int)value); } }
        public int EffectiveItemRank { get { return this[nameof(EffectiveItemRank)].GetValue<int>(); } set { this[nameof(EffectiveItemRank)].SetValue<int>(value); } }
        public EPalFacialEyeType Facial { get { return (EPalFacialEyeType)this[nameof(Facial)].GetValue<int>(); } set { this[nameof(Facial)].SetValue<int>((int)value); } }
        public int WorkSpeed { get { return this[nameof(WorkSpeed)].GetValue<int>(); } set { this[nameof(WorkSpeed)].SetValue<int>(value); } }
        public int MoveSpeed { get { return this[nameof(MoveSpeed)].GetValue<int>(); } set { this[nameof(MoveSpeed)].SetValue<int>(value); } }
        public int SatietyDecrease { get { return this[nameof(SatietyDecrease)].GetValue<int>(); } set { this[nameof(SatietyDecrease)].SetValue<int>(value); } }
    }
    public class PalRandomRestInfo : Object
    {
        public PalRandomRestInfo(nint addr) : base(addr) { }
        public AnimMontage RandomRestMontage { get { return this[nameof(RandomRestMontage)].As<AnimMontage>(); } set { this["RandomRestMontage"] = value; } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public int LoopNum_Min { get { return this[nameof(LoopNum_Min)].GetValue<int>(); } set { this[nameof(LoopNum_Min)].SetValue<int>(value); } }
        public int LoopNum_Max { get { return this[nameof(LoopNum_Max)].GetValue<int>(); } set { this[nameof(LoopNum_Max)].SetValue<int>(value); } }
        public float AfterIdleTime { get { return this[nameof(AfterIdleTime)].GetValue<float>(); } set { this[nameof(AfterIdleTime)].SetValue<float>(value); } }
    }
    public class PalNavigationUpdateFrequencySetting : Object
    {
        public PalNavigationUpdateFrequencySetting(nint addr) : base(addr) { }
        public int UpdateDivideRate { get { return this[nameof(UpdateDivideRate)].GetValue<int>(); } set { this[nameof(UpdateDivideRate)].SetValue<int>(value); } }
        public Vector2D UpdatableRangeMinMaxFromPlayer { get { return this[nameof(UpdatableRangeMinMaxFromPlayer)].As<Vector2D>(); } set { this["UpdatableRangeMinMaxFromPlayer"] = value; } }
    }
    public class PalCharacterCompleteDelegateParameter : Object
    {
        public PalCharacterCompleteDelegateParameter(nint addr) : base(addr) { }
        public EPalCharacterCompleteDelegatePriority Priority { get { return (EPalCharacterCompleteDelegatePriority)this[nameof(Priority)].GetValue<int>(); } set { this[nameof(Priority)].SetValue<int>((int)value); } }
        public Object CompleteDelegate { get { return this[nameof(CompleteDelegate)]; } set { this[nameof(CompleteDelegate)] = value; } }
    }
    public class PalCharacterList : Object
    {
        public PalCharacterList(nint addr) : base(addr) { }
        public Array<PalCharacter> CharacterList { get { return new Array<PalCharacter>(this[nameof(CharacterList)].Address); } }
    }
    public class PalCheckStuckInfo : Object
    {
        public PalCheckStuckInfo(nint addr) : base(addr) { }
    }
    public class PalUIAimReticleMapObjectAssignableData : Object
    {
        public PalUIAimReticleMapObjectAssignableData(nint addr) : base(addr) { }
        public bool isAssignable { get { return this[nameof(isAssignable)].Flag; } set { this[nameof(isAssignable)].Flag = value; } }
        public Object targetMapObjectID { get { return this[nameof(targetMapObjectID)]; } set { this[nameof(targetMapObjectID)] = value; } }
    }
    public class PalLocationUIData : Object
    {
        public PalLocationUIData(nint addr) : base(addr) { }
        public Object Icon { get { return this[nameof(Icon)]; } set { this[nameof(Icon)] = value; } }
        public Object compassIconWidget { get { return this[nameof(compassIconWidget)]; } set { this[nameof(compassIconWidget)] = value; } }
        public float displayLength { get { return this[nameof(displayLength)].GetValue<float>(); } set { this[nameof(displayLength)].SetValue<float>(value); } }
    }
    public class PalSlateNavigationSetting : Object
    {
        public PalSlateNavigationSetting(nint addr) : base(addr) { }
        public bool IsEnableAnalogNavigation { get { return this[nameof(IsEnableAnalogNavigation)].Flag; } set { this[nameof(IsEnableAnalogNavigation)].Flag = value; } }
        public bool IsEnableLeftKeyNavigation { get { return this[nameof(IsEnableLeftKeyNavigation)].Flag; } set { this[nameof(IsEnableLeftKeyNavigation)].Flag = value; } }
        public bool IsEnableRightKeyNavigation { get { return this[nameof(IsEnableRightKeyNavigation)].Flag; } set { this[nameof(IsEnableRightKeyNavigation)].Flag = value; } }
        public bool IsEnableDownKeyNavigation { get { return this[nameof(IsEnableDownKeyNavigation)].Flag; } set { this[nameof(IsEnableDownKeyNavigation)].Flag = value; } }
        public bool IsEnableUpKeyNavigation { get { return this[nameof(IsEnableUpKeyNavigation)].Flag; } set { this[nameof(IsEnableUpKeyNavigation)].Flag = value; } }
    }
    public class PalLocationUIData_TableRow : TableRowBase
    {
        public PalLocationUIData_TableRow(nint addr) : base(addr) { }
        public Object locationUIDataMap { get { return this[nameof(locationUIDataMap)]; } set { this[nameof(locationUIDataMap)] = value; } }
        public Object mapObjectIconMap { get { return this[nameof(mapObjectIconMap)]; } set { this[nameof(mapObjectIconMap)] = value; } }
    }
    public class PalUIGuildMemberDisplayInfo : Object
    {
        public PalUIGuildMemberDisplayInfo(nint addr) : base(addr) { }
        public Object CharacterName { get { return this[nameof(CharacterName)]; } set { this[nameof(CharacterName)] = value; } }
        public bool IsAdmin { get { return this[nameof(IsAdmin)].Flag; } set { this[nameof(IsAdmin)].Flag = value; } }
        public EPalGuildPlayerStatus PlayerStatus { get { return (EPalGuildPlayerStatus)this[nameof(PlayerStatus)].GetValue<int>(); } set { this[nameof(PlayerStatus)].SetValue<int>((int)value); } }
    }
    public class PalUICaptureCameraOffsetData : TableRowBase
    {
        public PalUICaptureCameraOffsetData(nint addr) : base(addr) { }
        public Vector LocationOffset { get { return this[nameof(LocationOffset)].As<Vector>(); } set { this["LocationOffset"] = value; } }
        public Rotator Rotator { get { return this[nameof(Rotator)].As<Rotator>(); } set { this["Rotator"] = value; } }
        public Vector PointLightOffset { get { return this[nameof(PointLightOffset)].As<Vector>(); } set { this["PointLightOffset"] = value; } }
        public float PointLightIntensity { get { return this[nameof(PointLightIntensity)].GetValue<float>(); } set { this[nameof(PointLightIntensity)].SetValue<float>(value); } }
        public float PointLightSize { get { return this[nameof(PointLightSize)].GetValue<float>(); } set { this[nameof(PointLightSize)].SetValue<float>(value); } }
       // public Vector PointLightOffset { get { return this[nameof(PointLightOffset)].As<Vector>(); } set { this["PointLightOffset"] = value; } }
       // public float PointLightIntensity { get { return this[nameof(PointLightIntensity)].GetValue<float>(); } set { this[nameof(PointLightIntensity)].SetValue<float>(value); } }
       // public float PointLightSize { get { return this[nameof(PointLightSize)].GetValue<float>(); } set { this[nameof(PointLightSize)].SetValue<float>(value); } }
        public Vector RectLightOffset { get { return this[nameof(RectLightOffset)].As<Vector>(); } set { this["RectLightOffset"] = value; } }
        public Rotator RectLightRotator { get { return this[nameof(RectLightRotator)].As<Rotator>(); } set { this["RectLightRotator"] = value; } }
        public float RectLightIntensity { get { return this[nameof(RectLightIntensity)].GetValue<float>(); } set { this[nameof(RectLightIntensity)].SetValue<float>(value); } }
        public float RectLightSize { get { return this[nameof(RectLightSize)].GetValue<float>(); } set { this[nameof(RectLightSize)].SetValue<float>(value); } }
    }
    public class PalUIServerDisplayData : Object
    {
        public PalUIServerDisplayData(nint addr) : base(addr) { }
        public Object ServerName { get { return this[nameof(ServerName)]; } set { this[nameof(ServerName)] = value; } }
        public Object Description { get { return this[nameof(Description)]; } set { this[nameof(Description)] = value; } }
        public bool IsPvP { get { return this[nameof(IsPvP)].Flag; } set { this[nameof(IsPvP)].Flag = value; } }
        public int Day { get { return this[nameof(Day)].GetValue<int>(); } set { this[nameof(Day)].SetValue<int>(value); } }
        public int NowPlayerNum { get { return this[nameof(NowPlayerNum)].GetValue<int>(); } set { this[nameof(NowPlayerNum)].SetValue<int>(value); } }
        public int MaxPlayerNum { get { return this[nameof(MaxPlayerNum)].GetValue<int>(); } set { this[nameof(MaxPlayerNum)].SetValue<int>(value); } }
        public int Ping { get { return this[nameof(Ping)].GetValue<int>(); } set { this[nameof(Ping)].SetValue<int>(value); } }
        public EPalUIServerListFilterType ServerListType { get { return (EPalUIServerListFilterType)this[nameof(ServerListType)].GetValue<int>(); } set { this[nameof(ServerListType)].SetValue<int>((int)value); } }
        public Object ServerAddress { get { return this[nameof(ServerAddress)]; } set { this[nameof(ServerAddress)] = value; } }
        public int ServerPort { get { return this[nameof(ServerPort)].GetValue<int>(); } set { this[nameof(ServerPort)].SetValue<int>(value); } }
        public Object VersionString { get { return this[nameof(VersionString)]; } set { this[nameof(VersionString)] = value; } }
        public bool IsLocked { get { return this[nameof(IsLocked)].Flag; } set { this[nameof(IsLocked)].Flag = value; } }
        public Object Region { get { return this[nameof(Region)]; } set { this[nameof(Region)] = value; } }
        public int CreateTime { get { return this[nameof(CreateTime)].GetValue<int>(); } set { this[nameof(CreateTime)].SetValue<int>(value); } }
    }
    public class PalUIServerDataCollectInfo : Object
    {
        public PalUIServerDataCollectInfo(nint addr) : base(addr) { }
        public EPalUIServerListSortType SortType { get { return (EPalUIServerListSortType)this[nameof(SortType)].GetValue<int>(); } set { this[nameof(SortType)].SetValue<int>((int)value); } }
        public Object SearchWord { get { return this[nameof(SearchWord)]; } set { this[nameof(SearchWord)] = value; } }
    }
    public class PalUILocalWorldDisplayData : Object
    {
        public PalUILocalWorldDisplayData(nint addr) : base(addr) { }
        public Object WorldName { get { return this[nameof(WorldName)]; } set { this[nameof(WorldName)] = value; } }
        public Object WorldDirectoryName { get { return this[nameof(WorldDirectoryName)]; } set { this[nameof(WorldDirectoryName)] = value; } }
        public Object PlayerName { get { return this[nameof(PlayerName)]; } set { this[nameof(PlayerName)] = value; } }
        public int PlayerLevel { get { return this[nameof(PlayerLevel)].GetValue<int>(); } set { this[nameof(PlayerLevel)].SetValue<int>(value); } }
        public int Day { get { return this[nameof(Day)].GetValue<int>(); } set { this[nameof(Day)].SetValue<int>(value); } }
        public DateTime Timestamp { get { return this[nameof(Timestamp)].As<DateTime>(); } set { this["Timestamp"] = value; } }
        public Object DirectoryPath { get { return this[nameof(DirectoryPath)]; } set { this[nameof(DirectoryPath)] = value; } }
    }
    public class PalUIPaldexDistributionLocationStruct : Object
    {
        public PalUIPaldexDistributionLocationStruct(nint addr) : base(addr) { }
        public Array<Vector> locations { get { return new Array<Vector>(this[nameof(locations)].Address); } }
        public float Radius { get { return this[nameof(Radius)].GetValue<float>(); } set { this[nameof(Radius)].SetValue<float>(value); } }
    }
    public class PalUIPaldexDistributionData : TableRowBase
    {
        public PalUIPaldexDistributionData(nint addr) : base(addr) { }
        public PalUIPaldexDistributionLocationStruct dayTimeLocations { get { return this[nameof(dayTimeLocations)].As<PalUIPaldexDistributionLocationStruct>(); } set { this["dayTimeLocations"] = value; } }
        public PalUIPaldexDistributionLocationStruct nightTimeLocations { get { return this[nameof(nightTimeLocations)].As<PalUIPaldexDistributionLocationStruct>(); } set { this["nightTimeLocations"] = value; } }
    }
    public class PalUIPaldex_DisplayInfo : Object
    {
        public PalUIPaldex_DisplayInfo(nint addr) : base(addr) { }
        public int Index { get { return this[nameof(Index)].GetValue<int>(); } set { this[nameof(Index)].SetValue<int>(value); } }
        public Object IndexSuffix { get { return this[nameof(IndexSuffix)]; } set { this[nameof(IndexSuffix)] = value; } }
        public Object CombinedIndexString { get { return this[nameof(CombinedIndexString)]; } set { this[nameof(CombinedIndexString)] = value; } }
        public EPalUIPaldexPanelDetailType detailType { get { return (EPalUIPaldexPanelDetailType)this[nameof(detailType)].GetValue<int>(); } set { this[nameof(detailType)].SetValue<int>((int)value); } }
        public Object baseCharacterName { get { return this[nameof(baseCharacterName)]; } set { this[nameof(baseCharacterName)] = value; } }
    }
    public class PalRadialCatalog : Object
    {
        public PalRadialCatalog(nint addr) : base(addr) { }
        public Object Catalog { get { return this[nameof(Catalog)]; } set { this[nameof(Catalog)] = value; } }
    }
    public class PalGaugeInterpolationCalculator : Object
    {
        public PalGaugeInterpolationCalculator(nint addr) : base(addr) { }
        public float CurrentValue { get { return this[nameof(CurrentValue)].GetValue<float>(); } set { this[nameof(CurrentValue)].SetValue<float>(value); } }
        public float TargetValue { get { return this[nameof(TargetValue)].GetValue<float>(); } set { this[nameof(TargetValue)].SetValue<float>(value); } }
        public bool bDirectionPositive { get { return this[nameof(bDirectionPositive)].Flag; } set { this[nameof(bDirectionPositive)].Flag = value; } }
    }
    public class PalWazaMasterLevelDataRow : TableRowBase
    {
        public PalWazaMasterLevelDataRow(nint addr) : base(addr) { }
        public Object PalID { get { return this[nameof(PalID)]; } set { this[nameof(PalID)] = value; } }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
        public int Level { get { return this[nameof(Level)].GetValue<int>(); } set { this[nameof(Level)].SetValue<int>(value); } }
    }
    public class PalWazaMasterTamagoDataRow : TableRowBase
    {
        public PalWazaMasterTamagoDataRow(nint addr) : base(addr) { }
        public Object PalID { get { return this[nameof(PalID)]; } set { this[nameof(PalID)] = value; } }
        public EPalWazaID WazaID { get { return (EPalWazaID)this[nameof(WazaID)].GetValue<int>(); } set { this[nameof(WazaID)].SetValue<int>((int)value); } }
    }
    public class PalWazaDatabaseRaw : TableRowBase
    {
        public PalWazaDatabaseRaw(nint addr) : base(addr) { }
        public EPalWazaID WazaType { get { return (EPalWazaID)this[nameof(WazaType)].GetValue<int>(); } set { this[nameof(WazaType)].SetValue<int>((int)value); } }
        public EPalElementType Element { get { return (EPalElementType)this[nameof(Element)].GetValue<int>(); } set { this[nameof(Element)].SetValue<int>((int)value); } }
        public bool IgnoreRandomInherit { get { return this[nameof(IgnoreRandomInherit)].Flag; } set { this[nameof(IgnoreRandomInherit)].Flag = value; } }
        public EPalWazaCategory Category { get { return (EPalWazaCategory)this[nameof(Category)].GetValue<int>(); } set { this[nameof(Category)].SetValue<int>((int)value); } }
        public int Power { get { return this[nameof(Power)].GetValue<int>(); } set { this[nameof(Power)].SetValue<int>(value); } }
        public bool IsLeanBack { get { return this[nameof(IsLeanBack)].Flag; } set { this[nameof(IsLeanBack)].Flag = value; } }
        public EPalPlayerDamageCameraShakeCategory CameraShake { get { return (EPalPlayerDamageCameraShakeCategory)this[nameof(CameraShake)].GetValue<int>(); } set { this[nameof(CameraShake)].SetValue<int>((int)value); } }
        public int MinRange { get { return this[nameof(MinRange)].GetValue<int>(); } set { this[nameof(MinRange)].SetValue<int>(value); } }
        public int MaxRange { get { return this[nameof(MaxRange)].GetValue<int>(); } set { this[nameof(MaxRange)].SetValue<int>(value); } }
        public float CoolTime { get { return this[nameof(CoolTime)].GetValue<float>(); } set { this[nameof(CoolTime)].SetValue<float>(value); } }
        public EPalSizeType ForceRagdollSize { get { return (EPalSizeType)this[nameof(ForceRagdollSize)].GetValue<int>(); } set { this[nameof(ForceRagdollSize)].SetValue<int>((int)value); } }
        public EPalAdditionalEffectType EffectType1 { get { return (EPalAdditionalEffectType)this[nameof(EffectType1)].GetValue<int>(); } set { this[nameof(EffectType1)].SetValue<int>((int)value); } }
        public int EffectValue1 { get { return this[nameof(EffectValue1)].GetValue<int>(); } set { this[nameof(EffectValue1)].SetValue<int>(value); } }
        public float EffectValueEx1 { get { return this[nameof(EffectValueEx1)].GetValue<float>(); } set { this[nameof(EffectValueEx1)].SetValue<float>(value); } }
        public EPalAdditionalEffectType EffectType2 { get { return (EPalAdditionalEffectType)this[nameof(EffectType2)].GetValue<int>(); } set { this[nameof(EffectType2)].SetValue<int>((int)value); } }
        public int EffectValue2 { get { return this[nameof(EffectValue2)].GetValue<int>(); } set { this[nameof(EffectValue2)].SetValue<int>(value); } }
        public float EffectValueEx2 { get { return this[nameof(EffectValueEx2)].GetValue<float>(); } set { this[nameof(EffectValueEx2)].SetValue<float>(value); } }
        public Array<PalSpecialAttackRateInfo> SpecialAttackRateInfos { get { return new Array<PalSpecialAttackRateInfo>(this[nameof(SpecialAttackRateInfos)].Address); } }
        public bool bIsWeaponDamage { get { return this[nameof(bIsWeaponDamage)].Flag; } set { this[nameof(bIsWeaponDamage)].Flag = value; } }
        public bool DisabledData { get { return this[nameof(DisabledData)].Flag; } set { this[nameof(DisabledData)].Flag = value; } }
    }
    public class PalWeaponSubParameterData : TableRowBase
    {
        public PalWeaponSubParameterData(nint addr) : base(addr) { }
        public float dps { get { return this[nameof(dps)].GetValue<float>(); } set { this[nameof(dps)].SetValue<float>(value); } }
        public float Range { get { return this[nameof(Range)].GetValue<float>(); } set { this[nameof(Range)].SetValue<float>(value); } }
        public float stability { get { return this[nameof(stability)].GetValue<float>(); } set { this[nameof(stability)].SetValue<float>(value); } }
        public float accuracy { get { return this[nameof(accuracy)].GetValue<float>(); } set { this[nameof(accuracy)].SetValue<float>(value); } }
    }
    public class PalWildSpawnerDatabaseRow : TableRowBase
    {
        public PalWildSpawnerDatabaseRow(nint addr) : base(addr) { }
        public Object SpawnerName { get { return this[nameof(SpawnerName)]; } set { this[nameof(SpawnerName)] = value; } }
        public EPalSpawnedCharacterType SpawnerType { get { return (EPalSpawnedCharacterType)this[nameof(SpawnerType)].GetValue<int>(); } set { this[nameof(SpawnerType)].SetValue<int>((int)value); } }
        public float Weight { get { return this[nameof(Weight)].GetValue<float>(); } set { this[nameof(Weight)].SetValue<float>(value); } }
        public EPalOneDayTimeType OnlyTime { get { return (EPalOneDayTimeType)this[nameof(OnlyTime)].GetValue<int>(); } set { this[nameof(OnlyTime)].SetValue<int>((int)value); } }
        public EPalWeatherConditionType OnlyWeather { get { return (EPalWeatherConditionType)this[nameof(OnlyWeather)].GetValue<int>(); } set { this[nameof(OnlyWeather)].SetValue<int>((int)value); } }
        public Object Pal { get { return this[nameof(Pal)]; } set { this[nameof(Pal)] = value; } }
        public Object NPC { get { return this[nameof(NPC)]; } set { this[nameof(NPC)] = value; } }
        public int LvMin { get { return this[nameof(LvMin)].GetValue<int>(); } set { this[nameof(LvMin)].SetValue<int>(value); } }
        public int LvMax { get { return this[nameof(LvMax)].GetValue<int>(); } set { this[nameof(LvMax)].SetValue<int>(value); } }
        public int NumMin { get { return this[nameof(NumMin)].GetValue<int>(); } set { this[nameof(NumMin)].SetValue<int>(value); } }
        public int NumMax { get { return this[nameof(NumMax)].GetValue<int>(); } set { this[nameof(NumMax)].SetValue<int>(value); } }
     /*   public Object Pal { get { return this[nameof(Pal)]; } set { this[nameof(Pal)] = value; } }
     //   public Object NPC { get { return this[nameof(NPC)]; } set { this[nameof(NPC)] = value; } }
        public int LvMin { get { return this[nameof(LvMin)].GetValue<int>(); } set { this[nameof(LvMin)].SetValue<int>(value); } }
        public int LvMax { get { return this[nameof(LvMax)].GetValue<int>(); } set { this[nameof(LvMax)].SetValue<int>(value); } }
        public int NumMin { get { return this[nameof(NumMin)].GetValue<int>(); } set { this[nameof(NumMin)].SetValue<int>(value); } }
        public int NumMax { get { return this[nameof(NumMax)].GetValue<int>(); } set { this[nameof(NumMax)].SetValue<int>(value); } }
        public Object Pal { get { return this[nameof(Pal)]; } set { this[nameof(Pal)] = value; } }
        public Object NPC { get { return this[nameof(NPC)]; } set { this[nameof(NPC)] = value; } }
        public int LvMin { get { return this[nameof(LvMin)].GetValue<int>(); } set { this[nameof(LvMin)].SetValue<int>(value); } }
        public int LvMax { get { return this[nameof(LvMax)].GetValue<int>(); } set { this[nameof(LvMax)].SetValue<int>(value); } }
        public int NumMin { get { return this[nameof(NumMin)].GetValue<int>(); } set { this[nameof(NumMin)].SetValue<int>(value); } }
        public int NumMax { get { return this[nameof(NumMax)].GetValue<int>(); } set { this[nameof(NumMax)].SetValue<int>(value); } }*/
    }
    public class PalWindInfo : Object
    {
        public PalWindInfo(nint addr) : base(addr) { }
        public Vector Direction { get { return this[nameof(Direction)].As<Vector>(); } set { this["Direction"] = value; } }
        public float Speed { get { return this[nameof(Speed)].GetValue<float>(); } set { this[nameof(Speed)].SetValue<float>(value); } }
    }
    public class PalWorkTypeSet : Object
    {
        public PalWorkTypeSet(nint addr) : base(addr) { }
        public Array<EPalWorkType> WorkTypes { get { return new Array<EPalWorkType>(this[nameof(WorkTypes)].Address); } }
    }
    public class PalWorkStaticParameter : Object
    {
        public PalWorkStaticParameter(nint addr) : base(addr) { }
        public Guid OwnerMapObjectModelId { get { return this[nameof(OwnerMapObjectModelId)].As<Guid>(); } set { this["OwnerMapObjectModelId"] = value; } }
        public Guid OwnerMapObjectConcreteModelId { get { return this[nameof(OwnerMapObjectConcreteModelId)].As<Guid>(); } set { this["OwnerMapObjectConcreteModelId"] = value; } }
        public PalBoundsTransform WorkableBounds { get { return this[nameof(WorkableBounds)].As<PalBoundsTransform>(); } set { this["WorkableBounds"] = value; } }
        public Array<PalWorkAssignLocalLocation> AssignLocalLocations { get { return new Array<PalWorkAssignLocalLocation>(this[nameof(AssignLocalLocations)].Address); } }
    }
    public class PalWorkAssignParameter : Object
    {
        public PalWorkAssignParameter(nint addr) : base(addr) { }
    }
    public class PalWorkWaitParameter : Object
    {
        public PalWorkWaitParameter(nint addr) : base(addr) { }
    }
    public class PalWorkAssignDefineDataStaticSetting : Object
    {
        public PalWorkAssignDefineDataStaticSetting(nint addr) : base(addr) { }
        public Object RowName { get { return this[nameof(RowName)]; } set { this[nameof(RowName)] = value; } }
        public PalWorkAssignDefineData AssignDefineData { get { return this[nameof(AssignDefineData)].As<PalWorkAssignDefineData>(); } set { this["AssignDefineData"] = value; } }
    }
    public class PalWorkProgressManagerWorkProcessTickFunction : TickFunction
    {
        public PalWorkProgressManagerWorkProcessTickFunction(nint addr) : base(addr) { }
        public PalWorkProgressManager Target { get { return this[nameof(Target)].As<PalWorkProgressManager>(); } set { this["Target"] = value; } }
    }
    public class PalWorkSuitabilityDefineData : Object
    {
        public PalWorkSuitabilityDefineData(nint addr) : base(addr) { }
        public bool bIsChangeWorkAnimPlayRate { get { return this[nameof(bIsChangeWorkAnimPlayRate)].Flag; } set { this[nameof(bIsChangeWorkAnimPlayRate)].Flag = value; } }
        public Array<int> CraftSpeeds { get { return new Array<int>(this[nameof(CraftSpeeds)].Address); } }
    }
    public class PalCollectionRankDefineData : Object
    {
        public PalCollectionRankDefineData(nint addr) : base(addr) { }
        public float DropNumRate { get { return this[nameof(DropNumRate)].GetValue<float>(); } set { this[nameof(DropNumRate)].SetValue<float>(value); } }
    }
    public class PalWorkSuitabilityCollectionDefineData : Object
    {
        public PalWorkSuitabilityCollectionDefineData(nint addr) : base(addr) { }
        public PalWorkSuitabilityDefineData CommonDefineData { get { return this[nameof(CommonDefineData)].As<PalWorkSuitabilityDefineData>(); } set { this["CommonDefineData"] = value; } }
        public Array<PalCollectionRankDefineData> CollectionDefineData { get { return new Array<PalCollectionRankDefineData>(this[nameof(CollectionDefineData)].Address); } }
    }
    public class PalDeforestRankDefineData : Object
    {
        public PalDeforestRankDefineData(nint addr) : base(addr) { }
        public float DamageRate { get { return this[nameof(DamageRate)].GetValue<float>(); } set { this[nameof(DamageRate)].SetValue<float>(value); } }
        public EPalMapObjectMaterialSubType MaterialSubType { get { return (EPalMapObjectMaterialSubType)this[nameof(MaterialSubType)].GetValue<int>(); } set { this[nameof(MaterialSubType)].SetValue<int>((int)value); } }
    }
    public class PalWorkSuitabilityDeforestDefineData : Object
    {
        public PalWorkSuitabilityDeforestDefineData(nint addr) : base(addr) { }
        public PalWorkSuitabilityDefineData CommonDefineData { get { return this[nameof(CommonDefineData)].As<PalWorkSuitabilityDefineData>(); } set { this["CommonDefineData"] = value; } }
        public Array<PalDeforestRankDefineData> DeforestDefineData { get { return new Array<PalDeforestRankDefineData>(this[nameof(DeforestDefineData)].Address); } }
    }
    public class PalMiningRankDefineData : Object
    {
        public PalMiningRankDefineData(nint addr) : base(addr) { }
        public float DamageRate { get { return this[nameof(DamageRate)].GetValue<float>(); } set { this[nameof(DamageRate)].SetValue<float>(value); } }
        public EPalMapObjectMaterialSubType MaterialSubType { get { return (EPalMapObjectMaterialSubType)this[nameof(MaterialSubType)].GetValue<int>(); } set { this[nameof(MaterialSubType)].SetValue<int>((int)value); } }
    }
    public class PalWorkSuitabilityMiningDefineData : Object
    {
        public PalWorkSuitabilityMiningDefineData(nint addr) : base(addr) { }
        public PalWorkSuitabilityDefineData CommonDefineData { get { return this[nameof(CommonDefineData)].As<PalWorkSuitabilityDefineData>(); } set { this["CommonDefineData"] = value; } }
        public Array<PalMiningRankDefineData> MiningDefineData { get { return new Array<PalMiningRankDefineData>(this[nameof(MiningDefineData)].Address); } }
    }
    public class PalWorldMapUIDataSave : Object
    {
        public PalWorldMapUIDataSave(nint addr) : base(addr) { }
        public Object unlockedRegionMap { get { return this[nameof(unlockedRegionMap)]; } set { this[nameof(unlockedRegionMap)] = value; } }
    }
    public class PalWorldObjectRecordData_MapObjectSpawnerItem : Object
    {
        public PalWorldObjectRecordData_MapObjectSpawnerItem(nint addr) : base(addr) { }
        public GameDateTime NextSpawnLotteryGameTime { get { return this[nameof(NextSpawnLotteryGameTime)].As<GameDateTime>(); } set { this["NextSpawnLotteryGameTime"] = value; } }
        public Guid MapObjectInstanceId { get { return this[nameof(MapObjectInstanceId)].As<Guid>(); } set { this["MapObjectInstanceId"] = value; } }
    }
    public class PalWorldObjectRecordData_MapObjectSpawner : Object
    {
        public PalWorldObjectRecordData_MapObjectSpawner(nint addr) : base(addr) { }
        public Object ItemMap { get { return this[nameof(ItemMap)]; } set { this[nameof(ItemMap)] = value; } }
    }
    public class PalWorldObjectRecordData_MapObjectSpawnerInStage : Object
    {
        public PalWorldObjectRecordData_MapObjectSpawnerInStage(nint addr) : base(addr) { }
        public Object RecordDataMapByLevelObjectInstanceId { get { return this[nameof(RecordDataMapByLevelObjectInstanceId)]; } set { this[nameof(RecordDataMapByLevelObjectInstanceId)] = value; } }
    }
    public class PalCrimeMasterData : TableRowBase
    {
        public PalCrimeMasterData(nint addr) : base(addr) { }
        public Object CrimeNameTextId { get { return this[nameof(CrimeNameTextId)]; } set { this[nameof(CrimeNameTextId)] = value; } }
        public int BaseReward { get { return this[nameof(BaseReward)].GetValue<int>(); } set { this[nameof(BaseReward)].SetValue<int>(value); } }
    }
    public class PalCrimeInstanceCreateParameter : Object
    {
        public PalCrimeInstanceCreateParameter(nint addr) : base(addr) { }
        public Object CrimeId { get { return this[nameof(CrimeId)]; } set { this[nameof(CrimeId)] = value; } }
        public Guid TargetId { get { return this[nameof(TargetId)].As<Guid>(); } set { this["TargetId"] = value; } }
    }
    public class PalWorldSecurityWantedPoliceSettingData : Object
    {
        public PalWorldSecurityWantedPoliceSettingData(nint addr) : base(addr) { }
        public PalDataTableRowName_PalHumanData PoliceType { get { return this[nameof(PoliceType)].As<PalDataTableRowName_PalHumanData>(); } set { this["PoliceType"] = value; } }
        public int PoliceNum { get { return this[nameof(PoliceNum)].GetValue<int>(); } set { this[nameof(PoliceNum)].SetValue<int>(value); } }
        public int PoliceLevel { get { return this[nameof(PoliceLevel)].GetValue<int>(); } set { this[nameof(PoliceLevel)].SetValue<int>(value); } }
    }
    public class FloatCounter : Object
    {
        public FloatCounter(nint addr) : base(addr) { }
        public float TriggerValue { get { return this[nameof(TriggerValue)].GetValue<float>(); } set { this[nameof(TriggerValue)].SetValue<float>(value); } }
        public float CurrentStackValue { get { return this[nameof(CurrentStackValue)].GetValue<float>(); } set { this[nameof(CurrentStackValue)].SetValue<float>(value); } }
    }
}
